[
{"function":{"name":"IsZero","parent":"Angle","type":"classfunc","description":"Returns whether the pitch, yaw and roll are 0 or not.","realm":"Shared","rets":{"ret":{"text":"Whether the pitch, yaw and roll are 0 or not.","name":"","type":"boolean"}}}},
{"function":{"name":"Add","parent":"Angle","type":"classfunc","description":"Adds the values of the argument angle to the orignal angle. \n\nThis functions the same as angle1 + angle2 without creating a new angle object, skipping object construction and garbage collection.","realm":"Shared","args":{"arg":{"text":"The angle to add.","name":"angle","type":"Angle"}}}},
{"function":{"name":"Div","parent":"Angle","type":"classfunc","description":"Divides all values of the original angle by a scalar. This functions the same as angle1 / num without creating a new angle object, skipping object construction and garbage collection.","realm":"Shared","args":{"arg":{"text":"The number to divide by.","name":"scalar","type":"number"}}}},
{"function":{"name":"Forward","parent":"Angle","type":"classfunc","description":"Returns a normal vector facing in the direction that the angle points.","realm":"Shared","rets":{"ret":{"text":"The forward direction of the angle","name":"","type":"Vector"}}}},
{"cat":"classfunc","function":{"name":"LoadTGAImage","parent":"Panel","type":"panelfunc","ispanel":true,"description":{"text":"Sets a new image to be loaded by a .","page":"TGAImage"},"realm":"Client","args":{"arg":[{"text":"The file path.","name":"imageName","type":"string"},{"text":"The PATH to search in. See .\n\nThis isn't used internally.","name":"strPath","type":"string","page":"File Search Paths"}]}}},
{"function":{"name":"SetMaterial","parent":"Material","type":"panelfunc","ispanel":true,"description":{"text":"Sets the material used by the panel.","note":"If the material is not showing up as the correct size, try setting the Material panel's `AutoSize` variable to **false**"},"realm":"Client","args":{"arg":{"text":"The file path of the material to set (relative to \"garrysmod/materials/\").","name":"matname","type":"string"}}},"example":{"description":"Creates a Material panel and sets the material to a screen space effect.","code":"-- Black background panel\nBGPanel = vgui.Create(\"DPanel\")\nBGPanel:SetSize(200, 200)\nBGPanel:Center()\nBGPanel:SetBackgroundColor(Color(0, 0, 0, 255))\n\t\t\nlocal mat = vgui.Create(\"Material\", BGPanel)\nmat:SetPos(5, 5)\nmat:SetSize(190, 190)\n\n-- It's not really good to use a models material for VGUI drawing\n-- But it looks good enough for a quick demo\nmat:SetMaterial(\"models/screenspace\")\n\n-- Stretch to fit\nmat.AutoSize = false","output":{"image":{"src":"Material_SetMaterial_example1.jpg"}}}},
{"function":{"name":"SetAlpha","parent":"Material","type":"panelfunc","ispanel":true,"description":"Sets the alpha value of the Material panel.","realm":"Client","args":{"arg":{"text":"The alpha value, from 0 to 255.","name":"alpha","type":"number"}}},"example":{"description":"Creates a transparent SWEP icon in the middle of the screen.","code":"local mat = vgui.Create(\"Material\")\nmat:SetSize(200, 200)\nmat:Center()\nmat:SetMaterial(\"weapons/swep\")\n\t\nmat:SetAlpha(128)","output":{"image":{"src":"Material_SetAlpha_example1.jpg"}}}},
{"function":{"name":"SetMaterial","parent":"ImageCheckBox","type":"panelfunc","ispanel":true,"description":{"text":"Sets the material that will be visible when the  is checked.\n\nInternally calls .","page":["ImageCheckBox","Material:SetMaterial"],"note":"Will error if no material was set."},"file":{"text":"lua/vgui/imagecheckbox.lua","line":"4"},"realm":"Client","args":{"arg":{"text":"The file path of the material to set (relative to \"garrysmod/materials/\").","name":"mat","type":"string"}}}},
{"function":{"name":"SetChecked","parent":"ImageCheckBox","type":"panelfunc","ispanel":true,"description":{"text":"Sets the checked state of the checkbox.\n\nChecked state can be obtained via","page":"ImageCheckBox:GetChecked"},"realm":"Client","args":{"arg":{"text":"true for checked, false otherwise","name":"bOn","type":"boolean"}}}},
{"function":{"name":"Set","parent":"ImageCheckBox","type":"panelfunc","ispanel":true,"description":{"text":"Sets the checked state of the checkbox.\n\nChecked state can be obtained by .State.","page":"ImageCheckBox"},"file":{"text":"lua/vgui/imagecheckbox.lua","line":"18"},"realm":"Client","args":{"arg":{"text":"true for checked, false otherwise","name":"OnOff","type":"boolean"}}}},
{"function":{"name":"GetChecked","parent":"ImageCheckBox","type":"panelfunc","ispanel":true,"description":{"text":"Returns the checked state of the","page":"ImageCheckBox"},"realm":"Client","rets":{"ret":{"text":"true for checked, false otherwise","name":"","type":"boolean"}}}},
{"function":{"name":"SetIcon","parent":"IconEditor","type":"panelfunc","ispanel":true,"description":{"text":"Sets the  to modify. You should call  immediately after this, as the user will not be able to make changes to the icon beforehand.","page":["SpawnIcon","Panel:Refresh"]},"realm":"Client","args":{"arg":{"text":"The  object to be modified.","name":"icon","type":"Panel","page":"SpawnIcon"}}}},
{"function":{"name":"UpdateEntity","parent":"IconEditor","type":"panelfunc","ispanel":true,"description":{"text":"Updates the entity being rendered in the internal . Called by the model panel's  method.","internal":"","page":["DAdjustableModelPanel","DModelPanel:LayoutEntity"]},"realm":"Client","args":{"arg":{"text":"The entity being rendered within the model panel.","name":"ent","type":"Entity"}}}},
{"function":{"name":"SetDefaultLighting","parent":"IconEditor","type":"panelfunc","ispanel":true,"description":{"text":"Sets up the default ambient and directional lighting for the . Called by .","internal":"","page":["DAdjustableModelPanel","IconEditor:Refresh"]},"realm":"Client"}},
{"function":{"name":"SetFromEntity","parent":"IconEditor","type":"panelfunc","ispanel":true,"description":{"text":"Sets the editor's model and icon from an entity. Alternative to , with uses a .\n\nYou do not need to call  after this.","page":["IconEditor:SetIcon","SpawnIcon","IconEditor:Refresh"]},"realm":"Client","args":{"arg":{"text":"The entity to retrieve the model and skin from.","name":"ent","type":"Entity"}}}},
{"function":{"name":"RenderIcon","parent":"IconEditor","type":"panelfunc","ispanel":true,"description":{"text":"Re-renders the .\n\nCalled when a user clicks the `RENDER` button, this retrieves the render data from the internal  and passes it as a table to .","page":["SpawnIcon","DAdjustableModelPanel","Panel:RebuildSpawnIconEx"]},"realm":"Client"}},
{"function":{"name":"RightLayout","parent":"IconEditor","type":"panelfunc","ispanel":true,"description":{"text":"Applies the right side view camera settings for the model in the .\n\nCalled when a user clicks the `Right` (fourth) button (See the ). (Note: The icon for this points left.)","page":"DAdjustableModelPanel"},"realm":"Client"}},
{"function":{"name":"Refresh","parent":"IconEditor","type":"panelfunc","ispanel":true,"description":{"text":"Updates the internal  and . \n\nThis should be called immediately after setting the SpawnIcon with .","page":["DAdjustableModelPanel","SpawnIcon","IconEditor:SetIcon"]},"realm":"Client"}},
{"function":{"name":"OriginLayout","parent":"IconEditor","type":"panelfunc","ispanel":true,"description":{"text":"Places the camera at the origin (0,0,0), relative to the entity, in the .\n\nCalled when a user clicks the `Center` (fifth) button (See the ).","page":"DAdjustableModelPanel"},"realm":"Client"}},
{"function":{"name":"FullFrontalLayout","parent":"IconEditor","type":"panelfunc","ispanel":true,"description":{"text":"Applies the front view camera settings for the model in the .\n\nCalled when a user clicks the `Front` (second) button (See the ).","page":"DAdjustableModelPanel"},"realm":"Client"}},
{"function":{"name":"FillAnimations","parent":"IconEditor","type":"panelfunc","ispanel":true,"description":{"text":"Fills the  on the left of the editor with the model entity's animation list. Called by .","internal":"","page":["DListView","IconEditor:Refresh"]},"realm":"Client","args":{"arg":{"text":"The entity being rendered within the model panel.","name":"ent","type":"Entity"}}}},
{"function":{"name":"BestGuessLayout","parent":"IconEditor","type":"panelfunc","ispanel":true,"description":{"text":"Applies the best camera settings for the model in the , using the values returned by .\n\nCalled when a user clicks the `wand` button (See the ) and when  is called.","page":["DAdjustableModelPanel","Global.PositionSpawnIcon","IconEditor:Refresh"]},"realm":"Client"}},
{"function":{"name":"AboveLayout","parent":"IconEditor","type":"panelfunc","ispanel":true,"description":{"text":"Applies the top-down view camera settings for the model in the .\n\nCalled when a user clicks the `Above` (third) button (See the ).","page":"DAdjustableModelPanel"},"realm":"Client"}},
{"function":{"name":"Value","parent":"DVScrollBar","type":"panelfunc","ispanel":true,"description":{"text":"Should return nil in all cases. See .","deprecated":"","page":"DVScrollBar:GetScroll"},"realm":"Client","rets":{"ret":{"name":"","type":"any"}}}},
{"function":{"name":"SetUp","parent":"DVScrollBar","type":"panelfunc","ispanel":true,"description":"Sets up the scrollbar for use.\n\nThe scrollbar will automatically disable itself if the total height of the canvas is lower than the height of the panel that holds the canvas during this function call.","realm":"Client","args":{"arg":[{"text":"The size of the panel that holds the canvas, basically size of \"1 page\".","name":"barSize","type":"number"},{"text":"The total size of the canvas, this typically is the bigger number.","name":"cavasSize","type":"number"}]}}},
{"function":{"name":"SetScroll","parent":"DVScrollBar","type":"panelfunc","ispanel":true,"description":"Sets the scroll level in pixels.","realm":"Client","args":{"arg":{"name":"scroll","type":"number"}}}},
{"function":{"name":"SetHideButtons","parent":"DVScrollBar","type":"panelfunc","ispanel":true,"description":"Allows hiding the up and down buttons for better visual stylisation.","realm":"Client","args":{"arg":{"text":"True to hide","name":"hide","type":"boolean"}}}},
{"function":{"name":"Grip","parent":"DVScrollBar","type":"panelfunc","ispanel":true,"description":{"text":"Called from within","internal":"","page":"DScrollBarGrip"},"realm":"Client"}},
{"function":{"name":"GetOffset","parent":"DVScrollBar","type":"panelfunc","ispanel":true,"description":{"text":"Returns the negative of .","page":"DVScrollBar:GetScroll"},"realm":"Client","rets":{"ret":{"name":"","type":"number"}}}},
{"function":{"name":"GetHideButtons","parent":"DVScrollBar","type":"panelfunc","ispanel":true,"description":{"text":"Returns whether or not the manual up/down scroll buttons are visible or not. Set by .","page":"DVScrollBar:SetHideButtons"},"realm":"Client","rets":{"ret":{"text":"Whether or not the manual up/down scroll buttons are visible or not.","name":"","type":"boolean"}}}},
{"function":{"name":"GetScroll","parent":"DVScrollBar","type":"panelfunc","ispanel":true,"description":"Returns the amount of scroll level from the top in pixels","realm":"Client","rets":{"ret":{"text":"The amount of scroll level from the top","name":"","type":"number"}}}},
{"function":{"name":"BarScale","parent":"DVScrollBar","type":"panelfunc","ispanel":true,"description":"No Description","realm":"Client","rets":{"ret":{"name":"","type":"number"}}}},
{"function":{"name":"StartGrab","parent":"DVerticalDivider","type":"panelfunc","ispanel":true,"description":{"text":"Causes the user to start dragging the divider.","internal":""},"realm":"Client"}},
{"function":{"name":"SetTopMin","parent":"DVerticalDivider","type":"panelfunc","ispanel":true,"description":"Sets the minimum height of the top content panel.","realm":"Client","args":{"arg":{"text":"The minimum height of the top content panel. Default is 50.","name":"height","type":"number"}}}},
{"function":{"name":"AnimateTo","parent":"DVScrollBar","type":"panelfunc","ispanel":true,"description":"Smoothly scrolls to given level.","realm":"Client","args":{"arg":[{"text":"The scroll level to animate to. In pixels from the top ( from 0 )","name":"scroll","type":"number"},{"text":"Length of the animation in seconds","name":"length","type":"number"},{"text":"Delay of the animation in seconds","name":"delay","type":"number","default":"0"},{"text":"See  for explanation.","name":"ease","type":"number","default":"-1","page":"Panel:NewAnimation"}]}}},
{"function":{"name":"AnimateTo","parent":"DVScrollBar","type":"panelfunc","ispanel":true,"description":"Smoothly scrolls to given level.","realm":"Client","args":{"arg":[{"text":"The scroll level to animate to. In pixels from the top ( from 0 )","name":"scroll","type":"number"},{"text":"Length of the animation in seconds","name":"length","type":"number"},{"text":"Delay of the animation in seconds","name":"delay","type":"number","default":"0"},{"text":"See  for explanation.","name":"ease","type":"number","default":"-1","page":"Panel:NewAnimation"}]}}},
{"function":{"name":"SetTopHeight","parent":"DVerticalDivider","type":"panelfunc","ispanel":true,"description":{"text":"Sets the height of the top content panel.\n\nThe height of the bottom content panel is automatically calculated by taking the total height of the  and subtracting it with the height of the top content panel and the divider bar.","page":"DVerticalDivider"},"realm":"Client","args":{"arg":{"text":"The height of the top content panel.","name":"height","type":"number"}}}},
{"function":{"name":"SetTopMax","parent":"DVerticalDivider","type":"panelfunc","ispanel":true,"description":{"text":"Sets the maximum height of the top content panel. This is ignored if the panel would exceed the minimum bottom content panel height set from .","page":"DVerticalDivider:SetBottomMin"},"realm":"Client","args":{"arg":{"text":"The maximum height of the top content panel. Default is 4096.","name":"height","type":"number"}}}},
{"function":{"name":"SetMiddle","parent":"DVerticalDivider","type":"panelfunc","ispanel":true,"description":{"text":"Places the passed panel in between the top and bottom content panels of the .","page":"DVerticalDivider"},"realm":"Client","args":{"arg":{"text":"The panel to set as the middle content.","name":"pnl","type":"Panel"}}}},
{"function":{"name":"SetTop","parent":"DVerticalDivider","type":"panelfunc","ispanel":true,"description":{"text":"Sets the passed panel as the top content of the .","page":"DVerticalDivider"},"realm":"Client","args":{"arg":{"text":"The panel to set as the top content.","name":"pnl","type":"Panel"}}}},
{"function":{"name":"SetDragging","parent":"DVerticalDivider","type":"panelfunc","ispanel":true,"description":{"text":"Sets whether the divider is being dragged or not.","internal":""},"realm":"Client","args":{"arg":{"text":"Setting this to true causes cursor movement to alter the position of the divider.","name":"isDragging","type":"boolean"}}}},
{"function":{"name":"SetBottomMin","parent":"DVerticalDivider","type":"panelfunc","ispanel":true,"description":"Sets the minimum height of the bottom content panel.","realm":"Client","args":{"arg":{"text":"The minimum height of the bottom content panel. Default is 50.","name":"height","type":"number"}}}},
{"function":{"name":"SetDividerHeight","parent":"DVerticalDivider","type":"panelfunc","ispanel":true,"description":{"text":"Sets the height of the divider bar between the top and bottom content panels of the .","page":"DVerticalDivider"},"realm":"Client","args":{"arg":{"text":"The height of the divider bar.","name":"height","type":"number"}}}},
{"function":{"name":"SetHoldPos","parent":"DVerticalDivider","type":"panelfunc","ispanel":true,"description":{"text":"Sets the local Y position of where the user starts dragging the divider.","internal":""},"realm":"Client","args":{"arg":{"text":"The local Y position where divider dragging has started.","name":"y","type":"number"}}}},
{"function":{"name":"SetBottom","parent":"DVerticalDivider","type":"panelfunc","ispanel":true,"description":{"text":"Sets the passed panel as the bottom content of the .","page":"DVerticalDivider"},"realm":"Client","args":{"arg":{"text":"The panel to set as the bottom content.","name":"pnl","type":"Panel"}}}},
{"function":{"name":"GetTopMin","parent":"DVerticalDivider","type":"panelfunc","ispanel":true,"description":"Returns the minimum height of the top content panel.","realm":"Client","rets":{"ret":{"text":"The minimum height of the top content panel.","name":"","type":"number"}}}},
{"function":{"name":"GetTopMax","parent":"DVerticalDivider","type":"panelfunc","ispanel":true,"description":{"text":"Returns the maximum height of the top content panel. See  for more information.","page":"DVerticalDivider:SetTopMax"},"realm":"Client","rets":{"ret":{"text":"The maximum height of the top content panel.","name":"","type":"number"}}}},
{"function":{"name":"GetTopHeight","parent":"DVerticalDivider","type":"panelfunc","ispanel":true,"description":{"text":"Returns the current height of the top content panel set by  or by the user.","page":"DVerticalDivider:SetTopHeight"},"realm":"Client","rets":{"ret":{"text":"The current height of the .","name":"","type":"number","page":"DVerticalDivider"}}}},
{"function":{"name":"GetMiddle","parent":"DVerticalDivider","type":"panelfunc","ispanel":true,"description":{"text":"Returns the middle content panel of the .","page":"DVerticalDivider"},"realm":"Client","rets":{"ret":{"text":"The middle content panel.","name":"","type":"Panel"}}}},
{"function":{"name":"GetHoldPos","parent":"DVerticalDivider","type":"panelfunc","ispanel":true,"description":{"text":"Returns the local Y position of where the user starts dragging the divider.","internal":""},"realm":"Client","rets":{"ret":{"text":"The local Y position where divider dragging has started.","name":"","type":"number"}}}},
{"function":{"name":"GetTop","parent":"DVerticalDivider","type":"panelfunc","ispanel":true,"description":{"text":"Returns the top content panel of the .","page":"DVerticalDivider"},"realm":"Client","rets":{"ret":{"text":"The top content panel.","name":"","type":"Panel"}}}},
{"function":{"name":"GetDragging","parent":"DVerticalDivider","type":"panelfunc","ispanel":true,"description":"Returns whether the divider is being dragged or not.","realm":"Client","rets":{"ret":{"text":"If true, mouse movement will alter the size of the divider.","name":"","type":"boolean"}}}},
{"function":{"name":"GetBottom","parent":"DVerticalDivider","type":"panelfunc","ispanel":true,"description":{"text":"Returns the bottom content panel of the .","page":"DVerticalDivider"},"realm":"Client","rets":{"ret":{"text":"The bottom content panel.","name":"","type":"Panel"}}}},
{"function":{"name":"GetBottomMin","parent":"DVerticalDivider","type":"panelfunc","ispanel":true,"description":"Returns the minimum height of the bottom content panel.","realm":"Client","rets":{"ret":{"text":"The minimum height of the bottom content panel.","name":"","type":"number"}}}},
{"function":{"name":"ShowIcons","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Returns whether or not the  this node is in has icons enabled.\n\nSee  for more info.","page":["DTree","DTree:ShowIcons"]},"realm":"Client","rets":{"ret":{"text":"Whether the icons are shown or not","name":"","type":"number"}}}},
{"function":{"name":"GetDividerHeight","parent":"DVerticalDivider","type":"panelfunc","ispanel":true,"description":{"text":"Returns the height of the divider bar between the top and bottom content panels of the .","page":"DVerticalDivider"},"realm":"Client","rets":{"ret":{"text":"The height of the divider bar.","name":"","type":"number"}}}},
{"function":{"name":"SetupCopy","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Currently does nothing, not implemented.","deprecated":""},"realm":"Client"}},
{"function":{"name":"SetShowFiles","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Sets whether or not nodes for files should be added when populating the node from filesystem.","internal":""},"realm":"Client","args":{"arg":{"name":"showFiles","type":"boolean"}}}},
{"function":{"name":"SetShowFiles","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Sets whether or not nodes for files should be added when populating the node from filesystem.","internal":""},"realm":"Client","args":{"arg":{"name":"showFiles","type":"boolean"}}}},
{"function":{"name":"SetWildCard","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Sets the search wildcard.\n\nUse  instead","internal":"","page":"DTree_Node:MakeFolder"},"realm":"Client","args":{"arg":{"text":"The wildcard to set","name":"wildcard","type":"string"}}}},
{"function":{"name":"SetRoot","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Sets the root node (the ) of this node.\n\nThis is set automatically, you shouldn't use this.","internal":"","page":"DTree"},"realm":"Client","args":{"arg":{"text":"The panel to set as root node.","name":"root","type":"Panel"}}}},
{"function":{"name":"SetParentNode","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Sets the parent node of this node. Not the same as .\n\nThis is set automatically, you shouldn't use this.","internal":"","page":"Panel:SetParent"},"realm":"Client","args":{"arg":{"text":"The panel to set as a parent node for this node","name":"parent","type":"Panel"}}}},
{"function":{"name":"SetPathID","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Sets the path ID () for populating the tree from the filesystem.\n\nUse  instead.","internal":"","page":["File Search Paths","DTree_Node:MakeFolder"]},"realm":"Client","args":{"arg":{"text":"The path ID to set.","name":"path","type":"string"}}}},
{"function":{"name":"SetNeedsPopulating","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Sets whether or not the node needs populating from the filesystem.","internal":""},"realm":"Client","args":{"arg":{"text":"Whether or not the node needs populating","name":"needs","type":"boolean"}}}},
{"function":{"name":"SetLastChild","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Called automatically to set whether this node is the last child on this level or not.","internal":""},"realm":"Client","args":{"arg":{"name":"last","type":"boolean"}}}},
{"function":{"name":"SetNeedsChildSearch","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"internal":""},"realm":"Client","args":{"arg":{"name":"newState","type":"boolean"}}}},
{"function":{"name":"SetNeedsChildSearch","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"internal":""},"realm":"Client","args":{"arg":{"name":"newState","type":"boolean"}}}},
{"function":{"name":"SetHideExpander","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Sets whether the expand button (little + button) should be shown or hidden.","internal":""},"realm":"Client","args":{"arg":{"name":"hide","type":"boolean"}}}},
{"function":{"name":"SetFolder","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Sets the folder to search files and folders in.\n\nUse  instead.","internal":"","page":"DTree_Node:MakeFolder"},"realm":"Client","args":{"arg":{"name":"folder","type":"string"}}}},
{"function":{"name":"SetForceShowExpander","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":"Sets whether or not the expand/collapse button (+/- button) should be shown on this node regardless of whether it has sub-elements or not.","realm":"Client","args":{"arg":{"name":"forceShow","type":"boolean"}}}},
{"function":{"name":"SetForceShowExpander","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":"Sets whether or not the expand/collapse button (+/- button) should be shown on this node regardless of whether it has sub-elements or not.","realm":"Client","args":{"arg":{"name":"forceShow","type":"boolean"}}}},
{"function":{"name":"SetExpanded","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":"Expands or collapses this node.","realm":"Client","args":{"arg":[{"text":"Whether to expand (true) or collapse (false)","name":"expand","type":"boolean"},{"text":"Whether to play animation (false) or not (true)","name":"surpressAnimation","type":"boolean","default":"false"}]}}},
{"function":{"name":"SetDraggableName","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Used to store name for sub elements for a  call.","internal":"","page":"Panel:Droppable"},"realm":"Client","args":{"arg":{"name":"name","type":"string"}}}},
{"function":{"name":"SetDrawLines","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Sets whether or not this node should draw visual lines.","internal":""},"realm":"Client","args":{"arg":{"name":"draw","type":"boolean"}}}},
{"function":{"name":"SetDoubleClickToOpen","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":"Sets whether double clicking the node should expand/collapse it or not.","realm":"Client","args":{"arg":{"text":"true to enable, false to disable this functionality.","name":"enable","type":"boolean"}}}},
{"function":{"name":"SetDirty","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Appears to have no effect on the .","deprecated":"","page":"DTree_Node"},"realm":"Client","args":{"arg":{"name":"dirty","type":"boolean"}}}},
{"function":{"name":"PopulateChildrenAndSelf","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Called automatically from  (or when user manually expands the node) to populate the node with sub-nodes from the filesystem if this was enabled via .","internal":"","page":["DTree_Node:SetExpanded","DTree_Node:MakeFolder"]},"realm":"Client","args":{"arg":{"text":"Expand self once population process is finished.","name":"expand","type":"boolean"}}}},
{"function":{"name":"PopulateChildren","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Called automatically from .","internal":"","page":"DTree_Node:PopulateChildrenAndSelf"},"realm":"Client"}},
{"function":{"name":"PerformRootNodeLayout","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Called automatically to perform layout on this node if this node .","internal":"","page":"DTree_Node:IsRootNode"},"realm":"Client"}},
{"function":{"name":"OnNodeSelected","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Called when this or a sub node is selected. Do not use this, it is not for override.\n\nUse  or  instead.","internal":"","page":["DTree:OnNodeSelected","DTree_Node:DoClick"]},"realm":"Client","args":{"arg":{"name":"node","type":"Panel"}}}},
{"function":{"name":"OnModified","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Called when sub-nodes of this  were changed, such as being rearranged if that functionality is enabled.","page":"DTree_Node"},"realm":"Client"}},
{"function":{"name":"MoveToTop","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":"Moves this node to the top of the level.","realm":"Client"}},
{"function":{"name":"MoveChildTo","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":"Moves given panel to the top of the children of this node.\n\nDespite name of this function, it cannot move the children to any position but the topmost.","realm":"Client","args":{"arg":{"text":"The node to move.","name":"node","type":"Panel"}}}},
{"function":{"name":"MakeFolder","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Makes this node a folder in the filesystem. This will make it automatically populated.\n\nSee also .","page":"DTree_Node:AddFolder"},"realm":"Client","args":{"arg":[{"text":"The folder in the filesystem to use, relative to the garrysmod/ folder.","name":"folder","type":"string"},{"text":"The path to search in. See","name":"path","type":"string","page":"File Search Paths"},{"text":"Should files be added as nodes (true) or folders only (false)","name":"showFiles","type":"boolean","default":"false"},{"text":"The wildcard to use when searching for files.","name":"wildcard","type":"string","default":"*"},{"text":"If set to true, don't show the expand buttons on empty nodes.","name":"dontForceExpandable","type":"boolean","default":"false"}]}}},
{"function":{"name":"LeaveTree","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Removes given node as a sub-node of this node.\n\nIt doesn't actually remove or unparent the panel, just removes it from the internal .","page":"DListView"},"realm":"Client","args":{"arg":{"text":"The node to remove","name":"pnl","type":"Panel"}}}},
{"function":{"name":"LeaveTree","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Removes given node as a sub-node of this node.\n\nIt doesn't actually remove or unparent the panel, just removes it from the internal .","page":"DListView"},"realm":"Client","args":{"arg":{"text":"The node to remove","name":"pnl","type":"Panel"}}}},
{"function":{"name":"InternalDoRightClick","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"See .","internal":"","page":"DTree_Node:DoRightClick"},"realm":"Client"}},
{"function":{"name":"InternalDoClick","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"See","internal":"","page":"DTree_Node:DoClick"},"realm":"Client"}},
{"function":{"name":"InsertNode","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Inserts an existing node as a \"child\" or a sub-node of this node.\nUsed internally by the drag'n'drop functionality.","internal":""},"realm":"Client","args":{"arg":{"text":"Has to be","name":"node","type":"Panel","page":"DTree_Node"}}}},
{"function":{"name":"InstallDraggable","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Called automatically internally.\n\nMakes the target node compatible with this node's drag'n'drop.","internal":""},"realm":"Client","args":{"arg":{"text":"The .","name":"node","type":"Panel","page":"DTree_Node"}}}},
{"function":{"name":"Insert","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":"Inserts a sub-node into this node before or after the given node.","realm":"Client","args":{"arg":[{"text":"The  to insert.","name":"node","type":"Panel","page":"DTree_Node"},{"text":"The node to insert the node above before or after.","name":"nodeNextTo","type":"Panel"},{"text":"true to insert before, false to insert after.","name":"before","type":"boolean"}]}}},
{"function":{"name":"GetWildCard","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Returns the wildcard set by .","page":"DTree_Node:MakeFolder"},"realm":"Client","rets":{"ret":{"text":"The search wildcard","name":"","type":"string"}}}},
{"function":{"name":"GetRoot","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Returns the root node, the  this node is under.\n\nSee also .","page":["DTree","DTree_Node:GetParentNode"]},"realm":"Client","rets":{"ret":{"text":"The root node","name":"","type":"Panel"}}}},
{"function":{"name":"GetShowFiles","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":"Returns whether or not nodes for files should/will be added when populating the node from filesystem.","realm":"Client","rets":{"ret":{"name":"","type":"boolean"}}}},
{"function":{"name":"GetPathID","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Returns the path ID () used in populating the  from the filesystem.\n\nSee  and .","page":["File Search Paths","DTree","DTree_Node:SetPathID","DTree_Node:MakeFolder"]},"realm":"Client","rets":{"ret":{"text":"The Path ID","name":"","type":"string"}}}},
{"function":{"name":"GetParentNode","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Returns the parent . Note that  will not be the same!","page":["DTree_Node","Panel:GetParent"]},"realm":"Client","rets":{"ret":{"text":"The parent node.","name":"","type":"Panel"}}}},
{"function":{"name":"GetNeedsChildSearch","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"internal":""},"realm":"Client","rets":{"ret":{"name":"","type":"boolean"}}}},
{"function":{"name":"GetNeedsPopulating","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Returns whether or not the node is set to be populated from the filesystem.","internal":""},"realm":"Client","rets":{"ret":{"name":"","type":"boolean"}}}},
{"function":{"name":"GetLineHeight","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"The height of a single  of the  this node belongs to.\n\nAlias of .","page":["DTree_Node","DTree","DTree:GetLineHeight"]},"realm":"Client","rets":{"ret":{"text":"The height of a single .","name":"","type":"number","page":"DTree_Node"}}}},
{"function":{"name":"GetLastChild","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":"Returns whether this node is the last child on this level or not.","realm":"Client","rets":{"ret":{"name":"","type":"boolean"}}}},
{"function":{"name":"GetIndentSize","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Returns the indentation level of the  this node belongs to.\n\nAlias of , see it for more info.","page":["DTree","DTree:GetIndentSize"]},"realm":"Client","rets":{"ret":{"text":"The indentation level.","name":"","type":"number"}}}},
{"function":{"name":"GetIcon","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":"Returns the image path to the icon of this node.","realm":"Client","rets":{"ret":{"text":"The path to the image","name":"","type":"string"}}}},
{"function":{"name":"GetHideExpander","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":"Returns whether the expand button (little + button) should be shown or hidden.","realm":"Client","rets":{"ret":{"name":"","type":"boolean"}}}},
{"function":{"name":"GetForceShowExpander","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Returns whether the expand/collapse button is shown on this node regardless of whether or not it has sub-nodes.\n\nSee also .","page":"DTree_Node:SetForceShowExpander"},"realm":"Client","rets":{"ret":{"name":"","type":"boolean"}}}},
{"function":{"name":"GetFolder","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Returns the folder path to search in, set by .","page":"DTree_Node:MakeFolder"},"realm":"Client","rets":{"ret":{"text":"The folder path.","name":"","type":"string"}}}},
{"function":{"name":"GetFileName","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":"Returns the filepath of the file attached to this node.","realm":"Client","rets":{"ret":{"name":"","type":"string"}}}},
{"function":{"name":"GetDrawLines","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Returns whether or not this node is drawing lines","internal":""},"realm":"Client","rets":{"ret":{"name":"","type":"boolean"}}}},
{"function":{"name":"GetDraggableName","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Returns what is set by .","internal":"","page":"DTree_Node:SetDraggableName"},"realm":"Client","rets":{"ret":{"name":"","type":"string"}}}},
{"function":{"name":"GetDoubleClickToOpen","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":"Returns whether the double clock to collapse/expand functionality is enabled on this node.","realm":"Client","rets":{"ret":{"name":"","type":"boolean"}}}},
{"function":{"name":"GetDirty","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Returns value set by .","deprecated":"","page":"DTree_Node:SetDirty"},"realm":"Client","rets":{"ret":{"name":"","type":"boolean"}}}},
{"function":{"name":"GetChildNode","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Returns n-th child node.\n\nBasically an alias of .","page":"Panel:GetChild"},"realm":"Client","args":{"arg":{"text":"The number of the child to get, starting with 0","name":"num","type":"number"}},"rets":{"ret":{"text":"The child panel, if valid ID is given","name":"","type":"Panel"}}}},
{"function":{"name":"FilePopulateCallback","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Called automatically from  to actually fill the node with sub-nodes based on set preferences like should files be added, etc.","internal":"","page":"DTree_Node:FilePopulate"},"realm":"Client","args":{"arg":[{"text":"A list of files in this folder","name":"files","type":"table"},{"text":"A list of folder in this folder.","name":"folders","type":"table"},{"text":"The folder name/path this node represents","name":"foldername","type":"string"},{"text":"The Path ID search was performed with. See","name":"path","type":"string","page":"File Search Paths"},{"text":"Inherited from the **FilePopulate** call. Does nothing","name":"bAndChildren","type":"boolean"},{"text":"The wildcard that was given","name":"wildcard","type":"string"}]}}},
{"function":{"name":"FilePopulate","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Called automatically from  and  to populate this node with child nodes of files and folders.","internal":"","page":["DTree_Node:PopulateChildrenAndSelf","DTree_Node:PopulateChildren"]},"realm":"Client","args":{"arg":[{"text":"Does nothing. Set to true if called from .","name":"bAndChildren","type":"boolean","page":"DTree_Node:PopulateChildren"},{"text":"Expand self once population process is finished.","name":"bExpand","type":"boolean"}]}}},
{"function":{"name":"ExpandTo","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Collapses or expands all nodes from the topmost-level node to this one.\n\nWorks opposite of .","page":"DTree_Node:ExpandRecurse"},"realm":"Client","args":{"arg":{"text":"Whether to expand (true) or collapse (false)","name":"expand","type":"boolean"}}}},
{"function":{"name":"ExpandRecurse","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Expands or collapses this node, as well as ALL child nodes of this node.\n\nWorks opposite of .","page":"DTree_Node:ExpandTo"},"realm":"Client","args":{"arg":{"text":"Whether to expand (true) or collapse (false)","name":"expand","type":"boolean"}}}},
{"function":{"name":"DoRightClick","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Called when the node is right clicked.\n\nSee also .","page":"DTree_Node:DoClick"},"realm":"Client","rets":{"ret":{"text":"Return true to prevent DoRightClick from being called on parent nodes or the  itself.","name":"","type":"boolean","page":"DTree"}}}},
{"function":{"name":"DoClick","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Called when the node is clicked.\n\nSee also .","page":"DTree_Node:DoRightClick"},"realm":"Client","rets":{"ret":{"text":"Return true to prevent DoClick from being called on parent nodes or the  itself.","name":"","type":"boolean","page":"DTree"}}}},
{"function":{"name":"DoClick","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Called when the node is clicked.\n\nSee also .","page":"DTree_Node:DoRightClick"},"realm":"Client","rets":{"ret":{"text":"Return true to prevent DoClick from being called on parent nodes or the  itself.","name":"","type":"boolean","page":"DTree"}}}},
{"function":{"name":"CreateChildNodes","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Creates the container  for the s.\n\nThis is called automatically so you don't have to.","internal":"","page":["DListLayout","DTree_Node"]},"realm":"Client"}},
{"function":{"name":"Copy","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":"Create and returns a copy of this node, including all the sub-nodes.","realm":"Client","rets":{"ret":{"text":"The copied .","name":"","type":"Panel","page":"DTree_Node"}}}},
{"function":{"name":"ChildExpanded","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Called when a child node is expanded or collapsed to propagate this event to parent nodes to update layout.","internal":""},"realm":"Client","args":{"arg":{"name":"expanded","type":"boolean"}}}},
{"function":{"name":"CleanList","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":"Cleans up the internal table of items (sub-nodes) of this node from invalid panels or sub-nodes that were moved from this node to another.\n\nAppears the be completely unused by the game on its own.","realm":"Client"}},
{"function":{"name":"AnimSlide","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Internal function that handles the expand/collapse animations.","internal":""},"realm":"Client","args":{"arg":[{"name":"anim","type":"table"},{"name":"delta","type":"number"},{"name":"data","type":"table"}]}}},
{"function":{"name":"AddPanel","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"Adds the given panel to the child nodes list, a .","internal":"","page":"DListLayout"},"realm":"Client","args":{"arg":{"text":"The panel to add.","name":"pnl","type":"Panel"}}}},
{"function":{"name":"AddNode","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":"Add a child node to the DTree_Node","realm":"Client","args":{"arg":[{"text":"Name of the node.","name":"name","type":"string"},{"text":"The icon that will show nexto the node in the DTree.","name":"icon","type":"string","default":"icon16/folder.png"}]},"rets":{"ret":{"text":"Returns the created  panel.","name":"","type":"Panel","page":"DTree_Node"}}}},
{"function":{"name":"ShowIcons","parent":"DTree","type":"panelfunc","ispanel":true,"description":{"text":"Returns whether or not the  next to each node of the DTree will be displayed.\n\nAlias of .","page":["Silkicons","DTree:GetShowIcons"]},"realm":"Client","rets":{"ret":{"text":"Whether or not the silkicons next to each node will be displayed.","name":"","type":"boolean"}}}},
{"function":{"name":"AddFolder","parent":"DTree_Node","type":"panelfunc","ispanel":true,"description":{"text":"A helper function that adds a new node and calls to  on it.","page":"DTree_Node:MakeFolder"},"realm":"Client","args":{"arg":[{"text":"The name of the new node","name":"name","type":"string"},{"text":"The folder in the filesystem to use, relative to the garrysmod/ folder.","name":"folder","type":"string"},{"text":"The path to search in. See","name":"path","type":"string","page":"File Search Paths"},{"text":"Should files be added as nodes (true) or folders only (false)","name":"showFiles","type":"boolean","default":"false"},{"text":"The wildcard to use when searching for files.","name":"wildcard","type":"string","default":"*"},{"name":"bDontForceExpandable","type":"boolean","default":"false"}]}}},
{"function":{"name":"SetShowIcons","parent":"DTree","type":"panelfunc","ispanel":true,"description":{"text":"Sets whether or not the  next to each node of the DTree will be displayed.\n\nIndividual icons can be set with  or passed as the second argument in .","page":["Silkicons","DTree_Node:SetIcon","DTree:AddNode"]},"realm":"Client","args":{"arg":{"text":"Whether or not to show icons.","name":"show","type":"boolean"}}}},
{"function":{"name":"SetSelectedItem","parent":"DTree","type":"panelfunc","ispanel":true,"description":"Set the currently selected top-level node.","realm":"Client","args":{"arg":{"text":"to select.","name":"node","type":"Panel","page":"DTree_Node"}}}},
{"function":{"name":"SetLineHeight","parent":"DTree","type":"panelfunc","ispanel":true,"description":{"text":"Sets the height of each  in the tree.\n\nThe default value is 17.","page":"DTree_Node"},"realm":"Client","args":{"arg":{"text":"The height to set.","name":"h","type":"number"}}}},
{"function":{"name":"SetIndentSize","parent":"DTree","type":"panelfunc","ispanel":true,"description":{"text":"Sets the indentation size of the , the distance between each \"level\" of the tree is offset on the left from the previous level.\n\nCurrently this feature has no effect on the  element.","page":["DTree","DTree"]},"realm":"Client","args":{"arg":{"text":"The new indentation size.","name":"size","type":"number"}}}},
{"function":{"name":"SetExpanded","parent":"DTree","type":"panelfunc","ispanel":true,"description":{"text":"Does nothing. Is not called by the  itself.\n\nUsed as a placeholder empty function alongside ,  and  to prevent errors when  is incorrectly used on a .","internal":"","page":["DTree","DTree:ExpandTo","DTree:MoveChildTo","DTree:ChildExpanded","DTree_Node:SetExpanded","DTree"]},"realm":"Client","args":{"arg":{"name":"bExpand","type":"boolean"}}}},
{"function":{"name":"SetClickOnDragHover","parent":"DTree","type":"panelfunc","ispanel":true,"description":{"text":"Enables the \"click when drag-hovering\" functionality.\n\nIf enabled, when hovering over any  of this  while dragging a panel, the node will be automatically clicked on (and subsequently  will be called) to open any attached panels, such as spawnlists in spawnmenu.\n\nSee also: .","page":["DTree_Node","DTree","DTree:OnNodeSelected","PANEL:DragHoverClick"]},"realm":"Client","args":{"arg":{"name":"enable","type":"boolean"}}}},
{"function":{"name":"OnNodeSelected","parent":"DTree","type":"panelfunc","ispanel":true,"description":"This function is called when a node within a tree is selected.","realm":"Client","args":{"arg":{"text":"The node that was selected.","name":"node","type":"Panel"}}}},
{"function":{"name":"Root","parent":"DTree","type":"panelfunc","ispanel":true,"description":{"text":"Returns the root , the node that is the parent to all other nodes of the DTree.","page":"DTree_Node"},"realm":"Client","rets":{"ret":{"text":"Root node.","name":"","type":"Panel"}}}},
{"function":{"name":"MoveChildTo","parent":"DTree","type":"panelfunc","ispanel":true,"description":{"text":"Moves given node to the top of s children. (Makes it the topmost mode)\n\nUsed as a placeholder function alongside ,  and .\n\nThe  acts a root node and methods with the same name in  call to the parent.","page":["DTree","DTree:ExpandTo","DTree:SetExpanded","DTree:ChildExpanded","DTree","DTree_Node"]},"realm":"Client","args":{"arg":[{"text":"The node to move","name":"child","type":"Panel"},{"text":"Unused, does nothing.","name":"pos","type":"number","deprecated":""}]}}},
{"function":{"name":"LayoutTree","parent":"DTree","type":"panelfunc","ispanel":true,"description":{"text":"Does nothing.","deprecated":""},"realm":"Client"}},
{"function":{"name":"GetSelectedItem","parent":"DTree","type":"panelfunc","ispanel":true,"description":"Returns the currently selected node.","realm":"Client","rets":{"ret":{"text":"Curently selected node.","name":"","type":"Panel"}}}},
{"function":{"name":"GetLineHeight","parent":"DTree","type":"panelfunc","ispanel":true,"description":{"text":"Returns the height of each  in the tree.","page":"DTree_Node"},"realm":"Client","rets":{"ret":{"text":"The height of each  in the tree.","name":"","type":"number","page":"DTree_Node"}}}},
{"function":{"name":"GetShowIcons","parent":"DTree","type":"panelfunc","ispanel":true,"description":{"text":"Returns whether or not the  next to each node of the DTree will be displayed.\n\nIndividual icons can be set with  or passed as the second argument in .","page":["Silkicons","DTree_Node:SetIcon","DTree:AddNode"]},"realm":"Client","rets":{"ret":{"text":"Whether or not the silkicons next to each node will be displayed.","name":"","type":"boolean"}}}},
{"function":{"name":"GetIndentSize","parent":"DTree","type":"panelfunc","ispanel":true,"description":{"text":"Returns the indentation size of the , the distance between each \"level\" of the tree is offset on the left from the previous level.\n\nCurrently this feature has no effect on the  element.","page":["DTree","DTree"]},"realm":"Client","rets":{"ret":{"text":"The indentation size.","name":"","type":"number"}}}},
{"function":{"name":"GetClickOnDragHover","parent":"DTree","type":"panelfunc","ispanel":true,"description":{"text":"Returns the status of . See that for more info.","page":"DTree:SetClickOnDragHover"},"realm":"Client","rets":{"ret":{"name":"","type":"boolean"}}}},
{"function":{"name":"DoRightClick","parent":"DTree","type":"panelfunc","ispanel":true,"description":{"text":"Called when the any node is right clicked. Called by .","page":"DTree_Node:DoRightClick"},"realm":"Client"}},
{"function":{"name":"ExpandTo","parent":"DTree","type":"panelfunc","ispanel":true,"description":{"text":"Does nothing. Used as a placeholder empty function alongside ,  and .\n\nThe  acts a root node and methods with the same name in  call to the parent.","internal":"","page":["DTree:MoveChildTo","DTree:SetExpanded","DTree:ChildExpanded","DTree","DTree_Node"]},"realm":"Client","args":{"arg":{"name":"bExpand","type":"boolean"}}}},
{"function":{"name":"DoClick","parent":"DTree","type":"panelfunc","ispanel":true,"description":{"text":"Called when the any node is clicked. Called by .","page":"DTree_Node:DoClick"},"realm":"Client"}},
{"function":{"name":"ChildExpanded","parent":"DTree","type":"panelfunc","ispanel":true,"description":{"text":"Calls directly to .\nCalled by s when a sub element has been expanded or collapsed.\n\nUsed as a placeholder function alongside ,  and .\n\nThe  acts a root node and methods with the same name in  call to the parent.","internal":"","page":["Panel:InvalidateLayout","DTree_Node","DTree:ExpandTo","DTree:SetExpanded","DTree:MoveChildTo","DTree","DTree_Node"]},"realm":"Client","args":{"arg":{"name":"bExpand","type":"boolean"}}}},
{"function":{"name":"PositionTooltip","parent":"DTooltip","type":"panelfunc","ispanel":true,"description":{"text":"Positions the  so it doesn't stay in the same draw position.","internal":"","page":"DTooltip"},"realm":"Client"}},
{"function":{"name":"SetContents","parent":"DTooltip","type":"panelfunc","ispanel":true,"description":{"text":"What Panel you want put inside of the","page":"DTooltip","note":"You can only have one Panel at a time; use Parenting to add more"},"realm":"Client","args":{"arg":[{"text":"Contents","name":"panel","type":"Panel"},{"text":"If set to true, the panel in the first argument will be automatically removed when  is closed via .","name":"bDelete","type":"boolean","default":"false","page":["DTooltip","DTooltip:Close"]}]}}},
{"function":{"name":"AddNode","parent":"DTree","type":"panelfunc","ispanel":true,"description":"Add a node to the DTree","realm":"Client","args":{"arg":[{"text":"Name of the option.","name":"name","type":"string"},{"text":"The icon that will show nexto the node in the DTree.","name":"icon","type":"string","default":"icon16/folder.png"}]},"rets":{"ret":{"text":"Returns the created  panel.","name":"","type":"Panel","page":"DTree_Node"}}}},
{"function":{"name":"OpenForPanel","parent":"DTooltip","type":"panelfunc","ispanel":true,"description":"Sets up the tooltip for display for given panel and starts the timer.","realm":"Client","args":{"arg":{"name":"pnl","type":"Panel"}}}},
{"function":{"name":"DrawArrow","parent":"DTooltip","type":"panelfunc","ispanel":true,"description":{"text":"Used to draw a triangle beneath the","page":"DTooltip","note":{"text":"Requires , without this it will error","page":"DTooltip:SetContents"}},"realm":"Client","args":{"arg":[{"text":"arrow location on the x axis","name":"x","type":"number"},{"text":"arrow location on the y axis","name":"y","type":"number"}]}}},
{"function":{"name":"SetTile","parent":"DTileLayout","type":"panelfunc","ispanel":true,"description":{"text":"Called to set the occupied state of a tile.","internal":""},"realm":"Client","args":{"arg":[{"text":"The x coordinate of the tile.","name":"x","type":"number"},{"text":"The y coordinate of the tile.","name":"y","type":"number"},{"text":"The new state of the tile, normally `1` or `nil`.","name":"state","type":"any"}]}}},
{"function":{"name":"Close","parent":"DTooltip","type":"panelfunc","ispanel":true,"description":"Forces the tooltip to close. This will remove the panel.","realm":"Client"}},
{"function":{"name":"SetSpaceY","parent":"DTileLayout","type":"panelfunc","ispanel":true,"description":{"text":"Sets the spacing between 2 elements in the  on the Y axis.","page":"DTileLayout"},"realm":"Client","args":{"arg":{"name":"spaceY","type":"number"}}}},
{"function":{"name":"SetMinHeight","parent":"DTileLayout","type":"panelfunc","ispanel":true,"description":"Determines the minimum height the DTileLayout will resize to. This is useful if child panels will be added/removed often.","realm":"Client","args":{"arg":{"text":"The minimum height the panel can shrink to.","name":"minH","type":"number"}}}},
{"function":{"name":"SetSpaceX","parent":"DTileLayout","type":"panelfunc","ispanel":true,"description":{"text":"Sets the spacing between 2 elements in the  on the X axis.","page":"DTileLayout"},"realm":"Client","args":{"arg":{"name":"spacingX","type":"number"}}}},
{"function":{"name":"SetBorder","parent":"DTileLayout","type":"panelfunc","ispanel":true,"description":{"text":"Sets the spacing between the border/edge of the  and all the elements inside.","page":"DTileLayout"},"realm":"Client","args":{"arg":{"name":"border","type":"number"}}}},
{"function":{"name":"SetBaseSize","parent":"DTileLayout","type":"panelfunc","ispanel":true,"description":"Sets the size of a single tile. If a child panel is larger than this size, it will occupy several tiles.\n\nIf you are setting the size of the children properly then you probably don't need to change this.","realm":"Client","args":{"arg":{"text":"The size of each tile. It is recommended you use `2ⁿ` (`16, 32, 64...`) numbers, and those above `4`, as numbers lower than this will result in many tiles being processed and therefore slow operation.","name":"size","type":"number"}}}},
{"function":{"name":"LayoutTiles","parent":"DTileLayout","type":"panelfunc","ispanel":true,"description":{"text":"Called by  to arrange and lay out the child panels, if it has changed in size.","internal":"","page":"PANEL:PerformLayout"},"realm":"Client"}},
{"function":{"name":"OnModified","parent":"DTileLayout","type":"panelfunc","ispanel":true,"description":"Called when anything is dropped on or rearranged within the DTileLayout.","realm":"Client"}},
{"function":{"name":"Layout","parent":"DTileLayout","type":"panelfunc","ispanel":true,"description":"Resets the last width/height info, and invalidates the panel's layout, causing it to recalculate all child positions. It is called whenever a child is added or removed, and can be called to refresh the panel.","realm":"Client"}},
{"function":{"name":"GetTile","parent":"DTileLayout","type":"panelfunc","ispanel":true,"description":{"text":"Gets the occupied state of a tile.","internal":""},"realm":"Client","args":{"arg":[{"text":"The x coordinate of the tile.","name":"x","type":"number"},{"text":"The y coordinate of the tile.","name":"y","type":"number"}]},"rets":{"ret":{"text":"The occupied state of the tile, normally `1` or `nil`.","name":"","type":"any"}}}},
{"function":{"name":"GetSpaceY","parent":"DTileLayout","type":"panelfunc","ispanel":true,"description":{"text":"Returns the Y axis spacing between 2 elements set by .","page":"DTileLayout:SetSpaceY"},"realm":"Client","rets":{"ret":{"name":"","type":"number"}}}},
{"function":{"name":"GetSpaceX","parent":"DTileLayout","type":"panelfunc","ispanel":true,"description":{"text":"Returns the X axis spacing between 2 elements set by .","page":"DTileLayout:SetSpaceX"},"realm":"Client","rets":{"ret":{"name":"","type":"number"}}}},
{"function":{"name":"GetMinHeight","parent":"DTileLayout","type":"panelfunc","ispanel":true,"description":"Returns the minimum height the DTileLayout can resize to.","realm":"Client","rets":{"ret":{"text":"The minimum height the panel can shrink to.","name":"","type":"number"}}}},
{"function":{"name":"GetBaseSize","parent":"DTileLayout","type":"panelfunc","ispanel":true,"description":{"text":"Returns the size of each single tile, set with .","page":"DTileLayout:SetBaseSize"},"realm":"Client","rets":{"ret":{"text":"Base tile size.","name":"","type":"number"}}}},
{"function":{"name":"GetBorder","parent":"DTileLayout","type":"panelfunc","ispanel":true,"description":{"text":"Returns the border spacing set by .","page":"DTileLayout:SetBorder"},"realm":"Client","rets":{"ret":{"name":"","type":"number"}}}},
{"function":{"name":"FindFreeTile","parent":"DTileLayout","type":"panelfunc","ispanel":true,"description":{"text":"Finds the coordinates of the first group of free tiles that fit the given size.","internal":""},"realm":"Client","args":{"arg":[{"text":"The x coordinate to start looking from.","name":"x","type":"number"},{"text":"The y coordinate to start looking from.","name":"y","type":"number"},{"text":"The needed width.","name":"w","type":"number"},{"text":"The needed height.","name":"h","type":"number"}]},"rets":{"ret":[{"text":"The x coordinate of the found available space.","name":"","type":"number"},{"text":"The y coordinate of the found available space.","name":"","type":"number"}]}}},
{"function":{"name":"FitsInTile","parent":"DTileLayout","type":"panelfunc","ispanel":true,"description":{"text":"Determines if a group of tiles is vacant.","internal":""},"realm":"Client","args":{"arg":[{"text":"The x coordinate of the first tile.","name":"x","type":"number"},{"text":"The y coordinate of the first tile.","name":"y","type":"number"},{"text":"The width needed.","name":"w","type":"number"},{"text":"The height needed.","name":"h","type":"number"}]},"rets":{"ret":{"text":"Whether or not this group is available for occupation.","name":"","type":"boolean"}}}},
{"function":{"name":"CopyContents","parent":"DTileLayout","type":"panelfunc","ispanel":true,"description":"Creates copies of all the children from the given panel object and parents them to this one.","realm":"Client","args":{"arg":{"text":"The source panel from which to copy all children.","name":"source","type":"Panel"}}}},
{"function":{"name":"Copy","parent":"DTileLayout","type":"panelfunc","ispanel":true,"description":"Creates and returns an exact copy of the DTileLayout.","realm":"Client","rets":{"ret":{"text":"The created copy.","name":"","type":"Panel"}}}},
{"function":{"name":"ConsumeTiles","parent":"DTileLayout","type":"panelfunc","ispanel":true,"description":{"text":"Called to designate a range of tiles as occupied by a panel.","internal":""},"realm":"Client","args":{"arg":[{"text":"The x coordinate of the top-left corner of the panel.","name":"x","type":"number"},{"text":"The y coordinate of the top-left corner of the panel.","name":"y","type":"number"},{"text":"The panel's width.","name":"w","type":"number"},{"text":"The panel's height.","name":"h","type":"number"}]}}},
{"function":{"name":"ClearTiles","parent":"DTileLayout","type":"panelfunc","ispanel":true,"description":{"text":"Clears the panel's tile table. Used by .","internal":"","page":"DTileLayout:LayoutTiles"},"realm":"Client"}},
{"function":{"name":"SetValue","parent":"DTextEntry","type":"panelfunc","ispanel":true,"description":{"text":"Sets the text of the  and calls .","page":["DTextEntry","DTextEntry:OnValueChange"]},"realm":"Client","args":{"arg":{"text":"The value to set.","name":"text","type":"string"}}}},
{"function":{"name":"SetUpdateOnType","parent":"DTextEntry","type":"panelfunc","ispanel":true,"description":{"text":"Sets whether we should fire  every time we type or delete a character or only when Enter is pressed.","page":"DTextEntry:OnValueChange"},"realm":"Client","args":{"arg":{"name":"updateOnType","type":"boolean"}}}},
{"function":{"name":"SetTextColor","parent":"DTextEntry","type":"panelfunc","ispanel":true,"description":{"text":"Sets the text color of the .","page":"DTextEntry"},"realm":"Client","args":{"arg":{"text":"The text color. Uses the .","name":"color","type":"table","page":"Color"}}},"example":{"description":"Changes the text color inside the DTextEntry to the color red.","code":"local Frame = vgui.Create(\"DFrame\")\nFrame:SetSize(200,200)\nFrame:Center()\nFrame:MakePopup()\n\nlocal TextEntry = vgui.Create(\"DTextEntry\", Frame)\nTextEntry:SetSize(180,20)\nTextEntry:SetPos(10,80)\nTextEntry:SetTextColor(Color(255,20,20))\nTextEntry:SetValue(\"Basic Text\")"}},
{"function":{"name":"SetPlaceholderText","parent":"DTextEntry","type":"panelfunc","ispanel":true,"description":"Allow you to add a hint.","realm":"Client","args":{"arg":{"name":"text","type":"string","default":"nil"}}}},
{"function":{"name":"SetNumeric","parent":"DTextEntry","type":"panelfunc","ispanel":true,"description":"Sets whether or not to decline non-numeric characters as input.\n\nNumeric characters are 1234567890.-","realm":"Client","args":{"arg":{"text":"Whether to accept only numeric characters.","name":"numericOnly","type":"boolean"}}},"example":{"code":"local TextEntry = vgui.Create( \"DTextEntry\" )\nTextEntry:SetNumeric(true)","output":"Only allow numeric characters."}},
{"function":{"name":"SetPlaceholderColor","parent":"DTextEntry","type":"panelfunc","ispanel":true,"description":"Allow you to set placeholder color.","realm":"Client","args":{"arg":{"text":"The color of the placeholder.","name":"color","type":"table","default":"Color(128, 128, 128)"}}}},
{"function":{"name":"SetMultiline","parent":"DTextEntry","type":"panelfunc","ispanel":true,"description":{"text":"Enables or disables the multi-line functionality of .","page":"DTextEntry"},"realm":"Client","args":{"arg":{"text":"Whether to enable multiline or not.","name":"multiline","type":"boolean"}}}},
{"function":{"name":"SetFont","parent":"DTextEntry","type":"panelfunc","ispanel":true,"description":"Changes the font of the DTextEntry.","realm":"Client","args":{"arg":{"text":"The name of the font to be changed to.","name":"font","type":"string"}}},"example":{"description":"Restores the original font the the DTextEntry.","code":"local textentry = vgui.Create(\"DTextEntry\")\ntextentry:SetFont(\"DermaDefault\")"}},
{"function":{"name":"SetEnterAllowed","parent":"DTextEntry","type":"panelfunc","ispanel":true,"description":"Sets whether pressing the Enter key will cause the DTextEntry to lose focus or not, provided it is not multiline. This is true by default.","realm":"Client","args":{"arg":{"text":"If set to false, pressing Enter will not cause the panel to lose focus and will never call .","name":"allowEnter","type":"boolean","page":"DTextEntry:OnEnter"}}}},
{"function":{"name":"SetEditable","parent":"DTextEntry","type":"panelfunc","ispanel":true,"description":{"text":"Disables Input on a DTextEntry. This differs from  - SetEditable will not affect the appearance of the textbox.","page":"DTextEntry:SetDisabled"},"realm":"Client","args":{"arg":{"text":"Whether the DTextEntry should be editable","name":"enabled","type":"boolean"}}},"example":{"code":"local TextEntry = vgui.Create( \"DTextEntry\", frame ) -- create the form as a child of frame\nTextEntry:SetPos( 25, 50 )\nTextEntry:SetSize( 75, 85 )\nTextEntry:SetText( \"Sample String\" )\nTextEntry:SetEditable( false )"}},
{"function":{"name":"SetDisabled","parent":"DTextEntry","type":"panelfunc","ispanel":true,"description":{"text":"Disables input on a DTextEntry and greys it out visually. This differs from  which doesn't visually change the textbox.","deprecated":{"text":"Use  instead.","page":"Panel:SetEnabled"},"page":"DTextEntry:SetEditable"},"realm":"Client","args":{"arg":{"text":"Whether the textbox should be disabled","name":"disabled","type":"boolean"}}}},
{"function":{"name":"SetCursorColor","parent":"DTextEntry","type":"panelfunc","ispanel":true,"description":"Sets the cursor's color in  DTextEntry (the blinking line).","realm":"Client","args":{"arg":{"text":"The color to set the cursor to.","name":"color","type":"table"}}},"example":{"description":"Creates a panel and a DTextEntry, and then sets the cursor color. \n(As seen on https://maurits.tv/data/garrysmod/wiki/wiki.garrysmod.com/index9051.html)","code":"local ParentPanel = vgui.Create(\"DFrame\")\n\tParentPanel:SetSize(ScrW()/7, ScrH()/12)\n\tParentPanel:Center()\n\tParentPanel:SetTitle(\"Cursor Color Test\")\n\tParentPanel:SetDeleteOnClose(true)\n\tParentPanel:MakePopup()\n \nlocal TextEntry = vgui.Create( \"DTextEntry\", ParentPanel )\n\tTextEntry:SetSize(ScrW()/9, ScrH()/30)\n\tTextEntry:SetValue(\"Cursor Color Test \")\n\tTextEntry:SetPos(ParentPanel:GetWide()/2-TextEntry:GetWide()/2,\n\tParentPanel:GetTall()/2-TextEntry:GetTall()/5)\n\tTextEntry:SetEnterAllowed(false)\n \n\t-- Uses Simple RGBA (Red, Green, Blue, Alpha) Colors. --\n\tTextEntry:SetCursorColor(Color(255,0,0,255))\n \n\tTextEntry:RequestFocus()","output":"Makes the text entry's cursor color red."}},
{"function":{"name":"OnValueChange","parent":"DTextEntry","type":"panelfunc","ispanel":true,"description":{"text":"Called internally when the text changes of the  are applied. (And set to the attached console variable, if one is given)\n\nSee also  for a function that is called on every text change, even if the console variable is not updated.\n\nYou should override this function to define custom behavior when the text changes.\n\nThis method is called:\n* When Enter is pressed after typing\n* When  is used\n* For every key typed - only if  was set to true (default is false)","page":["DTextEntry","DTextEntry:OnChange","DTextEntry:SetValue","DTextEntry:SetUpdateOnType"]},"realm":"Client","args":{"arg":{"text":"The DTextEntry text.","name":"value","type":"string"}}}},
{"function":{"name":"OpenAutoComplete","parent":"DTextEntry","type":"panelfunc","ispanel":true,"file":{"text":"lua/vgui/dtextentry.lua","line":"213-232"},"description":{"text":"Builds a  for the DTextEntry based on the input table.","internal":{"text":"You really should be using  instead.","page":"DTextEntry:GetAutoComplete"},"page":"DMenu"},"realm":"Client","args":{"arg":{"text":"Table containing results from .","name":"tab","type":"table","page":"DTextEntry:GetAutoComplete"}}}},
{"function":{"name":"OnTextChanged","parent":"DTextEntry","type":"panelfunc","ispanel":true,"description":{"text":"Called internally when the text inside the DTextEntry changes.\n\nYou should not override this function. Use  instead.","internal":"","page":"DTextEntry:OnValueChange"},"realm":"Client","args":{"arg":{"text":"Determines whether to remove the autocomplete menu (false) or not (true).","name":"noMenuRemoval","type":"boolean"}}}},
{"function":{"name":"OnKeyCodeTyped","parent":"DTextEntry","type":"panelfunc","ispanel":true,"description":{"text":"Called whenever a valid character is typed while the text entry is focused.","note":{"text":"This hook only works on panels derived from , such as .","page":["TextEntry","DTextEntry"]}},"realm":"Client","args":{"arg":{"text":"They key code of the key pressed, see .","name":"keyCode","type":"number","page":"Enums/KEY"}},"rets":{"ret":{"text":"Whether you've handled the key press. Returning true prevents the default text entry behavior from occurring.","name":"","type":"boolean"}}}},
{"function":{"name":"OnEnter","parent":"DTextEntry","type":"panelfunc","ispanel":true,"description":{"text":"Called whenever enter is pressed on a DTextEntry.","note":{"text":"will still return true in this callback!","page":"DTextEntry:IsEditing"}},"realm":"Client"},"example":{"code":"local TextEntry = vgui.Create( \"DTextEntry\" )\nTextEntry:SetTextColor( Color( 255, 0, 0, 255 ) )\n\nTextEntry.OnEnter = function()\n    TextEntry:SetTextColor( Color( 0, 0, 255, 255 ) )\nend","output":"Changes the text color when enter is pressed."}},
{"function":{"name":"OnGetFocus","parent":"DTextEntry","type":"panelfunc","ispanel":true,"description":"Called whenever the DTextEntry gains focus.","realm":"Client"},"example":{"code":"local dTextEntry = vgui.Create(\"DTextEntry\")\ndTextEntry:SetText(\"Enter text here\")\n\ndTextEntry.OnGetFocus = function()\n    self:SetText(\"\") -- Clear the text box for user input\nend","output":"Text entry clears when user clicks it to begin typing"}},
{"function":{"name":"OnChange","parent":"DTextEntry","type":"panelfunc","ispanel":true,"description":{"text":"Called internally by  when the user modifies the text in the DTextEntry.\n\nYou should override this function to define custom behavior when the DTextEntry text changes.","page":"DTextEntry:OnTextChanged"},"realm":"Client"}},
{"function":{"name":"IsMultiline","parent":"DTextEntry","type":"panelfunc","ispanel":true,"description":{"text":"Determines whether or not  is in multi-line mode. This is set with .","page":["DTextEntry","DTextEntry:SetMultiline"]},"realm":"Client","rets":{"ret":{"text":"Whether the object is in multi-line mode or not.","name":"","type":"boolean"}}}},
{"function":{"name":"IsEditing","parent":"DTextEntry","type":"panelfunc","ispanel":true,"description":"Returns whether this DTextEntry is being edited or not. (i.e. has focus)","realm":"Client","rets":{"ret":{"text":"Whether this DTextEntry is being edited or not","name":"","type":"boolean"}}}},
{"function":{"name":"GetUpdateOnType","parent":"DTextEntry","type":"panelfunc","ispanel":true,"description":{"text":"Returns whether the  is set to run  every time a character is typed or deleted or only when Enter is pressed.","page":["DTextEntry","DTextEntry:OnValueChange"]},"realm":"Client","rets":{"ret":{"name":"","type":"boolean"}}}},
{"function":{"name":"GetTextColor","parent":"DTextEntry","type":"panelfunc","ispanel":true,"description":"Returns the text color of a DTextEntry.","realm":"Client","rets":{"ret":{"text":"The color of the text as a .","name":"","type":"table","page":"Color"}}},"example":{"code":"local TextEntry = vgui.Create( \"DTextEntry\" )\nTextEntry:SetTextColor( Color( 255, 0, 0, 255 ))\nPrintTable( TextEntry:GetTextColor() )","output":"Prints the R, G, B and A of the text color."}},
{"function":{"name":"GetPlaceholderColor","parent":"DTextEntry","type":"panelfunc","ispanel":true,"description":"Return current color of panel placeholder","realm":"Client","rets":{"ret":{"text":"Current placeholder color","name":"","type":"table"}}}},
{"function":{"name":"GetNumeric","parent":"DTextEntry","type":"panelfunc","ispanel":true,"description":"Returns whether only numeric characters (123456789.-) can be entered into the DTextEntry.","realm":"Client","rets":{"ret":{"text":"Whether the DTextEntry is numeric or not.","name":"","type":"boolean"}}}},
{"function":{"name":"GetInt","parent":"DTextEntry","type":"panelfunc","ispanel":true,"description":{"text":"Similar to , but rounds the value to the nearest integer.","page":"DTextEntry:GetFloat"},"realm":"Client","rets":{"ret":{"text":"Text of the DTextEntry as a round number, or nil if it cannot be converted to a number.","name":"","type":"number"}}}},
{"function":{"name":"GetFloat","parent":"DTextEntry","type":"panelfunc","ispanel":true,"description":"Returns the contents of the DTextEntry as a number.","realm":"Client","rets":{"ret":{"text":"Text of the DTextEntry as a float, or nil if it cannot be converted to a number using .","name":"","type":"number","page":"Global.tonumber"}}}},
{"function":{"name":"GetEnterAllowed","parent":"DTextEntry","type":"panelfunc","ispanel":true,"description":"Returns whether pressing Enter can cause the panel to lose focus. Note that a multiline DTextEntry cannot be escaped using the Enter key even when this function returns true.","realm":"Client","rets":{"ret":{"text":"Whether pressing the Enter key can cause the panel to lose focus.","name":"","type":"boolean"}}}},
{"function":{"name":"GetCursorColor","parent":"DTextEntry","type":"panelfunc","ispanel":true,"description":"Returns the cursor color of a DTextEntry.","realm":"Client","rets":{"ret":{"text":"The color of the cursor as a .","name":"","type":"table","page":"Color"}}},"example":{"code":"local TextEntry = vgui.Create( \"DTextEntry\" )\nTextEntry:SetCursorColor( Color( 255, 0, 0, 255 ))\nPrintTable( TextEntry:GetCursorColor() )","output":"Prints the R, G, B and A of the cursor color."}},
{"function":{"name":"GetCursorColor","parent":"DTextEntry","type":"panelfunc","ispanel":true,"description":"Returns the cursor color of a DTextEntry.","realm":"Client","rets":{"ret":{"text":"The color of the cursor as a .","name":"","type":"table","page":"Color"}}},"example":{"code":"local TextEntry = vgui.Create( \"DTextEntry\" )\nTextEntry:SetCursorColor( Color( 255, 0, 0, 255 ))\nPrintTable( TextEntry:GetCursorColor() )","output":"Prints the R, G, B and A of the cursor color."}},
{"function":{"name":"CheckNumeric","parent":"DTextEntry","type":"panelfunc","ispanel":true,"description":{"text":"Returns whether a string is numeric or not.\nAlways returns false if the  is set to false.","page":"DTextEntry:SetNumeric"},"realm":"Client","args":{"arg":{"text":"The string to check.","name":"strValue","type":"string"}},"rets":{"ret":{"text":"Whether the string is numeric or not.","name":"","type":"boolean"}}}},
{"function":{"name":"AllowInput","parent":"DTextEntry","type":"panelfunc","ispanel":true,"description":{"text":"Called whenever the value of the panel has been updated (whether by user input or otherwise).\n\nIt allows you to determine whether a user can modify the 's text.\n\nBy default, this only checks whether the panel disallows numeric characters, preventing it from being edited if the value contains any.\n\nThis is actually an engine hook that only works on  derived elements.","page":["TextEntry","TextEntry"]},"realm":"Client","file":{"text":"lua/vgui/dtextentry.lua","line":"297"},"args":{"arg":{"text":"The last character entered into the panel.","name":"char","type":"string"}},"rets":{"ret":{"text":"Return true to prevent the value from changing, false to allow it.","name":"","type":"boolean"}}},"example":{"description":"Prevents the user from editing the text entirely.","code":"local TextEntry = vgui.Create( \"DTextEntry\" )\nTextEntry.AllowInput = function( self, stringValue )\n\treturn true\nend","output":"The panel does not allow any alterations."}},
{"function":{"name":"SetRotation","parent":"DSprite","type":"panelfunc","ispanel":true,"description":"Sets the 2D rotation angle of the sprite, in the plane of the screen.","realm":"Client","args":{"arg":{"text":"The anti-clockwise rotation in degrees.","name":"ang","type":"number"}}}},
{"function":{"name":"SetMaterial","parent":"DSprite","type":"panelfunc","ispanel":true,"description":"Sets the source material for the sprite.","realm":"Client","args":{"arg":{"text":"The material to use. This will ideally be an [UnlitGeneric](https://developer.valvesoftware.com/wiki/UnlitGeneric).","name":"material","type":"IMaterial"}}}},
{"function":{"name":"SetHandle","parent":"DSprite","type":"panelfunc","ispanel":true,"description":"Seems to be an unused feature. Does nothing.","realm":"Client","args":{"arg":{"name":"vec","type":"Vector"}}}},
{"function":{"name":"SetColor","parent":"DSprite","type":"panelfunc","ispanel":true,"description":"Sets the color modifier for the sprite.","realm":"Client","args":{"arg":{"text":"The  to use.","name":"color","type":"table","page":"Global.Color"}}}},
{"function":{"name":"GetMaterial","parent":"DSprite","type":"panelfunc","ispanel":true,"description":"Gets the material the sprite is using.","realm":"Client","rets":{"ret":{"text":"The material in use.","name":"","type":"IMaterial"}}}},
{"function":{"name":"GetMaterial","parent":"DSprite","type":"panelfunc","ispanel":true,"description":"Gets the material the sprite is using.","realm":"Client","rets":{"ret":{"text":"The material in use.","name":"","type":"IMaterial"}}}},
{"function":{"name":"GetHandle","parent":"DSprite","type":"panelfunc","ispanel":true,"description":"No Description","realm":"Client","rets":{"ret":{"name":"","type":"Vector"}}}},
{"function":{"name":"GetColor","parent":"DSprite","type":"panelfunc","ispanel":true,"description":"Gets the color the sprite is using as a modifier.","realm":"Client","rets":{"ret":{"text":"The  being used.","name":"","type":"table","page":"Global.Color"}}}},
{"function":{"name":"SetTrapInside","parent":"DSlider","type":"panelfunc","ispanel":true,"description":{"text":"Appears to be non functioning, however is still used by panels such as .","deprecated":"","page":"DNumSlider"},"realm":"Client","args":{"arg":{"name":"trap","type":"boolean"}}}},
{"function":{"name":"SetTrapInside","parent":"DSlider","type":"panelfunc","ispanel":true,"description":{"text":"Appears to be non functioning, however is still used by panels such as .","deprecated":"","page":"DNumSlider"},"realm":"Client","args":{"arg":{"name":"trap","type":"boolean"}}}},
{"function":{"name":"SetSlideY","parent":"DSlider","type":"panelfunc","ispanel":true,"description":{"text":"Used to position the draggable panel of the slider on the Y axis.","internal":""},"realm":"Client","args":{"arg":{"text":"The value range seems to be from 0 to 1","name":"y","type":"number"}}}},
{"function":{"name":"SetSlideX","parent":"DSlider","type":"panelfunc","ispanel":true,"description":{"text":"Used to position the draggable panel of the slider on the X axis.","internal":""},"realm":"Client","args":{"arg":{"text":"The value range seems to be from 0 to 1","name":"x","type":"number"}}}},
{"function":{"name":"SetNotches","parent":"DSlider","type":"panelfunc","ispanel":true,"description":{"text":"Appears to be non functioning, however is still used by panels such as .","deprecated":"","page":"DNumSlider"},"realm":"Client","args":{"arg":{"name":"notches","type":"number"}}}},
{"function":{"name":"SetLockY","parent":"DSlider","type":"panelfunc","ispanel":true,"description":"Sets the lock on the Y axis. \n\nFor example the value 0.5 will lock the draggable panel to half the height of the slider's panel.","realm":"Client","args":{"arg":{"text":"Set to nil to reset lock.\n\nThe value range is from 0 to 1.","name":"lockY","type":"number","default":"nil"}}}},
{"function":{"name":"SetNumSlider","parent":"DSlider","type":"panelfunc","ispanel":true,"description":{"text":"Does nothing.","deprecated":""},"realm":"Client","args":{"arg":{"name":"slider","type":"any"}}}},
{"function":{"name":"SetLockX","parent":"DSlider","type":"panelfunc","ispanel":true,"description":"Sets the lock on the X axis. \n\nFor example the value 0.5 will lock the draggable panel to half the width of the slider's panel.","realm":"Client","args":{"arg":{"text":"Set to nil to reset lock.\n\nThe value range is from 0 to 1.","name":"lockX","type":"number","default":"nil"}}},"example":{"description":"Example of a slider that can be dragged on the X and Y axis.","code":"local frame = vgui.Create( \"DFrame\" )\nframe:SetSize( 500, 300 )\nframe:Center()\nframe:MakePopup()\n\nlocal Slider = vgui.Create( \"DSlider\", frame )\nSlider:SetPos( 50, 50 )\nSlider:SetSize( 100, 100 )\nSlider:SetLockX()\nSlider:SetLockY()"}},
{"function":{"name":"SetImageColor","parent":"DSlider","type":"panelfunc","ispanel":true,"description":{"text":"Does nothing.","deprecated":""},"realm":"Client"}},
{"function":{"name":"SetImage","parent":"DSlider","type":"panelfunc","ispanel":true,"description":{"text":"Does nothing.","deprecated":""},"realm":"Client"}},
{"function":{"name":"SetDragging","parent":"DSlider","type":"panelfunc","ispanel":true,"description":{"text":"Sets whether or not the slider is being dragged.","internal":""},"realm":"Client","args":{"arg":{"name":"dragging","type":"boolean"}}}},
{"function":{"name":"SetBackground","parent":"DSlider","type":"panelfunc","ispanel":true,"description":"Sets the background for the slider.","realm":"Client","args":{"arg":{"text":"Path to the image.","name":"path","type":"string"}}}},
{"function":{"name":"IsEditing","parent":"DSlider","type":"panelfunc","ispanel":true,"description":"Returns true if this element is being edited by the player.","realm":"Client","rets":{"ret":{"name":"","type":"boolean"}}}},
{"function":{"name":"GetTrapInside","parent":"DSlider","type":"panelfunc","ispanel":true,"description":{"text":"Appears to be non functioning, however is still used by panels such as .","deprecated":"","page":"DNumSlider"},"realm":"Client","rets":{"ret":{"name":"","type":"boolean"}}}},
{"function":{"name":"GetSlideY","parent":"DSlider","type":"panelfunc","ispanel":true,"description":{"text":"Returns the target position of the draggable \"knob\" panel of the slider on the Y axis.\n\nSet by .","page":"DSlider:SetSlideY"},"realm":"Client","rets":{"ret":{"text":"The value range seems to be from 0 to 1","name":"","type":"number"}}}},
{"function":{"name":"GetSlideX","parent":"DSlider","type":"panelfunc","ispanel":true,"description":{"text":"Returns the target position of the draggable \"knob\" panel of the slider on the X axis.\n\nSet by .","page":"DSlider:SetSlideX"},"realm":"Client","rets":{"ret":{"text":"The value range seems to be from 0 to 1","name":"","type":"number"}}}},
{"function":{"name":"GetNotches","parent":"DSlider","type":"panelfunc","ispanel":true,"description":{"text":"Appears to be non functioning, however is still used by panels such as .","deprecated":"","page":"DNumSlider"},"realm":"Client","rets":{"ret":{"name":"","type":"number"}}}},
{"function":{"name":"GetNotches","parent":"DSlider","type":"panelfunc","ispanel":true,"description":{"text":"Appears to be non functioning, however is still used by panels such as .","deprecated":"","page":"DNumSlider"},"realm":"Client","rets":{"ret":{"name":"","type":"number"}}}},
{"function":{"name":"GetLockY","parent":"DSlider","type":"panelfunc","ispanel":true,"description":{"text":"Returns the draggable panel's lock on the Y axis.\n\nSee  for more info.","page":"DSlider:SetLockY"},"realm":"Client","rets":{"ret":{"name":"","type":"number"}}}},
{"function":{"name":"GetLockX","parent":"DSlider","type":"panelfunc","ispanel":true,"description":{"text":"Returns the draggable panel's lock on the X axis.\n\nSee  for more info.","page":"DSlider:SetLockX"},"realm":"Client","rets":{"ret":{"name":"","type":"number"}}}},
{"function":{"name":"GetDragging","parent":"DSlider","type":"panelfunc","ispanel":true,"description":{"text":"Identical to","page":"DSlider:IsEditing"},"realm":"Client","rets":{"ret":{"name":"","type":"boolean"}}}},
{"function":{"name":"GetDragging","parent":"DSlider","type":"panelfunc","ispanel":true,"description":{"text":"Identical to","page":"DSlider:IsEditing"},"realm":"Client","rets":{"ret":{"name":"","type":"boolean"}}}},
{"function":{"name":"SetColor","parent":"DShape","type":"panelfunc","ispanel":true,"description":"Sets the color to display the shape with.","realm":"Client","args":{"arg":{"text":"The","name":"clr","type":"table","page":"Color"}}}},
{"function":{"name":"SetBorderColor","parent":"DShape","type":"panelfunc","ispanel":true,"description":"Sets the border color of the shape.\n\nCurrently does nothing.","realm":"Client","args":{"arg":{"text":"The desired border color.\n\nSee","name":"clr","type":"table","page":"Color"}}}},
{"function":{"name":"GetType","parent":"DShape","type":"panelfunc","ispanel":true,"description":{"text":"Returns the current type of shape this panel is set to display.\n\nSee .","page":"DShape:SetType"},"realm":"Client","rets":{"ret":{"name":"","type":"string"}}}},
{"function":{"name":"GetColor","parent":"DShape","type":"panelfunc","ispanel":true,"description":"Returns the color set to display the shape with.","realm":"Client","rets":{"ret":{"text":"The","name":"","type":"table","page":"Color"}}}},
{"function":{"name":"GetBorderColor","parent":"DShape","type":"panelfunc","ispanel":true,"description":{"text":"Returns the current type of shape this panel is set to display.\n\nSee .","page":"DShape:SetBorderColor"},"realm":"Client","rets":{"ret":{"text":"The border color \n\nSee","name":"","type":"table","page":"Color"}}}},
{"function":{"name":"SetPadding","parent":"DScrollPanel","type":"panelfunc","ispanel":true,"description":"Sets the DScrollPanel's padding. This function appears to be unused.","realm":"Client","args":{"arg":{"text":"The padding of the DScrollPanel.","name":"padding","type":"number"}}}},
{"function":{"name":"SetCanvas","parent":"DScrollPanel","type":"panelfunc","ispanel":true,"description":{"text":"Sets the canvas of the DScrollPanel.","internal":""},"realm":"Client","args":{"arg":{"text":"The new canvas","name":"canvas","type":"Panel"}}}},
{"function":{"name":"SetCanvas","parent":"DScrollPanel","type":"panelfunc","ispanel":true,"description":{"text":"Sets the canvas of the DScrollPanel.","internal":""},"realm":"Client","args":{"arg":{"text":"The new canvas","name":"canvas","type":"Panel"}}}},
{"function":{"name":"Rebuild","parent":"DScrollPanel","type":"panelfunc","ispanel":true,"description":"","realm":"Client"}},
{"function":{"name":"InnerWidth","parent":"DScrollPanel","type":"panelfunc","ispanel":true,"description":"Return the width of the DScrollPanel's canvas.","realm":"Client","rets":{"ret":{"text":"The width of the DScrollPanel's canvas","name":"","type":"number"}}}},
{"function":{"name":"GetVBar","parent":"DScrollPanel","type":"panelfunc","ispanel":true,"description":"Returns the vertical scroll bar of the panel.","realm":"Client","rets":{"ret":{"text":"The .","name":"","type":"Panel","page":"DVScrollBar"}}},"example":{"description":"Example of styling a scrollbar","code":"local DFrame = vgui.Create(\"DFrame\")\nDFrame:SetSize(500, 500)\nDFrame:Center()\nDFrame:MakePopup()\nDFrame:SetTitle(\"Scrollbar Example\")\nfunction DFrame:Paint(w, h)\n\tdraw.RoundedBox(0, 0, 0, w, h, Color(0, 100, 100))\nend\n\nlocal DScrollPanel = vgui.Create(\"DScrollPanel\", DFrame)\nDScrollPanel:SetSize(400, 250)\nDScrollPanel:Center()\n\nlocal sbar = DScrollPanel:GetVBar()\nfunction sbar:Paint(w, h)\n\tdraw.RoundedBox(0, 0, 0, w, h, Color(0, 0, 0, 100))\nend\nfunction sbar.btnUp:Paint(w, h)\n\tdraw.RoundedBox(0, 0, 0, w, h, Color(200, 100, 0))\nend\nfunction sbar.btnDown:Paint(w, h)\n\tdraw.RoundedBox(0, 0, 0, w, h, Color(200, 100, 0))\nend\nfunction sbar.btnGrip:Paint(w, h)\n\tdraw.RoundedBox(0, 0, 0, w, h, Color(100, 200, 0))\nend\n\nlocal str = \"\"\nfor i = 1, 50 do str = str .. \"more space!\\n\" end\n\nlocal DLabel = vgui.Create(\"DLabel\", DScrollPanel)\nDLabel:SetText(str)\nDLabel:Center()\nDLabel:SizeToContents()","output":{"image":{"src":"scrollbar_style_example.png"}}}},
{"function":{"name":"GetPadding","parent":"DScrollPanel","type":"panelfunc","ispanel":true,"description":"Gets the DScrollPanels padding","realm":"Client","rets":{"ret":{"text":"DScrollPanels padding","name":"","type":"number"}}}},
{"function":{"name":"GetCanvas","parent":"DScrollPanel","type":"panelfunc","ispanel":true,"description":"Returns the canvas ( The panel all child panels are parented to ) of the DScrollPanel.","realm":"Client","rets":{"ret":{"text":"The canvas","name":"","type":"Panel"}}}},
{"function":{"name":"AddItem","parent":"DScrollPanel","type":"panelfunc","ispanel":true,"description":"Parents the passed panel to the DScrollPanel's canvas.","realm":"Client","args":{"arg":{"text":"The panel to add.","name":"pnl","type":"Panel"}}}},
{"function":{"name":"OnChange","parent":"DRGBPicker","type":"panelfunc","ispanel":true,"description":"Function which is called when the cursor is clicked and/or moved on the color picker. Meant to be overridden.","realm":"Client","args":{"arg":{"text":"The color that is selected on the color picker ( form).","name":"col","type":"table","page":"Color"}}},"example":{"description":"Creates a color picker which controls the color of a ball image.","code":"-- Frame\nMainFrame = vgui.Create(\"DFrame\")\nMainFrame:SetSize(200, 200)\nMainFrame:Center()\nMainFrame:SetTitle(\"Pick a color\")\n\n-- Image of a ball\nlocal ball_img = vgui.Create(\"DImage\", MainFrame)\nball_img:SetPos(20, 45)\nball_img:SetSize(128, 128)\n\nball_img:SetImage(\"sprites/sent_ball\")\n\n-- Vertical color picker\nlocal color_picker = vgui.Create(\"DRGBPicker\", MainFrame)\ncolor_picker:SetPos(165, 30)\ncolor_picker:SetSize(25, 150)\n\nfunction color_picker:OnChange(col)\n\n\tball_img:SetImageColor(col)\n\t\nend","output":{"image":{"src":"DModelPanel_OnChange_example1.gif"}}}},
{"function":{"name":"GetRGB","parent":"DRGBPicker","type":"panelfunc","ispanel":true,"description":"Returns the color currently set on the color picker.","realm":"Client","rets":{"ret":{"text":"The color set on the color picker, see .","name":"","type":"table","page":"Color"}}},"example":{"description":"Prints out the default set color.","code":"local color_picker = vgui.Create(\"DRGBPicker\")\ncolor_picker:SetSize(25, 150)\ncolor_picker:Center()\n\nprint(color_picker:GetRGB())","output":"```\n255 255 255 255\n```"}},
{"function":{"name":"SetRGB","parent":"DRGBPicker","type":"panelfunc","ispanel":true,"description":{"text":"Sets the color stored in the color picker.","note":{"text":"This function is meant to be called internally and will not update the position of the color picker line or call","page":"DRGBPicker:OnChange"}},"realm":"Client","args":{"arg":{"text":"The color to set, see .","name":"color","type":"table","page":"Color"}}},"example":{"description":"Defines a new function SetColor which will allow proper modification of the color picker directly.","code":"-- Background panel\nBGPanel = vgui.Create(\"DPanel\")\nBGPanel:SetSize(100, 200)\nBGPanel:Center()\n\n-- Color picker\nlocal color_picker = vgui.Create(\"DRGBPicker\", BGPanel)\ncolor_picker:SetSize(30, 150)\ncolor_picker:Center()\n\n-- Custom function that sets color picker position and updates color\nfunction color_picker:SetColor(col)\n\n\t-- Get hue\n\tlocal h = ColorToHSV(col)\n\t\n\t-- Maximize saturation and vibrance\n\tcol = HSVToColor(h, 1, 1)\n\n\t-- Set color var\n\tself:SetRGB(col)\n\t\n\t-- Calculate position of color picker line\n\tlocal _, height = self:GetSize()\n\tself.LastY = height*(1-(h/360))\n\t\n\t-- Register that a change has occured\n\tself:OnChange(self:GetRGB())\n\nend\n\n-- Update background color\nfunction color_picker:OnChange(col)\n\n\tBGPanel:SetBackgroundColor(col)\n\nend\n\n-- Set to random color every second for 10 seconds\ntimer.Create(\"RandomizeColorPicker\", 1, 10, function ()\n\n\tcolor_picker:SetColor(Color(math.random(0, 255), math.random(0, 255), math.random(0, 255), 255))\n\t\nend)","output":{"image":{"src":"DRGBPicker_SetRGB_example1.gif"}}}},
{"function":{"name":"GetPosColor","parent":"DRGBPicker","type":"panelfunc","ispanel":true,"description":{"text":"Returns the color at given position on the internal texture.","internal":""},"realm":"Client","args":{"arg":[{"text":"The X coordinate on the texture to get the color from","name":"x","type":"number"},{"text":"The Y coordinate on the texture to get the color from","name":"y","type":"number"}]},"rets":{"ret":[{"name":"","type":"table","page":"Color"},{"text":"The X-coordinate clamped to the texture's width.","name":"","type":"number"},{"text":"The Y-coordinate clamped to the texture's height.","name":"","type":"number"}]}}},
{"function":{"name":"SwitchToName","parent":"DPropertySheet","type":"panelfunc","ispanel":true,"description":"Switches the active tab to a tab with given name.","realm":"Client","args":{"arg":{"text":"Case sensitive name of the tab.","name":"name","type":"string"}}}},
{"function":{"name":"SetupCloseButton","parent":"DPropertySheet","type":"panelfunc","ispanel":true,"description":{"text":"Creates a close button on the right side of the  that will run the given callback function when pressed.","page":"DPropertySheet"},"realm":"Client","args":{"arg":{"text":"Callback function to be called when the close button is pressed.","name":"func","type":"function"}}}},
{"function":{"name":"SizeToContentWidth","parent":"DPropertySheet","type":"panelfunc","ispanel":true,"description":{"text":"Sets the width of the  to fit the contents of all of the tabs.","page":"DPropertySheet"},"realm":"Client"}},
{"function":{"name":"SetPadding","parent":"DPropertySheet","type":"panelfunc","ispanel":true,"description":"Sets the padding from parent panel to children panel.","realm":"Client","args":{"arg":{"text":"Amount of padding","name":"padding","type":"number","default":"8"}}}},
{"function":{"name":"SetShowIcons","parent":"DPropertySheet","type":"panelfunc","ispanel":true,"description":{"text":"Does nothing.","deprecated":""},"realm":"Client","args":{"arg":{"name":"show","type":"boolean"}}}},
{"function":{"name":"SetFadeTime","parent":"DPropertySheet","type":"panelfunc","ispanel":true,"description":"Sets the amount of time (in seconds) it takes to fade between tabs.","realm":"Client","args":{"arg":{"text":"The amount of time it takes (in seconds) to fade between tabs.","name":"time","type":"number","default":"0.1"}}},"example":[{"description":"Sets the fade time to 0.5 seconds (500 milliseconds)","code":"DPropertySheet.SetFadeTime(0.5)"},{"description":"Sets the fade time to 2 seconds (2000 milliseconds)","code":"DPropertySheet.SetFadeTime(2)"}]},
{"function":{"name":"SetActiveTab","parent":"DPropertySheet","type":"panelfunc","ispanel":true,"description":{"text":"Sets the active tab of the .","page":"DPropertySheet"},"realm":"Client","args":{"arg":{"text":"The  to set active.\n\nSee","name":"tab","type":"Panel","page":["DTab","DPropertySheet:GetItems"]}}},"example":{"description":"Example of how you'd create and use this panel and set active tab.","code":"local MainFrame = vgui.Create( \"DFrame\" )\nMainFrame:SetSize( 500, 300 )\nMainFrame:Center()\nMainFrame:MakePopup()\n\nlocal MainSheet = vgui.Create( \"DPropertySheet\", MainFrame )\nMainSheet:Dock( FILL )\n\nlocal First_Panel = vgui.Create( \"DPanel\", MainSheet )\nFirst_Panel.Paint = function( self, w, h ) draw.RoundedBox( 4, 0, 0, w, h, Color( 0, 128, 255, self:GetAlpha() ) ) end\nMainSheet:AddSheet( \"test\", First_Panel, \"icon16/cross.png\" )\n\nlocal Second_Panel = vgui.Create( \"DPanel\", MainSheet )\nSecond_Panel.Paint = function( self, w, h ) draw.RoundedBox( 4, 0, 0, w, h, Color( 255, 128, 0, self:GetAlpha() ) ) end\nMainSheet:AddSheet( \"test 2\", Second_Panel, \"icon16/tick.png\" )\n\nMainSheet:SetActiveTab( MainSheet:GetItems()[2].Tab ) --2 is a representation of the second sheet"}},
{"function":{"name":"GetShowIcons","parent":"DPropertySheet","type":"panelfunc","ispanel":true,"description":{"text":"Returns whatever value was set by .","deprecated":"","page":"DPropertySheet:SetShowIcons"},"realm":"Client","rets":{"ret":{"name":"","type":"boolean"}}}},
{"function":{"name":"OnActiveTabChanged","parent":"DPropertySheet","type":"panelfunc","ispanel":true,"description":"Called when a player switches the tabs","realm":"Client","args":{"arg":[{"text":"The previously active","name":"old","type":"Panel","page":"DTab"},{"text":"The newly active","name":"new","type":"Panel","page":"DTab"}]}}},
{"function":{"name":"GetPadding","parent":"DPropertySheet","type":"panelfunc","ispanel":true,"description":"Gets the padding from the parent panel to child panels.","realm":"Client","rets":{"ret":{"text":"Padding","name":"","type":"number"}}}},
{"function":{"name":"GetItems","parent":"DPropertySheet","type":"panelfunc","ispanel":true,"description":{"text":"Returns a list of all tabs of this .","page":"DPropertySheet"},"realm":"Client","rets":{"ret":{"text":"A table of tables.\n\nEach table contains 3 key-value pairs:\n\n\n Name - The name of the tab.\n\n\n Tab - The \n\n\n Panel - The","name":"","type":"table","page":["string","Panel","DTab associated with the tab","Panel","Panel associated with the tab"]}}}},
{"function":{"name":"GetFadeTime","parent":"DPropertySheet","type":"panelfunc","ispanel":true,"description":{"text":"Returns the amount of time (in seconds) it takes to fade between tabs.\n\nSet by","page":"DPropertySheet:SetFadeTime"},"realm":"Client","rets":{"ret":{"text":"The amount of time (in seconds) it takes to fade between tabs.","name":"","type":"number"}}}},
{"function":{"name":"CrossFade","parent":"DPropertySheet","type":"panelfunc","ispanel":true,"description":{"text":"Internal function that handles the cross fade animation when the player switches tabs.","internal":""},"realm":"Client","args":{"arg":[{"name":"anim","type":"table"},{"name":"delta","type":"number"},{"name":"data","type":"table"}]}}},
{"function":{"name":"CrossFade","parent":"DPropertySheet","type":"panelfunc","ispanel":true,"description":{"text":"Internal function that handles the cross fade animation when the player switches tabs.","internal":""},"realm":"Client","args":{"arg":[{"name":"anim","type":"table"},{"name":"delta","type":"number"},{"name":"data","type":"table"}]}}},
{"function":{"name":"CloseTab","parent":"DPropertySheet","type":"panelfunc","ispanel":true,"description":"Removes tab and/or panel from the parent DPropertySheet.","realm":"Client","args":{"arg":[{"text":"The  of the sheet from .\n\nSee .","name":"tab","type":"Panel","page":["DTab","DPropertySheet","DPropertySheet:GetItems"]},{"text":"Set to true to remove the associated panel object as well.","name":"removePanel","type":"boolean"}]},"rets":{"ret":{"text":"The panel of the tab.","name":"","type":"Panel"}}},"example":{"description":"Example of how you'd create and use this panel and close unnecessary sheets.","code":"local MainFrame = vgui.Create( \"DFrame\" )\nMainFrame:SetSize( 500, 300 )\nMainFrame:Center()\nMainFrame:MakePopup()\n\nlocal MainSheet = vgui.Create( \"DPropertySheet\", MainFrame )\nMainSheet:Dock( FILL )\n\nlocal First_Panel = vgui.Create( \"DPanel\", MainSheet )\nFirst_Panel.Paint = function( self, w, h ) draw.RoundedBox( 4, 0, 0, w, h, Color( 255, 128, 0, self:GetAlpha() ) ) end\nMainSheet:AddSheet( \"Users Page\", First_Panel, \"icon16/user.png\" )\n\nlocal Second_Panel = vgui.Create( \"DPanel\", MainSheet )\nSecond_Panel.Paint = function( self, w, h ) draw.RoundedBox( 4, 0, 0, w, h, Color( 0, 128, 255, self:GetAlpha() ) ) end\nMainSheet:AddSheet( \"Admins Page\", Second_Panel, \"icon16/lightning.png\" )\n\nif LocalPlayer():IsAdmin() then\n\tMainSheet:CloseTab( MainSheet:GetItems()[1].Tab ) --1 is a representation of the first sheet\nelse\n\tMainSheet:CloseTab( MainSheet:GetItems()[2].Tab ) --2 is a representation of the second sheet\nend"}},
{"function":{"name":"Setup","parent":"DProperty_VectorColor","type":"panelfunc","ispanel":true,"description":{"text":"Called by a property row to setup a color selection control.","internal":""},"realm":"Client","args":{"arg":[{"name":"prop","type":"string","default":"VectorColor"},{"text":"A table of settings. None of the values are used for this property. See .","name":"settings","type":"table","page":"Editable Entities"}]}}},
{"function":{"name":"SetValue","parent":"DProperty_VectorColor","type":"panelfunc","ispanel":true,"description":"Sets the color value of the property.","realm":"Client","args":{"arg":{"text":"Sets the color to use in a .","name":"color","type":"Vector","page":"DProperty_VectorColor"}}},"example":{"description":"Setup a color selection control with a custom default color.","code":"local color = DP:CreateRow( \"Category\", \"Select Color\" )\ncolor:Setup( \"VectorColor\", {} )\ncolor:SetValue( Vector( 0.39, 1, 1 ) )"}},
{"function":{"name":"AddSheet","parent":"DPropertySheet","type":"panelfunc","ispanel":true,"description":"Adds a new tab.","realm":"Client","args":{"arg":[{"text":"Name of the tab","name":"name","type":"string"},{"text":"Panel to be used as contents of the tab. This normally should be a","name":"pnl","type":"Panel","page":"DPanel"},{"text":"Icon for the tab. This will ideally be a , but any material name can be used.","name":"icon","type":"string","default":"nil","page":",silkiconSilkicons"},{"text":"Should  try to fill itself with given panel horizontally.","name":"noStretchX","type":"boolean","default":"false","page":"DPropertySheet"},{"text":"Should  try to fill itself with given panel vertically.","name":"noStretchY","type":"boolean","default":"false","page":"DPropertySheet"},{"text":"Tooltip for the tab when user hovers over it with his cursor","name":"tooltip","type":"string","default":"nil"}]},"rets":{"ret":{"text":"A table containing the following keys:\n*  Tab - The created \n*  Name - Name of the created tab\n*  Panel - The contents panel of the tab","name":"","type":"table","page":["Panel","DTab.","string","Panel"]}}},"example":{"code":"local frame = vgui.Create(\"DFrame\")\nframe:SetSize( ScrW() / 2, ScrH() / 2 )\nframe:SetTitle( \"Test Frame\" )\nframe:MakePopup()\nframe:Center()\n\nlocal tabs = vgui.Create( \"DPropertySheet\", frame )\ntabs:Dock( FILL )\n\nlocal tab1panel = vgui.Create( \"DPanel\" )\n\nlocal SheetItem = vgui.Create( \"DButton\", tab1panel )\nSheetItem:SetText( \"Suicide\" )\nSheetItem:SetConsoleCommand( \"kill\" )\n \ntabs:AddSheet( \"Tab 1\", tab1panel, \"icon16/user.png\", false, false, \"Description of first tab\")"}},
{"function":{"name":"SetSelected","parent":"DProperty_Combo","type":"panelfunc","ispanel":true,"description":"Set the selected option.","realm":"Client","args":{"arg":{"text":"Id of the choice to be selected.","name":"Id","type":"number"}}},"example":{"description":"Set the second option selected.","code":"local choice = DP:CreateRow( \"Choices\", \"Hello world\" )\nchoice:Setup( \"Combo\" )\nchoice:AddChoice( \"Choice #1\", {} )\nchoice:AddChoice( \"Choice #2\", 8 )\nchoice:AddChoice( \"Choice #3\", \"Hello world\", true )\nchoice:SetSelected( 2 ) -- Even if \"Choice #3\" is selected by default, \"Choice #2\" will be selected."}},
{"function":{"name":"Setup","parent":"DProperty_Combo","type":"panelfunc","ispanel":true,"description":"Sets up a combo control.","realm":"Client","args":{"arg":[{"text":"The name of DProperty sub control to add.","name":"prop","type":"string","default":"Combo"},{"text":"Data to use to set up the combo box control.\n\nStructure:\n*  text - The default label for this combo box\n*  values - The values to add to the combo box","name":"data","type":"table","default":"{ text = 'Select...' }","page":["string","table"]}]}},"example":{"description":"Setup a Combo control with a custom default text and two options.","code":"local Combo = DP:CreateRow( \"Catergory\", \"Hello World\" )\nCombo:Setup( \"Combo\", {\n\ttext = \"Select me!\",\n\tvalues = {\n\t\t[ \"Label 1\" ] = \"data 1\",\n\t\t[ \"Label 2\" ] = 2,\n\t}\n} )"}},
{"function":{"name":"DataChanged","parent":"DProperty_Combo","type":"panelfunc","ispanel":true,"description":"Called after the user selects a new value.","realm":"Client","args":{"arg":{"text":"The new data that was selected.","name":"data","type":"any"}}},"example":{"description":"Click on the \"Table\" choice.","code":"local choice = DP:CreateRow( \"Choices\", \"Combo #2: Custom default text\" )\nchoice:Setup( \"Combo\", \"Select type...\" )\nchoice:AddChoice( \"Table\", {} )\nchoice:AddChoice( \"Function\", function() end )\nchoice:AddChoice( \"String\", \"Hello world\" )\nchoice.DataChanged = function( self, data )\n\n   print( \"You selected: \", data )\n\nend","output":"```\nYou selected:\ttable: 0x8e05f3b8\n```"}},
{"function":{"name":"AddChoice","parent":"DProperty_Combo","type":"panelfunc","ispanel":true,"description":"Add a choice to your combo control.","realm":"Client","args":{"arg":[{"text":"Shown text.","name":"Text","type":"string"},{"text":"Stored Data.","name":"data","type":"any"},{"text":"Select this element?","name":"select","type":"boolean","default":"false"}]}},"example":{"description":"Set the \"I am selected\" option selected.","code":"local choice = DP:CreateRow( \"Choices\", \"Hello world\" )\nchoice:Setup( \"Combo\" )\nchoice:AddChoice( \"I am a choice\", {} )\nchoice:AddChoice( \"I am selected\", 8, true )\nchoice:AddChoice( \"I am not selected\", \"Hello world\" )"}},
{"function":{"name":"GetCategory","parent":"DProperties","type":"panelfunc","ispanel":true,"description":{"text":"Returns (or creates) a category of properties.\n\nSee  for adding actual properties.","internal":"","page":"DProperties:CreateRow"},"realm":"Client","args":{"arg":[{"text":"Name of the category","name":"name","type":"string"},{"text":"Create a new category if it doesn't exist.","name":"create","type":"boolean"}]},"rets":{"ret":{"text":"An internal panel.","name":"","type":"Panel"}}}},
{"function":{"name":"GetCanvas","parent":"DProperties","type":"panelfunc","ispanel":true,"description":{"text":"Returns the  all the properties panels are attached to.","page":"DScrollPanel"},"realm":"Client","rets":{"ret":{"text":"A  canvas","name":"","type":"Panel","page":"DScrollPanel"}}}},
{"function":{"name":"CreateRow","parent":"DProperties","type":"panelfunc","ispanel":true,"description":"Creates a row in the properties panel.","realm":"Client","args":{"arg":[{"text":"The category to list this row under","name":"category","type":"string"},{"text":"The label of this row","name":"name","type":"string"}]},"rets":{"ret":{"text":"An internal Row panel.","name":"","type":"Panel"}}}},
{"function":{"name":"SetFraction","parent":"DProgress","type":"panelfunc","ispanel":true,"description":"Sets the fraction of the progress bar. 0 is 0% and 1 is 100%.","realm":"Client","args":{"arg":{"text":"Fraction of the progress bar. Range is 0 to 1 (0% to 100%).","name":"fraction","type":"number"}}}},
{"function":{"name":"GetFraction","parent":"DProgress","type":"panelfunc","ispanel":true,"description":"Returns the progress bar's fraction. 0 is 0% and 1 is 100%.","realm":"Client","rets":{"ret":{"text":"Current fraction of the progress bar.","name":"","type":"number"}}}},
{"function":{"name":"SetColor","parent":"DPanelOverlay","type":"panelfunc","ispanel":true,"description":{"text":"Sets the border color of the .","page":"DPanelOverlay"},"realm":"Client","args":{"arg":{"text":"The color to set. Uses the .","name":"color","type":"table","page":"Color"}}}},
{"function":{"name":"SetType","parent":"DPanelOverlay","type":"panelfunc","ispanel":true,"description":{"text":"Sets the type of the .","page":"DPanelOverlay"},"realm":"Client","args":{"arg":{"text":"The type to set.\n\nPossible value are:\n* 1 - 8px corners of given color\n* 2 - 4px corners of given type\n* 3 - 2 top? corners of hardcoded color, 2 other corners of given color","name":"type","type":"number"}}}},
{"function":{"name":"PaintInnerCorners","parent":"DPanelOverlay","type":"panelfunc","ispanel":true,"description":{"text":"Used internally by the panel for types 1 and 2.","internal":""},"realm":"Client","args":{"arg":{"name":"size","type":"number"}}}},
{"function":{"name":"GetColor","parent":"DPanelOverlay","type":"panelfunc","ispanel":true,"description":{"text":"Returns the border color of the  set by .","page":["DPanelOverlay","DPanelOverlay:SetColor"]},"realm":"Client","rets":{"ret":{"text":"The set color. Uses the .","name":"","type":"table","page":"Color"}}}},
{"function":{"name":"PaintDifferentColours","parent":"DPanelOverlay","type":"panelfunc","ispanel":true,"description":{"text":"Used internally by the panel for type 3.","internal":""},"realm":"Client","args":{"arg":[{"name":"cola","type":"table"},{"name":"colb","type":"table"},{"name":"colc","type":"table"},{"name":"cold","type":"table"},{"name":"size","type":"number"}]}}},
{"function":{"name":"GetType","parent":"DPanelOverlay","type":"panelfunc","ispanel":true,"description":{"text":"Returns the type of the  set by .","page":["DPanelOverlay","DPanelOverlay:SetType"]},"realm":"Client","rets":{"ret":{"text":"The set type.","name":"","type":"number"}}}},
{"function":{"name":"SetSpacing","parent":"DPanelList","type":"panelfunc","ispanel":true,"description":"Sets distance between list items","realm":"Client","args":{"arg":{"text":"Distance between panels","name":"Distance","type":"number"}}}},
{"function":{"name":"SetPadding","parent":"DPanelList","type":"panelfunc","ispanel":true,"description":"Sets the offset of the lists items from the panel borders","realm":"Client","args":{"arg":{"text":"Offset from panel borders","name":"Offset","type":"number"}}}},
{"function":{"name":"InsertAtTop","parent":"DPanelList","type":"panelfunc","ispanel":true,"description":"","realm":"Client","args":{"arg":[{"text":"The panel to insert","name":"insert","type":"Panel"},{"text":"If set to \"ownline\", no other panels will be placed to the left or right of the panel we are inserting","name":"strLineState","type":"string"}]}}},
{"function":{"name":"GetSpacing","parent":"DPanelList","type":"panelfunc","ispanel":true,"description":{"text":"Returns distance between list items set by","page":"DPanelList:SetSpacing"},"realm":"Client","rets":{"ret":{"text":"Distance between panels","name":"","type":"number"}}}},
{"function":{"name":"GetPadding","parent":"DPanelList","type":"panelfunc","ispanel":true,"description":{"text":"Returns offset of list items from the panel borders set by","page":"DPanelList:SetPadding"},"realm":"Client","rets":{"ret":{"text":"Offset from panel borders","name":"","type":"number"}}}},
{"function":{"name":"GetItems","parent":"DPanelList","type":"panelfunc","ispanel":true,"description":{"text":"Returns all panels has added by","page":"DPanelList:AddItem"},"realm":"Client","rets":{"ret":{"text":"A table of panels used as items of .","name":"","type":"table","page":"DPanelList"}}}},
{"function":{"name":"EnableVerticalScrollbar","parent":"DPanelList","type":"panelfunc","ispanel":true,"description":"Enables/creates the vertical scroll bar so that the panel list can be scrolled through.","realm":"Client"}},
{"function":{"name":"CleanList","parent":"DPanelList","type":"panelfunc","ispanel":true,"description":"Removes all items.","realm":"Client"}},
{"function":{"name":"AddItem","parent":"DPanelList","type":"panelfunc","ispanel":true,"description":{"text":"Adds a existing panel to the end of .","page":"DPanelList"},"realm":"Client","args":{"arg":[{"text":"Panel to be used as element of list","name":"pnl","type":"Panel"},{"text":"If set to \"ownline\", the item will take its own entire line.","name":"state","type":"string","default":"nil"}]}}},
{"function":{"name":"SetPaintBackground","parent":"DPanel","type":"panelfunc","ispanel":true,"description":"Sets whether or not to paint/draw the panel background.","realm":"Client","args":{"arg":{"text":"True to show the panel's background, false to hide it.","name":"paint","type":"boolean"}}}},
{"function":{"name":"SetDisabled","parent":"DPanel","type":"panelfunc","ispanel":true,"description":"Sets whether or not to disable the panel.","realm":"Client","args":{"arg":{"text":"True to disable the panel (mouse input disabled and background alpha set to 75), false to enable it (mouse input enabled and background alpha set to 255).","name":"disabled","type":"boolean"}}}},
{"function":{"name":"SetDrawBackground","parent":"DPanel","type":"panelfunc","ispanel":true,"description":{"text":"Sets whether or not to draw the panel background. Alias of .","deprecated":{"text":"You should use  instead.","page":"DPanel:SetPaintBackground"},"page":"DPanel:SetPaintBackground"},"realm":"Client","args":{"arg":{"text":"True to show the panel's background, false to hide it.","name":"draw","type":"boolean"}}}},
{"function":{"name":"SetBackgroundColor","parent":"DPanel","type":"panelfunc","ispanel":true,"description":"Sets the background color of the panel.","realm":"Client","args":{"arg":{"text":"The background color.","name":"color","type":"table"}}},"example":{"description":"Creates two empty panels with their background colors set to red and blue team colors.","code":"COLOR_TEAM_RED = Color(255, 64, 64, 255)\nCOLOR_TEAM_BLUE = Color(153, 204, 255, 255)\n\nBGPanel1 = vgui.Create(\"DPanel\")\nBGPanel1:SetPos(20, 20)\nBGPanel1:SetSize(200, 200)\nBGPanel1:SetBackgroundColor(COLOR_TEAM_RED)\n\t\t\nBGPanel2 = vgui.Create(\"DPanel\")\nBGPanel2:SetPos(220, 20)\nBGPanel2:SetSize(200, 200)\nBGPanel2:SetBackgroundColor(COLOR_TEAM_BLUE)","output":{"image":{"src":"DPanel_SetBackgroundColor_example1.png"}}}},
{"function":{"name":"GetPaintBackground","parent":"DPanel","type":"panelfunc","ispanel":true,"description":"Returns whether or not the panel background is being drawn.","realm":"Client","rets":{"ret":{"text":"True if the panel background is drawn, false otherwise.","name":"","type":"boolean"}}}},
{"function":{"name":"GetDrawBackground","parent":"DPanel","type":"panelfunc","ispanel":true,"description":{"text":"Returns whether or not the panel background is being drawn. Alias of .","deprecated":{"text":"You should use  instead.","page":"DPanel:GetPaintBackground"},"page":"DPanel:GetPaintBackground"},"realm":"Client","rets":{"ret":{"text":"True if the panel background is drawn, false otherwise.","name":"","type":"boolean"}}}},
{"function":{"name":"GetDisabled","parent":"DPanel","type":"panelfunc","ispanel":true,"description":"Returns whether or not the panel is disabled.","realm":"Client","rets":{"ret":{"text":"True if the panel is disabled (mouse input disabled and background alpha set to 75), false if its enabled (mouse input enabled and background alpha set to 255).","name":"","type":"boolean"}}}},
{"function":{"name":"GetBackgroundColor","parent":"DPanel","type":"panelfunc","ispanel":true,"description":{"text":"Returns the panel's background color.","note":"By default this returns **nil** even though the default background color is white"},"realm":"Client","rets":{"ret":{"text":"Color of the panel's background.","name":"","type":"table"}}},"example":{"description":"Prints out the default panel background color.","code":"BGPanel = vgui.Create(\"DPanel\")\nBGPanel:SetPos(20, 20)\nBGPanel:SetSize(200, 200)\n\nprint(BGPanel:GetBackgroundColor())","output":"nil"}},
{"function":{"name":"ValueChanged","parent":"DNumSlider","type":"panelfunc","ispanel":true,"description":{"text":"Called when the value has been changed. This will also be called when the user manually changes the value through the text panel.\n\nThis is an internal function. Override  instead.","internal":"","page":"DNumSlider:OnValueChanged"},"realm":"Client","args":{"arg":{"text":"The value the slider has been changed to.","name":"value","type":"number"}}}},
{"function":{"name":"UpdateNotches","parent":"DNumSlider","type":"panelfunc","ispanel":true,"description":{"internal":""},"realm":"Client"}},
{"function":{"name":"TranslateSliderValues","parent":"DNumSlider","type":"panelfunc","ispanel":true,"description":{"internal":""},"realm":"Client","args":{"arg":[{"name":"x","type":"number"},{"name":"y","type":"number"}]},"rets":{"ret":[{"name":"","type":"number"},{"text":"The second passed argument.","name":"","type":"number"}]}}},
{"function":{"name":"SetValue","parent":"DNumSlider","type":"panelfunc","ispanel":true,"description":{"text":"Sets the value of the .","page":"DNumSlider"},"realm":"Client","args":{"arg":{"text":"The value to set.","name":"val","type":"number"}}}},
{"function":{"name":"SetMinMax","parent":"DNumSlider","type":"panelfunc","ispanel":true,"description":"Sets the minimum and the maximum value of the slider.","realm":"Client","args":{"arg":[{"text":"The minimum value of the slider.","name":"min","type":"number"},{"text":"The maximum value of the slider.","name":"max","type":"number"}]}}},
{"function":{"name":"SetMin","parent":"DNumSlider","type":"panelfunc","ispanel":true,"description":"Sets the minimum value for the slider","realm":"Client","args":{"arg":{"text":"The value to set as minimum for the slider.","name":"min","type":"number"}}},"example":{"description":"An example usage of the function","code":"--This creates the frame.\nlocal Frame = vgui.Create( \"DFrame\" )\nFrame :Center() -- or Frame:SetPos( x, y )\nFrame:SetSize( 300, 150 )\nFrame:SetTitle( \"Test\" )\nFrame:SetVisible( true )\nFrame:SetDraggable( true )\nFrame:ShowCloseButton( true )\nFrame:MakePopup()\n--Here we create the slider.\nlocal DermaSlider = vgui.Create( \"DNumSlider\", Frame )\nDermaSlider:SetPos( 25, 85 )\nDermaSlider:SetWide( 275 )\nDermaSlider:SetMin( 0 ) -- Or 3 for second image\nDermaSlider:SetMax( 5 )\nDermaSlider:SetValue( 0.5 )\nDermaSlider:SetDecimals( 2 )","output":{"image":[{"src":"DermaSlider_Test.jpeg"},{"src":"DermaSlider_min_3.jpeg"}]}}},
{"function":{"name":"SetMax","parent":"DNumSlider","type":"panelfunc","ispanel":true,"description":"Sets the maximum value for the slider.","realm":"Client","args":{"arg":{"text":"The value to set as maximum for the slider.","name":"max","type":"number"}}}},
{"function":{"name":"SetDefaultValue","parent":"DNumSlider","type":"panelfunc","ispanel":true,"description":{"text":"Sets the default value of the slider, to be used by  or by middle mouse clicking the draggable knob of the slider.","page":"DNumSlider:ResetToDefaultValue"},"realm":"Client","args":{"arg":{"text":"The new default value of the slider to set","name":"default","type":"number"}}}},
{"function":{"name":"SetDecimals","parent":"DNumSlider","type":"panelfunc","ispanel":true,"description":"Sets the desired amount of numbers after the decimal point.","realm":"Client","args":{"arg":{"text":"0 for whole numbers only, 1 for one number after the decimal point, etc.","name":"decimals","type":"number"}}}},
{"function":{"name":"SetDark","parent":"DNumSlider","type":"panelfunc","ispanel":true,"description":{"text":"Calls  on the  part of the .","page":["DLabel:SetDark","DLabel","DNumSlider"]},"realm":"Client","args":{"arg":{"name":"dark","type":"boolean"}}}},
{"function":{"name":"SetConVar","parent":"DNumSlider","type":"panelfunc","ispanel":true,"description":"Sets the console variable to be updated when the value of the slider is changed.","realm":"Client","args":{"arg":{"text":"The name of the  to be updated.","name":"cvar","type":"string","page":"ConVar"}}}},
{"function":{"name":"ResetToDefaultValue","parent":"DNumSlider","type":"panelfunc","ispanel":true,"description":{"text":"Resets the slider to the default value, if one was set by .\n\nThis function is called by the  when user middle mouse clicks on the draggable knob of the slider.","page":["DNumSlider:SetDefaultValue","DNumSlider"]},"realm":"Client"}},
{"function":{"name":"OnValueChanged","parent":"DNumSlider","type":"panelfunc","ispanel":true,"description":"Called when the value of the slider is changed, through code or changing the slider.","realm":"Client","args":{"arg":{"text":"The new value of the DNumSlider","name":"value","type":"number"}}}},
{"function":{"name":"IsEditing","parent":"DNumSlider","type":"panelfunc","ispanel":true,"description":{"text":"Returns true if either the , the  or the  are being edited.","page":["DTextEntry","DSlider","DNumberScratch"]},"realm":"Client","rets":{"ret":{"text":"Whether or not the  is being edited by the player.","name":"","type":"boolean","page":"DNumSlider"}}}},
{"function":{"name":"GetValue","parent":"DNumSlider","type":"panelfunc","ispanel":true,"description":{"text":"Returns the value of the","page":"DNumSlider"},"realm":"Client","rets":{"ret":{"text":"The value of the slider.","name":"","type":"number"}}}},
{"function":{"name":"GetTextArea","parent":"DNumSlider","type":"panelfunc","ispanel":true,"description":{"text":"Returns the  component of the slider.","page":"DTextEntry"},"realm":"Client","rets":{"ret":{"text":"The .","name":"","type":"Panel","page":"DTextEntry"}}}},
{"function":{"name":"GetRange","parent":"DNumSlider","type":"panelfunc","ispanel":true,"description":"Returns the range of the slider, basically maximum value - minimum value.","realm":"Client","rets":{"ret":{"text":"The range of the slider","name":"","type":"number"}}}},
{"function":{"name":"GetMin","parent":"DNumSlider","type":"panelfunc","ispanel":true,"description":"Returns the minimum value of the slider","realm":"Client","rets":{"ret":{"text":"The minimum value of the slider","name":"","type":"number"}}}},
{"function":{"name":"GetMax","parent":"DNumSlider","type":"panelfunc","ispanel":true,"description":"Returns the maximum value of the slider","realm":"Client","rets":{"ret":{"text":"The maximum value of the slider","name":"","type":"number"}}}},
{"function":{"name":"GetDecimals","parent":"DNumSlider","type":"panelfunc","ispanel":true,"description":"Returns the amount of numbers after the decimal point.","realm":"Client","rets":{"ret":{"text":"0 for whole numbers only, 1 for one number after the decimal point, etc.","name":"","type":"number"}}}},
{"function":{"name":"GetDefaultValue","parent":"DNumSlider","type":"panelfunc","ispanel":true,"description":{"text":"Returns the default value of the slider, if one was set by","page":"DNumSlider:SetDefaultValue"},"realm":"Client","rets":{"ret":{"text":"The default value of the slider","name":"","type":"number"}}}},
{"function":{"name":"SetValue","parent":"DNumberWang","type":"panelfunc","ispanel":true,"description":{"text":"Sets the value of the  and triggers","page":["DNumberWang","DNumberWang:OnValueChanged"]},"realm":"Client","args":{"arg":{"text":"The value to set.","name":"val","type":"number"}}}},
{"function":{"name":"SetMinMax","parent":"DNumberWang","type":"panelfunc","ispanel":true,"description":"Sets the minimum and maximum value allowed by the number selector.","realm":"Client","args":{"arg":[{"text":"The minimum value.","name":"min","type":"number"},{"text":"The maximum value.","name":"max","type":"number"}]}}},
{"function":{"name":"SetMin","parent":"DNumberWang","type":"panelfunc","ispanel":true,"description":"Sets the minimum numeric value allowed by the number selector.","realm":"Client","args":{"arg":{"text":"The minimum value.","name":"min","type":"number"}}}},
{"function":{"name":"SetMax","parent":"DNumberWang","type":"panelfunc","ispanel":true,"description":"Sets the maximum numeric value allowed by the number selector.","realm":"Client","args":{"arg":{"text":"The maximum value.","name":"max","type":"number"}}}},
{"function":{"name":"SetFraction","parent":"DNumberWang","type":"panelfunc","ispanel":true,"description":"Sets the value of the number selector based on the given fraction number.","realm":"Client","args":{"arg":{"text":"The fraction of the number selector's range.","name":"val","type":"number"}}},"example":{"description":"Sets and prints out the value of a quarter, half, and three-fourths of the number selector range.","code":"local numinput = vgui.Create(\"DNumberWang\")\nnuminput:SetPos(5, 5)\nnuminput:SetSize(90, 20)\n\nnuminput:SetMinMax(0, 500)\n\nnuminput:SetFraction(0.25)\nprint(numinput:GetValue())\n\nnuminput:SetFraction(0.5)\nprint(numinput:GetValue())\n\nnuminput:SetFraction(0.75)\nprint(numinput:GetValue())","output":"```\n125\n250\n375\n```"}},
{"function":{"name":"SetFloatValue","parent":"DNumberWang","type":"panelfunc","ispanel":true,"description":{"text":"Appears to do nothing.","deprecated":""},"realm":"Client","args":{"arg":{"name":"val","type":"number"}}}},
{"function":{"name":"HideWang","parent":"DNumberWang","type":"panelfunc","ispanel":true,"description":"Hides the number selector arrows.","realm":"Client"}},
{"function":{"name":"SetDecimals","parent":"DNumberWang","type":"panelfunc","ispanel":true,"description":"Sets the amount of decimal places allowed in the number selector.","realm":"Client","args":{"arg":{"text":"The amount of decimal places.","name":"num","type":"number"}}},"example":{"description":"Sets the number selector to 3 decimal places and sets the value to a random number between 0 and 1.","code":"local numinput = vgui.Create(\"DNumberWang\")\nnuminput:SetPos(5, 5)\nnuminput:SetSize(90, 20)\nnuminput:SetDecimals(3)\n\nnuminput:SetValue(math.random())","output":{"image":{"src":"DNumberWang_SetDecimals_example1.png"}}}},
{"function":{"name":"OnValueChanged","parent":"DNumberWang","type":"panelfunc","ispanel":true,"description":"Internal function which is called when the number selector value is changed. This function is empty by default so it needs to be overridden in order to provide functionality.","realm":"Client","args":{"arg":{"text":"The new value of the number selector.","name":"val","type":"number"}}},"example":{"description":"Creates a panel with two number selectors that play a male question sound byte and a female answer sound byte based on the new value of each number selector.","code":"-- Background panel\nBGPanel = vgui.Create(\"DPanel\")\nBGPanel:SetPos(20, 20)\nBGPanel:SetSize(100, 55)\n\n-- Statement label\nlocal lbl1 = vgui.Create(\"DLabel\", BGPanel)\nlbl1:SetPos(5, 5)\nlbl1:SetSize(100, 20)\nlbl1:SetText(\"Statement: \")\nlbl1:SetColor(Color(64, 64, 255))\n\n-- Response label\nlocal lbl2 = vgui.Create(\"DLabel\", BGPanel)\nlbl2:SetPos(5, 30)\nlbl2:SetSize(100, 20)\nlbl2:SetText(\"Response: \")\nlbl2:SetColor(Color(255, 0, 255))\n\n-- Number selector for \"questions\"\nlocal question = vgui.Create(\"DNumberWang\", BGPanel)\nquestion:SetPos(65, 5)\nquestion:SetSize(30, 20)\nquestion:SetMinMax(1, 30)\n\n-- Number selector for answers\nlocal answer = vgui.Create(\"DNumberWang\", BGPanel)\nanswer:SetPos(65, 30)\nanswer:SetSize(30, 20)\nanswer:SetMinMax(1, 40)\n\n-- This is used to prevent overlapping talking\nlocal null = Sound(\"common/null.wav\")\n\n-- Abstraction = cleaner code\nfunction TalkSound(snd)\n\tEmitSound(snd, LocalPlayer():GetPos(), LocalPlayer():EntIndex(), CHAN_VOICE, 1, 80, 0, 100)\nend\n\n-- Play a statement based on new number\nfunction question:OnValueChanged(val)\n\tTalkSound(null)\n\tTalkSound(Sound(\"vo/npc/male01/question\"..string.format(\"%02d\", val)..\".wav\"))\nend\n\n-- Play an answer based on new number\nfunction answer:OnValueChanged(val)\n\tTalkSound(null)\n\tTalkSound(Sound(\"vo/npc/female01/answer\"..string.format(\"%02d\", val)..\".wav\"))\nend"}},
{"function":{"name":"GetValue","parent":"DNumberWang","type":"panelfunc","ispanel":true,"description":"Returns the numeric value inside the number selector.","realm":"Client","rets":{"ret":{"text":"The numeric value.","name":"","type":"number"}}}},
{"function":{"name":"GetMin","parent":"DNumberWang","type":"panelfunc","ispanel":true,"description":"Returns the minimum numeric value allowed by the number selector.","realm":"Client","rets":{"ret":{"text":"The minimum number.","name":"","type":"number"}}}},
{"function":{"name":"GetMax","parent":"DNumberWang","type":"panelfunc","ispanel":true,"description":"Returns the maximum numeric value allowed by the number selector.","realm":"Client","rets":{"ret":{"text":"The maximum value.","name":"","type":"number"}}}},
{"function":{"name":"GetTextArea","parent":"DNumberWang","type":"panelfunc","ispanel":true,"description":{"text":"This function returns the panel it is used on.","deprecated":""},"realm":"Client","rets":{"ret":{"text":"self","name":"","type":"Panel"}}}},
{"function":{"name":"GetFraction","parent":"DNumberWang","type":"panelfunc","ispanel":true,"description":"Returns a fraction representing the current number selector value to number selector min/max range ratio. If argument `val` is supplied, that number will be computed instead.","realm":"Client","args":{"arg":{"text":"The fraction numerator.","name":"val","type":"number"}}},"example":{"description":"Prints out some fractions based on a number selector with a min/max range of 0 to 255.","code":"local numinput = vgui.Create(\"DNumberWang\")\nnuminput:SetPos(5, 5)\nnuminput:SetSize(90, 20)\n\nnuminput:SetMinMax(0, 255)\n\nnuminput:SetValue(64)\n\nprint(numinput:GetFraction())\t-- Should return ~0.25\nprint(numinput:GetFraction(128))\t-- Should return ~0.5\nprint(numinput:GetFraction(192))\t-- Should return ~0.75\nprint(numinput:GetFraction(255))\t-- Should return 1","output":"```\n0.25098039215686\n0.50196078431373\n0.75294117647059\n1\n```"}},
{"function":{"name":"GetFloatValue","parent":"DNumberWang","type":"panelfunc","ispanel":true,"description":{"text":"Returns whatever is set by  or 0.","deprecated":"","page":"DNumberWang:SetFloatValue"},"realm":"Client","rets":{"ret":{"name":"","type":"number"}}}},
{"function":{"name":"UpdateConVar","parent":"DNumberScratch","type":"panelfunc","ispanel":true,"description":{"text":"Forces the assigned ConVar to be updated to the value of this","internal":"","page":"DNumberScratch"},"realm":"Client"}},
{"function":{"name":"GetDecimals","parent":"DNumberWang","type":"panelfunc","ispanel":true,"description":{"text":"Returns the amount of decimal places allowed in the number selector, set by","page":"DNumberWang:SetDecimals"},"realm":"Client","rets":{"ret":{"text":"The amount of decimal places allowed in the number selector.","name":"","type":"number"}}}},
{"function":{"name":"SetZoom","parent":"DNumberScratch","type":"panelfunc","ispanel":true,"description":"Sets the zoom level of the scratch panel.","realm":"Client","args":{"arg":{"name":"zoom","type":"number"}}}},
{"function":{"name":"SetValue","parent":"DNumberScratch","type":"panelfunc","ispanel":true,"description":{"text":"Sets the value of the  and triggers","page":["DNumberScratch","DNumberScratch:OnValueChanged"]},"realm":"Client","args":{"arg":{"text":"The value to set.","name":"val","type":"number"}}}},
{"function":{"name":"SetMin","parent":"DNumberScratch","type":"panelfunc","ispanel":true,"description":"Sets the minimum value that can be selected on the number scratch.","realm":"Client","args":{"arg":{"text":"The minimum number","name":"min","type":"number"}}}},
{"function":{"name":"SetShouldDrawScreen","parent":"DNumberScratch","type":"panelfunc","ispanel":true,"description":{"text":"Sets if the scratch window should be drawn or not. Cannot be used to force it to draw, only to hide it, which will not stop the panel from working with invisible window.","internal":""},"realm":"Client","args":{"arg":{"name":"shouldDraw","type":"boolean"}}}},
{"function":{"name":"SetMax","parent":"DNumberScratch","type":"panelfunc","ispanel":true,"description":"Sets the max value that can be selected on the number scratch","realm":"Client","args":{"arg":{"text":"The maximum number","name":"max","type":"number"}}}},
{"function":{"name":"SetDecimals","parent":"DNumberScratch","type":"panelfunc","ispanel":true,"description":"Sets the desired amount of numbers after the decimal point.","realm":"Client","args":{"arg":{"text":"0 for whole numbers only, 1 for one number after the decimal point, etc.","name":"decimals","type":"number"}}}},
{"function":{"name":"SetFloatValue","parent":"DNumberScratch","type":"panelfunc","ispanel":true,"description":{"text":"Does not trigger \n\nUse  instead.","internal":"","page":["DNumberScratch:OnValueChanged","DNumberScratch:SetValue"]},"realm":"Client","args":{"arg":{"text":"The value to set","name":"val","type":"number"}}}},
{"function":{"name":"SetFloatValue","parent":"DNumberScratch","type":"panelfunc","ispanel":true,"description":{"text":"Does not trigger \n\nUse  instead.","internal":"","page":["DNumberScratch:OnValueChanged","DNumberScratch:SetValue"]},"realm":"Client","args":{"arg":{"text":"The value to set","name":"val","type":"number"}}}},
{"function":{"name":"SetActive","parent":"DNumberScratch","type":"panelfunc","ispanel":true,"description":{"text":"Sets whether or not the panel is 'active'.\n\nForcing this panel to be active may not work.","internal":""},"realm":"Client","args":{"arg":{"text":"true to activate, false to deactivate.","name":"active","type":"boolean"}}}},
{"function":{"name":"PaintScratchWindow","parent":"DNumberScratch","type":"panelfunc","ispanel":true,"description":{"text":"Used to paint the 'scratch' window.","internal":""},"realm":"Client"}},
{"function":{"name":"LockCursor","parent":"DNumberScratch","type":"panelfunc","ispanel":true,"description":{"text":"Used to lock the cursor in place.","internal":""},"realm":"Client"}},
{"function":{"name":"OnValueChanged","parent":"DNumberScratch","type":"panelfunc","ispanel":true,"description":{"text":"Called when the value of the  is changed.","page":"DNumberScratch"},"realm":"Client","args":{"arg":{"text":"The new value","name":"newValue","type":"number"}}}},
{"function":{"name":"IsEditing","parent":"DNumberScratch","type":"panelfunc","ispanel":true,"description":{"text":"Returns whether the player is currently editing the value of the .","page":"DNumberScratch"},"realm":"Client","rets":{"ret":{"name":"","type":"boolean"}}}},
{"function":{"name":"IdealZoom","parent":"DNumberScratch","type":"panelfunc","ispanel":true,"description":{"text":"Returns the ideal zoom level for the panel based on the .","page":"DNumberScratch:GetRange"},"realm":"Client","rets":{"ret":{"text":"The ideal zoom level for the panel based on the panels range.","name":"","type":"number"}}}},
{"function":{"name":"GetZoom","parent":"DNumberScratch","type":"panelfunc","ispanel":true,"description":"Returns the zoom level of the scratch window","realm":"Client","rets":{"ret":{"name":"","type":"number"}}}},
{"function":{"name":"GetShouldDrawScreen","parent":"DNumberScratch","type":"panelfunc","ispanel":true,"description":"Returns whether the scratch window should be visible or not.","realm":"Client","rets":{"ret":{"name":"","type":"boolean"}}}},
{"function":{"name":"GetTextValue","parent":"DNumberScratch","type":"panelfunc","ispanel":true,"description":{"text":"Returns the real value of the  as a string.\n\nSee also  and .","page":["DNumberScratch","DNumberScratch:GetFloatValue","DNumberScratch:GetFraction"]},"realm":"Client","rets":{"ret":{"text":"The real value of the","name":"","type":"string","page":"DNumberScratch"}}}},
{"function":{"name":"GetRange","parent":"DNumberScratch","type":"panelfunc","ispanel":true,"description":{"text":"Returns the range of the . Basically max value - min value.","page":"DNumberScratch"},"realm":"Client","rets":{"ret":{"text":"The range of the","name":"","type":"number","page":"DNumberScratch"}}}},
{"function":{"name":"GetMin","parent":"DNumberScratch","type":"panelfunc","ispanel":true,"description":"Returns the minimum value that can be selected on the number scratch","realm":"Client","rets":{"ret":{"text":"The minimum value that can be selected on the number scratch","name":"","type":"number"}}}},
{"function":{"name":"GetMax","parent":"DNumberScratch","type":"panelfunc","ispanel":true,"description":"Returns the maximum value that can be selected on the number scratch","realm":"Client","rets":{"ret":{"text":"The maximum value that can be selected on the number scratch","name":"","type":"number"}}}},
{"function":{"name":"GetFraction","parent":"DNumberScratch","type":"panelfunc","ispanel":true,"description":{"text":"Returns the value of the  as a fraction, a value between 0 and 1 where 0 is the minimum and 1 is the maximum value of the .\n\nSee also:\n* \n* \n*","page":["DNumberScratch","DNumberScratch","DNumberScratch:GetTextValue","DNumberScratch:GetFloatValue","DNumberScratch:SetFraction"]},"realm":"Client","rets":{"ret":{"text":"A value between 0 and 1","name":"","type":"number"}}}},
{"function":{"name":"GetFloatValue","parent":"DNumberScratch","type":"panelfunc","ispanel":true,"description":{"text":"Returns the real value of the  as a number.\n\nSee also  and .","page":["DNumberScratch","DNumberScratch:GetTextValue","DNumberScratch:GetFraction"]},"realm":"Client","rets":{"ret":{"text":"The real value of the","name":"","type":"number","page":"DNumberScratch"}}}},
{"function":{"name":"GetDecimals","parent":"DNumberScratch","type":"panelfunc","ispanel":true,"description":"Returns the desired amount of numbers after the decimal point.","realm":"Client","rets":{"ret":{"text":"0 for whole numbers only, 1 for one number after the decimal point, etc.","name":"","type":"number"}}}},
{"function":{"name":"GetActive","parent":"DNumberScratch","type":"panelfunc","ispanel":true,"description":"Returns whether this panel is active or not, i.e. if the player is currently changing its value.","realm":"Client","rets":{"ret":{"name":"","type":"boolean"}}}},
{"function":{"name":"DrawScreen","parent":"DNumberScratch","type":"panelfunc","ispanel":true,"description":{"text":"Used by .","internal":"","page":"DNumberScratch:PaintScratchWindow"},"realm":"Client","args":{"arg":[{"name":"x","type":"number"},{"name":"y","type":"number"},{"name":"w","type":"number"},{"name":"h","type":"number"}]}}},
{"function":{"name":"Shuffle","parent":"DNotify","type":"panelfunc","ispanel":true,"description":{"internal":""},"realm":"Client"}},
{"function":{"name":"SetSpacing","parent":"DNotify","type":"panelfunc","ispanel":true,"description":"Sets the spacing between child elements of the notification panel.","realm":"Client","args":{"arg":{"name":"spacing","type":"number"}}}},
{"function":{"name":"DrawNotches","parent":"DNumberScratch","type":"panelfunc","ispanel":true,"description":{"text":"Used by .","internal":"","page":"DNumberScratch:DrawScreen"},"realm":"Client","args":{"arg":[{"name":"level","type":"number"},{"name":"x","type":"number"},{"name":"y","type":"number"},{"name":"w","type":"number"},{"name":"h","type":"number"},{"name":"range","type":"number"},{"name":"value","type":"number"},{"name":"min","type":"number"},{"name":"max","type":"number"}]}}},
{"function":{"name":"SetLife","parent":"DNotify","type":"panelfunc","ispanel":true,"description":"Sets the display time in seconds for the DNotify.","realm":"Client","args":{"arg":{"text":"The time in seconds.","name":"time","type":"number"}}}},
{"function":{"name":"SetAlignment","parent":"DNotify","type":"panelfunc","ispanel":true,"description":"Sets the alignment of the child panels in the notification","realm":"Client","args":{"arg":{"text":"It's the Numpad alignment, 6 is right, 9 is top left, etc.","name":"alignment","type":"number"}}}},
{"function":{"name":"GetSpacing","parent":"DNotify","type":"panelfunc","ispanel":true,"description":{"text":"Returns the spacing between items set by .","page":"DNotify:SetSpacing"},"realm":"Client","rets":{"ret":{"name":"","type":"number"}}}},
{"function":{"name":"GetLife","parent":"DNotify","type":"panelfunc","ispanel":true,"description":{"text":"Returns the display time in seconds of the DNotify. This is set with \n.","page":"DNotify:SetLife"},"realm":"Client","rets":{"ret":{"text":"The display time in seconds.","name":"","type":"number"}}}},
{"function":{"name":"GetItems","parent":"DNotify","type":"panelfunc","ispanel":true,"description":{"text":"Returns all the items added with .","page":"DNotify:AddItem"},"realm":"Client","rets":{"ret":{"text":"A table of s.","name":"","type":"table","page":"Panel"}}}},
{"function":{"name":"GetAlignment","parent":"DNotify","type":"panelfunc","ispanel":true,"description":{"text":"Returns the current alignment of this notification panel. Set by .","page":"DNotify:SetAlignment"},"realm":"Client","rets":{"ret":{"text":"The numpad alignment","name":"","type":"number"}}}},
{"function":{"name":"AddItem","parent":"DNotify","type":"panelfunc","ispanel":true,"description":"Adds a panel to the notification","realm":"Client","args":{"arg":[{"text":"The panel to add","name":"pnl","type":"Panel"},{"text":"If set, overrides .","name":"lifeLength","type":"number","default":"nil","page":"DNotify:SetLife"}]}}},
{"function":{"name":"SetModelList","parent":"DModelSelect","type":"panelfunc","ispanel":true,"description":"Called to set the list of models within the panel element.","realm":"Client","args":{"arg":[{"text":"Each key is a model path, the value is a kay-value table where they key is a convar name and value is the value to set to that convar.","name":"models","type":"table"},{"name":"convar","type":"string"},{"name":"dontSort","type":"boolean"},{"name":"DontCallListConVars","type":"boolean"}]}}},
{"function":{"name":"StartScene","parent":"DModelPanel","type":"panelfunc","ispanel":true,"description":"No Description","realm":"Client","args":{"arg":{"text":"The path to the scene file. (.vcd)","name":"path","type":"string"}}}},
{"function":{"name":"SetHeight","parent":"DModelSelect","type":"panelfunc","ispanel":true,"description":{"text":"Sets the height of the panel **in the amount of 64px spawnicons**.\n\nOverrides .","page":"Panel:SetHeight"},"realm":"Client","args":{"arg":{"text":"Basically how many rows of 64x64 px spawnicons should fit in this DModelSelect","name":"num","type":"number","default":"2"}}}},
{"function":{"name":"SetModel","parent":"DModelPanel","type":"panelfunc","ispanel":true,"description":"Sets the model of the rendered entity.","realm":"Client","args":{"arg":{"text":"The model to apply to the entity","name":"model","type":"string"}}},"example":{"description":"Creates a new DModelPanel with the Kleiner playermodel.","code":"local modelPanel = vgui.Create( \"DModelPanel\" )\nmodelPanel:SetPos( 0, 0 )\nmodelPanel:SetSize( 200, 200 )\nmodelPanel:SetModel( \"models/player/kleiner.mdl\" )"}},
{"function":{"name":"SetLookAt","parent":"DModelPanel","type":"panelfunc","ispanel":true,"description":"Makes the panel's camera face the given position.","realm":"Client","args":{"arg":{"text":"The position to orient the camera toward.","name":"pos","type":"Vector"}}},"example":{"description":"Creates a model panel focused on Colonel Odessa Cubbage's face.","code":"BGPanel = vgui.Create(\"DPanel\")\nBGPanel:SetPos(20, 20)\nBGPanel:SetSize(200, 200)\t\t\n\t\nlocal mdl = vgui.Create(\"DModelPanel\", BGPanel)\nmdl:SetSize(BGPanel:GetSize())\nmdl:SetModel(\"models/player/odessa.mdl\")\n\nfunction mdl:LayoutEntity( Entity ) return end\t-- Disable cam rotation\n\nlocal headpos = mdl.Entity:GetBonePosition(mdl.Entity:LookupBone(\"ValveBiped.Bip01_Head1\"))\nmdl:SetLookAt(headpos)\n\nmdl:SetCamPos(headpos-Vector(-15, 0, 0))\t-- Move cam in front of face\n\n--mdl.Entity:SetEyeTarget(headpos-Vector(-15, 0, 0))\n\n-- ^^ Makes Odessa look at the camera\n-- Commented out because the result is funnier without this","output":{"image":{"src":"DModelPanel_SetLookAt_example1.jpg"}}}},
{"function":{"name":"SetFOV","parent":"DModelPanel","type":"panelfunc","ispanel":true,"description":"Sets the panel camera's FOV (field of view).","realm":"Client","args":{"arg":{"text":"The field of view value.","name":"fov","type":"number"}}},"example":{"description":"The best FOV demo you've ever seen.","code":"BGPanel = vgui.Create(\"DPanel\")\nBGPanel:SetPos(20, 20)\nBGPanel:SetSize(200, 200)\n\t\nlocal mdl = vgui.Create(\"DModelPanel\", BGPanel)\nmdl:Dock(FILL)\nmdl:SetModel(\"models/player/barney.mdl\")\n\nlocal fov = 10\t-- starting value\nlocal offset = 0.1\t-- amount to increment by\n\nfunction mdl:LayoutEntity(ent)\n\t\n\tmdl:SetFOV(fov)\t-- update FOV\n\t\n\tfov = fov + offset\t-- increment\n\t\n\tif(fov >= 120 or fov <= 10) then\n\t\toffset = offset*-1\t-- inverse increment amount\n\tend\n\t\n\tent:SetSequence(ent:LookupSequence(\"taunt_muscle\"))\t-- FLEX\n\tif(ent:GetCycle() >= 0.95) then ent:SetCycle(0.05) end\t-- YOUR\n\tmdl:RunAnimation()\t-- MUSCLES\n\t\nend","output":{"image":{"src":"DModelPanel_SetFOV_example1.jpg"}}}},
{"function":{"name":"SetLookAng","parent":"DModelPanel","type":"panelfunc","ispanel":true,"description":"Sets the angles of the camera.","realm":"Client","args":{"arg":{"text":"The angles to set the camera to.","name":"ang","type":"Angle"}}},"example":{"description":"Creates a model panel with Eli rotating normally and the camera angles rotating sideways.","code":"BGPanel = vgui.Create(\"DPanel\")\nBGPanel:SetPos(20, 20)\nBGPanel:SetSize(400, 400)\nBGPanel:SetBackgroundColor(Color(0, 0, 0, 255))\n\nlocal mdl = vgui.Create(\"DModelPanel\", BGPanel)\nmdl:SetSize(BGPanel:GetSize())\nmdl:SetModel(\"models/eli.mdl\")\n\n-- Position camera\nmdl:SetCamPos(Vector(0, 60, 36))\n\nlocal yaw = 0\n\nfunction mdl:LayoutEntity(ent)\n\n\t-- Point camera toward the look pos\n\tlocal lookAng = (self.vLookatPos-self.vCamPos):Angle()\n\t\n\t-- Rotate the look angles based on incrementing yaw value\n\tlookAng:RotateAroundAxis(Vector(0, 1, 0), yaw)\n\t\n\t-- Set camera look angles\n\tself:SetLookAng(lookAng)\n\t\n\t-- Make entity rotate like normal\n\tent:SetAngles(Angle(0, RealTime()*30,  0))\n\t\n\tyaw = yaw + 1\n\nend","output":{"image":{"src":"DModelPanel_SetLookAng_example1.gif"}}}},
{"function":{"name":"SetEntity","parent":"DModelPanel","type":"panelfunc","ispanel":true,"description":{"text":"Sets the entity to be rendered by the model panel.","note":"If you set `ent` to a shared entity you must set `ent` to nil before removing this panel or else a \"Trying to remove server entity on client!\" error is thrown"},"realm":"Client","args":{"arg":{"text":"The new panel entity.","name":"ent","type":"Entity"}}},"example":{"description":{"text":"Implementation of a function called **StartBreencast** which makes Dr. Breen recite his instinct speech within a model panel that's displayed to all clients. This mainly demonstrates how even shared entities such as NPCs can be used with  as long as they're networked properly.","page":"DModelPanel"},"code":"g_Breen = nil\t-- Breen NPC\n\nif(SERVER) then\n\t-- Broadcast propaganda to clients\n\tutil.AddNetworkString(\"BreencastSentence\")\nend\n\n-- Broadcast Breen to clients each time he starts a new sentence.\nfunction GM:EntityEmitSound(data)\n\n\tif(data.Entity == g_Breen) then\n\t\n\t\tlocal st, en = string.find(data.SoundName, \"vo/\")\n\t\tlocal sentence = \"sound/\"..string.sub(data.SoundName, st)\t-- Properly format sound name\n\t\n\t\tnet.Start(\"BreencastSentence\")\n\t\t\tnet.WriteEntity(data.Entity)\n\t\t\tnet.WriteString(sentence)\n\t\tnet.Broadcast()\n\t\t\n\tend\n\t\n\treturn nil\n\t\nend\n\nif(CLIENT) then\n\n\t-- Receive latest breencast sound byte and update screen\n\tfunction BreencastSentence()\n\t\n\t\t-- Client-side reference to Breen NPC\n\t\tg_Breen = net.ReadEntity()\n\t\t\n\t\tlocal soundname = net.ReadString()\n\t\t\n\t\t-- Play sound byte\n\t\tsound.PlayFile(soundname, \"\", function(sentence, errnum, err)\n\t\t\n\t\t\tif(err) then\n\t\t\t\tError(err)\n\t\t\telse\n\t\t\t\tsentence:Play()\n\t\t\t\tStartBreencast()\t-- Update breencast monitor\n\t\t\tend\n\t\t\n\t\tend)\n\t\n\tend\n\t\n\tnet.Receive(\"BreencastSentence\", BreencastSentence)\n\t\nend\n\n-- Call this server-side to begin Breencast\nfunction StartBreencast()\n\n\tif(SERVER) then\n\n\t\t-- Remove existing Breen NPC\n\t\tif(g_Breen && IsValid(g_Breen)) then\n\t\t\tg_Breen:Remove()\n\t\tend\n\n\t\t-- Create new Breen NPC\n\t\tg_Breen = ents.Create(\"npc_breen\")\n\t\tg_Breen:Spawn()\n\t\t\n\t\t-- Hide NPC everywhere except inside model panel\n\t\tg_Breen:SetSaveValue(\"m_takedamage\", 0)\n\t\tg_Breen:SetMoveType(MOVETYPE_NONE)\n\t\tg_Breen:SetSolid(SOLID_NONE)\n\t\tg_Breen:SetRenderMode(RENDERMODE_TRANSALPHA)\n\t\tg_Breen:SetColor(Color(255, 255, 255, 0))\n\t\t\n\t\t-- Play propaganda\t\t\n\t\tg_Breen:PlayScene(\"scenes/breencast/instinct_tv.vcd\")\n\t\tg_Breen:SetEyeTarget(Vector(100, 0, 60))\n\n\telseif(CLIENT) then\n\n\t\t-- Remove existing panel and clear model entity to prevent error\n\t\tif(BGPanel) then\n\t\t\tif(BGPanel:GetChild(0)) then BGPanel:GetChild(0):SetEntity(nil) end\n\t\t\tBGPanel:Remove()\n\t\t\tBGPanel = nil\t\t\t\n\t\tend\n\t\t\n\t\t-- Don't continue if Breen is undefined\n\t\tif(!g_Breen or !IsValid(g_Breen)) then return end\n\t\t\n\t\t-- Black background panel\n\t\tBGPanel = vgui.Create(\"DPanel\")\n\t\tBGPanel:SetPos(20, 20)\n\t\tBGPanel:SetSize(200, 200)\n\t\tBGPanel:SetBackgroundColor(Color(0, 0, 0, 255))\n\t\t\n\t\t-- Model panel\n\t\tlocal mdl = vgui.Create(\"DModelPanel\", BGPanel)\n\t\tmdl:SetSize(BGPanel:GetSize())\n\t\tmdl:SetFOV(40)\t-- Default FOV is too jarring\n\t\t\n\t\tmdl:SetEntity(g_Breen)\t-- Add Breen NPC to model panel\n\t\t\n\t\t-- Focus camera on Breen's head\n\t\tfunction mdl:LayoutEntity(ent)\n\t\t\n\t\t\t-- If Breen has been removed somehow then remove screen\n\t\t\tif(!IsValid(ent)) then\n\t\t\t\tif(mdl:GetParent()) then mdl:GetParent():Remove() end\n\t\t\t\treturn\n\t\t\tend\n\t\t\n\t\t\tlocal eyepos = ent:GetBonePosition(ent:LookupBone(\"ValveBiped.Bip01_Head1\"))\n\t\t\n\t\t\tmdl:SetLookAt(eyepos)\n\t\t\tmdl:SetCamPos(eyepos+Vector(35, 0, -4))\n\t\t\t\n\t\t\treturn\n\t\t\t\n\t\tend\n\t\t\n\tend\n\t\nend","output":{"text":"\"I find it helpful at times like these to remind myself that our true enemy is: Instinct.\"","image":{"src":"Breencast_example.jpg"}}}},
{"function":{"name":"SetDirectionalLight","parent":"DModelPanel","type":"panelfunc","ispanel":true,"description":"Sets the directional lighting used on the rendered entity.","realm":"Client","args":{"arg":[{"text":"The light direction, see .","name":"direction","type":"number","page":"Enums/BOX"},{"text":"The color of the directional lighting.","name":"color","type":"table"}]}},"example":{"description":{"text":"Displays a model panel with no directional lighting. Dr. Kleiner is only lit by the ambient light set by .","page":"DModelPanel:SetAmbientLight"},"code":"-- Black background panel\nBGPanel = vgui.Create(\"DPanel\")\nBGPanel:SetPos(20, 20)\nBGPanel:SetSize(400, 400)\nBGPanel:SetBackgroundColor(Color(0, 0, 0, 255))\n\nlocal mdl = vgui.Create(\"DModelPanel\", BGPanel)\nmdl:SetSize(BGPanel:GetSize())\n\t\n-- Setup model and camera\nmdl:SetModel(\"models/kleiner.mdl\")\nmdl:SetCamPos(Vector(20, 20, 60))\nmdl:SetLookAt(Vector(0, 0, 60))\n\n-- Make Kleiner pace\nmdl:GetEntity():SetSequence(mdl:GetEntity():LookupSequence(\"pace_all\"))\n\n-- Disable directional lighting\nmdl:SetDirectionalLight(BOX_TOP, Color(0, 0, 0))\nmdl:SetDirectionalLight(BOX_FRONT, Color(0, 0, 0))\n\n-- Spin around faster and play animation\nfunction mdl:LayoutEntity(ent)\n\tent:SetAngles(Angle( 0, self.LastPaint*60,  0))\n\tself:RunAnimation()\nend","output":{"image":{"src":"DModelPanel_SetDirectionalLight_example1.jpg"}}}},
{"function":{"name":"SetColor","parent":"DModelPanel","type":"panelfunc","ispanel":true,"description":{"text":"Sets the color of the rendered entity.","note":{"text":"This does not work on Garry's Mod player models since they use a different color system. To modify a player model color, see Example 2 on the  page","page":"DModelPanel"}},"realm":"Client","args":{"arg":{"text":"The render color of the entity.","name":"color","type":"table"}}},"example":{"description":"Creates a model panel with a red watermelon inside.","code":"local panel = vgui.Create(\"DPanel\")\npanel:SetPos(20, 20)\npanel:SetSize(200, 200)\n\t\nlocal mdl = vgui.Create(\"DModelPanel\", panel)\nmdl:SetSize(panel:GetSize())\nmdl:SetModel(\"models/props_junk/watermelon01.mdl\")\nmdl:SetLookAt(Vector(0, 0, 0))\nmdl:SetCamPos(Vector(10, 10, 10))\nmdl:SetColor(Color(255, 0, 0))","output":{"image":{"src":"DModelPanel_SetColor_example1.jpg"}}}},
{"function":{"name":"SetCamPos","parent":"DModelPanel","type":"panelfunc","ispanel":true,"description":"Sets the position of the camera.","realm":"Client","args":{"arg":{"text":"The position to set the camera at.","name":"pos","type":"Vector"}}},"example":[{"description":"Creates a model panel focused on Gman's face while he adjusts his tie.","code":"BGPanel = vgui.Create(\"DPanel\")\nBGPanel:SetPos(20, 20)\nBGPanel:SetSize(200, 200)\nBGPanel:SetBackgroundColor(Color(0, 0, 0, 255))\n\t\nlocal mdl = vgui.Create(\"DModelPanel\", BGPanel)\nmdl:SetSize(BGPanel:GetSize())\nmdl:SetModel(\"models/player/gman_high.mdl\")\n\nfunction mdl:LayoutEntity(ent)\n\tent:SetSequence(ent:LookupSequence(\"menu_gman\"))\n\tmdl:RunAnimation()\t\t\n\treturn\nend\n\nlocal eyepos = mdl.Entity:GetBonePosition(mdl.Entity:LookupBone(\"ValveBiped.Bip01_Head1\"))\n\neyepos:Add(Vector(0, 0, 2))\t-- Move up slightly\n\nmdl:SetLookAt(eyepos)\n\nmdl:SetCamPos(eyepos-Vector(-12, 0, 0))\t-- Move cam in front of eyes\n\nmdl.Entity:SetEyeTarget(eyepos-Vector(-12, 0, 0))","output":{"image":{"src":"DModelPanel_SetCamPos_example1.jpg"}}},{"description":"Sets a model panel's camera position so the model won't go outside it","code":"local mdlpnl = vgui.Create( \"DModelPanel\" )\n\nlocal mn, mx = mdlpnl.Entity:GetRenderBounds()\nlocal size = 0\nsize = math.max( size, math.abs(mn.x) + math.abs(mx.x) )\nsize = math.max( size, math.abs(mn.y) + math.abs(mx.y) )\nsize = math.max( size, math.abs(mn.z) + math.abs(mx.z) )\n\nmdlpnl:SetFOV( 45 )\nmdlpnl:SetCamPos( Vector( size, size, size ) )\nmdlpnl:SetLookAt( (mn + mx) * 0.5 )"}]},
{"function":{"name":"SetAnimSpeed","parent":"DModelPanel","type":"panelfunc","ispanel":true,"description":{"text":"Sets the speed used by  to advance frame on an entity sequence.","page":"DModelPanel:RunAnimation","note":{"text":"doesn't seem to have any functioning arguments and therefore changing this will not have any affect on the panel entity's sequence speed without reimplementation. It only affects the value returned by","page":["Entity:FrameAdvance","DModelPanel:GetAnimSpeed"]}},"realm":"Client","args":{"arg":{"text":"The animation speed.","name":"animSpeed","type":"number"}}},"example":{"description":{"text":"A reimplementation of  which will modify the entity's sequence playback rate based on the set animation speed. This example has Alyx run twice as fast as normal.","page":"DModelPanel:LayoutEntity"},"code":"local mdl = vgui.Create(\"DModelPanel\")\nmdl:SetPos(20, 20)\nmdl:SetSize(200, 200)\nmdl:SetModel(\"models/alyx.mdl\")\n\n-- Play sequence twice as fast\nmdl:SetAnimSpeed(2)\n\t\n-- Make Alyx run\nmdl:GetEntity():SetSequence(mdl:GetEntity():LookupSequence(\"run_all\"))\n\n-- Play animation\nfunction mdl:LayoutEntity(ent)\n\n\t-- Playback rate based on anim speed\n\tent:SetPlaybackRate(self:GetAnimSpeed())\n\t\n\t-- Advance frame\n\tent:FrameAdvance()\n\nend"}},
{"function":{"name":"SetAnimated","parent":"DModelPanel","type":"panelfunc","ispanel":true,"description":{"text":"Sets whether or not to animate the entity when the default  is called.","page":"DModelPanel:LayoutEntity"},"realm":"Client","args":{"arg":{"text":"True to animate, false otherwise.","name":"animated","type":"boolean"}}},"example":{"description":{"text":"A comparison between 2 model panels: the first one has `animated` set to false and the second one has it set to true. Both are using the default  method.","page":"DModelPanel:LayoutEntity"},"code":"BGPanel = vgui.Create(\"DPanel\")\nBGPanel:SetPos(20, 20)\nBGPanel:SetSize(400, 200)\n\t\n-- Left panel\nlocal mdl1 = vgui.Create(\"DModelPanel\", BGPanel)\nmdl1:SetPos(0, 0)\nmdl1:SetSize(200, 200)\nmdl1:SetModel(\"models/player/mossman.mdl\")\nmdl1:SetCamPos(Vector(40, 40, 40))\n\nmdl1:SetAnimated(false)\n\n-- Right panel\nlocal mdl2 = vgui.Create(\"DModelPanel\", BGPanel)\nmdl2:SetPos(200, 0)\nmdl2:SetSize(200, 200)\nmdl2:SetModel(\"models/player/mossman.mdl\")\nmdl2:SetCamPos(Vector(40, 40, 40))\n\nmdl2:SetAnimated(true)\n\n-- Dance sequence\t\nlocal dance = mdl1:GetEntity():LookupSequence(\"taunt_dance\")\n\n-- Make both dance\nmdl1:GetEntity():SetSequence(dance)\nmdl2:GetEntity():SetSequence(dance)","output":{"image":{"src":"DModelPanel_SetAnimated_example1.jpg"}}}},
{"function":{"name":"SetAmbientLight","parent":"DModelPanel","type":"panelfunc","ispanel":true,"description":"Sets the ambient lighting used on the rendered entity.","realm":"Client","args":{"arg":{"text":"The color of the ambient lighting.","name":"color","type":"table"}}},"example":{"description":"Displays a model panel with a watermelon that has red ambient lighting.","code":"BGPanel = vgui.Create(\"DPanel\")\nBGPanel:SetPos(20, 20)\nBGPanel:SetSize(200, 200)\n\t\nlocal mdl = vgui.Create(\"DModelPanel\", BGPanel)\nmdl:SetSize(BGPanel:GetSize())\nmdl:SetModel(\"models/props_junk/watermelon01.mdl\")\n\nmdl:SetCamPos(Vector(15, 15, 0))\nmdl:SetLookAt(Vector(0, 0, 0))\n\nmdl:SetAmbientLight(Color(255, 0, 0, 255))","output":{"image":{"src":"DModelPanel_SetAmbientLight_example1.jpg"}}}},
{"function":{"name":"RunAnimation","parent":"DModelPanel","type":"panelfunc","ispanel":true,"description":{"text":"This function is used in the **DModelPanel:LayoutEntity**. It will set the active model to the last set animation using . By default, it is the walking animation.","page":"Entity:SetSequence"},"realm":"Client"},"example":{"description":"Sets the model to alyx and puts her in a walking animation","code":"local ModelPanel = vgui.Create( \"DModelPanel\", Panel )\nModelPanel:SetModel( \"models/player/alyx.mdl\" )\nfunction ModelPanel:LayoutEntity( ent )\n     ModelPanel:RunAnimation()\nend"}},
{"function":{"name":"PostDrawModel","parent":"DModelPanel","type":"panelfunc","ispanel":true,"description":{"text":"Called when the entity of the  was drawn.\n\nThis is a rendering hook with 3d drawing context.","page":"DModelPanel"},"realm":"Client","args":{"arg":{"text":"The clientside entity of the  that has been drawn.","name":"ent","type":"Entity","page":"DModelPanel"}}}},
{"function":{"name":"PostDrawModel","parent":"DModelPanel","type":"panelfunc","ispanel":true,"description":{"text":"Called when the entity of the  was drawn.\n\nThis is a rendering hook with 3d drawing context.","page":"DModelPanel"},"realm":"Client","args":{"arg":{"text":"The clientside entity of the  that has been drawn.","name":"ent","type":"Entity","page":"DModelPanel"}}}},
{"function":{"name":"LayoutEntity","parent":"DModelPanel","type":"panelfunc","ispanel":true,"description":{"text":"By default, this function slowly rotates and animates the entity being rendered.\n\nIf you want to change this behavior, you should override it.","internal":""},"realm":"Client","args":{"arg":{"text":"The entity that is being rendered.","name":"entity","type":"Entity"}}},"example":{"description":"Stops the rendered entity from rotating.","code":"local modelPanel = vgui.Create( \"DModelPanel\" )\nmodelPanel:SetPos( 0, 0 )\nmodelPanel:SetSize( 200, 200 )\nmodelPanel:SetModel( \"models/player/kleiner.mdl\" )\n\nfunction modelPanel:LayoutEntity( ent )\n\t-- do nothing\nend"}},
{"function":{"name":"GetLookAt","parent":"DModelPanel","type":"panelfunc","ispanel":true,"description":"Returns the position the viewing camera is pointing toward.","realm":"Client","rets":{"ret":{"text":"The position the camera is pointing toward.","name":"","type":"Vector"}}},"example":{"description":"Prints out the default camera look-at position.","code":"local mdl = vgui.Create(\"DModelPanel\")\nmdl:SetPos(20, 20)\nmdl:SetSize(200, 200)\nmdl:SetModel(\"models/props_junk/watermelon01.mdl\")\n\nprint(mdl:GetLookAt())","output":"```\n0.000000 0.000000 40.000000\n```"}},
{"function":{"name":"GetModel","parent":"DModelPanel","type":"panelfunc","ispanel":true,"description":"Gets the model of the rendered entity.","realm":"Client","rets":{"ret":{"text":"The model of the rendered entity.","name":"","type":"string"}}}},
{"function":{"name":"GetLookAng","parent":"DModelPanel","type":"panelfunc","ispanel":true,"description":{"text":"Returns the angles of the model viewing camera. Is **nil** until changed with .","page":"DModelPanel:SetLookAng"},"realm":"Client","rets":{"ret":{"text":"The angles of the camera.","name":"","type":"Angle"}}},"example":{"description":"Prints out the default camera angles.","code":"local mdl = vgui.Create(\"DModelPanel\")\nmdl:SetPos(20, 20)\nmdl:SetSize(200, 200)\nmdl:SetModel(\"models/props_junk/watermelon01.mdl\")\n\nprint(mdl:GetLookAng())","output":"nil"}},
{"function":{"name":"GetFOV","parent":"DModelPanel","type":"panelfunc","ispanel":true,"description":"Returns the FOV (field of view) the camera is using.","realm":"Client","rets":{"ret":{"text":"The FOV of the camera.","name":"","type":"number"}}},"example":{"description":"Prints out the default camera FOV.","code":"local mdl = vgui.Create(\"DModelPanel\")\nmdl:SetPos(20, 20)\nmdl:SetSize(200, 200)\nmdl:SetModel(\"models/props_junk/watermelon01.mdl\")\n\nprint(mdl:GetFOV())","output":"70"}},
{"function":{"name":"GetEntity","parent":"DModelPanel","type":"panelfunc","ispanel":true,"description":"Returns the entity being rendered by the model panel.","realm":"Client","rets":{"ret":{"text":"The rendered entity (client-side)","name":"","type":"CSEnt"}}},"example":{"description":"Creates an antlion model panel and sets the antlion's skin to 1.","code":"BGPanel = vgui.Create(\"DPanel\")\nBGPanel:SetPos(20, 20)\nBGPanel:SetSize(200, 200)\n\t\nlocal mdl = vgui.Create(\"DModelPanel\", BGPanel)\nmdl:SetSize(200, 200)\nmdl:SetModel(\"models/antlion.mdl\")\nmdl:SetLookAt(Vector(0, 0, 20))\n\nmdl:GetEntity():SetSkin(1)","output":{"image":{"src":"DModelPanel_GetEntity_example1.jpg"}}}},
{"function":{"name":"GetCamPos","parent":"DModelPanel","type":"panelfunc","ispanel":true,"description":"Returns the position of the model viewing camera.","realm":"Client","rets":{"ret":{"text":"The position of the camera.","name":"","type":"Vector"}}},"example":{"description":"Prints out the default camera position.","code":"local mdl = vgui.Create(\"DModelPanel\")\nmdl:SetPos(20, 20)\nmdl:SetSize(200, 200)\nmdl:SetModel(\"models/props_junk/watermelon01.mdl\")\n\nprint(mdl:GetCamPos())","output":"```\n50.000000 50.000000 50.000000\n```"}},
{"function":{"name":"GetColor","parent":"DModelPanel","type":"panelfunc","ispanel":true,"description":"Returns the color of the rendered entity.","realm":"Client","rets":{"ret":{"text":"The color of the entity, see .","name":"","type":"table","page":"Color"}}},"example":{"description":"Prints out the default entity color.","code":"local mdl = vgui.Create(\"DModelPanel\")\nmdl:SetPos(20, 20)\nmdl:SetSize(200, 200)\nmdl:SetModel(\"models/props_junk/watermelon01.mdl\")\n\nprint(mdl:GetColor())","output":"```\n255 255 255 255\n```"}},
{"function":{"name":"GetAnimSpeed","parent":"DModelPanel","type":"panelfunc","ispanel":true,"description":{"text":"Returns the animation speed of the panel entity, see .","page":"DModelPanel:SetAnimSpeed"},"realm":"Client","rets":{"ret":{"text":"The animation speed.","name":"","type":"number"}}},"example":{"description":"Prints out the default animation speed.","code":"local mdl = vgui.Create(\"DModelPanel\")\nmdl:SetPos(20, 20)\nmdl:SetSize(200, 200)\nmdl:SetModel(\"models/props_junk/watermelon01.mdl\")\n\nprint(mdl:GetAnimSpeed())","output":"0.5"}},
{"function":{"name":"GetAnimated","parent":"DModelPanel","type":"panelfunc","ispanel":true,"description":{"text":"Returns whether or not the panel entity should be animated when the default  function is called.","page":"DModelPanel:LayoutEntity"},"realm":"Client","rets":{"ret":{"text":"True if the panel entity can be animated with  directly, false otherwise.","name":"","type":"boolean","page":"Entity:SetSequence"}}},"example":{"description":"Prints out the default boolean value for this function.","code":"local mdl = vgui.Create(\"DModelPanel\")\nmdl:SetPos(20, 20)\nmdl:SetSize(200, 200)\nmdl:SetModel(\"models/props_junk/watermelon01.mdl\")\n\nprint(mdl:GetAnimated())","output":"false"}},
{"function":{"name":"GetAmbientLight","parent":"DModelPanel","type":"panelfunc","ispanel":true,"description":"Returns the ambient lighting used on the rendered entity.","realm":"Client","rets":{"ret":{"text":"The color of the ambient lighting.","name":"","type":"table"}}},"example":{"description":"Prints out the default ambient lighting used on models.","code":"local mdl = vgui.Create(\"DModelPanel\")\nmdl:SetPos(20, 20)\nmdl:SetSize(200, 200)\nmdl:SetModel(\"models/props_junk/watermelon01.mdl\")\n\nprint(mdl:GetAmbientLight())","output":"50 50 50 255"}},
{"function":{"name":"DrawModel","parent":"DModelPanel","type":"panelfunc","ispanel":true,"description":{"text":"Used by the DModelPanel's paint hook to draw the model and background.","internal":""},"realm":"Client"}},
{"function":{"name":"SetValueOn","parent":"DMenuOptionCVar","type":"panelfunc","ispanel":true,"description":{"text":"Sets the value of the  when the  is checked.","page":[",console variableConVars","DMenuOptionCVar"]},"realm":"Client","args":{"arg":{"text":"The value","name":"value","type":"string"}}}},
{"function":{"name":"GetValueOn","parent":"DMenuOptionCVar","type":"panelfunc","ispanel":true,"description":{"text":"Return the value of the  when the  is checked.","page":[",console variableConVars","DMenuOptionCVar"]},"realm":"Client","rets":{"ret":{"text":"The value","name":"","type":"string"}}}},
{"function":{"name":"SetConVar","parent":"DMenuOptionCVar","type":"panelfunc","ispanel":true,"description":{"text":"Sets the  to be used by .","page":[",console variableConVars","DMenuOptionCVar"]},"realm":"Client","args":{"arg":{"text":"The  name to set","name":"cvar","type":"string","page":",console variableConVars"}}}},
{"function":{"name":"SetValueOff","parent":"DMenuOptionCVar","type":"panelfunc","ispanel":true,"description":{"text":"Sets the value of the  when the  is not checked.","page":[",console variableConVars","DMenuOptionCVar"]},"realm":"Client","args":{"arg":{"text":"The value","name":"value","type":"string"}}}},
{"function":{"name":"GetValueOff","parent":"DMenuOptionCVar","type":"panelfunc","ispanel":true,"description":{"text":"Returns the value of the  when the  is not checked.","page":[",console variableConVars","DMenuOptionCVar"]},"realm":"Client","rets":{"ret":{"text":"The value","name":"","type":"string"}}}},
{"function":{"name":"GetConVar","parent":"DMenuOptionCVar","type":"panelfunc","ispanel":true,"description":{"text":"Returns the  used by the .","page":[",console variableConVars","DMenuOptionCVar"]},"realm":"Client","rets":{"ret":{"text":"The  used","name":"","type":"string","page":",console variableConVars"}}}},
{"function":{"name":"ToggleCheck","parent":"DMenuOption","type":"panelfunc","ispanel":true,"description":{"text":"Toggles the checked state of . Does not respect .","page":["DMenuOption","DMenuOption:GetIsCheckable"]},"realm":"Client"}},
{"function":{"name":"SetSubMenu","parent":"DMenuOption","type":"panelfunc","ispanel":true,"description":{"text":"Used internally by  to create the submenu arrow and assign the created submenu to be opened this this option is hovered.","internal":"","page":"DMenuOption:AddSubMenu"},"realm":"Client","args":{"arg":{"name":"menu","type":"Panel"}}}},
{"function":{"name":"SetMenu","parent":"DMenuOption","type":"panelfunc","ispanel":true,"description":"No Description","realm":"Client","args":{"arg":{"name":"pnl","type":"Panel"}}}},
{"function":{"name":"SetIsCheckable","parent":"DMenuOption","type":"panelfunc","ispanel":true,"description":{"text":"Sets whether the  is a checkbox option or a normal button option.","page":"DMenuOption"},"realm":"Client","args":{"arg":{"name":"checkable","type":"boolean"}}}},
{"function":{"name":"SetChecked","parent":"DMenuOption","type":"panelfunc","ispanel":true,"description":{"text":"Sets the checked state of the . Does not invoke .","page":["DMenuOption","DMenuOption:OnChecked"]},"realm":"Client","args":{"arg":{"name":"checked","type":"boolean"}}}},
{"function":{"name":"OnChecked","parent":"DMenuOption","type":"panelfunc","ispanel":true,"description":{"text":"Called whenever the 's checked state changes.","page":"DMenuOption"},"realm":"Client","args":{"arg":{"text":"The new checked state","name":"checked","type":"boolean"}}}},
{"function":{"name":"GetMenu","parent":"DMenuOption","type":"panelfunc","ispanel":true,"description":"No Description","realm":"Client","rets":{"ret":{"text":"A","name":"","type":"Panel","page":"DMenu"}}}},
{"function":{"name":"GetIsCheckable","parent":"DMenuOption","type":"panelfunc","ispanel":true,"description":{"text":"Returns whether the  is a checkbox option or a normal button option.","page":"DMenuOption"},"realm":"Client","rets":{"ret":{"name":"","type":"boolean"}}}},
{"function":{"name":"GetChecked","parent":"DMenuOption","type":"panelfunc","ispanel":true,"description":{"text":"Returns the checked state of .","page":"DMenuOption"},"realm":"Client","rets":{"ret":{"text":"Are we checked or not","name":"","type":"boolean"}}}},
{"function":{"name":"AddSubMenu","parent":"DMenuOption","type":"panelfunc","ispanel":true,"description":{"text":"Creates a sub  and returns it. Has no duplicate call protection.","page":"DMenu"},"realm":"Client","rets":{"ret":{"text":"The created  to add options to.","name":"","type":"Panel","page":"DMenu"}}}},
{"function":{"name":"SetPaintBackground","parent":"DMenuBar","type":"panelfunc","ispanel":true,"description":{"text":"Sets whether or not the background should be painted. Is the same as","page":"DMenuBar:SetDrawBackground"},"realm":"Client","args":{"arg":{"text":"Should the background be painted","name":"shouldPaint","type":"boolean"}}}},
{"function":{"name":"SetIsMenu","parent":"DMenuBar","type":"panelfunc","ispanel":true,"description":"Sets whether or not the panel is a menu. Used for closing menus when another panel is selected.","realm":"Client","args":{"arg":{"text":"Is this a menu","name":"isMenu","type":"boolean"}}}},
{"function":{"name":"SetDisabled","parent":"DMenuBar","type":"panelfunc","ispanel":true,"description":"Sets whether or not the panel is disabled","realm":"Client","args":{"arg":{"text":"Should be disabled or not","name":"disable","type":"boolean"}}}},
{"function":{"name":"SetDisabled","parent":"DMenuBar","type":"panelfunc","ispanel":true,"description":"Sets whether or not the panel is disabled","realm":"Client","args":{"arg":{"text":"Should be disabled or not","name":"disable","type":"boolean"}}}},
{"function":{"name":"SetBackgroundColor","parent":"DMenuBar","type":"panelfunc","ispanel":true,"description":"Sets the background color","realm":"Client","args":{"arg":{"text":"See","name":"color","type":"table","page":"Color"}}}},
{"function":{"name":"GetPaintBackground","parent":"DMenuBar","type":"panelfunc","ispanel":true,"description":{"text":"Returns whether or not the background should be painted. Is the same as","page":"DMenuBar:GetDrawBackground"},"realm":"Client","rets":{"ret":{"text":"Should the background be painted","name":"","type":"boolean"}}}},
{"function":{"name":"GetIsMenu","parent":"DMenuBar","type":"panelfunc","ispanel":true,"description":"Returns whether or not the panel is a menu. Used for closing menus when another panel is selected.","realm":"Client","rets":{"ret":{"text":"Is a menu","name":"","type":"boolean"}}}},
{"function":{"name":"GetOpenMenu","parent":"DMenuBar","type":"panelfunc","ispanel":true,"description":"If a menu is visible/opened, then the menu is returned.","realm":"Client","rets":{"ret":{"text":"Returns the visible/open menu or nil.","name":"","type":"Panel"}}}},
{"function":{"name":"GetDrawBackground","parent":"DMenuBar","type":"panelfunc","ispanel":true,"description":{"text":"Returns whether or not the background should be painted. Is the same as","deprecated":{"text":"Use  instead.","page":"DMenuBar:GetPaintBackground"},"page":"DMenuBar:GetPaintBackground"},"realm":"Client","rets":{"ret":{"text":"Should the background be painted","name":"","type":"boolean"}}}},
{"function":{"name":"GetDisabled","parent":"DMenuBar","type":"panelfunc","ispanel":true,"description":"Returns whether or not the DMenuBar is disabled","realm":"Client","rets":{"ret":{"text":"Is disabled","name":"","type":"boolean"}}}},
{"function":{"name":"GetBackgroundColor","parent":"DMenuBar","type":"panelfunc","ispanel":true,"description":"Returns the DMenuBar's background color","realm":"Client","rets":{"ret":{"text":"The background's color. See","name":"","type":"table","page":"Color"}}}},
{"function":{"name":"AddOrGetMenu","parent":"DMenuBar","type":"panelfunc","ispanel":true,"description":{"text":"Retrieves a  object from the menu bar. If one with the given label doesn't exist, a new one is created.\n\nTo add a DMenu without checking, use .","page":["DMenu","DMenuBar:AddMenu"]},"realm":"Client","args":{"arg":{"text":"The name (label) of the derma menu to get or create.","name":"label","type":"string"}},"rets":{"ret":{"text":"The  with the given label.","name":"","type":"Panel","page":"DMenu"}}}},
{"function":{"name":"SetOpenSubMenu","parent":"DMenu","type":"panelfunc","ispanel":true,"description":{"text":"Used internally to store the open submenu by , ,","internal":"","page":["DMenu:Hide","DMenu:OpenSubMenu","DMenu:CloseSubMenu"]},"realm":"Client","args":{"arg":{"text":"The menu to store","name":"item","type":"Panel"}}}},
{"function":{"name":"SetOpenSubMenu","parent":"DMenu","type":"panelfunc","ispanel":true,"description":{"text":"Used internally to store the open submenu by , ,","internal":"","page":["DMenu:Hide","DMenu:OpenSubMenu","DMenu:CloseSubMenu"]},"realm":"Client","args":{"arg":{"text":"The menu to store","name":"item","type":"Panel"}}}},
{"function":{"name":"SetMinimumWidth","parent":"DMenu","type":"panelfunc","ispanel":true,"description":{"text":"Sets the minimum width of the . The menu will be stretched to match the given value.","page":"DMenu"},"realm":"Client","args":{"arg":{"text":"The minimum width of the  in pixels","name":"minWidth","type":"number","page":"DMenu"}}}},
{"function":{"name":"SetMaxHeight","parent":"DMenu","type":"panelfunc","ispanel":true,"description":{"text":"Sets the maximum height the  can have. If the height of all menu items exceed this value, a scroll bar will be automatically added.","page":"DMenu"},"realm":"Client","args":{"arg":{"text":"The maximum height of the  to set, in pixels","name":"maxHeight","type":"number","page":"DMenu"}}}},
{"function":{"name":"SetDrawBorder","parent":"DMenu","type":"panelfunc","ispanel":true,"description":{"text":"Does nothing.","deprecated":""},"realm":"Client","args":{"arg":{"name":"bool","type":"boolean"}}}},
{"function":{"name":"SetDeleteSelf","parent":"DMenu","type":"panelfunc","ispanel":true,"description":{"text":"Set to true by default. IF set to true, the menu will be deleted when it is closed, not simply hidden.\n\nThis is used by","page":"DMenuBar"},"realm":"Client","args":{"arg":{"text":"true to delete menu on close, false to simply hide.","name":"newState","type":"boolean"}}}},
{"function":{"name":"SetDrawColumn","parent":"DMenu","type":"panelfunc","ispanel":true,"description":{"text":"Sets whether the  should draw the icon column with a different color.","page":"DMenu"},"realm":"Client","args":{"arg":{"text":"Whether to draw the column or not","name":"draw","type":"boolean"}}}},
{"function":{"name":"OptionSelectedInternal","parent":"DMenu","type":"panelfunc","ispanel":true,"description":{"text":"Called by . Calls .","internal":"","page":["DMenuOption","DMenu:OptionSelected"]},"realm":"Client","args":{"arg":{"text":"The  that called this function","name":"option","type":"Panel","page":"DMenuOption"}}}},
{"function":{"name":"OptionSelected","parent":"DMenu","type":"panelfunc","ispanel":true,"description":"Called when a option has been selected","realm":"Client","args":{"arg":[{"text":"The  that was selected","name":"option","type":"Panel","page":"DMenuOption"},{"text":"The options text","name":"optionText","type":"string"}]}}},
{"function":{"name":"OpenSubMenu","parent":"DMenu","type":"panelfunc","ispanel":true,"description":"Closes any active sub menus, and opens a new one.","realm":"Client","args":{"arg":[{"text":"The  to open the submenu at","name":"item","type":"Panel","page":"DMenuOption"},{"text":"The submenu to open. If set to nil, the function just closes existing submenus.","name":"menu","type":"Panel","default":"nil"}]}}},
{"function":{"name":"HighlightItem","parent":"DMenu","type":"panelfunc","ispanel":true,"description":{"text":"Highlights selected item in the  by setting the item's key \"Highlight\" to true.\n\nDoesn't appear to be working or used.","deprecated":"","page":"DMenu"},"realm":"Client","args":{"arg":{"text":"The item to highlight.","name":"item","type":"Panel"}}}},
{"function":{"name":"Open","parent":"DMenu","type":"panelfunc","ispanel":true,"description":"Opens the DMenu at the current mouse position","realm":"Client","args":{"arg":[{"text":"Position (X coordinate) to open the menu at.","name":"x","type":"number","default":"gui.MouseX()"},{"text":"Position (Y coordinate) to open the menu at.","name":"y","type":"number","default":"gui.MouseY()"},{"text":"This argument does nothing.","name":"skipanimation","type":"any"},{"name":"ownerpanel","type":"Panel"}]}}},
{"function":{"name":"Hide","parent":"DMenu","type":"panelfunc","ispanel":true,"description":"Used to safely hide (not remove) the menu. This will also hide any opened submenues recursively.","realm":"Client"}},
{"function":{"name":"GetOpenSubMenu","parent":"DMenu","type":"panelfunc","ispanel":true,"description":{"text":"Returns the currently opened submenu.\n\nUsed internally to store the open submenu by , .","internal":"","page":["DMenu:Hide","DMenu:OpenSubMenu"]},"realm":"Client","rets":{"ret":{"text":"The currently opened submenu, if any.","name":"","type":"Panel"}}}},
{"function":{"name":"GetMinimumWidth","parent":"DMenu","type":"panelfunc","ispanel":true,"description":{"text":"Returns the minimum width of the  in pixels","page":"DMenu"},"realm":"Client","rets":{"ret":{"text":"the minimum width of the","name":"","type":"number","page":"DMenu"}}}},
{"function":{"name":"GetMaxHeight","parent":"DMenu","type":"panelfunc","ispanel":true,"description":{"text":"Returns the maximum height of the .","page":"DMenu"},"realm":"Client","rets":{"ret":{"text":"The maximum height in pixels","name":"","type":"number"}}}},
{"function":{"name":"GetDrawColumn","parent":"DMenu","type":"panelfunc","ispanel":true,"description":{"text":"Returns whether the  should draw the icon column with a different color or not.\n\nSee","page":["DMenu","DMenu:SetDrawColumn"]},"realm":"Client","rets":{"ret":{"text":"Whether to draw the column or not","name":"","type":"boolean"}}}},
{"function":{"name":"GetDrawBorder","parent":"DMenu","type":"panelfunc","ispanel":true,"description":{"text":"Returns the value set by .","deprecated":"","page":"DMenu:SetDrawBorder"},"realm":"Client","rets":{"ret":{"name":"","type":"boolean"}}}},
{"function":{"name":"GetDeleteSelf","parent":"DMenu","type":"panelfunc","ispanel":true,"description":{"text":"Set by","deprecated":"","page":"DMenu:SetDeleteSelf"},"realm":"Client","rets":{"ret":{"name":"","type":"boolean"}}}},
{"function":{"name":"GetChild","parent":"DMenu","type":"panelfunc","ispanel":true,"description":"Gets a child by its index.","realm":"Client","args":{"arg":{"text":"The index of the child to get.","name":"childIndex","type":"number","note":{"text":"Unlike , this index starts at 1.","page":"Panel:GetChild"}}}}},
{"function":{"name":"CloseSubMenu","parent":"DMenu","type":"panelfunc","ispanel":true,"description":{"text":"Used internally by .","internal":"","page":"DMenu:OpenSubMenu"},"realm":"Client","args":{"arg":{"text":"The menu to close","name":"menu","type":"Panel"}}}},
{"function":{"name":"ClearHighlights","parent":"DMenu","type":"panelfunc","ispanel":true,"description":{"text":"Clears all highlights made by .\n\nDoesn't appear to be used or do anything.","deprecated":"","page":"DMenu:HighlightItem"},"realm":"Client"}},
{"function":{"name":"ChildCount","parent":"DMenu","type":"panelfunc","ispanel":true,"description":{"text":"Returns the number of child elements of 's .","page":["DMenu","DScrollPanel:GetCanvas"]},"realm":"Client","rets":{"ret":{"text":"The number of child elements","name":"","type":"number"}}}},
{"function":{"name":"AddSpacer","parent":"DMenu","type":"panelfunc","ispanel":true,"description":"Adds a horizontal line spacer.","realm":"Client"},"example":{"description":"Creates a DMenu with 3 options and adds a spacer before the third.","code":"local m = DermaMenu()\n\nm:AddOption( \"Kill yourself\", function() RunConsoleCommand( \"kill\" ) end ) -- Add first option\nm:AddOption( \"Disconnect\", function() RunConsoleCommand( \"disconnect\" ) end ) -- Add second option\n\nm:AddSpacer() -- Add a spacer\n\nm:AddOption( \"Say hi\", function() RunConsoleCommand( \"say\", \"Hi!\" ) end ) -- Add third option\n\nm:Open() -- Show our menu","output":{"image":{"src":"DMenu_spacer.png"}}}},
{"function":{"name":"AddSpacer","parent":"DMenu","type":"panelfunc","ispanel":true,"description":"Adds a horizontal line spacer.","realm":"Client"},"example":{"description":"Creates a DMenu with 3 options and adds a spacer before the third.","code":"local m = DermaMenu()\n\nm:AddOption( \"Kill yourself\", function() RunConsoleCommand( \"kill\" ) end ) -- Add first option\nm:AddOption( \"Disconnect\", function() RunConsoleCommand( \"disconnect\" ) end ) -- Add second option\n\nm:AddSpacer() -- Add a spacer\n\nm:AddOption( \"Say hi\", function() RunConsoleCommand( \"say\", \"Hi!\" ) end ) -- Add third option\n\nm:Open() -- Show our menu","output":{"image":{"src":"DMenu_spacer.png"}}}},
{"function":{"name":"AddPanel","parent":"DMenu","type":"panelfunc","ispanel":true,"description":{"text":"Adds a panel to the  as if it were an option.\n\nThis invokes  and will not create a new panel if a class name is passed, unlike .","page":["DMenu","DScrollPanel:AddItem","Panel:Add"]},"realm":"Client","args":{"arg":{"text":"The panel that you want to add.","name":"pnl","type":"Panel"}}},"example":{"description":"Creates a DMenu with some options and places a red DPanel between them.","code":"local m = DermaMenu()\n\nm:AddOption( \"Kill yourself\", function() RunConsoleCommand( \"kill\" ) end ) -- Add first option\nm:AddSpacer()\n\n-- Create a red DPanel\nlocal panel = vgui.Create( \"DPanel\", m )\npanel:SetSize( 50, 100 )\npanel:SetBackgroundColor( Color( 255, 0, 0 ) )\n\nm:AddPanel( panel ) -- Add the panel\n\nm:AddSpacer()\nm:AddOption( \"Say hi\", function() RunConsoleCommand( \"say\", \"Hi!\" ) end ) -- Add second option\n\nm:Open() -- Show our menu","output":{"image":{"src":"DMenu_AddPanel_eg.png"}}}},
{"function":{"name":"AddOption","parent":"DMenu","type":"panelfunc","ispanel":true,"description":"Add an option to the DMenu","realm":"Client","args":{"arg":[{"text":"Name of the option.","name":"name","type":"string"},{"text":"Function to execute when this option is clicked.","name":"func","type":"function","default":"nil"}]},"rets":{"ret":{"text":"Returns the created  panel.","name":"","type":"Panel","page":"DMenuOption"}}},"example":{"description":"Creates a DMenu with 2 options: One that kills yourself; One that does nothing.","code":"local m = DermaMenu()\n\nm:AddOption( \"Suicide\", function() RunConsoleCommand(\"kill\") end )\nm:AddOption( \"It does nothing\" )\n\nm:Open()"}},
{"function":{"name":"SetColumnText","parent":"DListView_Line","type":"panelfunc","ispanel":true,"description":{"text":"Sets the string held in the specified column of a  panel.","page":"DListView_Line"},"realm":"Client","args":{"arg":[{"text":"The number of the column to write the text from, starts with 1.","name":"column","type":"number"},{"text":"Column text you want to set","name":"value","type":"string"}]}}},
{"function":{"name":"AddCVar","parent":"DMenu","type":"panelfunc","ispanel":true,"description":{"text":"Creates a  and adds it as an option into the menu. Checking and unchecking the option will alter the given console variable's value.","page":"DMenuOptionCVar"},"realm":"Client","args":{"text":".","arg":[{"text":"The text of the button","name":"strText","type":"string"},{"text":"The console variable to change","name":"convar","type":"string"},{"text":"The value of the console variable to set when the option is checked","name":"on","type":"string"},{"text":"The value of the console variable to set when the option is unchecked","name":"off","type":"string"},{"text":"If set, the function will be called every time the option is pressed/clicked/selected.\n\nIt will have only one argument:\n pnl - The created","name":"funcFunction","type":"function","default":"nil","page":["Panel","DMenuOptionCVar"]}]},"rets":{"ret":{"text":"The created","name":"","type":"Panel","page":"DMenuOptionCVar"}}}},
{"function":{"name":"GetColumnText","parent":"DListView_Line","type":"panelfunc","ispanel":true,"description":{"text":"Gets the string held in the specified column of a  panel.\n\nThis is the same thing as doing ( column_number ).","page":["DListView_Line","DListView_Line:GetValue"]},"realm":"Client","args":{"arg":{"text":"The number of the column to retrieve the text from, starts with 1.","name":"column","type":"number"}},"rets":{"ret":{"text":"The contents of the specified column.","name":"","type":"string"}}},"example":{"code":"local dframe = vgui.Create(\"DFrame\")\ndframe:SetSize(450, 350)\ndframe:Center()\n\nlocal dlist = vgui.Create(\"DListView\", dframe)\ndlist:Dock(FILL)\ndlist:SetMultiSelect(false)\ndlist:AddColumn(\"Name\")\ndlist:AddColumn(\"SteamID\")\ndlist:AddLine(\"Stalker\", \"STEAM_0:1:18093014\")\nfunction dlist:DoDoubleClick(linenumber, lineinfo)\n\tprint(lineinfo:GetColumnText(2))\nend","output":"Prints \"STEAM_0:1:18093014\" when the line containing Stalker is double clicked."}},
{"function":{"name":"SetWidth","parent":"DListView_Column","type":"panelfunc","ispanel":true,"description":"Sets the width of the panel.","realm":"Client","args":{"arg":{"text":"The number value which will determine panel width.","name":"width","type":"number"}}},"example":{"description":"Creates a DListView and populates it with two columns and two items, only one of which can be selected at a time.\n\nThe first column width is 15.\nThe second column width is 350.","code":"local Frame = vgui.Create( \"DFrame\" )\nFrame:SetSize( 500, 500 )\nFrame:Center()\nFrame:MakePopup()\n\nlocal SimpleList = vgui.Create( \"DListView\", Frame )\nSimpleList:Dock( FILL )\nSimpleList:SetMultiSelect( false )\n\nSimpleList:AddColumn( \"Column 1\" ):SetWidth(15)\nSimpleList:AddColumn( \"Column 2\" ):SetWidth(350)\n\nSimpleList:AddLine( \"First\", \"Column\" )\nSimpleList:AddLine( \"Second\", \"Column\" )","output":{"image":{"src":"DListView_Column_SetWidth.png"}}}},
{"function":{"name":"SetTextAlign","parent":"DListView_Column","type":"panelfunc","ispanel":true,"description":"Sets the text alignment for the column","realm":"Client","args":{"arg":{"text":"The direction of the content, based on the number pad.\n\n|   |   |   |\n| --- | --- | --- |\n| : **top-left** | : **top-center**\t| : **top-right** |\n| : **middle-left** | : **center** | : **middle-right** |\n| : **bottom-left** | : **bottom-center** | : **bottom-right** |","name":"alignment","type":"number","key":["7","8","9","4","5","6","1","2","3"]}}}},
{"function":{"name":"SetMinWidth","parent":"DListView_Column","type":"panelfunc","ispanel":true,"description":"Sets the minimum width of a column.","realm":"Client","args":{"arg":{"text":"The number value which will determine a minimum width.","name":"width","type":"number"}}},"example":{"description":"Creates a DListView and populates it with two columns and two items, only one of which can be selected at a time.\n\nThe second column can't be smaller than the argument value.","code":"local Frame = vgui.Create( \"DFrame\" )\nFrame:SetSize( 500, 500 )\nFrame:Center()\nFrame:MakePopup()\n\nlocal SimpleList = vgui.Create( \"DListView\", Frame )\nSimpleList:Dock( FILL )\nSimpleList:SetMultiSelect( false )\n\nSimpleList:AddColumn( \"Column 1\" )\nSimpleList:AddColumn( \"Column 2\" ):SetMinWidth(125)\n\nSimpleList:AddLine( \"First\", \"Column\" )\nSimpleList:AddLine( \"Second\", \"Column\" )","output":{"image":{"src":"DListView_Column_SetMinWidth.png"}}}},
{"function":{"name":"SetMaxWidth","parent":"DListView_Column","type":"panelfunc","ispanel":true,"description":"Sets the maximum width of a column.","realm":"Client","args":{"arg":{"text":"The number value which will determine a maximum width.","name":"width","type":"number"}}},"example":{"description":"Creates a DListView and populates it with two columns and two items, only one of which can be selected at a time.\n\nThe second column can't be bigger than the argument value.","code":"local Frame = vgui.Create( \"DFrame\" )\nFrame:SetSize( 500, 500 )\nFrame:Center()\nFrame:MakePopup()\n\nlocal SimpleList = vgui.Create( \"DListView\", Frame )\nSimpleList:Dock( FILL )\nSimpleList:SetMultiSelect( false )\n\nSimpleList:AddColumn( \"Column 1\" )\nSimpleList:AddColumn( \"Column 2\" ):SetMaxWidth(225)\n\nSimpleList:AddLine( \"First\", \"Column\" )\nSimpleList:AddLine( \"Second\", \"Column\" )","output":{"image":{"src":"DListView_Column_SetMaxWidth.png"}}}},
{"function":{"name":"SetFixedWidth","parent":"DListView_Column","type":"panelfunc","ispanel":true,"description":"Sets the fixed width of the column.","realm":"Client","args":{"arg":{"text":"The number value which will determine a fixed width.","name":"width","type":"number"}}},"example":{"description":"Creates a DListView and populates it with two columns and two items, only one of which can be selected at a time.\n\nThe first column will be longer than the second column.","code":"local Frame = vgui.Create( \"DFrame\" )\nFrame:SetSize( 500, 500 )\nFrame:Center()\nFrame:MakePopup()\n\nlocal SimpleList = vgui.Create( \"DListView\", Frame )\nSimpleList:Dock( FILL )\nSimpleList:SetMultiSelect( false )\n\nSimpleList:AddColumn( \"Column 1\" )\nSimpleList:AddColumn( \"Column 2\" ):SetFixedWidth(125)\n\nSimpleList:AddLine( \"First\", \"Column\" )\nSimpleList:AddLine( \"Second\", \"Column\" )","output":{"image":{"src":"DListView_Column_SetFixedWidth.png"}}}},
{"function":{"name":"SortByColumns","parent":"DListView","type":"panelfunc","ispanel":true,"description":"Sorts the list based on given columns.\n\nAll arguments are optional","realm":"Client","args":{"arg":[{"name":"column1","type":"number","default":"nil"},{"name":"descrending1","type":"boolean","default":"false"},{"name":"column2","type":"number","default":"nil"},{"name":"descrending2","type":"boolean","default":"false"},{"name":"column3","type":"number","default":"nil"},{"name":"descrending3","type":"boolean","default":"false"},{"name":"column4","type":"number","default":"nil"},{"name":"descrending4","type":"boolean","default":"false"}]}}},
{"function":{"name":"SortByColumn","parent":"DListView","type":"panelfunc","ispanel":true,"description":"Sorts the items in the specified column.","realm":"Client","args":{"arg":[{"text":"The index of the column that should be sorted.","name":"columnIndex","type":"number"},{"text":"Whether the items should be sorted in descending order or not.","name":"descending","type":"boolean","default":"false"}]}}},
{"function":{"name":"SetSortable","parent":"DListView","type":"panelfunc","ispanel":true,"description":"Enables/disables the sorting of columns by clicking.","realm":"Client","args":{"arg":{"text":"Whether sorting columns with clicking is allowed or not.","name":"isSortable","type":"boolean"}}}},
{"function":{"name":"SetMultiSelect","parent":"DListView","type":"panelfunc","ispanel":true,"description":{"text":"Sets whether multiple lines can be selected by the user by using the  or  keys. When set to false, only one line can be selected.","key":["Ctrl","Shift"]},"realm":"Client","args":{"arg":{"text":"Whether multiple lines can be selected or not","name":"allowMultiSelect","type":"boolean"}}}},
{"function":{"name":"SetHideHeaders","parent":"DListView","type":"panelfunc","ispanel":true,"description":"Sets whether the header line should be visible on not.","realm":"Client","args":{"arg":{"text":"Whether the header line should be visible on not.","name":"hide","type":"boolean"}}}},
{"function":{"name":"SetHeaderHeight","parent":"DListView","type":"panelfunc","ispanel":true,"description":{"text":"Sets the height of the header line of the .\n\nSee also .","page":["DListView","DListView:SetDataHeight"]},"realm":"Client","args":{"arg":{"text":"The new height to set. Default value is 16.","name":"height","type":"number"}}}},
{"function":{"name":"SetDirty","parent":"DListView","type":"panelfunc","ispanel":true,"description":{"text":"Used internally to signify if the  needs a rebuild.","internal":"","page":"DListView"},"realm":"Client","args":{"arg":{"name":"isDirty","type":"boolean"}}}},
{"function":{"name":"SetDataHeight","parent":"DListView","type":"panelfunc","ispanel":true,"description":{"text":"Sets the height of all lines of the  except for the header line.\n\nSee also .","page":["DListView","DListView:SetHeaderHeight"]},"realm":"Client","args":{"arg":{"text":"The new height to set. Default value is 17.","name":"height","type":"number"}}}},
{"function":{"name":"SelectItem","parent":"DListView","type":"panelfunc","ispanel":true,"description":"Selects a line in the listview.","realm":"Client","args":{"arg":{"text":"The line to select.","name":"Line","type":"Panel"}}}},
{"function":{"name":"SelectFirstItem","parent":"DListView","type":"panelfunc","ispanel":true,"description":"Selects the line at the first index of the DListView if one has been added.","realm":"Client"}},
{"function":{"name":"RemoveLine","parent":"DListView","type":"panelfunc","ispanel":true,"description":"Removes a line from the list view.","realm":"Client","args":{"arg":{"text":"Removes the given row, by row id (same number as ).","name":"line","type":"number","page":"DListView:GetLine"}}}},
{"function":{"name":"OnRowSelected","parent":"DListView","type":"panelfunc","ispanel":true,"description":{"text":"Called internally by  when a line is selected. This is the function you should override to define the behavior when a line is selected.","page":"DListView:OnClickLine"},"realm":"Client","args":{"arg":[{"text":"The index of the row/line that the user clicked on.","name":"rowIndex","type":"number"},{"text":"The  that the user clicked on.","name":"row","type":"Panel","page":"DListView_Line"}]}},"example":{"description":"Prints the first two column values of the row that was clicked. In this example it's the nickname and kills of the player selected in the list","code":"local frame = vgui.Create( \"DFrame\" )\nframe:SetSize( 300, 300 )\nframe:MakePopup()\n\nlocal listView = frame:Add( \"DListView\" )\nlistView:Dock( FILL )\n\nlistView:AddColumn( \"Nick\" )\nlistView:AddColumn( \"Frags\" )\n\nfor _, v in pairs( player.GetAll() ) do\n\tlistView:AddLine( v:Nick(), v:Frags() )\nend\nlistView.OnRowSelected = function( panel, rowIndex, row )\n\tprint( row:GetValue( 1 ) )\n\tprint( row:GetValue( 2 ) )\nend"}},
{"function":{"name":"OnRowRightClick","parent":"DListView","type":"panelfunc","ispanel":true,"description":"Called when a row is right-clicked","realm":"Client","args":{"arg":[{"text":"The line ID of the right clicked line","name":"lineID","type":"number"},{"text":"The line panel itself, a .","name":"line","type":"Panel","page":"DListView_Line"}]}}},
{"function":{"name":"OnRequestResize","parent":"DListView","type":"panelfunc","ispanel":true,"description":{"text":"Called from .","internal":"","page":"DListView_Column"},"realm":"Client","args":{"arg":[{"text":"The column which initialized the resize","name":"column","type":"Panel"},{"name":"size","type":"number"}]}}},
{"function":{"name":"OnClickLine","parent":"DListView","type":"panelfunc","ispanel":true,"description":{"text":"Called whenever a line is clicked.","internal":{"text":"Use  instead!","page":"DListView:OnRowSelected"}},"realm":"Client","args":{"arg":[{"text":"The selected line.","name":"line","type":"Panel"},{"text":"Boolean indicating whether the line is selected.","name":"isSelected","type":"boolean"}]}}},
{"function":{"name":"GetSortedID","parent":"DListView","type":"panelfunc","ispanel":true,"description":{"text":"Converts LineID to SortedID","internal":""},"realm":"Client","args":{"arg":{"text":"The  of a line to look up","name":"lineId","type":"number","page":"DListView_Line:GetID"}},"rets":{"ret":{"name":"","type":"number"}}}},
{"function":{"name":"GetSortable","parent":"DListView","type":"panelfunc","ispanel":true,"description":{"text":"Returns whether sorting of columns by clicking their headers is allowed or not.\n\nSee also .","page":"DListView:SetSortable"},"realm":"Client","rets":{"ret":{"text":"Whether sorting of columns by clicking their headers is allowed or not","name":"","type":"boolean"}}}},
{"function":{"name":"GetSelected","parent":"DListView","type":"panelfunc","ispanel":true,"description":"Gets all of the lines that are currently selected.","realm":"Client","rets":{"ret":{"text":"A table of s.","name":"","type":"table","page":"DListView_Line"}}}},
{"function":{"name":"GetMultiSelect","parent":"DListView","type":"panelfunc","ispanel":true,"description":{"text":"Returns whether multiple lines can be selected or not.\n\nSee .","page":"DListView:SetMultiSelect"},"realm":"Client","rets":{"ret":{"text":"Whether multiple lines can be selected or not.","name":"","type":"boolean"}}}},
{"function":{"name":"GetSelectedLine","parent":"DListView","type":"panelfunc","ispanel":true,"description":{"text":"Gets the currently selected  index.\n\nIf  is set to true, only the first line of all selected lines will be returned. Use  instead to get all of the selected lines.","page":["DListView_Line","DListView:SetMultiSelect","DListView:GetSelected"]},"realm":"Client","rets":{"ret":[{"text":"The index of the currently selected line.","name":"","type":"number"},{"text":"The currently selected .","name":"","type":"Panel","page":"DListView_Line"}]}}},
{"function":{"name":"GetLines","parent":"DListView","type":"panelfunc","ispanel":true,"description":"Gets all of the lines added to the DListView.","realm":"Client","rets":{"ret":{"text":"The lines added to the DListView.","name":"","type":"table"}}},"example":{"description":"Loops through all of the lines of a DListView and prints their first value.","code":"local list = vgui.Create( \"DListView\" )\nlist:AddColumn( \"Fruit\" )\n\nlocal lines = { \"Apple\", \"Orange\", \"Banana\" }\n\nfor _, line in pairs( lines ) do\n    list:AddLine( line )\nend\n\nfor k, line in pairs( list:GetLines() ) do\n    print( k, line:GetValue( 1 ) )\nend","output":{"text":"1 Apple\n2 Orange\n3 Banana","br":["",""]}}},
{"function":{"name":"GetInnerTall","parent":"DListView","type":"panelfunc","ispanel":true,"description":{"text":"Returns the height of .\n\nIntended to represent the height of all data lines.","page":"DListView:GetCanvas"},"realm":"Client","rets":{"ret":{"text":"The height of .","name":"","type":"number","page":"DListView:GetCanvas"}}}},
{"function":{"name":"GetLine","parent":"DListView","type":"panelfunc","ispanel":true,"description":{"text":"Gets the  at the given index.","page":"DListView_Line"},"realm":"Client","args":{"arg":{"text":"The index of the line to get.","name":"id","type":"number"}},"rets":{"ret":{"text":"The  at the given index.","name":"","type":"Panel","page":"DListView_Line"}}},"example":{"description":"An example of how to retrieve a DListView_Line from a DListView.","code":"local list = vgui.Create( \"DListView\" )\nlist:AddColumn( \"Name\" )\nlist:AddLine( \"Garry :D\" )\n\nprint( list:GetLine( 1 ) )","output":"Panel: [name:DListView_Line][class:Panel][0,0,64,24]"}},
{"function":{"name":"GetHideHeaders","parent":"DListView","type":"panelfunc","ispanel":true,"description":"Returns whether the header line should be visible on not.","realm":"Client","rets":{"ret":{"text":"Whether the header line should be visible on not.","name":"","type":"boolean"}}}},
{"function":{"name":"GetHeaderHeight","parent":"DListView","type":"panelfunc","ispanel":true,"description":{"text":"Returns the height of the header of the .\n\nSee also .","page":["DListView","DListView:SetHeaderHeight"]},"realm":"Client","rets":{"ret":{"text":"The height of the header of the .","name":"","type":"number","page":"DListView"}}}},
{"function":{"name":"GetDirty","parent":"DListView","type":"panelfunc","ispanel":true,"description":{"text":"See .","internal":"","page":"DListView:SetDirty"},"realm":"Client","rets":{"ret":{"name":"","type":"boolean"}}}},
{"function":{"name":"GetCanvas","parent":"DListView","type":"panelfunc","ispanel":true,"description":"Gets the canvas.","realm":"Client","rets":{"ret":{"text":"The canvas.","name":"","type":"Panel"}}}},
{"function":{"name":"GetDataHeight","parent":"DListView","type":"panelfunc","ispanel":true,"description":{"text":"Returns the height of the data of the .\n\nSee also .","page":["DListView","DListView:SetDataHeight"]},"realm":"Client","rets":{"ret":{"text":"The height of the data of the .","name":"","type":"number","page":"DListView"}}}},
{"function":{"name":"GetDataHeight","parent":"DListView","type":"panelfunc","ispanel":true,"description":{"text":"Returns the height of the data of the .\n\nSee also .","page":["DListView","DListView:SetDataHeight"]},"realm":"Client","rets":{"ret":{"text":"The height of the data of the .","name":"","type":"number","page":"DListView"}}}},
{"function":{"name":"DoDoubleClick","parent":"DListView","type":"panelfunc","ispanel":true,"description":"Called when a line in the DListView is double clicked.","realm":"Client","args":{"arg":[{"text":"The line number of the double clicked line.","name":"lineID","type":"number"},{"text":"The double clicked .","name":"line","type":"Panel","page":"DListView_Line"}]}},"example":{"description":"Demonstrates the use of this function.","code":"local DList = vgui.Create(\"DListView\")\nDList:SetPos(5,50)\nDList:SetSize(150, 245)\nDList:AddColumn(\"Player Names\")\n\nfor k, v in pairs( player.GetAll() ) do\n\tDList:AddLine(v:Name())\nend\n\nfunction DList:DoDoubleClick( lineID, line )\n\tMsgN( \"Line \" .. lineID .. \" was double clicked!\" )\nend","output":"The double clicked line number is printed, e.g.\n\n\n\n\n```\nLine 6 was double clicked!\n```"}},
{"function":{"name":"DisableScrollbar","parent":"DListView","type":"panelfunc","ispanel":true,"description":"Removes the scrollbar.","realm":"Client"}},
{"function":{"name":"DataLayout","parent":"DListView","type":"panelfunc","ispanel":true,"description":"Creates the lines and gets the height of the contents, in a DListView.","realm":"Client","rets":{"ret":{"text":"The height of the contents","name":"","type":"number"}}}},
{"function":{"name":"ClearSelection","parent":"DListView","type":"panelfunc","ispanel":true,"description":"Clears the current selection in the DListView.","realm":"Client"}},
{"function":{"name":"ColumnWidth","parent":"DListView","type":"panelfunc","ispanel":true,"description":"Gets the width of a column.","realm":"Client","args":{"arg":{"text":"The column to get the width of.","name":"column","type":"number"}},"rets":{"ret":{"text":"Width of the column.","name":"","type":"number"}}}},
{"function":{"name":"Clear","parent":"DListView","type":"panelfunc","ispanel":true,"description":"Removes all lines that have been added to the DListView.","realm":"Client"}},
{"function":{"name":"AddLine","parent":"DListView","type":"panelfunc","ispanel":true,"description":"Adds a line to the list view.","realm":"Client","args":{"arg":{"text":"Values for a new row in the DListView, If several arguments are supplied, each argument will correspond to a respective column in the DListView.","name":"text","type":"vararg"}},"rets":{"ret":{"text":"The newly created .","name":"","type":"Panel","page":"DListView_Line"}}}},
{"function":{"name":"AddColumn","parent":"DListView","type":"panelfunc","ispanel":true,"description":"Adds a column to the listview.","realm":"Client","args":{"arg":[{"text":"The name of the column to add.","name":"column","type":"string"},{"text":"Sets the ordering of this column compared to other columns.","name":"position","type":"number"}]},"rets":{"ret":{"text":"The newly created .","name":"","type":"Panel","page":"DListView_Column"}}}},
{"function":{"name":"SetTextStyleColor","parent":"DLabelURL","type":"panelfunc","ispanel":true,"description":{"text":"Sets the base text color of the . This is overridden by .","page":["DLabelURL","DLabelURL:SetTextColor"]},"realm":"Client","args":{"arg":{"text":"The  to set","name":"color","type":"table","page":"Global.Color"}}}},
{"function":{"name":"SetTextColor","parent":"DLabelURL","type":"panelfunc","ispanel":true,"description":{"text":"Sets the text color of the . Overrides .\n\n\nThis should only be used immediately after it is created, and otherwise .","page":["DLabelURL","DLabelURL:SetTextStyleColor","Panel:SetFGColor"]},"realm":"Client","args":{"arg":{"text":"The  to use.","name":"col","type":"table","page":"Global.Color"}}}},
{"function":{"name":"SetColor","parent":"DLabelURL","type":"panelfunc","ispanel":true,"description":{"text":"Alias of .","page":"DLabelURL:SetTextColor"},"realm":"Client","args":{"arg":{"text":"The  to use.","name":"col","type":"table","page":"Global.Color"}}}},
{"function":{"name":"GetTextStyleColor","parent":"DLabelURL","type":"panelfunc","ispanel":true,"description":{"text":"Returns the color set by .","page":"DLabelURL:SetTextStyleColor"},"realm":"Client","rets":{"ret":{"text":"The","name":"","type":"table","page":"Color"}}}},
{"function":{"name":"GetTextColor","parent":"DLabelURL","type":"panelfunc","ispanel":true,"description":{"text":"Gets the current text color of the  set by .","page":["DLabelURL","DLabelURL:SetTextColor"]},"realm":"Client","rets":{"ret":{"text":"The current text .","name":"","type":"table","page":"Global.Color"}}}},
{"function":{"name":"GetColor","parent":"DLabelURL","type":"panelfunc","ispanel":true,"description":{"text":"Gets the current text color of the . Alias as .","page":["DLabelURL","DLabelURL:GetTextColor"]},"realm":"Client","rets":{"ret":{"text":"The current text .","name":"","type":"table","page":"Global.Color"}}}},
{"function":{"name":"OnLabelTextChanged","parent":"DLabelEditable","type":"panelfunc","ispanel":true,"description":"A hook called when the player presses Enter (i.e. the finished editing the label) and the text has changed.\n\nAllows you to override/modify the text that will be set to display.","realm":"Client","args":{"arg":{"text":"The original user input text","name":"txt","type":"string"}},"rets":{"ret":{"text":"If provided, will override the text that will be applied to the label itself.","name":"","type":"string"}}}},
{"function":{"name":"UpdateFGColor","parent":"DLabel","type":"panelfunc","ispanel":true,"description":{"text":"Called internally to update the color of the text.","internal":""},"realm":"Client"}},
{"text":"Condition |  Value |\n----------|-------|\n| self.m_bBright | skin.Colours.Label.Bright |\n| self.m_bDark | skin.Colours.Label.Dark |\n| self.m_bHighlight | skin.Colours.Label.Highlight |","function":{"name":"UpdateColours","parent":"DLabel","type":"panelfunc","ispanel":true,"file":{"text":"lua/vgui/dlabel.lua","line":"289-279"},"description":{"text":"A hook called from within  to determine the color of the text on display.","page":"DLabel:ApplySchemeSettings"},"realm":"Client","args":{"arg":{"text":"A table supposed to contain the color values listed above.","name":"skin","type":"table"}}}},
{"function":{"name":"Toggle","parent":"DLabel","type":"panelfunc","ispanel":true,"description":{"text":"Toggles the label's state. This can be set and retrieved with  and .\n\nIn order to use toggle functionality, you must first call  with `true`, as it is disabled by default.","page":["DLabel:SetToggle","DLabel:GetToggle","DLabel:SetIsToggle"]},"realm":"Client"}},
{"function":{"name":"SetToggle","parent":"DLabel","type":"panelfunc","ispanel":true,"description":{"text":"Sets the toggle state of the label. This can be retrieved with  and toggled with .\n\nIn order to use toggle functionality, you must first call  with `true`, as it is disabled by default.","page":["DLabel:GetToggle","DLabel:Toggle","DLabel:SetIsToggle"]},"realm":"Client","args":{"arg":{"text":"The toggle state to be set.","name":"toggleState","type":"boolean"}}}},
{"function":{"name":"SetTextColor","parent":"DLabel","type":"panelfunc","ispanel":true,"description":{"text":"Sets the text color of the . This will take precedence over .","page":["DLabel","DLabel:SetTextStyleColor"]},"realm":"Client","args":{"arg":{"text":"The text color. Uses the .","name":"color","type":"table","page":"Color"}}},"example":{"description":"Changes the text color to red.","code":"local frame = vgui.Create( \"DFrame\" )\nframe:SetTitle( \"Text Color Example\" )\nframe:SetSize( 300, 100 )\nframe:Center()\nframe:MakePopup()\n\nlocal frame_label = vgui.Create( \"DLabel\", frame )\nframe_label:SetPos( 10, 30 )\nframe_label:SetTextColor( Color( 255, 0, 0) )"}},
{"function":{"name":"SetTextStyleColor","parent":"DLabel","type":"panelfunc","ispanel":true,"description":{"text":"Used by ,  and  to set the text color without affecting  calls.","internal":{"text":"Use  instead!","page":"DLabel:SetTextColor"},"page":["DLabel:SetDark","DLabel:SetBright","DLabel:SetHighlight","DLabel:SetTextColor"]},"realm":"Client","args":{"arg":{"text":"The text color. Uses the .","name":"color","type":"table","page":"Color"}}}},
{"function":{"name":"SetIsToggle","parent":"DLabel","type":"panelfunc","ispanel":true,"description":{"text":"Enables or disables toggle functionality for a label. Retrieved with .\n\nYou must call this before using ,  or .","page":["DLabel:GetIsToggle","DLabel:SetToggle","DLabel:GetToggle","DLabel:Toggle"]},"realm":"Client","args":{"arg":{"text":"Whether or not to enable toggle functionality.","name":"allowToggle","type":"boolean"}}}},
{"function":{"name":"SetHighlight","parent":"DLabel","type":"panelfunc","ispanel":true,"description":{"text":"Sets the color of the text to the highlight text color defined in the skin.\n\nFor the default Derma skin this makes the label red.\n\nSee also  and .\n\nYou should only consider using this if you are using background elements that are not manually painted and are using the skin colors.","deprecated":{"text":"You really should use .","page":"DLabel:SetTextColor"},"page":["DLabel:SetBright","DLabel:SetDark"]},"realm":"Client","args":{"arg":{"text":"true to set the label's color to skins's text highlight color, false otherwise.","name":"highlight","type":"boolean"}}}},
{"function":{"name":"SetFont","parent":"DLabel","type":"panelfunc","ispanel":true,"description":"Sets the font of the label.","realm":"Client","args":{"arg":{"text":"The name of the font.\n\nSee  for a list of existing fonts.\nAlternatively, use  to create your own custom font.","name":"fontName","type":"string","page":[",hereDefault_Fonts","surface.CreateFont"]}}}},
{"function":{"name":"SetDoubleClickingEnabled","parent":"DLabel","type":"panelfunc","ispanel":true,"description":{"text":"Sets whether or not double clicking should call .\n\nThis is enabled by default.","page":"DLabel:DoDoubleClick"},"realm":"Client","args":{"arg":{"text":"true to enable, false to disable","name":"enable","type":"boolean"}}}},
{"function":{"name":"SetDisabled","parent":"DLabel","type":"panelfunc","ispanel":true,"description":{"text":"Sets the disabled state of the .\n\nWhen disabled, the label does not respond to click, toggle or drag & drop actions.","deprecated":{"text":"Use  instead.","page":"Panel:SetEnabled"},"page":"DLabel"},"realm":"Client","args":{"arg":{"text":"`true` to disable the DLabel, `false` to enable it.","name":"disable","type":"boolean"}}}},
{"function":{"name":"SetDark","parent":"DLabel","type":"panelfunc","ispanel":true,"description":{"text":"Sets the color of the text to the dark text color defined in the skin.\n\nSee also  and .\n\nYou should only consider using this if you are using background elements that are not manually painted and are using the skin colors.","deprecated":{"text":"You really should use .","page":"DLabel:SetTextColor"},"page":["DLabel:SetBright","DLabel:SetHighlight"]},"realm":"Client","args":{"arg":{"text":"Whenever to set the text to dark or not.","name":"dark","type":"boolean"}}}},
{"function":{"name":"SetColor","parent":"DLabel","type":"panelfunc","ispanel":true,"description":{"text":"Changes color of label. Alias of .","page":"DLabel:SetTextColor"},"realm":"Client","args":{"arg":{"text":"The color to set. Uses the Color structure.","name":"color","type":"table"}}},"example":{"description":"Creates a label and changes it color to red.","code":"local DLabel = vgui.Create( \"DLabel\" )\nDLabel:SetPos( 90, 50 )\nDLabel:SetColor(Color(255, 0, 0))\nDLabel:SetText( \"Hello world.\" )\nDLabel:SizeToContents()"}},
{"function":{"name":"SetBright","parent":"DLabel","type":"panelfunc","ispanel":true,"description":{"text":"Sets the color of the text to the bright text color defined in the skin.\n\nSee also  and .\n\nYou should only consider using this if you are using background elements that are not manually painted and are using the skin colors.","deprecated":{"text":"You really should use .","page":"DLabel:SetTextColor"},"page":["DLabel:SetDark","DLabel:SetHighlight"]},"realm":"Client","args":{"arg":{"text":"Whenever to set the text to bright or not.","name":"bright","type":"boolean"}}}},
{"function":{"name":"SetAutoStretchVertical","parent":"DLabel","type":"panelfunc","ispanel":true,"description":"Automatically adjusts the height of the label dependent of the height of the text inside of it.","realm":"Client","args":{"arg":{"text":"Whenever to stretch the label vertically or not.","name":"stretch","type":"boolean"}}}},
{"function":{"name":"OnToggled","parent":"DLabel","type":"panelfunc","ispanel":true,"description":{"text":"Called when the toggle state of the label is changed by .\n\nIn order to use toggle functionality, you must first call  with `true`, as it is disabled by default.","page":["DLabel:Toggle","DLabel:SetIsToggle"]},"realm":"Client","args":{"arg":{"text":"The new toggle state.","name":"toggleState","type":"boolean"}}}},
{"function":{"name":"OnReleased","parent":"DLabel","type":"panelfunc","ispanel":true,"description":{"text":"Called when the player releases any mouse button on the label. This is always called after .\n\nThis works as an alternative to  as that hook is used heavily by  and overriding it will break functionality.\n\nSee also , ,  and .","page":["DLabel:OnDepressed","PANEL:OnMouseReleased","DLabel","DLabel:DoClick","DLabel:DoMiddleClick","DLabel:DoRightClick","DLabel:DoDoubleClick"]},"realm":"Client"},"example":{"description":"Changes the text of the label when the hook is called.","code":"local frame = vgui.Create( \"DFrame\" )\nframe:SetTitle( \"OnDepressed/Released Example\" )\nframe:SetSize( 300, 100 )\nframe:Center()\nframe:MakePopup()\n\nlocal frame_label = vgui.Create( \"DLabel\", frame )\nframe_label:SetPos( 10, 30 )\nframe_label:SetTextColor( Color( 255, 255, 255 ) )\nframe_label:SetText( \"Click me!\" )\nframe_label:SizeToContents()\nframe_label:SetMouseInputEnabled( true )\nframe_label.OnDepressed = function( s )\n\ts:SetText( \"OnDepressed\" )\n\tframe_label:SizeToContents()\nend\nframe_label.OnReleased = function( s )\n\ts:SetText( \"OnReleased\" )\n\tframe_label:SizeToContents()\nend"}},
{"function":{"name":"GetToggle","parent":"DLabel","type":"panelfunc","ispanel":true,"description":{"text":"Returns the current toggle state of the label. This can be set with  and toggled with .\n\nIn order to use toggle functionality, you must first call  with `true`, as it is disabled by default.","page":["DLabel:SetToggle","DLabel:Toggle","DLabel:SetIsToggle"]},"realm":"Client","rets":{"ret":{"text":"The current toggle state.","name":"","type":"boolean"}}}},
{"function":{"name":"OnDepressed","parent":"DLabel","type":"panelfunc","ispanel":true,"description":{"text":"Called when the player presses the label with any mouse button.\n\nThis works as an alternative to  as that hook is used heavily by  and overriding it will break functionality.\n\nSee also , , ,  and .","page":["PANEL:OnMousePressed","DLabel","DLabel:DoClick","DLabel:DoMiddleClick","DLabel:DoRightClick","DLabel:OnReleased","DLabel:DoDoubleClick"]},"realm":"Client"},"example":{"description":"Changes the text of the label when the hook is called.","code":"local frame = vgui.Create( \"DFrame\" )\nframe:SetTitle( \"OnDepressed/Released Example\" )\nframe:SetSize( 300, 100 )\nframe:Center()\nframe:MakePopup()\n\nlocal frame_label = vgui.Create( \"DLabel\", frame )\nframe_label:SetPos( 10, 30 )\nframe_label:SetTextColor( Color( 255, 255, 255 ) )\nframe_label:SetText( \"Click me!\" )\nframe_label:SizeToContents()\nframe_label:SetMouseInputEnabled( true )\nframe_label.OnDepressed = function( s )\n\ts:SetText( \"OnDepressed\" )\n\tframe_label:SizeToContents()\nend\nframe_label.OnReleased = function( s )\n\ts:SetText( \"OnReleased\" )\n\tframe_label:SizeToContents()\nend"}},
{"function":{"name":"GetTextStyleColor","parent":"DLabel","type":"panelfunc","ispanel":true,"description":{"text":"Returns the \"internal\" or fallback color of the text.\n\nSee also  and .","internal":"","page":["DLabel:GetTextColor","DLabel:SetTextStyleColor"]},"realm":"Client","rets":{"ret":{"text":"The \"internal\" color of the text","name":"","type":"table"}}}},
{"function":{"name":"GetTextColor","parent":"DLabel","type":"panelfunc","ispanel":true,"description":{"text":"Returns the \"override\" text color, set by .","page":"DLabel:SetTextColor"},"realm":"Client","rets":{"ret":{"text":"The color of the text, or nil.","name":"","type":"table"}}}},
{"function":{"name":"GetIsToggle","parent":"DLabel","type":"panelfunc","ispanel":true,"description":{"text":"Returns whether the toggle functionality is enabled for a label. Set with .","page":"DLabel:SetIsToggle"},"realm":"Client","rets":{"ret":{"text":"Whether or not toggle functionality is enabled.","name":"","type":"boolean"}}}},
{"function":{"name":"GetFont","parent":"DLabel","type":"panelfunc","ispanel":true,"description":{"text":"Returns the current font of the DLabel. This is set with .","page":"DLabel:SetFont"},"realm":"Client","rets":{"ret":{"text":"The name of the font in use.","name":"","type":"string"}}}},
{"function":{"name":"GetDoubleClickingEnabled","parent":"DLabel","type":"panelfunc","ispanel":true,"description":{"text":"Returns whether or not double clicking will call .\n\nSee .","page":["DLabel:DoDoubleClick","DLabel:SetDoubleClickingEnabled"]},"realm":"Client","rets":{"ret":{"text":"true = enabled, false means disabled","name":"","type":"boolean"}}}},
{"function":{"name":"GetDoubleClickingEnabled","parent":"DLabel","type":"panelfunc","ispanel":true,"description":{"text":"Returns whether or not double clicking will call .\n\nSee .","page":["DLabel:DoDoubleClick","DLabel:SetDoubleClickingEnabled"]},"realm":"Client","rets":{"ret":{"text":"true = enabled, false means disabled","name":"","type":"boolean"}}}},
{"function":{"name":"GetDisabled","parent":"DLabel","type":"panelfunc","ispanel":true,"description":{"text":"Gets the disabled state of the . This is set with .","deprecated":{"text":"Use  instead.","page":"Panel:IsEnabled"},"page":["DLabel","DLabel:SetDisabled"]},"realm":"Client","rets":{"ret":{"text":"The disabled state of the label.","name":"","type":"boolean"}}}},
{"function":{"name":"GetDark","parent":"DLabel","type":"panelfunc","ispanel":true,"description":{"text":"Returns whether the  should set its text color to the current skin's dark text color.\n\nSee .","page":["DLabel","DLabel:SetDark"]},"realm":"Client","rets":{"ret":{"name":"","type":"boolean"}}}},
{"function":{"name":"GetColor","parent":"DLabel","type":"panelfunc","ispanel":true,"description":{"text":"Returns the actual color of the text.\n\nSee also  and .","page":["DLabel:GetTextColor","DLabel:GetTextStyleColor"]},"realm":"Client","rets":{"ret":{"text":"The the actual color of the text.","name":"","type":"table"}}}},
{"function":{"name":"GetBright","parent":"DLabel","type":"panelfunc","ispanel":true,"description":{"text":"Returns whether the  should set its text color to the current skin's bright text color.\n\nSee .","page":["DLabel","DLabel:SetBright"]},"realm":"Client","rets":{"ret":{"name":"","type":"boolean"}}}},
{"function":{"name":"GetAutoStretchVertical","parent":"DLabel","type":"panelfunc","ispanel":true,"description":{"text":"Returns whether the label stretches vertically or not.\n\nSet by .","page":"DLabel:SetAutoStretchVertical"},"realm":"Client","rets":{"ret":{"text":"Whether the label stretches vertically or not.","name":"","type":"boolean"}}}},
{"function":{"name":"DoRightClick","parent":"DLabel","type":"panelfunc","ispanel":true,"description":{"text":"Called when the label is right clicked (on key release) by the player.\n\nThis will be called after  and .\n\nSee also ,  and .","page":["DLabel:OnDepressed","DLabel:OnReleased","DLabel:DoClick","DLabel:DoMiddleClick","DLabel:DoDoubleClick"]},"realm":"Client"},"example":{"description":"Creates a label in the center of the screen, that prints `I was right clicked!` to the console and disappears when right clicked.","code":"local lbl = vgui.Create( \"DLabel\" )\nlbl:SetFont( \"DermaLarge\" )\nlbl:SetText( \"Click me!\" )\nlbl:SizeToContents()\nlbl:Center()\nlbl:SetMouseInputEnabled( true )\nfunction lbl:DoRightClick()\n\tprint(\"I was right clicked!\")\n\tself:Remove()\nend","output":"```\nI was clicked!\n```\n When the label is right clicked."}},
{"function":{"name":"DoMiddleClick","parent":"DLabel","type":"panelfunc","ispanel":true,"description":{"text":"Called when the label is middle mouse (Mouse wheel, also known as mouse 3) clicked (on key release) by the player.\n\nThis will be called after  and .\n\nSee also ,  and .","page":["DLabel:OnDepressed","DLabel:OnReleased","DLabel:DoClick","DLabel:DoRightClick","DLabel:DoDoubleClick"]},"realm":"Client"}},
{"function":{"name":"DoDoubleClickInternal","parent":"DLabel","type":"panelfunc","ispanel":true,"description":{"text":"Called just before . In  does nothing and is safe to override.","page":["DLabel:DoDoubleClick","DLabel"]},"realm":"Client"}},
{"function":{"name":"DoDoubleClick","parent":"DLabel","type":"panelfunc","ispanel":true,"description":{"text":"Called when the label is double clicked by the player with left clicks.\n\n must be set to true for this hook to work, which it is by default.\n\nThis will be called after  and  and .\n\nSee also  and .","page":["DLabel:SetDoubleClickingEnabled","DLabel:OnDepressed","DLabel:OnReleased","DLabel:DoClick","DLabel:DoRightClick","DLabel:DoMiddleClick"]},"realm":"Client"},"example":{"description":"Opens a URL in Steam Overlay by double clicking the text \"Click ME\"!","code":"local frame = vgui.Create( \"DFrame\" )\nframe:SetTitle( \"Double Click Example\" )\nframe:SetSize( 250, 100 )\nframe:Center()\nframe:MakePopup()\n\nlocal frame_label = vgui.Create( \"DLabel\", frame )\nframe_label:SetPos( 10, 30 )\nframe_label:SetTextColor( Color( 255, 255, 255 ) )\nframe_label:SetText( \"Double click me!\" )\nframe_label:SizeToContents()\nframe_label:SetMouseInputEnabled( true )\nframe_label.DoDoubleClick = function()\n\tgui.OpenURL(\"https://wiki.facepunch.com/gmod\")\nend\n\n-- Uncommentiing this will disable double clicking\n-- frame_label:SetDoubleClickingEnabled( false )","output":{"image":{"src":"ClickMeDouble.png"}}}},
{"function":{"name":"DoClickInternal","parent":"DLabel","type":"panelfunc","ispanel":true,"description":{"text":"Called just before .\n\nIn  does nothing and is safe to override. Used by  and 's tabs.","page":["DLabel:DoClick","DLabel","DMenuOption","DCollapsibleCategory"]},"realm":"Client"}},
{"function":{"name":"DoClick","parent":"DLabel","type":"panelfunc","ispanel":true,"description":{"text":"Called when the label is left clicked (on key release) by the player.\n\nThis will be called after  and .\n\nThis can be overridden; by default, it calls .\n\nSee also ,  and .","page":["DLabel:OnDepressed","DLabel:OnReleased","DLabel:Toggle","DLabel:DoRightClick","DLabel:DoMiddleClick","DLabel:DoDoubleClick"]},"realm":"Client"},"example":{"description":"Creates a label in the center of the screen, that prints `I was clicked!` to the console and disappears when clicked.","code":"local lbl = vgui.Create( \"DLabel\" ) -- Creates our label\nlbl:SetFont( \"DermaLarge\" )\nlbl:SetText( \"Click me!\" )\nlbl:SizeToContents()\nlbl:Center()\nlbl:SetMouseInputEnabled( true ) -- We must accept mouse input\nfunction lbl:DoClick() -- Defines what should happen when the label is clicked\n\tprint(\"I was clicked!\")\n\tself:Remove()\nend","output":"```\nI was clicked!\n```\n When the label is clicked."}},
{"function":{"name":"SetName","parent":"DKillIcon","type":"panelfunc","ispanel":true,"description":{"text":"Sets the killicon to be displayed. You should call  following this.\n\nKillicons can be added with  and .","page":["DKillIcon:SizeToContents","killicon.Add","killicon.AddFont"]},"realm":"Client","args":{"arg":{"text":"The name of the killicon to be displayed.","name":"iconName","type":"string"}}}},
{"function":{"name":"GetName","parent":"DKillIcon","type":"panelfunc","ispanel":true,"description":"Gets the killicon being shown.","realm":"Client","rets":{"ret":{"text":"The name of the killicon currently being displayed.","name":"","type":"string"}}}},
{"function":{"name":"SetStretchToFit","parent":"DImageButton","type":"panelfunc","ispanel":true,"description":{"text":"Sets whether the image inside the  should be stretched to fill the entire size of the button, without preserving aspect ratio.\n\nIf set to false, the image will not be resized at all.","page":"DImageButton"},"realm":"Client","args":{"arg":{"text":"True to stretch, false to not to stretch","name":"stretch","type":"boolean"}}}},
{"function":{"name":"SetOnViewMaterial","parent":"DImageButton","type":"panelfunc","ispanel":true,"description":{"text":"See","page":"DImage:SetOnViewMaterial"},"realm":"Client","args":{"arg":[{"name":"mat","type":"string"},{"name":"backup","type":"string"}]}}},
{"function":{"name":"SetMaterial","parent":"DImageButton","type":"panelfunc","ispanel":true,"description":{"text":"Sets a  directly as an image. Equivalent of .","page":["Global.Material","DImage:SetMaterial"]},"realm":"Client","args":{"arg":{"text":"The material to set","name":"mat","type":"IMaterial"}}}},
{"function":{"name":"SetKeepAspect","parent":"DImageButton","type":"panelfunc","ispanel":true,"description":{"text":"Sets whether the  should keep the aspect ratio of its image. Equivalent of .\n\nNote that this will not try to fit the image inside the button, but instead it will fill the button with the image.","page":["DImageButton","DImage:SetKeepAspect"]},"realm":"Client","args":{"arg":{"text":"true to keep the aspect ratio, false not to","name":"keep","type":"boolean"}}}},
{"function":{"name":"SetImageVisible","parent":"DImageButton","type":"panelfunc","ispanel":true,"description":{"text":"Hides or shows the image of the image button. Internally this calls  on the internal .","page":["Panel:SetVisible","DImage"]},"realm":"Client","args":{"arg":{"text":"Set true to make it visible ( default ), or false to hide the image","name":"visible","type":"boolean"}}}},
{"function":{"name":"SetImage","parent":"DImageButton","type":"panelfunc","ispanel":true,"description":{"text":"Sets the \"image\" of the . Equivalent of .","page":["DImageButton","DImage:SetImage"]},"realm":"Client","args":{"arg":[{"text":"The path of the image to load. When no file extension is supplied the VMT file extension is used.","name":"strImage","type":"string"},{"text":"The path of the backup image.","name":"strBackup","type":"string"}]}}},
{"function":{"name":"SetIcon","parent":"DImageButton","type":"panelfunc","ispanel":true,"description":{"text":"Alias of .","deprecated":"","page":"DImageButton:SetImage"},"realm":"Client"}},
{"function":{"name":"SetColor","parent":"DImageButton","type":"panelfunc","ispanel":true,"description":{"text":"Sets the color of the image. Equivalent of","page":"DImage:SetImageColor"},"realm":"Client","args":{"arg":{"text":"The  to set","name":"color","type":"table","page":"Global.Color"}}},"example":{"description":"Changes the image to blue:","code":"-- E.g. for the Engineer (blue)\nlocal engineerClass = vgui.Create(\"DImageButton\", container)\nengineerClass:SetColor(Color(22, 166, 236, 255))\n-- ...","output":{"image":[{"src":"MBD_Lobby_DImageButtonWithoutSetColor.png","alt":"thumb|left|Without_SetColor(...)"},{"src":"MBD_Lobby_DImageButtonWithSetColor.png","alt":"thumb|left|With_SetColor(...)"}]}}},
{"function":{"name":"GetStretchToFit","parent":"DImageButton","type":"panelfunc","ispanel":true,"description":{"text":"Returns whether the image inside the button should be stretched to fit it or not\n\nSee","page":"DImageButton:SetStretchToFit"},"realm":"Client","rets":{"ret":{"name":"","type":"boolean"}}}},
{"function":{"name":"Unloaded","parent":"DImage","type":"panelfunc","ispanel":true,"description":"Returns true if the image is **not** yet loaded.","realm":"Client","rets":{"ret":{"name":"","type":"boolean"}}}},
{"function":{"name":"GetImage","parent":"DImageButton","type":"panelfunc","ispanel":true,"description":{"text":"Returns the \"image\" of the . Equivalent of .","page":["DImageButton","DImage:GetImage"]},"realm":"Client","rets":{"ret":{"text":"The path to the image that is loaded.","name":"","type":"string"}}}},
{"function":{"name":"SetOnViewMaterial","parent":"DImage","type":"panelfunc","ispanel":true,"description":{"text":"Similar to , but will only do the expensive part of actually loading the textures/material if the material is about to be rendered/viewed.\n\nUseful for cases like , where there are hundreds of small icons in 1 panel in a list that do not need all to be loaded at the same time.","page":["DImage:SetImage","DIconBrowser"]},"realm":"Client","args":{"arg":[{"name":"mat","type":"string"},{"name":"backupMat","type":"string"}]}}},
{"function":{"name":"SetMatName","parent":"DImage","type":"panelfunc","ispanel":true,"description":{"text":"Sets the material to be loaded when the image is first rendered. Used by .","internal":"","page":"DImage:SetOnViewMaterial"},"realm":"Client","args":{"arg":{"name":"mat","type":"string"}}}},
{"function":{"name":"SetMaterial","parent":"DImage","type":"panelfunc","ispanel":true,"description":{"text":"Sets a  directly as an image.","page":"Global.Material"},"realm":"Client","args":{"arg":{"text":"The material to set","name":"mat","type":"IMaterial"}}}},
{"function":{"name":"SetKeepAspect","parent":"DImage","type":"panelfunc","ispanel":true,"description":{"text":"Sets whether the  should keep the aspect ratio of its image when being resized.\n\nNote that this will not try to fit the image inside the button, but instead it will fill the button with the image.","page":"DImage"},"realm":"Client","args":{"arg":{"text":"true to keep the aspect ratio, false not to","name":"keep","type":"boolean"}}}},
{"function":{"name":"SetImageColor","parent":"DImage","type":"panelfunc","ispanel":true,"description":"Sets the image's color override.","realm":"Client","args":{"arg":{"text":"The color override of the image. Uses the .","name":"col","type":"table","page":"Color"}}},"example":{"description":"Creates a frame with a Portal box inside and sets the color to green.","code":"-- Frame\nMainFrame = vgui.Create(\"DFrame\")\nMainFrame:SetSize(200, 180)\nMainFrame:Center()\nMainFrame:SetTitle(\"Color example\")\n\n-- Image of a Portal box\nlocal metalbox_img = vgui.Create(\"DImage\", MainFrame)\nmetalbox_img:SetPos(35, 35)\nmetalbox_img:SetSize(128, 128)\nmetalbox_img:SetImage(\"spawnicons/models/props/metal_box_128.png\")\n\nmetalbox_img:SetImageColor(Color(128, 255, 0, 255))","output":{"image":{"src":"DImage_SetImageColor_example1.png"}}}},
{"function":{"name":"SetImage","parent":"DImage","type":"panelfunc","ispanel":true,"description":{"text":"Sets the image to load into the frame. If the first image can't be loaded and `strBackup` is set, that image will be loaded instead.\n\nThis eventually calls .","page":"DImage:SetMaterial"},"file":{"text":"lua/vgui/dimage.lua","line":"91"},"realm":"Client","args":{"arg":[{"text":"The path of the image to load. When no file extension is supplied the VMT file extension is used.","name":"strImage","type":"string"},{"text":"The path of the backup image.","name":"strBackup","type":"string","default":"nil"}]}},"example":{"description":"Creates a frame with a map of de_inferno inside, with the default avatar image loaded as a backup.","code":"-- Frame\nMainFrame = vgui.Create( \"DFrame\" )\nMainFrame:SetSize( 300, 300 )\nMainFrame:Center()\nMainFrame:SetTitle( \"Map of de_inferno\" )\n\n-- Map of de_inferno (requires CS:S)\nlocal css_map = vgui.Create( \"DImage\", MainFrame )\ncss_map:SetPos( 25, 40 )\ncss_map:SetSize( 250, 250 )\n\n-- Set image to de_inferno map\n-- If it can't be loaded, load the [?] avatar image instead\ncss_map:SetImage(\"overviews/de_inferno\", \"vgui/avatar_default\")","output":{"text":"If CS:S is mounted then the left image is shown, otherwise the right image is shown.","image":[{"src":"DImage_SetImage_example1.jpg"},{"src":"DImage_SetImage_example2.jpg"}]}}},
{"function":{"name":"SetFailsafeMatName","parent":"DImage","type":"panelfunc","ispanel":true,"description":{"text":"Sets the backup material to be loaded when the image is first rendered. Used by .","internal":"","page":"DImage:SetOnViewMaterial"},"realm":"Client","args":{"arg":{"name":"backupMat","type":"string"}}}},
{"function":{"name":"LoadMaterial","parent":"DImage","type":"panelfunc","ispanel":true,"description":{"text":"Initializes the loading process of the material to render if it is not loaded yet.\n\nYou do not need to call this function. It is done for you automatically.","internal":""},"realm":"Client"}},
{"function":{"name":"PaintAt","parent":"DImage","type":"panelfunc","ispanel":true,"description":{"text":"Paints a ghost copy of the DImage panel at the given position and dimensions. This function overrides .","page":"Panel:PaintAt"},"realm":"Client","args":{"arg":[{"text":"The x coordinate to draw the panel from.","name":"posX","type":"number"},{"text":"The y coordinate to draw the panel from.","name":"posY","type":"number"},{"text":"The width of the panel image to be drawn.","name":"width","type":"number"},{"text":"The height of the panel image to be drawn.","name":"height","type":"number"}]}}},
{"function":{"name":"GetMaterial","parent":"DImage","type":"panelfunc","ispanel":true,"description":{"text":"Returns the current  of the .","page":["Global.Material","DImage"]},"realm":"Client","rets":{"ret":{"name":"","type":"IMaterial"}}}},
{"function":{"name":"GetMaterial","parent":"DImage","type":"panelfunc","ispanel":true,"description":{"text":"Returns the current  of the .","page":["Global.Material","DImage"]},"realm":"Client","rets":{"ret":{"name":"","type":"IMaterial"}}}},
{"function":{"name":"GetKeepAspect","parent":"DImage","type":"panelfunc","ispanel":true,"description":{"text":"Returns whether the  should keep the aspect ratio of its image when being resized.\n\nSee  for more info on how it works.","page":["DImage","DImage:SetKeepAspect"]},"realm":"Client","rets":{"ret":{"text":"Whether the  should keep the aspect ratio of its image when being resized.","name":"","type":"boolean","page":"DImage"}}}},
{"function":{"name":"GetImageColor","parent":"DImage","type":"panelfunc","ispanel":true,"description":"Returns the color override of the image panel.","realm":"Client","rets":{"ret":{"text":"The color override of the image. Uses the .","name":"col","type":"table","page":"Color"}}},"example":{"description":"Creates an image panel and prints the default color override to console.","code":"-- Generic image panel\nlocal img = vgui.Create(\"DImage\")\nimg:SetSize(128, 128)\nimg:Center()\nimg:SetImage(\"cantop\")\n\nprint(img:GetImageColor())","output":"```\n255 255 255 255\n```"}},
{"function":{"name":"GetImage","parent":"DImage","type":"panelfunc","ispanel":true,"description":"Returns the image loaded in the image panel.","realm":"Client","rets":{"ret":{"text":"The path to the image that is loaded.","name":"","type":"string"}}},"example":{"description":"Creates a frame with a randomly chosen post process effect thumbnail and prints the image path to console.","code":"-- Frame\nMainFrame = vgui.Create(\"DFrame\")\nMainFrame:SetSize(200, 200)\nMainFrame:Center()\nMainFrame:SetTitle(\"Post process effect\")\n\n-- Load post process effect thumbnail\nlocal postprocess = vgui.Create(\"DImage\", MainFrame)\npostprocess:SetSize(128, 128)\npostprocess:Center()\n\nlocal materials = file.Find(\"materials/gui/postprocess/*.png\", \"GAME\")\n\npostprocess:SetImage(\"materials/gui/postprocess/\"..materials[math.random(1, #materials)])\n\nprint(postprocess:GetImage())","output":{"text":"```\nmaterials/gui/postprocess/colourmod.png\n```","image":{"src":"DImage_GetImage_example1.jpg"}}}},
{"function":{"name":"FixVertexLitMaterial","parent":"DImage","type":"panelfunc","ispanel":true,"description":{"text":"\"Fixes\" the current material of the  if it has VertexLit shader by creating a new one with the same name and a prefix of \"_DImage\" and automatically calling  with the new material.\n\nThis fixes the problem where using materials using shaders that expect lighting information causing \"weird\" flickering when displayed in 2D/Unlit environment.","internal":"","page":["DImage","DImage:SetMaterial"]},"realm":"Client"}},
{"function":{"name":"GetFailsafeMatName","parent":"DImage","type":"panelfunc","ispanel":true,"description":{"text":"Returns the texture path set by .","internal":"","page":"DImage:SetFailsafeMatName"},"realm":"Client","rets":{"ret":{"name":"","type":"string"}}}},
{"function":{"name":"DoLoadMaterial","parent":"DImage","type":"panelfunc","ispanel":true,"description":{"text":"Actually loads the  to render it. Called from .","internal":"","page":["IMaterial","DImage:LoadMaterial"]},"realm":"Client"}},
{"function":{"name":"SetStretchWidth","parent":"DIconLayout","type":"panelfunc","ispanel":true,"description":{"text":"If set to true, the icon layout will stretch its width to fit all the children.\n\nSee also","page":"DIconLayout:SetStretchHeight"},"realm":"Client","args":{"arg":{"name":"stretchW","type":"boolean"}}}},
{"function":{"name":"SetStretchHeight","parent":"DIconLayout","type":"panelfunc","ispanel":true,"description":{"text":"If set to true, the icon layout will stretch its height to fit all the children.\n\nSee also","page":"DIconLayout:SetStretchWidth"},"realm":"Client","args":{"arg":{"name":"do_stretch","type":"boolean"}}}},
{"function":{"name":"SetSpaceY","parent":"DIconLayout","type":"panelfunc","ispanel":true,"description":{"text":"Sets the vertical (y) spacing between children within the DIconLayout. You must call  in order for the changes to take effect.","page":"DIconLayout:Layout"},"realm":"Client","args":{"arg":{"text":"The vertical gap between rows in the DIconLayout.","name":"ySpacing","type":"number"}}}},
{"function":{"name":"SetSpaceY","parent":"DIconLayout","type":"panelfunc","ispanel":true,"description":{"text":"Sets the vertical (y) spacing between children within the DIconLayout. You must call  in order for the changes to take effect.","page":"DIconLayout:Layout"},"realm":"Client","args":{"arg":{"text":"The vertical gap between rows in the DIconLayout.","name":"ySpacing","type":"number"}}}},
{"function":{"name":"SetLayoutDir","parent":"DIconLayout","type":"panelfunc","ispanel":true,"description":{"text":"Sets the direction that it will be layed out, using the .\n\nCurrently only TOP and LEFT are supported.","page":"Enums/DOCK"},"realm":"Client","args":{"arg":{"name":"direction","type":"number","page":"Enums/DOCK"}}}},
{"function":{"name":"SetBorder","parent":"DIconLayout","type":"panelfunc","ispanel":true,"description":{"text":"Sets the internal border (padding) within the DIconLayout. This will not change its size, only the positioning of children. You must call  in order for the changes to take effect.","page":"DIconLayout:Layout"},"realm":"Client","args":{"arg":{"text":"The border (padding) inside the DIconLayout.","name":"width","type":"number"}}}},
{"function":{"name":"OnModified","parent":"DIconLayout","type":"panelfunc","ispanel":true,"description":"Called when the panel is modified.","realm":"Client"}},
{"function":{"name":"LayoutIcons_TOP","parent":"DIconLayout","type":"panelfunc","ispanel":true,"description":{"text":"Used internally to layout the child elements if the  is set to TOP (See ).","internal":"","page":["DIconLayout:SetLayoutDir","Enums/DOCK"]},"realm":"Client"}},
{"function":{"name":"LayoutIcons_LEFT","parent":"DIconLayout","type":"panelfunc","ispanel":true,"description":{"text":"Used internally to layout the child elements if the  is set to LEFT (See ).","internal":"","page":["DIconLayout:SetLayoutDir","Enums/DOCK"]},"realm":"Client"}},
{"function":{"name":"Layout","parent":"DIconLayout","type":"panelfunc","ispanel":true,"description":{"text":"Resets layout vars before calling . This is called when children are added or removed, and must be called when the spacing, border or layout direction is changed.","page":"Panel:InvalidateLayout"},"realm":"Client"}},
{"function":{"name":"GetStretchHeight","parent":"DIconLayout","type":"panelfunc","ispanel":true,"description":{"text":"Returns whether the icon layout will stretch its height to fit all the children.\n\nSee also","page":"DIconLayout:GetStretchWidth"},"realm":"Client","rets":{"ret":{"name":"","type":"boolean"}}}},
{"function":{"name":"GetStretchWidth","parent":"DIconLayout","type":"panelfunc","ispanel":true,"description":{"text":"Returns whether the icon layout will stretch its width to fit all the children.\n\nSee also","page":"DIconLayout:GetStretchHeight"},"realm":"Client","rets":{"ret":{"name":"","type":"boolean"}}}},
{"function":{"name":"GetSpaceY","parent":"DIconLayout","type":"panelfunc","ispanel":true,"description":"Returns distance between two \"Icons\" on the Y axis.","realm":"Client","rets":{"ret":{"text":"distance between two \"Icons\" on the Y axis.","name":"","type":"number"}}}},
{"function":{"name":"GetSpaceX","parent":"DIconLayout","type":"panelfunc","ispanel":true,"description":"Returns the distance between two 'icons' on the X axis.","realm":"Client","rets":{"ret":{"text":"Distance between two 'icons' on the X axis.","name":"","type":"number"}}}},
{"function":{"name":"GetBorder","parent":"DIconLayout","type":"panelfunc","ispanel":true,"description":"Returns the size of the border.","realm":"Client","rets":{"ret":{"name":"","type":"number"}}}},
{"function":{"name":"GetLayoutDir","parent":"DIconLayout","type":"panelfunc","ispanel":true,"description":"Returns the direction that it will be layed out, using the DOCK enumerations.","realm":"Client","rets":{"ret":{"text":"Layout direction.","name":"","type":"number"}}}},
{"function":{"name":"CopyContents","parent":"DIconLayout","type":"panelfunc","ispanel":true,"description":{"text":"Copies the contents (Child elements) of another  to itself.","page":"DIconLayout"},"realm":"Client","args":{"arg":{"text":"to copy from.","name":"from","type":"Panel","page":"DIconLayout"}}}},
{"function":{"name":"Copy","parent":"DIconLayout","type":"panelfunc","ispanel":true,"description":"Creates a replica of the DIconLayout it is called on.","realm":"Client","rets":{"ret":{"text":"The replica.","name":"","type":"Panel"}}}},
{"function":{"name":"SetManual","parent":"DIconBrowser","type":"panelfunc","ispanel":true,"description":"Sets whether or not the browser should automatically fill itself with icons.","realm":"Client","args":{"arg":{"name":"manual","type":"boolean"}}}},
{"function":{"name":"SetSelectedIcon","parent":"DIconBrowser","type":"panelfunc","ispanel":true,"description":{"text":"Set the currently selected file path. Do not use. Use  instead.","internal":"","page":"DIconBrowser:SelectIcon"},"realm":"Client","args":{"arg":{"name":"str","type":"string"}}}},
{"function":{"name":"SelectIcon","parent":"DIconBrowser","type":"panelfunc","ispanel":true,"description":"Selects an icon from file path","realm":"Client","args":{"arg":{"text":"The file path of the icon to select. Do not include the \"materials/\" part.","name":"icon","type":"string"}}}},
{"function":{"name":"ScrollToSelected","parent":"DIconBrowser","type":"panelfunc","ispanel":true,"description":"Scrolls the browser to the selected icon","realm":"Client"}},
{"function":{"name":"OnChangeInternal","parent":"DIconBrowser","type":"panelfunc","ispanel":true,"description":{"text":"Use  instead","internal":"","page":"DIconBrowser:OnChange"},"realm":"Client"}},
{"function":{"name":"GetSelectedIcon","parent":"DIconBrowser","type":"panelfunc","ispanel":true,"description":"Returns the currently selected icon's file path.","realm":"Client","rets":{"ret":{"text":"The currently selected icon's file path.","name":"","type":"string"}}}},
{"function":{"name":"OnChange","parent":"DIconBrowser","type":"panelfunc","ispanel":true,"description":{"text":"Called when the selected icon was changed. Use  to get the selected icon's filepath.","page":"DIconBrowser:GetSelectedIcon"},"realm":"Client"}},
{"function":{"name":"OnChange","parent":"DIconBrowser","type":"panelfunc","ispanel":true,"description":{"text":"Called when the selected icon was changed. Use  to get the selected icon's filepath.","page":"DIconBrowser:GetSelectedIcon"},"realm":"Client"}},
{"function":{"name":"Fill","parent":"DIconBrowser","type":"panelfunc","ispanel":true,"description":{"text":"Automatically called to fill the browser with icons. Will not work if  is set to true.","internal":"","page":"DIconBrowser:SetManual"},"realm":"Client"}},
{"function":{"name":"FilterByText","parent":"DIconBrowser","type":"panelfunc","ispanel":true,"description":"A simple unused search feature, hides all icons that do not contain given text in their file path.","realm":"Client","args":{"arg":{"text":"The text to search for","name":"text","type":"string"}}}},
{"function":{"name":"UpdateNavButtonStatus","parent":"DHTMLControls","type":"panelfunc","ispanel":true,"description":{"internal":""},"realm":"Client"}},
{"function":{"name":"UpdateHistory","parent":"DHTMLControls","type":"panelfunc","ispanel":true,"description":{"text":"Basically adds an URL to the history.","internal":""},"realm":"Client","args":{"arg":{"name":"url","type":"string"}}}},
{"function":{"name":"UpdateHistory","parent":"DHTMLControls","type":"panelfunc","ispanel":true,"description":{"text":"Basically adds an URL to the history.","internal":""},"realm":"Client","args":{"arg":{"name":"url","type":"string"}}}},
{"function":{"name":"SetHTML","parent":"DHTMLControls","type":"panelfunc","ispanel":true,"description":{"text":"Sets the  element to control with these .","page":["DHTML","DHTMLControls"]},"realm":"Client","args":{"arg":{"text":"The HTML panel","name":"dhtml","type":"Panel"}}}},
{"function":{"name":"SetButtonColor","parent":"DHTMLControls","type":"panelfunc","ispanel":true,"description":"Sets the color of the navigation buttons.","realm":"Client","args":{"arg":{"text":"A","name":"clr","type":"table","page":"Color"}}}},
{"function":{"name":"FinishedLoading","parent":"DHTMLControls","type":"panelfunc","ispanel":true,"description":{"internal":""},"realm":"Client"}},
{"function":{"name":"StopLoading","parent":"DHTML","type":"panelfunc","ispanel":true,"description":"Stops the loading of the HTML panel's current page.","realm":"Client"}},
{"function":{"name":"SetScrollbars","parent":"DHTML","type":"panelfunc","ispanel":true,"description":{"text":"Sets if the loaded window should display scrollbars when the webpage is larger than the viewing window. This is similar to the CSS `overflow` rule.","deprecated":"Broken. Use the CSS `overflow` rule instead."},"realm":"Client","args":{"arg":{"text":"True if scrollbars should be visible.","name":"show","type":"boolean"}}}},
{"function":{"name":"SetAllowLua","parent":"DHTML","type":"panelfunc","ispanel":true,"description":{"text":"Determines whether the loaded page can run Lua code or not. See  for how to run Lua from a DHTML window.","page":"DHTML"},"realm":"Client","args":{"arg":{"text":"Whether or not to allow Lua.","name":"allow","type":"boolean","default":"false"}}}},
{"function":{"name":"SetAllowLua","parent":"DHTML","type":"panelfunc","ispanel":true,"description":{"text":"Determines whether the loaded page can run Lua code or not. See  for how to run Lua from a DHTML window.","page":"DHTML"},"realm":"Client","args":{"arg":{"text":"Whether or not to allow Lua.","name":"allow","type":"boolean","default":"false"}}}},
{"function":{"name":"GetAllowLua","parent":"DHTML","type":"panelfunc","ispanel":true,"description":{"text":"Returns if the loaded page can run Lua code, set by","page":"DHTML:SetAllowLua"},"realm":"Client","rets":{"ret":{"text":"Whether or not Lua code can be called from the loaded page.","name":"","type":"boolean"}}}},
{"function":{"name":"ConsoleMessage","parent":"DHTML","type":"panelfunc","ispanel":true,"description":{"text":"Called when the page inside the  window runs `console.log`. This can also be called within the Lua environment to emulate `console.log`. If the contained message begins with `RUNLUA:` the following text will be executed as code within the Lua environment (this is how Lua is called from DHTML windows).","page":"DHTML"},"realm":"Client","args":{"arg":{"text":"The message to be logged (or Lua code to be executed; see above).","name":"msg","type":"string"}}}},
{"function":{"name":"Call","parent":"DHTML","type":"panelfunc","ispanel":true,"description":{"text":"Runs/Executes a string as JavaScript code in a panel.","note":[{"text":"This function does **NOT** evaluate expression (i.e. allow you to pass variables from JavaScript (JS) to Lua context).Because a return value is nil/no value (a.k.a. void).If you wish to pass/return values from JS to Lua, you may want to use  function to accomplish that job.","br":["",""],"page":"DHTML:AddFunction"},{"text":"This function is an alias of  ([source](https://github.com/Facepunch/garrysmod/blob/master/garrysmod/lua/vgui/dhtml.lua#L62)).","page":"DHTML:QueueJavascript"}]},"realm":"Client","args":{"arg":{"text":"Specify JavaScript code to be executed.","name":"js","type":"string"}}},"example":{"description":"Shows how to change [document.body.innerHTML](http://www.w3schools.com/jsref/prop_html_innerhtml.asp) property by calling this function on  panel.","code":{"text":"-- First we create a container, in this case it is a full-screen Derma Frame window.\nlocal dframe = vgui.Create( 'DFrame' )\ndframe:SetSize( ScrW(), ScrH() )\ndframe:SetTitle( \"Garry's Mod Wiki\" )\ndframe:Center()\ndframe:MakePopup() -- Enable keyboard and mouse interaction for DFrame panel.\n\n-- Create a new DHTML panel as a child of dframe, and dock-fill it.\nlocal dhtml = vgui.Create( 'DHTML', dframe )\ndhtml:Dock( FILL )\n-- Navigate to Garry's Mod wikipedia website.\ndhtml:OpenURL( 'https://wiki.garrysmod.com/index.php' )\n-- Run JavaScript code.\ndhtml:Call(  )\n\n-- This does not throw an error/exception, but instead returns nil/no value.\n-- That means you can't pass/return values from JavaScript back to Lua context using this function.\nlocal number = dhtml:Call( '22;' )\nprint( number )","page":"document.body.innerHTML = 'HTML changed from Lua using JavaScript!';"},"output":"Inner HTML of document body in DHTML panel is now set to \"HTML changed from Lua using JavaScript!\"."}},
{"function":{"name":"AddFunction","parent":"DHTML","type":"panelfunc","ispanel":true,"description":{"text":"Defines a Javascript function that when called will call a Lua callback.","note":"Must be called after the HTML document has fully loaded."},"realm":"Client","args":{"arg":[{"text":"Library name of the JS function you are defining.","name":"library","type":"string"},{"text":"Name of the JS function you are defining.","name":"name","type":"string"},{"text":"Function called when the JS function is called. Arguments passed to the JS function will be passed here.","name":"callback","type":"function"}]}},"example":{"description":"Prints text from Javascript to the console in color.","code":"-- Create the frame\nlocal f = vgui.Create(\"DFrame\")\nf:SetSize(800, 600)\nf:Center()\n\n-- Create a green color variable\nlocal color_green = Color(0, 255, 0)\n\n-- Define the Javascript function in the DHTML element\nlocal DHTML = vgui.Create(\"DHTML\", f)\nDHTML:Dock(FILL)\nDHTML:OpenURL(\"/VGUI/Elements/DHTML\")\nDHTML:AddFunction(\"console\", \"luaprint\", function(str)\n\tMsgC(color_green, str) -- Print the given string\nend)\n\n--This runs our function. Our function could also be called from Javascript on the DHTML's page.\nDHTML:RunJavascript(\"console.luaprint('Hello from Javascript!');\")"}},
{"function":{"name":"SetUseLiveDrag","parent":"DHorizontalScroller","type":"panelfunc","ispanel":true,"description":{"text":"Same as","page":"DDragBase:SetUseLiveDrag"},"realm":"Client","args":{"arg":{"name":"newState","type":"boolean"}}}},
{"function":{"name":"SetScroll","parent":"DHorizontalScroller","type":"panelfunc","ispanel":true,"description":"Sets the scroll amount, automatically clamping the value.","realm":"Client","args":{"arg":{"text":"The new scroll amount","name":"scroll","type":"number"}}}},
{"function":{"name":"SetShowDropTargets","parent":"DHorizontalScroller","type":"panelfunc","ispanel":true,"description":"No Description","realm":"Client","args":{"arg":{"name":"newState","type":"boolean"}}}},
{"function":{"name":"SetOverlap","parent":"DHorizontalScroller","type":"panelfunc","ispanel":true,"description":"Controls the spacing between elements of the horizontal scroller.","realm":"Client","args":{"arg":{"text":"Overlap in pixels. Positive numbers will make elements `overlap` each other, negative will add spacing.","name":"overlap","type":"number"}}}},
{"function":{"name":"ScrollToChild","parent":"DHorizontalScroller","type":"panelfunc","ispanel":true,"description":{"text":"Scrolls the  to given child panel.","page":"DHorizontalScroller"},"realm":"Client","args":{"arg":{"text":"The target child panel. Must be a child of","name":"target","type":"Panel","page":"DHorizontalScroller:GetCanvas"}}}},
{"function":{"name":"OnDragModified","parent":"DHorizontalScroller","type":"panelfunc","ispanel":true,"description":"Called when the panel is scrolled.","realm":"Client"}},
{"function":{"name":"MakeDroppable","parent":"DHorizontalScroller","type":"panelfunc","ispanel":true,"description":{"text":"Same as .\nTODO: Transclude or whatever to here?","page":"DDragBase:MakeDroppable"},"realm":"Client","args":{"arg":{"name":"name","type":"string"}}}},
{"function":{"name":"GetShowDropTargets","parent":"DHorizontalScroller","type":"panelfunc","ispanel":true,"description":"No Description","realm":"Client","rets":{"ret":{"name":"","type":"boolean"}}}},
{"function":{"name":"GetCanvas","parent":"DHorizontalScroller","type":"panelfunc","ispanel":true,"description":{"text":"Returns the internal canvas panel where the content of  are placed on.","page":"DHorizontalScroller"},"realm":"Client","rets":{"ret":{"text":"The  panel.","name":"","type":"Panel","page":"DDragBase"}}}},
{"function":{"name":"GetOverlap","parent":"DHorizontalScroller","type":"panelfunc","ispanel":true,"description":"No Description","realm":"Client","rets":{"ret":{"name":"","type":"number"}}}},
{"function":{"name":"StartGrab","parent":"DHorizontalDivider","type":"panelfunc","ispanel":true,"description":{"internal":""},"realm":"Client"}},
{"function":{"name":"StartGrab","parent":"DHorizontalDivider","type":"panelfunc","ispanel":true,"description":{"internal":""},"realm":"Client"}},
{"function":{"name":"SetRight","parent":"DHorizontalDivider","type":"panelfunc","ispanel":true,"description":"Sets the right side content","realm":"Client","args":{"arg":{"text":"The right side content","name":"pnl","type":"Panel"}}}},
{"function":{"name":"SetRightMin","parent":"DHorizontalDivider","type":"panelfunc","ispanel":true,"description":"Sets the minimum width of the right side","realm":"Client","args":{"arg":{"text":"The minimum width of the right side","name":"minWidth","type":"number"}}}},
{"function":{"name":"SetMiddle","parent":"DHorizontalDivider","type":"panelfunc","ispanel":true,"description":"Sets the middle content, over the draggable divider bar panel.","realm":"Client","args":{"arg":{"text":"The middle content","name":"middle","type":"Panel"}}}},
{"function":{"name":"SetLeftWidth","parent":"DHorizontalDivider","type":"panelfunc","ispanel":true,"description":{"text":"Sets the current/starting width of the left side.\n\nThe width of the right side is automatically calculated by subtracting this from the total width of the .","page":"DHorizontalDivider"},"realm":"Client","args":{"arg":{"text":"The current/starting width of the left side","name":"width","type":"number"}}}},
{"function":{"name":"SetLeft","parent":"DHorizontalDivider","type":"panelfunc","ispanel":true,"description":{"text":"Sets the left side content of the .","page":"DHorizontalDivider"},"realm":"Client","args":{"arg":{"text":"The panel to set as the left side","name":"pnl","type":"Panel"}}}},
{"function":{"name":"SetLeft","parent":"DHorizontalDivider","type":"panelfunc","ispanel":true,"description":{"text":"Sets the left side content of the .","page":"DHorizontalDivider"},"realm":"Client","args":{"arg":{"text":"The panel to set as the left side","name":"pnl","type":"Panel"}}}},
{"function":{"name":"SetHoldPos","parent":"DHorizontalDivider","type":"panelfunc","ispanel":true,"description":{"text":"Sets the local X coordinate of where the player started dragging the thing","internal":""},"realm":"Client","args":{"arg":{"name":"x","type":"number"}}}},
{"function":{"name":"SetDragging","parent":"DHorizontalDivider","type":"panelfunc","ispanel":true,"description":{"text":"Sets whether the player is dragging the divider or not","internal":""},"realm":"Client","args":{"arg":{"name":"dragonot","type":"boolean"}}}},
{"function":{"name":"SetDividerWidth","parent":"DHorizontalDivider","type":"panelfunc","ispanel":true,"description":"Sets the width of the horizontal divider bar.","realm":"Client","args":{"arg":{"text":"The width of the horizontal divider bar.","name":"width","type":"number"}}}},
{"function":{"name":"GetRightMin","parent":"DHorizontalDivider","type":"panelfunc","ispanel":true,"description":{"text":"Returns the minimum width of the right side, set by .","page":"DHorizontalDivider:SetRightMin"},"realm":"Client","rets":{"ret":{"text":"The minimum width of the right side","name":"","type":"number"}}}},
{"function":{"name":"GetRight","parent":"DHorizontalDivider","type":"panelfunc","ispanel":true,"description":"Returns the right side content","realm":"Client","rets":{"ret":{"text":"The right side content","name":"","type":"Panel"}}}},
{"function":{"name":"GetMiddle","parent":"DHorizontalDivider","type":"panelfunc","ispanel":true,"description":{"text":"Returns the middle content, set by .","page":"DHorizontalDivider:SetMiddle"},"realm":"Client","rets":{"ret":{"text":"The middle content","name":"","type":"Panel"}}}},
{"function":{"name":"GetLeftWidth","parent":"DHorizontalDivider","type":"panelfunc","ispanel":true,"description":{"text":"Returns the current width of the left side, set by  or by the user.","page":"DHorizontalDivider:SetLeftWidth"},"realm":"Client","rets":{"ret":{"text":"The current width of the left side","name":"","type":"number"}}}},
{"function":{"name":"GetLeftMin","parent":"DHorizontalDivider","type":"panelfunc","ispanel":true,"description":{"text":"Returns the minimum width of the left side, set by .","page":"DHorizontalDivider:SetLeftMin"},"realm":"Client","rets":{"ret":{"text":"The minimum width of the left side","name":"","type":"number"}}}},
{"function":{"name":"GetLeft","parent":"DHorizontalDivider","type":"panelfunc","ispanel":true,"description":{"text":"Returns the left side content of the","page":"DHorizontalDivider"},"realm":"Client","rets":{"ret":{"text":"The content on the left side","name":"","type":"Panel"}}}},
{"function":{"name":"GetHoldPos","parent":"DHorizontalDivider","type":"panelfunc","ispanel":true,"description":{"text":"Returns the local X coordinate of where the player started dragging the thing","internal":""},"realm":"Client","rets":{"ret":{"name":"","type":"number"}}}},
{"function":{"name":"GetDragging","parent":"DHorizontalDivider","type":"panelfunc","ispanel":true,"description":"Returns whether or not the player is currently dragging the middle divider bar.","realm":"Client","rets":{"ret":{"text":"Whether or not the player is currently dragging the middle divider bar.","name":"","type":"boolean"}}}},
{"function":{"name":"GetDividerWidth","parent":"DHorizontalDivider","type":"panelfunc","ispanel":true,"description":{"text":"Returns the width of the horizontal divider bar, set by .","page":"DHorizontalDivider:SetDividerWidth"},"realm":"Client","rets":{"ret":{"text":"The width of the horizontal divider bar","name":"","type":"number"}}}},
{"function":{"name":"SortByMember","parent":"DGrid","type":"panelfunc","ispanel":true,"description":{"text":"Sorts the items in the grid. Does not visually update the grid, use  for that.","page":"Panel:InvalidateLayout"},"realm":"Client","args":{"arg":[{"text":"A key in the panel from . The key's value must be numeric.","name":"key","type":"string","page":"DGrid:GetItems"},{"text":"True for descending order, false for ascending.","name":"desc","type":"boolean","default":"true"}]}}},
{"function":{"name":"SetRowHeight","parent":"DGrid","type":"panelfunc","ispanel":true,"description":"Sets the height of each row. \n\nThe cell panels (grid items) will not be resized or centered.","realm":"Client","args":{"arg":{"text":"The height of each row","name":"rowHeight","type":"number"}}}},
{"function":{"name":"SetColWide","parent":"DGrid","type":"panelfunc","ispanel":true,"description":"Sets the width of each column.\n\nThe cell panels (grid items) will not be resized or centered.","realm":"Client","args":{"arg":{"text":"The width of each column.","name":"colWidth","type":"number"}}}},
{"function":{"name":"SetCols","parent":"DGrid","type":"panelfunc","ispanel":true,"description":{"text":"Sets the number of columns this panel should have.\n\nThe  will resize its width to match this value.","page":"DGrid"},"realm":"Client","args":{"arg":{"text":"The desired number of columns","name":"cols","type":"number"}}}},
{"function":{"name":"RemoveItem","parent":"DGrid","type":"panelfunc","ispanel":true,"description":{"text":"Removes given panel from the .","page":"DGrid:GetItems"},"realm":"Client","args":{"arg":[{"text":"Item to remove from the grid","name":"item","type":"Panel"},{"text":"If set to true, the actual panel will not be removed via .","name":"bDontDelete","type":"boolean","default":"false","page":"Panel:Remove"}]}}},
{"function":{"name":"GetItems","parent":"DGrid","type":"panelfunc","ispanel":true,"description":"Returns a list of panels in the grid.","realm":"Client","rets":{"ret":{"text":"A list of s.","name":"","type":"table","page":"Panel"}}}},
{"function":{"name":"GetRowHeight","parent":"DGrid","type":"panelfunc","ispanel":true,"description":{"text":"Returns the height of each row of the , which is set by .","page":["DGrid","DGrid:SetRowHeight"]},"realm":"Client","rets":{"ret":{"text":"The height of each row","name":"","type":"number"}}}},
{"function":{"name":"GetColWide","parent":"DGrid","type":"panelfunc","ispanel":true,"description":{"text":"Returns the width of each column of the , which is set by .","page":["DGrid","DGrid:SetColWide"]},"realm":"Client","rets":{"ret":{"text":"The width of each column","name":"","type":"number"}}}},
{"function":{"name":"GetCols","parent":"DGrid","type":"panelfunc","ispanel":true,"description":{"text":"Returns the number of columns of this . Set by .","page":["DGrid","DGrid:SetCols"]},"realm":"Client","rets":{"ret":{"text":"The number of columns of this","name":"","type":"number","page":"DGrid"}}}},
{"function":{"name":"ShowCloseButton","parent":"DFrame","type":"panelfunc","ispanel":true,"description":"Determines whether the DFrame's control box (close, minimise and maximise buttons) is displayed.","realm":"Client","args":{"arg":{"text":"`false` hides the control box; this is `true` by default.","name":"show","type":"boolean"}}}},
{"function":{"name":"AddItem","parent":"DGrid","type":"panelfunc","ispanel":true,"description":"Adds a new item to the grid.","realm":"Client","args":{"arg":{"text":"The item to add. It will be forced visible and parented to the .","name":"item","type":"Panel","page":"DGrid"}}}},
{"function":{"name":"SetTitle","parent":"DFrame","type":"panelfunc","ispanel":true,"description":"Sets the title of the frame.","realm":"Client","args":{"arg":{"text":"New title of the frame.","name":"title","type":"string"}}}},
{"function":{"name":"SetSizable","parent":"DFrame","type":"panelfunc","ispanel":true,"description":{"text":"Sets whether or not the  can be resized by the user.\n\nThis is achieved by clicking and dragging in the bottom right corner of the frame.\n\nYou can set the minimum size using  and .","page":["DFrame","DFrame:SetMinWidth","DFrame:SetMinHeight"]},"realm":"Client","args":{"arg":{"text":"Whether the frame should be resizeable or not.","name":"sizeable","type":"boolean"}}},"example":{"description":"A snippet of code that makes a frame resizable and sets the minimum size to its current size.","code":"frame:SetSizable( true )\nframe:SetMinWidth( frame:GetWide() )\nframe:SetMinHeight( frame:GetTall() )"}},
{"function":{"name":"SetPaintShadow","parent":"DFrame","type":"panelfunc","ispanel":true,"description":"Sets whether or not the shadow effect bordering the DFrame should be drawn.","realm":"Client","args":{"arg":{"text":"Whether or not to draw the shadow. This is `true` by default.","name":"shouldPaint","type":"boolean"}}}},
{"function":{"name":"SetScreenLock","parent":"DFrame","type":"panelfunc","ispanel":true,"description":"Sets whether the DFrame is restricted to the boundaries of the screen resolution.","realm":"Client","args":{"arg":{"text":"If `true`, the frame cannot be dragged outside of the screen bounds","name":"lock","type":"boolean"}}}},
{"function":{"name":"SetMinWidth","parent":"DFrame","type":"panelfunc","ispanel":true,"description":{"text":"Sets the minimum width the DFrame can be resized to by the user.\n\nThis only applies to users attempting to resize the frame;  and similar methods will not be affected. You must call  before the user can resize the frame.","page":["Panel:SetWide","DFrame:SetSizable"]},"realm":"Client","args":{"arg":{"text":"The minimum width the user can resize the frame to.","name":"minW","type":"number"}}}},
{"function":{"name":"SetMinHeight","parent":"DFrame","type":"panelfunc","ispanel":true,"description":{"text":"Sets the minimum height the DFrame can be resized to by the user.\n\nThis only applies to users attempting to resize the frame;  and similar methods will not be affected. You must call  before the user can resize the frame.","page":["Panel:SetTall","DFrame:SetSizable"]},"realm":"Client","args":{"arg":{"text":"The minimum height the user can resize the frame to.","name":"minH","type":"number"}}}},
{"function":{"name":"SetIsMenu","parent":"DFrame","type":"panelfunc","ispanel":true,"description":{"text":"Sets whether the frame is part of a derma menu or not.\n\nIf this is set to `true`,  will not be called when the frame is clicked, and thus any open menus will remain open.","page":"Global.CloseDermaMenus"},"realm":"Client","args":{"arg":{"text":"Whether or not this frame is a menu component.","name":"isMenu","type":"boolean"}}}},
{"function":{"name":"SetIcon","parent":"DFrame","type":"panelfunc","ispanel":true,"description":{"text":"Adds or removes an icon on the left of the 's title.","page":"DFrame"},"realm":"Client","args":{"arg":{"text":"Set to nil to remove the icon.\n\nOtherwise, set to file path to create the icon.","name":"path","type":"string"}}}},
{"function":{"name":"SetDraggable","parent":"DFrame","type":"panelfunc","ispanel":true,"description":"Sets whether the frame should be draggable by the user. The DFrame can only be dragged from its title bar.","realm":"Client","args":{"arg":{"text":"Whether to be draggable or not.","name":"draggable","type":"boolean"}}}},
{"function":{"name":"SetDeleteOnClose","parent":"DFrame","type":"panelfunc","ispanel":true,"description":{"text":"Determines whether or not the DFrame is removed when it is closed with .","page":"DFrame:Close"},"realm":"Client","args":{"arg":{"text":"Whether or not to delete the frame on close. This is `true` by default.","name":"shouldDelete","type":"boolean"}}}},
{"function":{"name":"SetBackgroundBlur","parent":"DFrame","type":"panelfunc","ispanel":true,"description":"Blurs background behind the frame.","realm":"Client","args":{"arg":{"text":"Whether or not to create background blur or not.","name":"blur","type":"boolean"}}}},
{"function":{"name":"IsActive","parent":"DFrame","type":"panelfunc","ispanel":true,"description":"Determines if the frame or one of its children has the screen focus.","realm":"Client","rets":{"ret":{"text":"Whether or not the frame has focus.","name":"","type":"boolean"}}}},
{"function":{"name":"OnClose","parent":"DFrame","type":"panelfunc","ispanel":true,"description":{"text":"Called when the DFrame is closed with . This applies when the `close` button in the DFrame's control box is clicked.\n\nThis is **not** called when the DFrame is removed with .","page":["DFrame:Close","Panel:Remove"]},"realm":"Client"}},
{"function":{"name":"GetTitle","parent":"DFrame","type":"panelfunc","ispanel":true,"description":"Returns the title of the frame.","realm":"Client","rets":{"ret":{"text":"Title of the frame.","name":"","type":"string"}}}},
{"function":{"name":"GetSizable","parent":"DFrame","type":"panelfunc","ispanel":true,"description":"Gets whether or not the DFrame can be resized by the user.\n\nThis is achieved by clicking and dragging in the bottom right corner of the frame.","realm":"Client","rets":{"ret":{"text":"Whether the frame can be resized or not.","name":"","type":"boolean"}}}},
{"function":{"name":"GetScreenLock","parent":"DFrame","type":"panelfunc","ispanel":true,"description":"Gets whether or not the DFrame is restricted to the boundaries of the screen resolution.","realm":"Client","rets":{"ret":{"text":"Whether or not the frame is restricted.","name":"","type":"boolean"}}}},
{"function":{"name":"GetPaintShadow","parent":"DFrame","type":"panelfunc","ispanel":true,"description":"Gets whether or not the shadow effect bordering the DFrame is being drawn.","realm":"Client","rets":{"ret":{"text":"Whether or not the shadow is being drawn.","name":"","type":"boolean"}}}},
{"function":{"name":"GetMinWidth","parent":"DFrame","type":"panelfunc","ispanel":true,"description":{"text":"Gets the minimum width the DFrame can be resized to by the user.\n\nYou must call  before the user can resize the frame.","page":"DFrame:SetSizable"},"realm":"Client","rets":{"ret":{"text":"The minimum width the user can resize the frame to.","name":"","type":"number"}}}},
{"function":{"name":"GetMinHeight","parent":"DFrame","type":"panelfunc","ispanel":true,"description":{"text":"Gets the minimum height the DFrame can be resized to by the user.\n\nYou must call  before the user can resize the frame.","page":"DFrame:SetSizable"},"realm":"Client","rets":{"ret":{"text":"The minimum height the user can resize the frame to.","name":"","type":"number"}}}},
{"function":{"name":"GetIsMenu","parent":"DFrame","type":"panelfunc","ispanel":true,"description":{"text":"Gets whether or not the frame is part of a derma menu. This is set with .","page":"DFrame:SetIsMenu"},"realm":"Client","rets":{"ret":{"text":"Whether or not this frame is a menu component.","name":"","type":"boolean"}}}},
{"function":{"name":"GetDraggable","parent":"DFrame","type":"panelfunc","ispanel":true,"description":"Gets whether or not the frame is draggable by the user.","realm":"Client","rets":{"ret":{"text":"Whether the frame is draggable or not.","name":"","type":"boolean"}}}},
{"function":{"name":"GetDeleteOnClose","parent":"DFrame","type":"panelfunc","ispanel":true,"description":{"text":"Determines whether or not the DFrame will be removed when it is closed. This is set with .","page":"DFrame:SetDeleteOnClose"},"realm":"Client","rets":{"ret":{"text":"Whether or not the frame will be removed on close.","name":"","type":"boolean"}}}},
{"function":{"name":"GetBackgroundBlur","parent":"DFrame","type":"panelfunc","ispanel":true,"description":"Gets whether the background behind the frame is being blurred.","realm":"Client","rets":{"ret":{"text":"Whether or not background blur is enabled.","name":"","type":"boolean"}}}},
{"function":{"name":"Center","parent":"DFrame","type":"panelfunc","ispanel":true,"description":{"text":"Centers the frame relative to the whole screen and invalidates its layout. This overrides .","page":"Panel:Center"},"realm":"Client"}},
{"function":{"name":"Close","parent":"DFrame","type":"panelfunc","ispanel":true,"description":{"text":"Hides or removes the DFrame, and calls .\n\nTo set whether the frame is hidden or removed, use .","page":["DFrame:OnClose","DFrame:SetDeleteOnClose"]},"realm":"Client"}},
{"function":{"name":"TextEntry","parent":"DForm","type":"panelfunc","ispanel":true,"description":{"text":"Adds a  to a","page":["DTextEntry","DForm"]},"realm":"Client","args":{"arg":[{"text":"The label to be next to the text entry","name":"label","type":"string"},{"text":"The console variable to be changed when the text entry is changed","name":"convar","type":"string"}]},"rets":{"ret":[{"text":"The created","name":"","type":"Panel","page":"DTextEntry"},{"text":"The created","name":"","type":"Panel","page":"DLabel"}]}}},
{"function":{"name":"SetName","parent":"DForm","type":"panelfunc","ispanel":true,"description":"Sets the title (header) name of the DForm. This is `Label` until set.","realm":"Client","args":{"arg":{"text":"The new header name.","name":"name","type":"string"}}}},
{"function":{"name":"Rebuild","parent":"DForm","type":"panelfunc","ispanel":true,"description":{"text":"Does nothing.","deprecated":""},"realm":"Client"}},
{"function":{"name":"PanelSelect","parent":"DForm","type":"panelfunc","ispanel":true,"description":{"text":"Creates a  and docks it to the top of the DForm.","page":"DPanelSelect"},"realm":"Client","rets":{"ret":{"text":"The created DPanelSelect.","name":"","type":"Panel"}}}},
{"function":{"name":"ListBox","parent":"DForm","type":"panelfunc","ispanel":true,"description":{"text":"Adds a  onto the","page":["DListBox","DForm"]},"realm":"Client","args":{"arg":{"text":"The label to set on the DListBox","name":"label","type":"string"}},"rets":{"ret":[{"text":"The created","name":"","type":"Panel","page":"DListBox"},{"text":"The created","name":"","type":"Panel","page":"DLabel"}]}}},
{"function":{"name":"NumSlider","parent":"DForm","type":"panelfunc","ispanel":true,"description":{"text":"Adds a  onto the","page":["DNumSlider","DForm"]},"realm":"Client","args":{"arg":[{"text":"The label of the DNumSlider","name":"label","type":"string"},{"text":"The console variable to change when the slider is changed","name":"convar","type":"string"},{"text":"The minimum value of the slider","name":"min","type":"number"},{"text":"The maximum value of the slider","name":"max","type":"number"},{"text":"The number of decimals to allow on the slider. (Optional)","name":"decimals","type":"number","default":"nil"}]},"rets":{"ret":{"text":"The created","name":"","type":"Panel","page":"DNumSlider"}}}},
{"function":{"name":"NumberWang","parent":"DForm","type":"panelfunc","ispanel":true,"description":{"text":"Adds a  onto the","page":["DNumberWang","DForm"]},"realm":"Client","args":{"arg":[{"text":"The label to be placed next to the DNumberWang","name":"label","type":"string"},{"text":"The console variable to change when the slider is changed","name":"convar","type":"string"},{"text":"The minimum value of the slider","name":"min","type":"number"},{"text":"The maximum value of the slider","name":"max","type":"number"},{"text":"The number of decimals to allow in the slider (Optional)","name":"decimals","type":"number","default":"nil"}]},"rets":{"ret":[{"text":"The created","name":"","type":"Panel","page":"DNumberWang"},{"text":"The created","name":"","type":"Panel","page":"DLabel"}]}}},
{"function":{"name":"Help","parent":"DForm","type":"panelfunc","ispanel":true,"description":{"text":"Adds a  onto the  as a helper","page":["DLabel","DForm"]},"realm":"Client","args":{"arg":{"text":"The help message to be displayed","name":"help","type":"string"}},"rets":{"ret":{"text":"The created","name":"","type":"Panel","page":"DLabel"}}}},
{"function":{"name":"CheckBox","parent":"DForm","type":"panelfunc","ispanel":true,"description":{"text":"Adds a  onto the","page":["DCheckBoxLabel","DForm"]},"realm":"Client","args":{"arg":[{"text":"The label to be set next to the check box","name":"label","type":"string"},{"text":"The console variable to change when this is changed","name":"convar","type":"string"}]},"rets":{"ret":{"text":"The created","name":"","type":"Panel","page":"DCheckBoxLabel"}}}},
{"function":{"name":"ControlHelp","parent":"DForm","type":"panelfunc","ispanel":true,"description":{"text":"Adds a  onto the . Unlike , this is indented and is colored blue, depending on the derma skin.","page":["DLabel","DForm","DForm:Help"]},"realm":"Client","args":{"arg":{"text":"The help message to be displayed.","name":"help","type":"string"}},"rets":{"ret":{"text":"The created","name":"","type":"Panel","page":"DLabel"}}}},
{"function":{"name":"ComboBox","parent":"DForm","type":"panelfunc","ispanel":true,"description":{"text":"Adds a  onto the","page":["DComboBox","DForm"]},"realm":"Client","args":{"arg":[{"text":"Text to the left of the combo box","name":"title","type":"string"},{"text":"Console variable to change when the user selects something from the dropdown.","name":"convar","type":"string"}]},"rets":{"ret":[{"text":"The created","name":"","type":"Panel","page":"DComboBox"},{"text":"The created","name":"","type":"Panel","page":"DLabel"}]}},"example":{"code":"local frame = vgui.Create( \"DFrame\" )\nframe:SetSize( ScrW() / 2, ScrH() / 2 )\nframe:MakePopup()\n\nlocal form = frame:Add(\"DForm\")\nform:Dock( FILL )\nform:DockMargin( 5, 5, 5, 5 )\n\nlocal combobox, label = form:ComboBox( \"test\", \"sv_accelerate\" )\ncombobox:AddChoice( \"10\" ) -- 10 will be used as convar value\ncombobox:AddChoice( \"1000\", 100 ) -- 100 will be used as convar value"}},
{"function":{"name":"Button","parent":"DForm","type":"panelfunc","ispanel":true,"description":{"text":"Adds a  onto the","page":["DButton","DForm"]},"realm":"Client","args":{"arg":[{"text":"The text on the button","name":"text","type":"string"},{"text":"The concommand to run when the button is clicked","name":"concmd","type":"string"},{"text":"The arguments to pass on to the concommand when the button is clicked","name":"concmd args","type":"vararg"}]},"rets":{"ret":{"text":"The created","name":"","type":"Panel","page":"DButton"}}}},
{"function":{"name":"SortFiles","parent":"DFileBrowser","type":"panelfunc","ispanel":true,"description":{"text":"Sorts the file list.","note":{"text":"This is only functional when not using the model viewer. See","page":"DFileBrowser:SetModels"}},"realm":"Client","args":{"arg":{"text":"The sort order. `true` for descending (z-a), `false` for ascending (a-z).","name":"descending","type":"boolean","default":"false"}}}},
{"function":{"name":"AddItem","parent":"DForm","type":"panelfunc","ispanel":true,"description":"Adds one or two items to the DForm.\nIf this method is called with only one argument, it is added to the bottom of the form. If two arguments are passed, they are placed side-by-side at the bottom of the form.\n\nInternally, this function is used by the various DForm functions to, for example, add labels to the left of buttons.","realm":"Client","args":{"arg":[{"text":"Left-hand element to add to the DForm.","name":"left","type":"Panel"},{"text":"Right-hand element to add to the DForm.","name":"right","type":"Panel","default":"nil"}]}}},
{"function":{"name":"AddItem","parent":"DForm","type":"panelfunc","ispanel":true,"description":"Adds one or two items to the DForm.\nIf this method is called with only one argument, it is added to the bottom of the form. If two arguments are passed, they are placed side-by-side at the bottom of the form.\n\nInternally, this function is used by the various DForm functions to, for example, add labels to the left of buttons.","realm":"Client","args":{"arg":[{"text":"Left-hand element to add to the DForm.","name":"left","type":"Panel"},{"text":"Right-hand element to add to the DForm.","name":"right","type":"Panel","default":"nil"}]}}},
{"function":{"name":"SetupTree","parent":"DFileBrowser","type":"panelfunc","ispanel":true,"description":{"text":"Called to set up the  by .","internal":"","page":["DTree","DFileBrowser:Setup"]},"realm":"Client","rets":{"ret":{"text":"Whether or not the tree was set up successfully.","name":"","type":"boolean"}}}},
{"function":{"name":"Setup","parent":"DFileBrowser","type":"panelfunc","ispanel":true,"description":{"text":"Called to set up the  and file viewer when a base path has been set.\n\nCalls  and .","internal":"","page":["DTree","DFileBrowser:SetupTree","DFileBrowser:SetupFiles"]},"realm":"Client","rets":{"ret":{"text":"Whether or not the variables needed to set up have been defined.","name":"","type":"boolean"}}}},
{"function":{"name":"SetupFiles","parent":"DFileBrowser","type":"panelfunc","ispanel":true,"description":{"text":"Called to set up the  or  by .\n\nThe icon browser is used when in models mode. See .","internal":"","page":["DListView","DIconBrowser","DFileBrowser:Setup","DFileBrowser:SetModels"]},"realm":"Client","rets":{"ret":{"text":"Whether or not the files pane was set up successfully.","name":"","type":"boolean"}}}},
{"function":{"name":"SetSearch","parent":"DFileBrowser","type":"panelfunc","ispanel":true,"description":{"text":"Sets the search filter for the file tree.\n\nThis accepts the same wildcards as .","page":"file.Find"},"realm":"Client","args":{"arg":{"text":"The filter to use on the file tree.","name":"filter","type":"string","default":"*"}}}},
{"function":{"name":"SetPath","parent":"DFileBrowser","type":"panelfunc","ispanel":true,"description":{"text":"Sets the access path for the file tree. This is set to `GAME` by default.\n\nSee  for how paths work.","page":"file.Read"},"realm":"Client","args":{"arg":{"text":"The access path i.e. \"GAME\", \"LUA\", \"DATA\" etc.","name":"path","type":"string"}}}},
{"function":{"name":"SetName","parent":"DFileBrowser","type":"panelfunc","ispanel":true,"description":"Sets the name to use for the file tree.","realm":"Client","args":{"arg":{"text":"The name for the root of the file tree. Passing no value causes this to be the base folder name. See .","name":"treeName","type":"string","default":"`baseFolder`","page":"DFileBrowser:SetBaseFolder"}}}},
{"function":{"name":"SetOpen","parent":"DFileBrowser","type":"panelfunc","ispanel":true,"description":"Opens or closes the file tree.","realm":"Client","args":{"arg":[{"text":"`true` to open the tree, `false` to close it.","name":"open","type":"boolean","default":"false"},{"text":"If `true`, the 's open/close animation is used.","name":"useAnim","type":"boolean","default":"false","page":"DTree"}]}}},
{"function":{"name":"SetModels","parent":"DFileBrowser","type":"panelfunc","ispanel":true,"description":{"text":"Enables or disables the model viewer mode. In this mode, files are displayed as s instead of a list.","page":"SpawnIcon","note":{"text":"This should only be used for `.mdl` files; the spawn icons will display error models for others. See","page":"DFileBrowser:SetFileTypes"}},"realm":"Client","args":{"arg":{"text":"Whether or not to display files using s.","name":"showModels","type":"boolean","default":"false","page":"SpawnIcon"}}}},
{"function":{"name":"SetFileTypes","parent":"DFileBrowser","type":"panelfunc","ispanel":true,"description":{"text":"Sets the file type filter for the file list.\n\nThis accepts the same file extension wildcards as .","page":"file.Find"},"realm":"Client","args":{"arg":{"text":"A list of file types to display, separated by spaces e.g.\n```\n\"*.lua *.txt *.mdl\"\n```","name":"fileTypes","type":"string","default":"*.*"}}}},
{"function":{"name":"SetCurrentFolder","parent":"DFileBrowser","type":"panelfunc","ispanel":true,"description":"Sets the directory/folder from which to display the file list.","realm":"Client","args":{"arg":{"text":"The directory to display files from.","name":"currentDir","type":"string"}}}},
{"function":{"name":"SetBaseFolder","parent":"DFileBrowser","type":"panelfunc","ispanel":true,"description":"Sets the root directory/folder of the file tree.\n\nThis needs to be set for the file tree to be displayed.","realm":"Client","args":{"arg":{"text":"The path to the folder to use as the root.","name":"baseDir","type":"string"}}}},
{"function":{"name":"OnSelect","parent":"DFileBrowser","type":"panelfunc","ispanel":true,"description":"Called when a file is selected.","realm":"Client","args":{"arg":[{"text":"The path to the file that was selected.","name":"filePath","type":"string"},{"text":"The panel that was clicked to select this file.This will either be a  or  depending on whether the model viewer mode is enabled. See .","name":"selectedPanel","type":"Panel","br":["",""],"page":["DListView_Line","SpawnIcon","DFileBrowser:SetModels"]}]}}},
{"function":{"name":"OnRightClick","parent":"DFileBrowser","type":"panelfunc","ispanel":true,"description":{"text":"Called when a file is right-clicked.","note":{"text":"When not in model viewer mode,  will also be called if the file is not already selected.","page":"DFileBrowser:OnSelect"}},"realm":"Client","args":{"arg":[{"text":"The path to the file that was right-clicked.","name":"filePath","type":"string"},{"text":"The panel that was right-clicked to select this file.\n\nThis will either be a  or  depending on whether the model viewer mode is enabled. See .","name":"selectedPanel","type":"Panel","page":["DListView_Line","SpawnIcon","DFileBrowser:SetModels"],"br":""}]}}},
{"function":{"name":"OnDoubleClick","parent":"DFileBrowser","type":"panelfunc","ispanel":true,"description":{"text":"Called when a file is double-clicked.","note":{"text":"Double-clicking a file or icon will trigger **both** this and .","page":"DFileBrowser:OnSelect"}},"realm":"Client","args":{"arg":[{"text":"The path to the file that was double-clicked.","name":"filePath","type":"string"},{"text":"The panel that was double-clicked to select this file.This will either be a  or  depending on whether the model viewer mode is enabled. See .","name":"selectedPanel","type":"Panel","br":["",""],"page":["DListView_Line","SpawnIcon","DFileBrowser:SetModels"]}]}}},
{"function":{"name":"GetSearch","parent":"DFileBrowser","type":"panelfunc","ispanel":true,"description":"Returns the current search filter on the file tree.","realm":"Client","rets":{"ret":{"text":"The filter in use on the file tree.","name":"","type":"string"}}}},
{"function":{"name":"GetPath","parent":"DFileBrowser","type":"panelfunc","ispanel":true,"description":{"text":"Returns the access path of the file tree. This is `GAME` unless changed with .\n\nSee  for how paths work.","page":["DFileBrowser:SetPath","file.Read"]},"realm":"Client","rets":{"ret":{"text":"The current access path i.e. \"GAME\", \"LUA\", \"DATA\" etc.","name":"","type":"string"}}}},
{"function":{"name":"GetName","parent":"DFileBrowser","type":"panelfunc","ispanel":true,"description":"Returns the name being used for the file tree.","realm":"Client","rets":{"ret":{"text":"The name used for the root of the file tree.","name":"","type":"string"}}}},
{"function":{"name":"GetName","parent":"DFileBrowser","type":"panelfunc","ispanel":true,"description":"Returns the name being used for the file tree.","realm":"Client","rets":{"ret":{"text":"The name used for the root of the file tree.","name":"","type":"string"}}}},
{"function":{"name":"GetModels","parent":"DFileBrowser","type":"panelfunc","ispanel":true,"description":{"text":"Returns whether or not the model viewer mode is enabled. In this mode, files are displayed as s instead of a list.","page":"SpawnIcon"},"realm":"Client","rets":{"ret":{"text":"Whether or not files will be displayed using s.","name":"","type":"boolean","page":"SpawnIcon"}}}},
{"function":{"name":"GetFolderNode","parent":"DFileBrowser","type":"panelfunc","ispanel":true,"description":{"text":"Returns the  that the file tree stems from.\n\nThis is a child of the root node of the .","page":["DTree Node","DTree"]},"realm":"Client","rets":{"ret":{"text":"The  used for the tree.","name":"","type":"Panel","page":"DTree_Node"}}}},
{"function":{"name":"GetFileTypes","parent":"DFileBrowser","type":"panelfunc","ispanel":true,"description":"Returns the current file type filter on the file list.","realm":"Client","rets":{"ret":{"text":"The current filter applied to the file list.","name":"","type":"string"}}}},
{"function":{"name":"GetCurrentFolder","parent":"DFileBrowser","type":"panelfunc","ispanel":true,"description":"Returns the current directory/folder being displayed.","realm":"Client","rets":{"ret":{"text":"The directory the file list is currently displaying.","name":"","type":"string"}}}},
{"function":{"name":"Clear","parent":"DFileBrowser","type":"panelfunc","ispanel":true,"description":"Clears the file tree and list, and resets all values.","realm":"Client"}},
{"function":{"name":"GetBaseFolder","parent":"DFileBrowser","type":"panelfunc","ispanel":true,"description":"Returns the root directory/folder of the file tree.","realm":"Client","rets":{"ret":{"text":"The path to the root folder.","name":"","type":"string"}}}},
{"function":{"name":"GetExpanded","parent":"DExpandButton","type":"panelfunc","ispanel":true,"description":"Returns whether this DExpandButton is expanded or not.","realm":"Client","rets":{"ret":{"text":"True if expanded, false otherwise","name":"","type":"boolean"}}}},
{"function":{"name":"SetExpanded","parent":"DExpandButton","type":"panelfunc","ispanel":true,"description":"Sets whether this DExpandButton should be expanded or not. Only changes appearance.","realm":"Client","args":{"arg":{"text":"True to expand ( visually will show a \"-\" )","name":"expanded","type":"boolean"}}}},
{"function":{"name":"SetEntity","parent":"DEntityProperties","type":"panelfunc","ispanel":true,"description":{"text":"Sets the entity to be edited by this panel. The entity must support the  system or nothing will happen.","page":"Editable Entities"},"realm":"Client","args":{"arg":{"text":"The entity to edit","name":"ent","type":"Entity"}}}},
{"function":{"name":"RebuildControls","parent":"DEntityProperties","type":"panelfunc","ispanel":true,"description":{"text":"Called internally by  to rebuild the controls.","internal":"","page":"DEntityProperties:SetEntity"},"realm":"Client"}},
{"function":{"name":"OnEntityLost","parent":"DEntityProperties","type":"panelfunc","ispanel":true,"description":"Called when we were editing an entity and then it became invalid (probably removed)","realm":"Client"}},
{"function":{"name":"EntityLost","parent":"DEntityProperties","type":"panelfunc","ispanel":true,"description":{"text":"Called internally when an entity being edited became invalid.\n\nYou should use  instead.","internal":"","page":"DEntityProperties:OnEntityLost"},"realm":"Client"}},
{"function":{"name":"EditVariable","parent":"DEntityProperties","type":"panelfunc","ispanel":true,"description":{"text":"Called internally by .","internal":"","page":"DEntityProperties:RebuildControls"},"realm":"Client","args":{"arg":[{"name":"varname","type":"string"},{"name":"editdata","type":"table"}]}}},
{"function":{"name":"Toggle","parent":"DDrawer","type":"panelfunc","ispanel":true,"description":{"text":"Toggles the .","page":"DDrawer"},"realm":"Client"}},
{"function":{"name":"SetOpenSize","parent":"DDrawer","type":"panelfunc","ispanel":true,"description":"Set the height of DDrawer","realm":"Client","args":{"arg":{"text":"Height of DDrawer. Default is 100.","name":"Value","type":"number"}}}},
{"function":{"name":"GetOpenTime","parent":"DDrawer","type":"panelfunc","ispanel":true,"description":"Return the Open Time of DDrawer.","realm":"Client","rets":{"ret":{"text":"Time in seconds.","name":"","type":"number"}}}},
{"function":{"name":"Open","parent":"DDrawer","type":"panelfunc","ispanel":true,"description":{"text":"Opens the .","page":"DDrawer"},"realm":"Client"}},
{"function":{"name":"Close","parent":"DDrawer","type":"panelfunc","ispanel":true,"description":{"text":"Closes the .","page":"DDrawer"},"realm":"Client"}},
{"function":{"name":"GetOpenSize","parent":"DDrawer","type":"panelfunc","ispanel":true,"description":"Return the Open Size of DDrawer.","realm":"Client","rets":{"ret":{"text":"Open size.","name":"","type":"number"}}}},
{"function":{"name":"GetOpenSize","parent":"DDrawer","type":"panelfunc","ispanel":true,"description":"Return the Open Size of DDrawer.","realm":"Client","rets":{"ret":{"text":"Open size.","name":"","type":"number"}}}},
{"function":{"name":"UpdateDropTarget","parent":"DDragBase","type":"panelfunc","ispanel":true,"description":{"text":"Internal function used in","internal":"","page":"DDragBase:DropAction_Normal"},"realm":"Client","args":{"arg":[{"name":"drop","type":"number"},{"name":"pnl","type":"Panel"}]}}},
{"function":{"name":"SetDropPos","parent":"DDragBase","type":"panelfunc","ispanel":true,"description":"Determines where you can drop stuff.\n\"4\" for left\n\"5\" for center\n\"6\" for right\n\"8\" for top\n\"2\" for bottom","realm":"Client","args":{"arg":{"text":"Where you're allowed to drop things.","name":"pos","type":"string","default":"5"}}}},
{"function":{"name":"SetDnD","parent":"DDragBase","type":"panelfunc","ispanel":true,"description":"No Description","realm":"Client","args":{"arg":{"text":"Name of the DnD family.","name":"name","type":"string"}}}},
{"function":{"name":"SetUseLiveDrag","parent":"DDragBase","type":"panelfunc","ispanel":true,"description":"No Description","realm":"Client","args":{"arg":{"name":"newState","type":"boolean"}}}},
{"function":{"name":"OnModified","parent":"DDragBase","type":"panelfunc","ispanel":true,"description":{"text":"Called when anything is dropped on or rearranged within the .","page":"DDragBase"},"realm":"Client"}},
{"function":{"name":"GetUseLiveDrag","parent":"DDragBase","type":"panelfunc","ispanel":true,"description":"No Description","realm":"Client","rets":{"ret":{"name":"","type":"boolean"}}}},
{"function":{"name":"GetUseLiveDrag","parent":"DDragBase","type":"panelfunc","ispanel":true,"description":"No Description","realm":"Client","rets":{"ret":{"name":"","type":"boolean"}}}},
{"function":{"name":"GetDnD","parent":"DDragBase","type":"panelfunc","ispanel":true,"description":"No Description","realm":"Client","rets":{"ret":{"text":"Name of the DnD family.","name":"","type":"string"}}}},
{"function":{"name":"DropAction_Simple","parent":"DDragBase","type":"panelfunc","ispanel":true,"description":{"text":"Internal function used in","internal":"","page":"DDragBase:DropAction_Normal"},"realm":"Client","args":{"arg":[{"name":"drops","type":"table"},{"name":"bDoDrop","type":"boolean"},{"name":"command","type":"string"},{"name":"y","type":"number"},{"name":"x","type":"number"}]}}},
{"function":{"name":"DropAction_Copy","parent":"DDragBase","type":"panelfunc","ispanel":true,"description":{"text":"Internal function used in","internal":"","page":"DDragBase:MakeDroppable"},"realm":"Client","args":{"arg":[{"name":"drops","type":"table"},{"name":"bDoDrop","type":"boolean"},{"name":"command","type":"string"},{"name":"y","type":"number"},{"name":"x","type":"number"}]}}},
{"function":{"name":"DropAction_Normal","parent":"DDragBase","type":"panelfunc","ispanel":true,"description":{"text":"Internal function used in","internal":"","page":"DDragBase:DropAction_Copy"},"realm":"Client","args":{"arg":[{"name":"drops","type":"table"},{"name":"bDoDrop","type":"boolean"},{"name":"command","type":"string"},{"name":"y","type":"number"},{"name":"x","type":"number"}]}}},
{"function":{"name":"SetValue","parent":"DComboBox","type":"panelfunc","ispanel":true,"description":"Sets the text shown in the combo box when the menu is not collapsed.","realm":"Client","args":{"arg":{"text":"The text in the DComboBox.","name":"value","type":"string"}}},"example":{"description":"A simple feedback combo box which has the value set to a thank you message once a choice is clicked.","code":"BGPanel = vgui.Create(\"DPanel\")\nBGPanel:SetPos(20, 20)\nBGPanel:SetSize(200, 30)\n\nlocal cbox = vgui.Create(\"DComboBox\", BGPanel)\ncbox:SetPos(5, 5)\ncbox:SetSize(190, 20)\n\ncbox:SetValue(\"What do you think of this server?\")\n\n-- Responses\ncbox:AddChoice(\"It's the best server of all time!\")\ncbox:AddChoice(\"It's pretty good.\")\ncbox:AddChoice(\"It's okay.\")\ncbox:AddChoice(\"It's not that good.\")\ncbox:AddChoice(\"Don't bother me with this.\")\n\nfunction cbox:OnSelect(index, value, data)\n\n\t-- Clear combo box and set a thank you message\n\tself:Clear()\n\tself:SetText(\"Thank you for your feedback!\")\n\t\n\t-- Here you would send the feedback to the server using a net message\n\t-- The choice is stored in the 'data' variable\n\nend","output":{"image":{"src":"DComboBox_SetValue_example1.gif"}}}},
{"function":{"name":"SetSortItems","parent":"DComboBox","type":"panelfunc","ispanel":true,"description":{"text":"Sets whether or not the items should be sorted alphabetically in the dropdown menu of the . If set to false, items will appear in the order they were added by  calls.\n\nThis is enabled by default.","page":["DComboBox","DComboBox:AddChoice"]},"realm":"Client","args":{"arg":{"text":"true to enable, false to disable","name":"sort","type":"boolean"}}}},
{"function":{"name":"OpenMenu","parent":"DComboBox","type":"panelfunc","ispanel":true,"description":"Opens the combo box drop down menu. Called when the combo box is clicked.","realm":"Client"}},
{"function":{"name":"IsMenuOpen","parent":"DComboBox","type":"panelfunc","ispanel":true,"description":"Returns whether or not the combo box's menu is opened.","realm":"Client","rets":{"ret":{"text":"True if the menu is open, false otherwise.","name":"","type":"boolean"}}}},
{"function":{"name":"OnSelect","parent":"DComboBox","type":"panelfunc","ispanel":true,"description":"Called when an option in the combo box is selected.","realm":"Client","args":{"arg":[{"text":"The index of the option for use with other  functions.","name":"index","type":"number","page":"DComboBox"},{"text":"The name of the option.","name":"value","type":"string"},{"text":"The data assigned to the option.","name":"data","type":"any"}]}},"example":{"description":"Creates a combo box that controls the color of the background panel.","code":"local frame = vgui.Create(\"DFrame\")\nframe:SetSize( 500, 500 )\nframe:Center()\nframe:MakePopup()\n\n-- Background panel\nlocal BGPanel = vgui.Create( \"DPanel\", frame )\nBGPanel:Dock( FILL )\n\nlocal cbox = vgui.Create( \"DComboBox\", BGPanel )\ncbox:SetPos( 5, 5 )\ncbox:SetSize( 190, 20 )\ncbox:SetValue( \"Pick a color\" ) -- Default text\n\n-- Color choices\ncbox:AddChoice( \"Red\", Color( 255, 0, 0 ) )\ncbox:AddChoice( \"Orange\", Color( 255, 128, 0 ) )\ncbox:AddChoice( \"Yellow\", Color( 255, 255, 0 ) )\ncbox:AddChoice( \"Green\", Color( 0, 255, 0 ) )\ncbox:AddChoice( \"Blue\", Color( 0, 0, 255 ) )\ncbox:AddChoice( \"Indigo\", Color( 64, 0, 255 ) )\ncbox:AddChoice( \"Violet\", Color( 128, 0, 255 ) )\ncbox:AddChoice( \"Pink\", Color( 255, 0, 255 ) )\n\nfunction cbox:OnSelect( index, text, data )\n\n\t-- Set background panel color\n\tBGPanel:SetBackgroundColor( data )\n\nend"}},
{"function":{"name":"GetSortItems","parent":"DComboBox","type":"panelfunc","ispanel":true,"description":{"text":"Returns an whether the items in the dropdown will be alphabetically sorted or not.\n\nSee .","page":"DComboBox:SetSortItems"},"realm":"Client","rets":{"ret":{"text":"True if enabled, false otherwise.","name":"","type":"boolean"}}}},
{"function":{"name":"GetSelectedID","parent":"DComboBox","type":"panelfunc","ispanel":true,"description":"Returns the index (ID) of the currently selected option.","realm":"Client","rets":{"ret":{"text":"The ID of the currently selected option.","name":"","type":"number"}}}},
{"function":{"name":"GetSelected","parent":"DComboBox","type":"panelfunc","ispanel":true,"description":"Returns the currently selected option's text and data","realm":"Client","rets":{"ret":[{"text":"The option's text value.","name":"","type":"string"},{"text":"The option's stored data.","name":"","type":"any"}]}}},
{"function":{"name":"GetOptionTextByData","parent":"DComboBox","type":"panelfunc","ispanel":true,"description":"Returns an option's text based on the given data.","realm":"Client","args":{"arg":{"text":"The data to look up the name of.\n\nIf given a  and no matching data was found, the function will test given data against each 'd data entry.","name":"data","type":"string","page":["number","Global.tonumber"]}},"rets":{"ret":{"text":"The option's text value.\n\nIf no matching data was found, the data itself will be returned. If multiple identical data entries exist, the first instance will be returned.","name":"","type":"string"}}}},
{"function":{"name":"GetOptionText","parent":"DComboBox","type":"panelfunc","ispanel":true,"description":"Returns an option's text based on the given index.","realm":"Client","args":{"arg":{"text":"The option index.","name":"index","type":"number"}},"rets":{"ret":{"text":"The option's text value.","name":"","type":"string"}}},"example":{"description":"Create a combo box listing some colors and print the 3rd option's text.","code":"local cbox = vgui.Create(\"DComboBox\")\ncbox:SetPos(5, 5)\ncbox:SetSize(200, 20)\n\ncbox:SetValue(\"Colors\")\ncbox:AddChoice(\"Red\")\ncbox:AddChoice(\"Green\")\ncbox:AddChoice(\"Blue\")\ncbox:AddChoice(\"Yellow\")\n\nprint(cbox:GetOptionText(3))","output":"Blue"}},
{"function":{"name":"GetOptionData","parent":"DComboBox","type":"panelfunc","ispanel":true,"description":"Returns an option's data based on the given index.","realm":"Client","args":{"arg":{"text":"The option index.","name":"index","type":"number"}},"rets":{"ret":{"text":"The option's data value.","name":"","type":"any"}}}},
{"function":{"name":"CloseMenu","parent":"DComboBox","type":"panelfunc","ispanel":true,"description":"Closes the combo box menu. Called when the combo box is clicked while open.","realm":"Client"}},
{"function":{"name":"Clear","parent":"DComboBox","type":"panelfunc","ispanel":true,"description":"Clears the combo box's text value, choices, and data values.","realm":"Client"}},
{"function":{"name":"ChooseOptionID","parent":"DComboBox","type":"panelfunc","ispanel":true,"description":"Selects an option within a combo box based on its table index.","realm":"Client","args":{"arg":{"text":"Selects the option with given index.","name":"index","type":"number"}}},"example":{"description":"A simple combo box menu which gives choices for a favorite lunch meal, including a non-preference choice which randomly chooses an option.","code":"BGPanel = vgui.Create(\"DPanel\")\nBGPanel:SetPos(20, 20)\nBGPanel:SetSize(200, 100)\n\n-- Text output\nlocal lbl = vgui.Create(\"DLabel\", BGPanel)\nlbl:SetPos(10, 80)\nlbl:SetSize(180, 20)\nlbl:SetDark(true)\nlbl:SetText(\"You choose...\")\n\n-- Combo box\nlocal cbox = vgui.Create(\"DComboBox\", BGPanel)\ncbox:SetPos(5, 5)\ncbox:SetSize(190, 20)\n\ncbox:SetValue(\"What's your favorite lunch meal?\")\n\n-- Choices\ncbox:AddChoice(\"BBQ Chicken\")\ncbox:AddChoice(\"Fish and Chips\")\ncbox:AddChoice(\"Pizza\")\ncbox:AddChoice(\"Potato Salad\")\ncbox:AddChoice(\"Roast Beef Sandwich\")\ncbox:AddChoice(\"Spaghetti\")\n\n-- No preference: data is set to -1\ncbox:AddChoice(\"I don't have a favorite.\", -1)\n\nfunction cbox:OnSelect(index, value, data)\n\n\t-- No preference? Choose a random choice\n\tif(data == -1) then\t\t\t\t\n\t\tself:ChooseOptionID(math.random(1, 6))\n\t\t\n\t-- Otherwise update the text label with our choice\n\telse\n\t\tlbl:SetText(\"You choose \"..value..\".\")\n\tend\n\t\nend","output":{"image":{"src":"DComboBox_ChooseOptionID_example1.gif"}}}},
{"function":{"name":"UseButtonOnlyStyle","parent":"DColumnSheet","type":"panelfunc","ispanel":true,"description":"Makes the tabs/buttons show only the image and no text.","realm":"Client"}},
{"function":{"name":"ChooseOption","parent":"DComboBox","type":"panelfunc","ispanel":true,"description":"Selects a combo box option by its index and changes the text displayed at the top of the combo box.","realm":"Client","args":{"arg":[{"text":"The text to display at the top of the combo box.","name":"value","type":"string"},{"text":"The option index.","name":"index","type":"number"}]}}},
{"function":{"name":"SetActiveButton","parent":"DColumnSheet","type":"panelfunc","ispanel":true,"description":{"text":"Makes a button an active button for this .","internal":"","page":"DColumnSheet"},"realm":"Client","args":{"arg":{"text":"The button to make active button","name":"active","type":"Panel"}}}},
{"function":{"name":"AddChoice","parent":"DComboBox","type":"panelfunc","ispanel":true,"description":"Adds a choice to the combo box.","file":{"text":"lua/vgui/dcombobox.lua","line":"126-L146"},"realm":"Client","args":{"arg":[{"text":"The text show to the user.","name":"value","type":"string"},{"text":"The data accompanying this string. If left empty, the value argument is used instead.\n\nCan be accessed with the second argument of ,  and as an argument of .","name":"data","type":"any","default":"nil","page":["DComboBox:GetSelected","DComboBox:GetOptionData","DComboBox:OnSelect"]},{"text":"Should this be the default selected text show to the user or not.","name":"select","type":"boolean","default":"false"},{"text":"Adds an icon for this choice.","name":"icon","type":"string","default":"nil"}]},"rets":{"ret":{"text":"The index of the new option.","name":"","type":"number"}}}},
{"function":{"name":"GetActiveButton","parent":"DColumnSheet","type":"panelfunc","ispanel":true,"description":{"text":"Returns the active button of this .","page":"DColumnSheet"},"realm":"Client","rets":{"ret":{"text":"The active button","name":"","type":"Panel"}}}},
{"function":{"name":"UpdateConVars","parent":"DColorPalette","type":"panelfunc","ispanel":true,"description":{"text":"Updates all the console variables set by  and so on with given color.\n\nCalled internally when a palette color is clicked.","internal":"","page":"DColorPalette:SetConVarR"},"realm":"Client","args":{"arg":{"text":"A","name":"clr","type":"table","page":"Color"}}}},
{"function":{"name":"AddSheet","parent":"DColumnSheet","type":"panelfunc","ispanel":true,"description":"Adds a new column/tab.","realm":"Client","args":{"arg":[{"text":"Name of the column/tab","name":"name","type":"string"},{"text":"Panel to be used as contents of the tab. This normally would be a","name":"pnl","type":"Panel","page":"DPanel"},{"text":"Icon for the tab. This will ideally be a , but any material name can be used.","name":"icon","type":"string","default":"nil","page":",silkiconSilkicons"}]},"rets":{"ret":{"text":"A table containing the following keys:\n*  Button - The created tab button that will switch to the given panel\n*  Panel - The given panel to switch to when the button is pressed","name":"","type":"table","page":["Panel","Panel"]}}}},
{"function":{"name":"UpdateConVar","parent":"DColorPalette","type":"panelfunc","ispanel":true,"description":{"text":"Internal helper function for .","internal":"","page":"DColorPalette:UpdateConVars"},"realm":"Client","args":{"arg":[{"text":"The name of the console variable to set","name":"name","type":"string"},{"text":"The key of the 3rd argument to set the convar to\nPossible values: \"r\", \"g\", \"b\", \"a\"","name":"key","type":"string"},{"text":"The  to retrieve the info from.","name":"clr","type":"table","page":"Color"}]}}},
{"function":{"name":"SetNumRows","parent":"DColorPalette","type":"panelfunc","ispanel":true,"description":{"text":"Roughly sets the number of colors that can be picked by the user. If the DColorPalette is exactly 6 rows tall, this function will set the number of colors shown per row in the palette.","note":{"text":"or  must be called after this function to apply changes.","page":["DColorPalette:Reset","DColorPalette:ResetSavedColors"]}},"realm":"Client","args":{"arg":{"text":"Scale for the range of colors that the user can pick. Default is 8.","name":"rows","type":"number"}}},"example":{"description":"Creates four DColorPalettes, each with a varying number of colors per row.","code":"local frame = vgui.Create( \"DFrame\" ) -- Create the window\nframe:SetSize( 350, 350 )\nframe:SetTitle( \"SetNumRows Demonstration\" )\nframe:Center()\nframe:MakePopup()\n\nlocal label = vgui.Create( \"DLabel\", frame ) -- Create the help text\nlabel:Dock( TOP )\nlabel:SetText( \"Difference between SetNumRows( 4 ), SetNumRows( 8 ), SetNumRows( 16 ) and SetNumRows( 24 )\" )\nlabel:SetWrap( true ) -- Enables text wrapping for lower resolutions\nlabel:SetAutoStretchVertical( true ) -- Needed for the text to show properly\n\nlocal pallette1 = vgui.Create( \"DColorPalette\", frame ) -- First DColorPalette with 4 colors per row\npallette1:SetPos( 4, 60 )\npallette1:SetNumRows( 4 )\npallette1:SetSize( 40, 60 )\npallette1:Reset()\n\nlocal pallette2 = vgui.Create( \"DColorPalette\", frame ) -- Second DColorPalette with 8 colors per row\npallette2:SetPos( 4, 130 )\npallette2:SetNumRows( 8 )\npallette2:SetSize( 80, 60 )\npallette2:Reset()\n\nlocal pallette3 = vgui.Create( \"DColorPalette\", frame ) -- Third DColorPalette with 16 colors per row\npallette3:SetPos( 4, 200 )\npallette3:SetNumRows( 16 )\npallette3:SetSize( 160, 60 )\npallette3:Reset()\n\nlocal pallette4 = vgui.Create( \"DColorPalette\", frame ) -- Fourth DColorPalette with 24 colors per row\npallette4:SetPos( 4, 270 )\npallette4:SetNumRows( 24 )\npallette4:SetSize( 240, 60 )\npallette4:Reset()","output":{"image":{"src":"setnumrows_demonstration.png"}}}},
{"function":{"name":"SetConVarG","parent":"DColorPalette","type":"panelfunc","ispanel":true,"description":{"text":"Sets the  name for the green channel of the color.\n\nSee also:\n*  - For the red channel\n*  - For the blue channel\n*  - For the alpha channel","page":["ConVar","DColorPalette:SetConVarR","DColorPalette:SetConVarB","DColorPalette:SetConVarA"]},"realm":"Client","args":{"arg":{"text":"The  name for the green channel of the color","name":"convar","type":"string","page":"ConVar"}}}},
{"function":{"name":"SetConVarR","parent":"DColorPalette","type":"panelfunc","ispanel":true,"description":{"text":"Sets the  name for the red channel of the color.\n\nSee also:\n*  - For the green channel\n*  - For the blue channel\n*  - For the alpha channel","page":["ConVar","DColorPalette:SetConVarG","DColorPalette:SetConVarB","DColorPalette:SetConVarA"]},"realm":"Client","args":{"arg":{"text":"The  name for the red channel of the color","name":"convar","type":"string","page":"ConVar"}}}},
{"function":{"name":"SetConVarB","parent":"DColorPalette","type":"panelfunc","ispanel":true,"description":{"text":"Sets the  name for the blue channel of the color.\n\nSee also:\n*  - For the red channel\n*  - For the green channel\n*  - For the alpha channel","page":["ConVar","DColorPalette:SetConVarR","DColorPalette:SetConVarG","DColorPalette:SetConVarA"]},"realm":"Client","args":{"arg":{"text":"The  name for the blue channel of the color","name":"convar","type":"string","page":"ConVar"}}}},
{"function":{"name":"SetConVarA","parent":"DColorPalette","type":"panelfunc","ispanel":true,"description":{"text":"Sets the  name for the alpha channel of the color.\n\nSee also:\n*  - For the red channel\n*  - For the green channel\n*  - For the blue channel","page":["ConVar","DColorPalette:SetConVarR","DColorPalette:SetConVarG","DColorPalette:SetConVarB"]},"realm":"Client","args":{"arg":{"text":"The  name for the alpha channel of the color","name":"convar","type":"string","page":"ConVar"}}}},
{"function":{"name":"SetColorButtons","parent":"DColorPalette","type":"panelfunc","ispanel":true,"description":"Clears the palette and adds new buttons with given colors.","realm":"Client","args":{"arg":{"text":"A number indexed table where each value is a","name":"tab","type":"table","page":"Color"}}}},
{"function":{"name":"SetColor","parent":"DColorPalette","type":"panelfunc","ispanel":true,"description":{"text":"Currently does nothing. Intended to \"select\" the color.","deprecated":""},"realm":"Client","args":{"arg":{"name":"clr","type":"table"}}}},
{"function":{"name":"SetButtonSize","parent":"DColorPalette","type":"panelfunc","ispanel":true,"description":{"text":"Sets the size of each palette button.\n\nThis is best kept to such a number, where this equation would return a whole number:\n`WidthOfColorPalette / ButtonSize= WholeNumber`\n\nIf not, there will be ugly whitespace on the right side of the panel.","br":""},"realm":"Client","args":{"arg":{"text":"Sets the new size","name":"size","type":"number"}}}},
{"function":{"name":"SaveColor","parent":"DColorPalette","type":"panelfunc","ispanel":true,"description":{"text":"Saves the color of given button across sessions.\n\nThe color is saved as a panel cookie, see  and .\n```\n\n \n```\n\nIt is expected that the amount of colors per palette () is the same every time.","page":["Panel:SetCookie","Panel:SetCookieName","Panel:SetCookieName"]},"realm":"Client","args":{"arg":[{"text":"The button to save the color of. Used to get the ID of the button.","name":"btn","type":"Panel"},{"text":"The color to save to this button's index","name":"clr","type":"table"}]}}},
{"function":{"name":"ResetSavedColors","parent":"DColorPalette","type":"panelfunc","ispanel":true,"description":{"text":"Resets this entire color palette to a default preset one and saves the changes.\n\nSee  for version that does not save the changes.","page":"DColorPalette:Reset"},"realm":"Client"}},
{"function":{"name":"Reset","parent":"DColorPalette","type":"panelfunc","ispanel":true,"description":{"text":"Resets this entire color palette to a default preset one, without saving.\n\nSee  for version that also saves the changes.","page":"DColorPalette:ResetSavedColors"},"realm":"Client"}},
{"function":{"name":"OnValueChanged","parent":"DColorPalette","type":"panelfunc","ispanel":true,"description":"Called when the color is changed after clicking a new value.","realm":"Client","args":{"arg":{"text":"The new color of the","name":"newcol","type":"table","page":"DColorPalette"}}},"example":{"description":"Creates a DFrame with a color palette that prints values after being changed.","code":"local frame = vgui.Create( \"DFrame\" )\nframe:SetSize( ScrW() - 100, ScrH() - 100 )\nframe:Center()\nframe:MakePopup()\n\nlocal palette = vgui.Create( \"DColorPalette\", frame )\npalette:Dock( FILL )\n\nfunction palette:OnValueChanged( newcol )\n\tPrintTable( newcol )\nend","output":"The color chosen on the palette."}},
{"function":{"name":"OnRightClickButton","parent":"DColorPalette","type":"panelfunc","ispanel":true,"description":"Called when a palette button has been pressed","realm":"Client","args":{"arg":{"text":"The  that was pressed.","name":"pnl","type":"Panel","page":"DColorButton"}}}},
{"function":{"name":"GetNumRows","parent":"DColorPalette","type":"panelfunc","ispanel":true,"description":"Returns the number of rows of the palette, provided 6 colors fill each row. This value is equal to the number of colors in the DColorPalette divided by 6.","realm":"Client","rets":{"ret":{"text":"Number of rows of the DColorPalette.","name":"","type":"number"}}}},
{"function":{"name":"NetworkColorChange","parent":"DColorPalette","type":"panelfunc","ispanel":true,"description":{"text":"Used internally to make sure changes on one palette affect other palettes with same name.","internal":""},"realm":"Client"}},
{"function":{"name":"GetConVarR","parent":"DColorPalette","type":"panelfunc","ispanel":true,"description":{"text":"Returns the  name for the red channel of the color.\n\nSee also:\n*  - For the green channel\n*  - For the blue channel\n*  - For the alpha channel","page":["ConVar","DColorPalette:GetConVarG","DColorPalette:GetConVarB","DColorPalette:GetConVarA"]},"realm":"Client","rets":{"ret":{"text":"The  name for the red channel of the color","name":"","type":"string","page":"ConVar"}}}},
{"function":{"name":"GetConVarA","parent":"DColorPalette","type":"panelfunc","ispanel":true,"description":{"text":"Returns the  name for the alpha channel of the color.\n\nSee also:\n*  - For the red channel\n*  - For the green channel\n*  - For the blue channel","page":["ConVar","DColorPalette:GetConVarR","DColorPalette:GetConVarG","DColorPalette:GetConVarB"]},"realm":"Client","rets":{"ret":{"text":"The  name for the alpha channel of the color","name":"","type":"string","page":"ConVar"}}}},
{"function":{"name":"GetConVarB","parent":"DColorPalette","type":"panelfunc","ispanel":true,"description":{"text":"Returns the  name for the blue channel of the color.\n\nSee also:\n*  - For the red channel\n*  - For the green channel\n*  - For the alpha channel","page":["ConVar","DColorPalette:GetConVarR","DColorPalette:GetConVarG","DColorPalette:GetConVarA"]},"realm":"Client","rets":{"ret":{"text":"The  name for the blue channel of the color","name":"","type":"string","page":"ConVar"}}}},
{"function":{"name":"GetConVarG","parent":"DColorPalette","type":"panelfunc","ispanel":true,"description":{"text":"Returns the  name for the green channel of the color.\n\nSee also:\n*  - For the red channel\n*  - For the blue channel\n*  - For the alpha channel","page":["ConVar","DColorPalette:GetConVarR","DColorPalette:GetConVarB","DColorPalette:GetConVarA"]},"realm":"Client","rets":{"ret":{"text":"The  name for the green channel of the color","name":"","type":"string","page":"ConVar"}}}},
{"function":{"name":"GetButtonSize","parent":"DColorPalette","type":"panelfunc","ispanel":true,"description":{"text":"Returns the size of each palette button. Set by .","page":"DColorPalette:SetButtonSize"},"realm":"Client","rets":{"ret":{"text":"The size of each palette button","name":"","type":"number"}}}},
{"function":{"name":"UpdateConVars","parent":"DColorMixer","type":"panelfunc","ispanel":true,"description":{"internal":""},"realm":"Client","args":{"arg":{"text":"The","name":"clr","type":"table","page":"Color"}}}},
{"function":{"name":"ValueChanged","parent":"DColorMixer","type":"panelfunc","ispanel":true,"description":{"text":"Called when the player changes the color of the .","page":"DColorMixer"},"realm":"Client","args":{"arg":{"text":"The new color. See","name":"col","type":"table","page":"Color"}}}},
{"function":{"name":"DoClick","parent":"DColorPalette","type":"panelfunc","ispanel":true,"description":{"text":"Basically the same functionality as , you should use that instead!","deprecated":"","page":"DColorPalette:OnValueChanged"},"realm":"Client","args":{"arg":[{"text":"The new color via the","name":"clr","type":"table","page":"Color"},{"text":"The  that was pressed.","name":"btn","type":"Panel","page":"DColorButton"}]}}},
{"function":{"name":"UpdateConVar","parent":"DColorMixer","type":"panelfunc","ispanel":true,"description":{"internal":""},"realm":"Client","args":{"arg":[{"text":"The  name","name":"cvar","type":"string","page":"ConVar"},{"text":"The color part to set the cvar to. \"r\", \"g\", \"b\" or \"a\".","name":"part","type":"string"},{"text":"The","name":"clr","type":"table","page":"Color"}]}}},
{"function":{"name":"TranslateValues","parent":"DColorMixer","type":"panelfunc","ispanel":true,"description":{"text":"Does nothing.","internal":"","deprecated":""},"realm":"Client"}},
{"function":{"name":"SetWangs","parent":"DColorMixer","type":"panelfunc","ispanel":true,"description":"Show / Hide the colors indicators in DColorMixer","realm":"Client","args":{"arg":{"text":"Show / Hide the colors indicators","name":"show","type":"boolean"}}}},
{"function":{"name":"UpdateColor","parent":"DColorMixer","type":"panelfunc","ispanel":true,"description":{"text":"Use  instead!","internal":"","page":"DColorMixer:SetColor"},"realm":"Client","args":{"arg":{"name":"clr","type":"table"}}}},
{"function":{"name":"SetVector","parent":"DColorMixer","type":"panelfunc","ispanel":true,"description":{"text":"Sets the color of  from a . Alpha is not included.","page":["DColorMixer","Vector"]},"realm":"Client","args":{"arg":{"text":"The color to set. It is expected that the vector will have values be from 0 to 1. (i.e. be normalized)","name":"vec","type":"Vector"}}}},
{"function":{"name":"SetPalette","parent":"DColorMixer","type":"panelfunc","ispanel":true,"description":"Show or hide the palette panel","realm":"Client","args":{"arg":{"text":"Show or hide the palette panel?","name":"enabled","type":"boolean"}}}},
{"function":{"name":"SetPalette","parent":"DColorMixer","type":"panelfunc","ispanel":true,"description":"Show or hide the palette panel","realm":"Client","args":{"arg":{"text":"Show or hide the palette panel?","name":"enabled","type":"boolean"}}}},
{"function":{"name":"SetConVarR","parent":"DColorMixer","type":"panelfunc","ispanel":true,"description":{"text":"Sets the  name for the red channel of the color.\n\nSee also:\n*  - For the green channel\n*  - For the blue channel\n*  - For the alpha channel","page":["ConVar","DColorMixer:SetConVarG","DColorMixer:SetConVarB","DColorMixer:SetConVarA"]},"realm":"Client","args":{"arg":{"text":"The  name for the red channel of the color","name":"convar","type":"string","page":"ConVar"}}}},
{"function":{"name":"SetConVarG","parent":"DColorMixer","type":"panelfunc","ispanel":true,"description":{"text":"Sets the  name for the green channel of the color.\n\nSee also:\n*  - For the red channel\n*  - For the blue channel\n*  - For the alpha channel","page":["ConVar","DColorMixer:SetConVarR","DColorMixer:SetConVarB","DColorMixer:SetConVarA"]},"realm":"Client","args":{"arg":{"text":"The  name for the green channel of the color","name":"convar","type":"string","page":"ConVar"}}}},
{"function":{"name":"SetConVarB","parent":"DColorMixer","type":"panelfunc","ispanel":true,"description":{"text":"Sets the  name for the blue channel of the color.\n\nSee also:\n*  - For the red channel\n*  - For the green channel\n*  - For the alpha channel","page":["ConVar","DColorMixer:SetConVarR","DColorMixer:SetConVarG","DColorMixer:SetConVarA"]},"realm":"Client","args":{"arg":{"text":"The  name for the blue channel of the color","name":"convar","type":"string","page":"ConVar"}}}},
{"function":{"name":"SetConVarA","parent":"DColorMixer","type":"panelfunc","ispanel":true,"description":{"text":"Sets the  name for the alpha channel of the color.\n\nSee also:\n*  - For the red channel\n*  - For the green channel\n*  - For the blue channel","page":["ConVar","DColorMixer:SetConVarR","DColorMixer:SetConVarG","DColorMixer:SetConVarB"]},"realm":"Client","args":{"arg":{"text":"The  name for the alpha channel of the color","name":"convar","type":"string","page":"ConVar"}}}},
{"function":{"name":"SetColor","parent":"DColorMixer","type":"panelfunc","ispanel":true,"description":{"text":"Sets the color of the","page":"DColorMixer"},"realm":"Client","args":{"arg":{"text":"The color to set. See","name":"color","type":"table","page":"Global.Color"}}}},
{"function":{"name":"SetBaseColor","parent":"DColorMixer","type":"panelfunc","ispanel":true,"description":{"text":"Sets the base color of the  part of the .\n\nSee also","page":["DColorCube","DColorMixer","DColorCube:SetBaseRGB"]},"realm":"Client","args":{"arg":{"name":"clr","type":"table","page":"Color"}}}},
{"function":{"name":"SetAlphaBar","parent":"DColorMixer","type":"panelfunc","ispanel":true,"description":"Show/Hide the alpha bar in DColorMixer","realm":"Client","args":{"arg":{"text":"Show / Hide the alpha bar","name":"show","type":"boolean"}}}},
{"function":{"name":"GetWangs","parent":"DColorMixer","type":"panelfunc","ispanel":true,"description":"Return true if the wangs are shown, false if not.","realm":"Client","rets":{"ret":{"text":"Return true if shown, false if not.","name":"","type":"boolean"}}}},
{"function":{"name":"GetVector","parent":"DColorMixer","type":"panelfunc","ispanel":true,"description":{"text":"Returns the color as a normalized .","page":"Vector"},"realm":"Client","rets":{"ret":{"text":"A vector representing the color of the , each value being in range of 0 to 1. Alpha is not included.","name":"","type":"Vector","page":"DColorMixer"}}}},
{"function":{"name":"GetPalette","parent":"DColorMixer","type":"panelfunc","ispanel":true,"description":"Return true if palette is shown, false if not.","realm":"Client","rets":{"ret":{"text":"Return true if shown, false if not.","name":"","type":"boolean"}}}},
{"function":{"name":"GetConVarR","parent":"DColorMixer","type":"panelfunc","ispanel":true,"description":{"text":"Returns the  name for the red channel of the color.\n\nSee also:\n*  - For the green channel\n*  - For the blue channel\n*  - For the alpha channel","page":["ConVar","DColorMixer:GetConVarG","DColorMixer:GetConVarB","DColorMixer:GetConVarA"]},"realm":"Client","rets":{"ret":{"text":"The  name for the red channel of the color","name":"","type":"string","page":"ConVar"}}}},
{"function":{"name":"GetConVarG","parent":"DColorMixer","type":"panelfunc","ispanel":true,"description":{"text":"Returns the  name for the green channel of the color.\n\nSee also:\n*  - For the red channel\n*  - For the blue channel\n*  - For the alpha channel","page":["ConVar","DColorMixer:GetConVarR","DColorMixer:GetConVarB","DColorMixer:GetConVarA"]},"realm":"Client","rets":{"ret":{"text":"The  name for the green channel of the color","name":"","type":"string","page":"ConVar"}}}},
{"function":{"name":"GetConVarB","parent":"DColorMixer","type":"panelfunc","ispanel":true,"description":{"text":"Returns the  name for the blue channel of the color.\n\nSee also:\n*  - For the red channel\n*  - For the green channel\n*  - For the alpha channel","page":["ConVar","DColorMixer:GetConVarR","DColorMixer:GetConVarG","DColorMixer:GetConVarA"]},"realm":"Client","rets":{"ret":{"text":"The  name for the blue channel of the color","name":"","type":"string","page":"ConVar"}}}},
{"function":{"name":"GetConVarA","parent":"DColorMixer","type":"panelfunc","ispanel":true,"description":{"text":"Returns the  name for the alpha channel of the color.\n\nSee also:\n*  - For the red channel\n*  - For the green channel\n*  - For the blue channel","page":["ConVar","DColorMixer:GetConVarR","DColorMixer:GetConVarG","DColorMixer:GetConVarB"]},"realm":"Client","rets":{"ret":{"text":"The  name for the alpha channel of the color","name":"","type":"string","page":"ConVar"}}}},
{"function":{"name":"GetAlphaBar","parent":"DColorMixer","type":"panelfunc","ispanel":true,"description":"Return true if alpha bar is shown, false if not.","realm":"Client","rets":{"ret":{"text":"Return true if shown, false if not.","name":"","type":"boolean"}}}},
{"function":{"name":"DoConVarThink","parent":"DColorMixer","type":"panelfunc","ispanel":true,"description":{"internal":""},"realm":"Client","args":{"arg":{"name":"cvar","type":"string"}}}},
{"function":{"name":"GetColor","parent":"DColorMixer","type":"panelfunc","ispanel":true,"description":"Returns the current selected color.","realm":"Client","rets":{"ret":{"text":"The current selected color as a .","name":"","type":"table","page":"Color"}}}},
{"function":{"name":"ConVarThink","parent":"DColorMixer","type":"panelfunc","ispanel":true,"description":{"internal":""},"realm":"Client"}},
{"function":{"name":"SetRGB","parent":"DColorCube","type":"panelfunc","ispanel":true,"description":{"text":"Used internally to set the real \"output\" color of the panel.","internal":""},"realm":"Client","args":{"arg":{"text":"A","name":"clr","type":"table","page":"Color"}}}},
{"function":{"name":"TranslateValues","parent":"DColorCube","type":"panelfunc","ispanel":true,"description":{"text":"Updates the color cube RGB based on the given x and y position and returns its arguments. Similar to .","internal":"","page":"DColorCube:UpdateColor"},"realm":"Client","args":{"arg":[{"text":"The x position to sample color from/the percentage of saturation to remove from the color (ranges from 0.0 to 1.0).","name":"x","type":"number"},{"text":"The y position to sample color from/the percentage of brightness or value to remove from the color (ranges from 0.0 to 1.0).","name":"y","type":"number"}]},"rets":{"ret":[{"text":"The given x position.","name":"","type":"number"},{"text":"The given y position.","name":"","type":"number"}]}},"example":{"description":"Creates a green color cube and prints out the color at the (0.2, 0.4) position.","code":"local color_cube = vgui.Create(\"DColorCube\")\ncolor_cube:SetSize(200, 200)\ncolor_cube:Center()\n\n-- Set base color to green\ncolor_cube:SetColor(Color(0, 255, 0))\n\n-- 20% desaturated, 40% darker\ncolor_cube:TranslateValues(0.2, 0.4)\n\n-- Get new color\nlocal new_color = color_cube:GetRGB()\n\n-- Update slider position\ncolor_cube:SetColor(new_color)\n\n-- Print out new color\nprint(\"Color( \"..new_color.r..\", \"..new_color.g..\", \"..new_color.b..\", \"..new_color.a..\" )\")","output":{"text":"```\nColor( 30, 153, 30, 255 )\n```","image":{"src":"DColorCube_TranslateValues_example1.png"}}}},
{"function":{"name":"UpdateColor","parent":"DColorCube","type":"panelfunc","ispanel":true,"description":{"text":"Updates the color cube RGB based on the given x and y position. Similar to .","internal":"","page":"DColorCube:TranslateValues"},"realm":"Client","args":{"arg":[{"text":"The x position to set color to/the percentage of saturation to remove from the color (ranges from 0.0 to 1.0).","name":"x","type":"number","default":"nil"},{"text":"The y position to set color to/the percentage of brightness or value to remove from the color (ranges from 0.0 to 1.0).","name":"y","type":"number","default":"nil"}]}},"example":{"description":"Creates a yellow color cube and updates/prints out the color at the (0.1, 0.6) position.","code":"local color_cube = vgui.Create(\"DColorCube\")\ncolor_cube:SetSize(200, 200)\ncolor_cube:Center()\n\n-- Set base color to yellow\ncolor_cube:SetColor(Color(255, 255, 0))\n\n-- 10% less saturation, 60% darker\ncolor_cube:UpdateColor(0.1, 0.6)\n\n-- Get new color\nlocal new_color = color_cube:GetRGB()\n\n-- Print new color\nprint(\"Color( \"..new_color.r..\", \"..new_color.g..\", \"..new_color.b..\", \"..new_color.a..\" )\")","outputfixedwidth":"Fixed width","output":"Color( 102, 102, 10, 255 )"}},
{"function":{"name":"SetHue","parent":"DColorCube","type":"panelfunc","ispanel":true,"description":{"text":"Appears to do nothing and unused.","deprecated":""},"realm":"Client","args":{"arg":{"name":"hue","type":"number"}}}},
{"function":{"name":"SetColor","parent":"DColorCube","type":"panelfunc","ispanel":true,"description":"Sets the base color of the color cube and updates the slider position.","realm":"Client","args":{"arg":{"text":"The color to set, uses .","name":"color","type":"table","page":"Color"}}},"example":{"description":"Picks the color at the center screen pixel and applies it to the base color of a color cube and its background panel.","code":"-- Get the color of the pixel at the center of the screen\nrender.CapturePixels()\nlocal p_r, p_g, p_b = render.ReadPixel(ScrW()/2, ScrH()/2)\n\n-- Background panel\nBGPanel = vgui.Create(\"DPanel\")\nBGPanel:SetPos((ScrW()/2)-50, ScrH()/2-100)\nBGPanel:SetSize(100, 100)\n\n-- Color cube\nlocal color_cube = vgui.Create(\"DColorCube\", BGPanel)\ncolor_cube:SetSize(75, 75)\ncolor_cube:Center()\n\n-- Set the color to the center pixel color\ncolor_cube:SetColor(Color(p_r, p_g, p_b))\n\n-- Change background color too\nBGPanel:SetBackgroundColor(Color(p_r, p_g, p_b))","output":{"image":{"src":"DColorCube_SetColor_example.jpg"}}}},
{"function":{"name":"SetBaseRGB","parent":"DColorCube","type":"panelfunc","ispanel":true,"description":{"text":"Sets the base color and the color used to draw the color cube panel itself.","note":{"text":"Calling this when using a color that isn't 100% saturated and valued ( with saturation and value set to 1) causes the color cube to look inaccurate compared to the color that's returned by methods like  and . You should use  instead","page":["Global.HSVToColor","DColorCube:GetRGB","DColorCube:OnUserChanged","DColorCube:SetColor"]}},"realm":"Client","args":{"arg":{"text":"The base color to set, uses .","name":"color","type":"table","page":"Color"}}},"example":{"description":"Creates a background panel and color cube that controls the background color. Demonstrates how setting the base RGB explicitly can cause a disconnect between the color represented by the cube and the color output.","code":"-- Background panel\nBGPanel = vgui.Create(\"DPanel\")\nBGPanel:SetSize(200, 200)\nBGPanel:Center()\n\n-- Color cube\nlocal color_cube = vgui.Create(\"DColorCube\", BGPanel)\ncolor_cube:SetSize(180, 180)\ncolor_cube:Center()\n\n-- Base color set to white\ncolor_cube:SetBaseRGB(Color(255, 255, 255))\n\n-- Called when the color is changed by user input\nfunction color_cube:OnUserChanged(col)\n\n\t-- Update background panel color\n\tBGPanel:SetBackgroundColor(col)\n\t\nend","output":{"text":"Notice how the output/background color doesn't match the color where the slider is positioned.","image":{"src":"DColorCube_SetBaseRGB_example1.png"}}}},
{"function":{"name":"OnUserChanged","parent":"DColorCube","type":"panelfunc","ispanel":true,"description":"Function which is called when the color cube slider is moved (through user input). Meant to be overridden.","realm":"Client","args":{"arg":{"text":"The new color, uses .","name":"color","type":"table","page":"Color"}}},"example":{"description":"Creates a color cube which controls the blue saturation and value of a ball image.","code":"-- Frame\nMainFrame = vgui.Create(\"DFrame\")\nMainFrame:SetSize(320, 200)\nMainFrame:Center()\nMainFrame:SetTitle(\"Choose the saturation and value\")\n\n-- Image of a ball\nlocal ball_img = vgui.Create(\"DImage\", MainFrame)\nball_img:SetPos(20, 45)\nball_img:SetSize(128, 128)\n\nball_img:SetImage(\"sprites/sent_ball\")\n\n-- Color cube\nlocal color_cube = vgui.Create(\"DColorCube\", MainFrame)\ncolor_cube:SetPos(160, 40)\ncolor_cube:SetSize(150, 150)\n\n-- Set color to blue\ncolor_cube:SetColor(Color(0, 0, 255))\n\n-- Called when slider is moved by user\nfunction color_cube:OnUserChanged(col)\n\t\n\t-- Update ball color\n\tball_img:SetImageColor(col)\n\nend","output":{"image":{"src":"DColorCube_OnUserChanged_example1.gif"}}}},
{"function":{"name":"GetRGB","parent":"DColorCube","type":"panelfunc","ispanel":true,"description":"Returns the color cube's current set color.","realm":"Client","rets":{"ret":{"text":"The set color, uses .","name":"","type":"table","page":"Color"}}},"example":{"description":"Creates a color cube, sets the color to cyan, adjusts the saturation and value to 50% each, and prints out the final color.","code":"local color_cube = vgui.Create(\"DColorCube\")\ncolor_cube:SetSize(200, 200)\ncolor_cube:Center()\n\n-- Set color to cyan\ncolor_cube:SetColor(Color(0, 255, 255))\n\n-- 50% saturated, 50% valued\ncolor_cube:TranslateValues(0.5, 0.5)\n\n-- Print set color\nPrintTable(color_cube:GetRGB())","output":"```\nr\t=\t63\nb\t=\t127\na\t=\t255\ng\t=\t127\n```"}},
{"function":{"name":"SetColor","parent":"DColorCombo","type":"panelfunc","ispanel":true,"description":"Sets the color of this panel.","realm":"Client","args":{"arg":{"text":"A .","name":"clr","type":"table","page":"Color"}}}},
{"function":{"name":"GetHue","parent":"DColorCube","type":"panelfunc","ispanel":true,"description":{"text":"Returns the value set by .","deprecated":"","page":"DColorCube:SetHue"},"realm":"Client","rets":{"ret":{"name":"","type":"number"}}}},
{"function":{"name":"GetBaseRGB","parent":"DColorCube","type":"panelfunc","ispanel":true,"description":{"text":"Returns the base Color set by .","page":"DColorCube:SetBaseRGB"},"realm":"Client","rets":{"ret":{"text":"A","name":"","type":"table","page":"Color"}}}},
{"function":{"name":"OnValueChanged","parent":"DColorCombo","type":"panelfunc","ispanel":true,"description":"Called when the value (color) of this panel was changed.","realm":"Client","args":{"arg":{"name":"newcol","type":"table"}}}},
{"function":{"name":"IsEditing","parent":"DColorCombo","type":"panelfunc","ispanel":true,"description":{"text":"Returns true if the panel is currently being edited\n\nMore of a internal method, it technically should only ever work (i.e. return true) inside .","page":"DColorCombo:OnValueChanged"},"realm":"Client","rets":{"ret":{"name":"","type":"boolean"}}}},
{"function":{"name":"GetColor","parent":"DColorCombo","type":"panelfunc","ispanel":true,"description":{"text":"Returns the color of the .","page":"DColorCombo"},"realm":"Client","rets":{"ret":{"text":"A","name":"","type":"table","page":"Color"}}}},
{"function":{"name":"BuildControls","parent":"DColorCombo","type":"panelfunc","ispanel":true,"description":{"text":"Called internally to create panels necessary for this panel to work.","internal":""},"realm":"Client"}},
{"function":{"name":"SetID","parent":"DColorButton","type":"panelfunc","ispanel":true,"description":{"text":"Used internally by  to detect which button is which.","page":"DColorPalette"},"realm":"Client","args":{"arg":{"text":"A unique ID to give this button","name":"id","type":"number"}}}},
{"function":{"name":"GetID","parent":"DColorButton","type":"panelfunc","ispanel":true,"description":{"text":"Returns the unique ID set by .\n\nUsed internally by","page":["DColorButton:SetID","DColorPalette"]},"realm":"Client","rets":{"ret":{"text":"The unique ID of the button","name":"","type":"number"}}}},
{"function":{"name":"SetColor","parent":"DColorButton","type":"panelfunc","ispanel":true,"description":{"text":"Sets the color of the .","page":"DColorButton"},"realm":"Client","args":{"arg":[{"text":"A  to set the color as","name":"color","type":"table","page":"Color"},{"text":"If true, the tooltip will not be reset to display the selected color.","name":"noTooltip","type":"boolean","default":"false"}]}}},
{"function":{"name":"IsDown","parent":"DColorButton","type":"panelfunc","ispanel":true,"description":{"text":"Returns whether the  is currently being pressed (the user is holding it down).","page":"DColorButton"},"realm":"Client","rets":{"ret":{"name":"","type":"boolean"}}}},
{"function":{"name":"UnselectAll","parent":"DCollapsibleCategory","type":"panelfunc","ispanel":true,"description":"No Description","realm":"Client"}},
{"function":{"name":"GetColor","parent":"DColorButton","type":"panelfunc","ispanel":true,"description":"Returns the color of the button","realm":"Client","rets":{"ret":{"text":"The  of the button","name":"","type":"table","page":"Color"}}}},
{"function":{"name":"GetColor","parent":"DColorButton","type":"panelfunc","ispanel":true,"description":"Returns the color of the button","realm":"Client","rets":{"ret":{"text":"The  of the button","name":"","type":"table","page":"Color"}}}},
{"function":{"name":"Toggle","parent":"DCollapsibleCategory","type":"panelfunc","ispanel":true,"description":{"text":"Toggles the expanded state of the .","page":"DCollapsibleCategory"},"realm":"Client"}},
{"function":{"name":"SetPadding","parent":"DCollapsibleCategory","type":"panelfunc","ispanel":true,"description":"Doesn't actually do anything.","realm":"Client","args":{"arg":{"name":"padding","type":"number"}}}},
{"function":{"name":"SetPaintBackground","parent":"DCollapsibleCategory","type":"panelfunc","ispanel":true,"description":"Sets whether or not the background should be painted.","realm":"Client","args":{"arg":{"name":"paint","type":"boolean"}}}},
{"function":{"name":"SetStartHeight","parent":"DCollapsibleCategory","type":"panelfunc","ispanel":true,"description":"No Description","realm":"Client","args":{"arg":{"name":"height","type":"number"}}}},
{"function":{"name":"SetList","parent":"DCollapsibleCategory","type":"panelfunc","ispanel":true,"description":"No Description","realm":"Client","args":{"arg":{"name":"pnl","type":"Panel"}}}},
{"function":{"name":"SetExpanded","parent":"DCollapsibleCategory","type":"panelfunc","ispanel":true,"description":{"text":"Sets whether the  is expanded or not upon opening the container.\n\nYou should use  or  instead.","page":["DCollapsibleCategory","DCollapsibleCategory:Toggle","DCollapsibleCategory:DoExpansion"]},"realm":"Client","args":{"arg":{"text":"Whether it shall be expanded or not by default","name":"expanded","type":"boolean","default":"true"}}}},
{"function":{"name":"SetLabel","parent":"DCollapsibleCategory","type":"panelfunc","ispanel":true,"description":"Sets the name of the DCollapsibleCategory.","realm":"Client","args":{"arg":{"text":"The label/name of the DCollapsibleCategory.","name":"label","type":"string"}}}},
{"function":{"name":"SetLabel","parent":"DCollapsibleCategory","type":"panelfunc","ispanel":true,"description":"Sets the name of the DCollapsibleCategory.","realm":"Client","args":{"arg":{"text":"The label/name of the DCollapsibleCategory.","name":"label","type":"string"}}}},
{"function":{"name":"SetAnimTime","parent":"DCollapsibleCategory","type":"panelfunc","ispanel":true,"description":"Sets the time in seconds it takes to expand the DCollapsibleCategory","realm":"Client","args":{"arg":{"text":"The time in seconds it takes to expand","name":"time","type":"number"}}}},
{"function":{"name":"OnToggle","parent":"DCollapsibleCategory","type":"panelfunc","ispanel":true,"description":{"text":"Called by .","page":"DCollapsibleCategory:Toggle"},"realm":"Client"}},
{"function":{"name":"OnToggle","parent":"DCollapsibleCategory","type":"panelfunc","ispanel":true,"description":{"text":"Called by .","page":"DCollapsibleCategory:Toggle"},"realm":"Client"}},
{"function":{"name":"GetStartHeight","parent":"DCollapsibleCategory","type":"panelfunc","ispanel":true,"description":"No Description","realm":"Client","rets":{"ret":{"name":"","type":"number"}}}},
{"function":{"name":"GetPadding","parent":"DCollapsibleCategory","type":"panelfunc","ispanel":true,"description":{"text":"Doesn't actually do anything.\n\nReturns the number set by .","page":"DCollapsibleCategory:SetPadding"},"realm":"Client","rets":{"ret":{"name":"","type":"number"}}}},
{"function":{"name":"GetExpanded","parent":"DCollapsibleCategory","type":"panelfunc","ispanel":true,"description":"Returns whether the DCollapsibleCategory is expanded or not.","realm":"Client","rets":{"ret":{"text":"If expanded it will return true.","name":"","type":"boolean"}}}},
{"function":{"name":"GetList","parent":"DCollapsibleCategory","type":"panelfunc","ispanel":true,"description":"No Description","realm":"Client","rets":{"ret":{"name":"","type":"Panel"}}}},
{"function":{"name":"GetAnimTime","parent":"DCollapsibleCategory","type":"panelfunc","ispanel":true,"description":{"text":"Returns the expand/collapse animation time set by .","page":"DCollapsibleCategory:SetAnimTime"},"realm":"Client","rets":{"ret":{"text":"The animation time in seconds","name":"","type":"number"}}}},
{"function":{"name":"DoExpansion","parent":"DCollapsibleCategory","type":"panelfunc","ispanel":true,"description":"Forces the category to open or collapse","realm":"Client","args":{"arg":{"text":"True to open, false to collapse","name":"expand","type":"boolean"}}}},
{"function":{"name":"AnimSlide","parent":"DCollapsibleCategory","type":"panelfunc","ispanel":true,"description":{"text":"Internal function that handles the open/close animations.","internal":""},"realm":"Client","args":{"arg":[{"name":"anim","type":"table"},{"name":"delta","type":"number"},{"name":"data","type":"table"}]}}},
{"function":{"name":"Add","parent":"DCollapsibleCategory","type":"panelfunc","ispanel":true,"description":"Adds a new text button to the collapsible category, like the tool menu in Spawnmenu.","realm":"Client","args":{"arg":{"text":"The name of the button","name":"name","type":"string"}},"rets":{"ret":{"text":"The","name":"","type":"Panel","page":"DButton"}}}},
{"function":{"name":"Toggle","parent":"DCheckBoxLabel","type":"panelfunc","ispanel":true,"description":{"text":"Toggles the checked state of the .","page":"DCheckBoxLabel"},"realm":"Client"}},
{"function":{"name":"SetValue","parent":"DCheckBoxLabel","type":"panelfunc","ispanel":true,"description":{"text":"Sets the checked state of the checkbox, and calls  and the checkbox's  methods.","page":["DCheckBoxLabel:OnChange","Panel:ConVarChanged"]},"file":{"text":"lua/vgui/dcheckbox.lua","line":"102-L104"},"realm":"Client","args":{"arg":{"text":"Whether the box should be checked or not (1 or 0 can also be used).","name":"checked","type":"boolean"}}}},
{"function":{"name":"SetTextColor","parent":"DCheckBoxLabel","type":"panelfunc","ispanel":true,"description":{"text":"Sets the text color for the .","page":"DCheckBoxLabel"},"file":{"text":"lua/vgui/dcheckbox.lua","line":"130-L134"},"realm":"Client","args":{"arg":{"text":"The text color. Uses the .","name":"color","type":"table","page":"Color"}}},"example":{"description":"Creates a DCheckBoxLabel and changes the text color to red.","code":"local LabelBox = vgui.Create( \"DCheckBoxLabel\" )\nLabelBox:SetTextColor( Color(255,0,0) )"}},
{"function":{"name":"SetIndent","parent":"DCheckBoxLabel","type":"panelfunc","ispanel":true,"description":"Sets the indentation of the element on the X axis.","realm":"Client","args":{"arg":{"text":"How much in pixels to move the content to the right","name":"ident","type":"number"}}}},
{"function":{"name":"SetFont","parent":"DCheckBoxLabel","type":"panelfunc","ispanel":true,"description":{"text":"Sets the font of the text part of the .","page":"DCheckBoxLabel"},"realm":"Client","args":{"arg":{"text":"Font name","name":"font","type":"string"}}}},
{"function":{"name":"SetDark","parent":"DCheckBoxLabel","type":"panelfunc","ispanel":true,"description":{"text":"Sets the text of the  to be dark colored.","deprecated":{"text":"You really should be using  instread","page":"DCheckBoxLabel:SetTextColor"},"page":"DCheckBoxLabel"},"realm":"Client","args":{"arg":{"text":"True to be dark, false to be default","name":"darkify","type":"boolean"}}}},
{"function":{"name":"SetConVar","parent":"DCheckBoxLabel","type":"panelfunc","ispanel":true,"description":{"text":"Sets the console variable to be set when the checked state of the  changes.","page":"DCheckBoxLabel"},"realm":"Client","args":{"arg":{"text":"The name of the convar to set","name":"convar","type":"string"}}}},
{"function":{"name":"SetBright","parent":"DCheckBoxLabel","type":"panelfunc","ispanel":true,"description":{"text":"Sets the color of the 's text to the bright text color defined in the skin.","deprecated":{"text":"You really should be using  instread","page":"DCheckBoxLabel:SetTextColor"},"page":"DCheckBoxLabel"},"realm":"Client","args":{"arg":{"text":"true makes the text bright.","name":"bright","type":"boolean"}}}},
{"function":{"name":"SetChecked","parent":"DCheckBoxLabel","type":"panelfunc","ispanel":true,"description":{"text":"Sets the checked state of the checkbox. Does not call  or , unlike .","page":["DCheckBoxLabel:OnChange","Panel:ConVarChanged","DCheckBoxLabel:SetValue"]},"file":{"text":"lua/vgui/dcheckbox.lua","line":"106-L108"},"realm":"Client","args":{"arg":{"text":"Whether the box should be checked or not.","name":"checked","type":"boolean"}}}},
{"function":{"name":"GetIndent","parent":"DCheckBoxLabel","type":"panelfunc","ispanel":true,"description":"Gets the indentation of the element on the X axis.","realm":"Client","rets":{"ret":{"text":"How much the content is moved to the right in pixels","name":"","type":"number"}}}},
{"function":{"name":"OnChange","parent":"DCheckBoxLabel","type":"panelfunc","ispanel":true,"description":"Called when the \"checked\" state is changed.","file":{"text":"lua/vgui/dcheckbox.lua","line":"168-L172"},"realm":"Client","args":{"arg":{"text":"Whether the checkbox is checked or unchecked.","name":"bVal","type":"boolean"}}},"example":{"description":"Creates a a DCheckBoxLabel that prints to the console when ticked/unticked","code":"local Frame = vgui.Create( \"DFrame\" )\nFrame:SetSize( 300, 100 )\nFrame:SetPos( 200, 200 )\n\nlocal LabelBox = vgui.Create( \"DCheckBoxLabel\", Frame )\nLabelBox:SetPos( 10, 40 )\nLabelBox:SetText( \"This is a DLabel\" )\nfunction LabelBox:OnChange( val )\n\tif val then\n\t\tprint( \"The box has been ticked!\" )\n\telse\n\t\tprint( \"The box has been unticked!\" )\n\tend\nend","output":"The box has been ticked!"}},
{"function":{"name":"Toggle","parent":"DCheckBox","type":"panelfunc","ispanel":true,"description":{"text":"Toggles the checked state of the checkbox, and calls the checkbox's  and  methods. This is called by .","page":["DCheckBox:OnChange","Panel:ConVarChanged","DCheckBox:DoClick"]},"realm":"Client"}},
{"function":{"name":"GetChecked","parent":"DCheckBoxLabel","type":"panelfunc","ispanel":true,"description":{"text":"Gets the checked state of the checkbox. This calls the checkbox's  function.","page":"DCheckBox:GetChecked"},"file":{"text":"lua/vgui/dcheckbox.lua","line":"110-L112"},"realm":"Client","rets":{"ret":{"text":"Whether the box is checked or not.","name":"","type":"boolean"}}}},
{"function":{"name":"SetValue","parent":"DCheckBox","type":"panelfunc","ispanel":true,"description":{"text":"Sets the checked state of the checkbox, and calls the checkbox's  and  methods.","page":["DCheckBox:OnChange","Panel:ConVarChanged"]},"realm":"Client","args":{"arg":{"text":"Whether the box should be checked or not.","name":"checked","type":"boolean"}}}},
{"function":{"name":"SetChecked","parent":"DCheckBox","type":"panelfunc","ispanel":true,"description":{"text":"Sets the checked state of the checkbox. Does not call the checkbox's  and  methods, unlike .","page":["DCheckBox:OnChange","Panel:ConVarChanged","DCheckBox:SetValue"]},"realm":"Client","args":{"arg":{"text":"Whether the box should be checked or not.","name":"checked","type":"boolean"}}}},
{"function":{"name":"OnChange","parent":"DCheckBox","type":"panelfunc","ispanel":true,"description":"Called when the \"checked\" state is changed.","realm":"Client","args":{"arg":{"text":"Whether the CheckBox is checked or not.","name":"bVal","type":"boolean"}}},"example":{"description":"Creates a metamethod on the DCheckBox class to print any changes to the console.","code":"function DCheckBox:OnChange(bVal)\n\tif (bVal) then\n\t\tprint(\"Checked!\")\n\telse\n\t\tprint(\"Unchecked!\")\n\tend\nend","output":"All new checkboxes created will print `Checked!` or `Unchecked!` when their checked state is changed."}},
{"function":{"name":"IsEditing","parent":"DCheckBox","type":"panelfunc","ispanel":true,"description":"Returns whether the state of the checkbox is being edited. This means whether the user is currently clicking (mouse-down) on the checkbox, and applies to both the left and right mouse buttons.","realm":"Client","rets":{"ret":{"text":"Whether the checkbox is being clicked.","name":"","type":"boolean"}}}},
{"function":{"name":"UnselectAll","parent":"DCategoryList","type":"panelfunc","ispanel":true,"description":{"text":"Calls  on all child elements, if they have it.","page":"Panel:UnselectAll"},"realm":"Client"}},
{"function":{"name":"GetChecked","parent":"DCheckBox","type":"panelfunc","ispanel":true,"description":"Gets the checked state of the checkbox.","file":{"text":"lua/vgui/dcheckbox.lua","line":"4"},"realm":"Client","rets":{"ret":{"text":"Whether the box is checked or not.","name":"","type":"boolean"}}}},
{"function":{"name":"AddItem","parent":"DCategoryList","type":"panelfunc","ispanel":true,"description":"Adds an element to the list.","realm":"Client","args":{"arg":{"text":"VGUI element to add to the list.","name":"element","type":"Panel"}}}},
{"function":{"name":"Add","parent":"DCategoryList","type":"panelfunc","ispanel":true,"description":{"text":"Adds a  to the list.","page":"DCollapsibleCategory"},"realm":"Client","args":{"arg":{"text":"The name of the category to add.","name":"categoryName","type":"string"}},"rets":{"ret":{"text":"The created","name":"","type":"Panel","page":"DCollapsibleCategory"}}}},
{"text":"Condition |  Value |\n----------|-------|\n|  | skin.Colours.Button.Disabled |\n| self.Depressed | skin.Colours.Button.Down |\n| self.m_bSelected | skin.Colours.Button.Down |\n| self.Hovered | skin.Colours.Button.Hover |","function":{"name":"UpdateColours","parent":"DButton","type":"panelfunc","ispanel":true,"file":{"text":"lua/vgui/dbutton.lua","line":"85-93"},"description":{"text":"A hook called from within 's  to determine the color of the text on display.","page":["DLabel","PANEL:ApplySchemeSettings"]},"realm":"Client","args":{"arg":{"text":"A table supposed to contain the color values listed above.","name":"skin","type":"table"}}}},
{"function":{"name":"SetImage","parent":"DButton","type":"panelfunc","ispanel":true,"description":{"text":"Sets an image to be displayed as the button's background.\n\nAlso see:","page":"DImageButton"},"realm":"Client","args":{"arg":{"text":"The image file to use, relative to `/materials`. If this is nil, the image background is removed.","name":"img","type":"string","default":"nil"}}}},
{"function":{"name":"SetDrawBorder","parent":"DButton","type":"panelfunc","ispanel":true,"description":{"text":"Does absolutely nothing at all. Default value is automatically set to true.","deprecated":""},"realm":"Client","args":{"arg":{"text":"Does nothing.","name":"draw","type":"boolean"}}}},
{"function":{"name":"SetIcon","parent":"DButton","type":"panelfunc","ispanel":true,"description":{"text":"Sets an image to be displayed as the button's background. Alias of","page":"DButton:SetImage"},"realm":"Client","args":{"arg":{"text":"The image file to use, relative to `/materials`. If this is nil, the image background is removed.","name":"img","type":"string","default":"nil"}}}},
{"function":{"name":"SetDisabled","parent":"DButton","type":"panelfunc","ispanel":true,"description":{"text":"Sets whether or not the DButton is disabled.\n\nWhen disabled, the button is `greyed out` and cannot be clicked.","deprecated":{"text":"Use  instead.","page":"Panel:SetEnabled"}},"realm":"Client","args":{"arg":{"text":"When true Enable the button, when false Disable the button.","name":"disable","type":"boolean"}}}},
{"function":{"name":"IsDown","parent":"DButton","type":"panelfunc","ispanel":true,"description":"Returns true if the DButton is currently depressed (a user is clicking on it).","realm":"Client","rets":{"ret":{"text":"Whether or not the button is depressed.","name":"","type":"boolean"}}}},
{"function":{"name":"IsDown","parent":"DButton","type":"panelfunc","ispanel":true,"description":"Returns true if the DButton is currently depressed (a user is clicking on it).","realm":"Client","rets":{"ret":{"text":"Whether or not the button is depressed.","name":"","type":"boolean"}}}},
{"function":{"name":"GetDrawBorder","parent":"DButton","type":"panelfunc","ispanel":true,"description":{"text":"Returns value set by . See that page for more info.","deprecated":"","page":"DButton:SetDrawBorder"},"realm":"Client","rets":{"ret":{"text":"value set by .","name":"","type":"boolean","page":"DButton:SetDrawBorder"}}}},
{"function":{"name":"OpenForPos","parent":"DBubbleContainer","type":"panelfunc","ispanel":true,"description":"Sets the speech bubble position and size along with the dialog point position.","realm":"Client","args":{"arg":[{"text":"The x position of the dialog point. If this is set to a value greater than half of the set width, the entire bubble container will be moved in addition to the dialog point.","name":"x","type":"number"},{"text":"The y position of the bubble container. Has no effect unless set to a value greater than the set height + 64 pixels.","name":"y","type":"number"},{"text":"The width of the bubble container.","name":"w","type":"number"},{"text":"The height of the bubble container.","name":"h","type":"number"}]}},"example":{"description":"Creates a bubble container that properly fits a 200x200 background panel.","code":"-- Length and width of background panel\nlocal size = 200\n\t\t\n-- Background panel\nBGPanel = vgui.Create(\"DPanel\")\nBGPanel:SetSize(size, size)\nBGPanel:Center()\n\n\nlocal bubble1 = vgui.Create(\"DBubbleContainer\", BGPanel)\n\n-- x = 100 (Set pointer in the middle of the speech bubble)\n-- y = 0 (Don't adjust height)\n-- w = 180 (20 pixel right margin)\n-- h = 184 (16 pixel bottom margin)\nbubble1:OpenForPos(size/2, 0, size-20, size-16)","output":{"image":{"src":"DBubbleContainer_OpenForPos_example1.jpg"}}}},
{"function":{"name":"UpdateText","parent":"DBinder","type":"panelfunc","ispanel":true,"description":{"text":"Used to set the text of the DBinder to the current key binding, or `NONE`.","internal":""},"realm":"Client"}},
{"function":{"name":"SetValue","parent":"DBinder","type":"panelfunc","ispanel":true,"description":{"text":"Alias of .","page":"DBinder:SetSelected"},"realm":"Client","args":{"arg":{"text":"The key code of the key to bind. See .","name":"keyCode","type":"number","page":"Enums/KEY"}}}},
{"function":{"name":"SetSelectedNumber","parent":"DBinder","type":"panelfunc","ispanel":true,"description":{"text":"Sets the current key bound by the , and updates the button's text as well as the .","page":["DBinder","ConVar"]},"realm":"Client","args":{"arg":{"text":"The key code of the key to bind. See .","name":"keyCode","type":"number","page":"Enums/KEY"}}}},
{"function":{"name":"OnChange","parent":"DBinder","type":"panelfunc","ispanel":true,"description":"Called when the player selects a new bind.","realm":"Client","args":{"arg":{"text":"The new bound key. See .","name":"iNum","type":"number","page":"input.GetKeyName"}}}},
{"function":{"name":"GetSelectedNumber","parent":"DBinder","type":"panelfunc","ispanel":true,"description":{"text":"Gets the code of the key currently bound by the DBinder. Same as .","page":"DBinder:GetValue"},"realm":"Client","rets":{"ret":{"text":"The key code of the bound key. See .","name":"","type":"number","page":"Enums/KEY"}}}},
{"function":{"name":"SetValue","parent":"DAlphaBar","type":"panelfunc","ispanel":true,"description":"Sets the alpha value or the alpha bar.","realm":"Client","args":{"arg":{"text":"The new alpha value to set","name":"alpha","type":"number"}}}},
{"function":{"name":"GetValue","parent":"DBinder","type":"panelfunc","ispanel":true,"description":{"text":"Gets the code of the key currently bound by the DBinder. Same as .","page":"DBinder:GetSelectedNumber"},"realm":"Client","rets":{"ret":{"text":"The key code of the bound key. See .","name":"","type":"number","page":"Enums/KEY"}}}},
{"function":{"name":"SetBarColor","parent":"DAlphaBar","type":"panelfunc","ispanel":true,"description":"Sets the base color of the alpha bar. This is the color for which the alpha channel is being modified.","realm":"Client","args":{"arg":{"text":"The new  to set. See .","name":"clr","type":"table","page":["Color","Global.Color"]}}}},
{"function":{"name":"OnChange","parent":"DAlphaBar","type":"panelfunc","ispanel":true,"description":"Called when user changes the desired alpha value with the control.","realm":"Client","args":{"arg":{"text":"The new alpha value","name":"alpha","type":"number"}}}},
{"function":{"name":"GetValue","parent":"DAlphaBar","type":"panelfunc","ispanel":true,"description":"Returns the alpha value of the alpha bar.","realm":"Client","rets":{"ret":{"text":"The current alpha value.","name":"","type":"number"}}}},
{"function":{"name":"GetBarColor","parent":"DAlphaBar","type":"panelfunc","ispanel":true,"description":"Returns the base color of the alpha bar. This is the color for which the alpha channel is being modified.","realm":"Client","rets":{"ret":{"text":"The current base color.","name":"","type":"table"}}}},
{"function":{"name":"SetFirstPerson","parent":"DAdjustableModelPanel","type":"panelfunc","ispanel":true,"description":{"text":"Enables mouse and keyboard-based adjustment of the perspective.\n\nThis is set to `true` automatically each time mouse capture is enabled, and hence doesn't serve as a usable setting, other than to disable this functionality after the  event.","page":"PANEL:OnMousePressed"},"realm":"Client","args":{"arg":{"text":"Whether to enable/disable first person controls. See .","name":"enable","type":"boolean","page":"DAdjustableModelPanel:FirstPersonControls"}}}},
{"function":{"name":"GetFirstPerson","parent":"DAdjustableModelPanel","type":"panelfunc","ispanel":true,"description":{"text":"Gets whether mouse and keyboard-based adjustment of the perspective has been enabled. See  for more information.","page":"DAdjustableModelPanel:SetFirstPerson"},"realm":"Client","rets":{"ret":{"text":"Whether first person controls are enabled. See .","name":"","type":"boolean","page":"DAdjustableModelPanel:FirstPersonControls"}}}},
{"function":{"name":"FirstPersonControls","parent":"DAdjustableModelPanel","type":"panelfunc","ispanel":true,"description":{"text":"Used to adjust the perspective in the model panel via the keyboard, when the right mouse button is used.","internal":""},"realm":"Client"}},
{"function":{"name":"CaptureMouse","parent":"DAdjustableModelPanel","type":"panelfunc","ispanel":true,"description":{"text":"Used by the panel to perform mouse capture operations when adjusting the model.","internal":""},"realm":"Client"}},
{"function":{"name":"SetLabel","parent":"ControlPresets","type":"panelfunc","ispanel":true,"description":"Set the name label text.","realm":"Client","args":{"arg":{"text":"The text to put in the label","name":"name","type":"string"}}}},
{"function":{"name":"GetConVars","parent":"ControlPresets","type":"panelfunc","ispanel":true,"description":"Get a list of all Console Variables being managed by this panel.","realm":"Client","rets":{"ret":{"text":"numbered table of convars","name":"","type":"table"}}}},
{"function":{"name":"AddConVar","parent":"ControlPresets","type":"panelfunc","ispanel":true,"description":"Adds a convar to be managed by this control.","realm":"Client","args":{"arg":{"text":"The convar to add.","name":"convar","type":"string"}}}},
{"function":{"name":"GetEmbeddedPanel","parent":"ControlPanel","type":"panelfunc","ispanel":true,"description":"Returns this control panel.","file":{"text":"gamemodes/sandbox/gamemode/spawnmenu/controlpanel.lua","line":"32-L36"},"realm":"Client","rets":{"ret":{"text":"The same control panel the function is being called on.","name":"","type":"ControlPanel"}}}},
{"function":{"name":"MatSelect","parent":"ControlPanel","type":"panelfunc","ispanel":true,"description":{"text":"Creates a  panel and adds it as an .","page":["MatSelect",",itemControlPanel:AddPanel"]},"file":{"text":"gamemodes/sandbox/gamemode/spawnmenu/controlpanel.lua","line":"51-L73"},"realm":"Client","args":{"arg":[{"text":"Calls : with this value.","name":"convar","type":"string","page":["MatSelect",",SetConVarContextBase:SetConVar"]},{"text":"If specified, calls (key, value) for each table entry. If the table key is a number, the function will instead be called with the value as both arguments.","name":"options","type":"table","default":"nil","page":"MatSelect:AddMaterial"},{"text":"If specified, calls  with this value.","name":"autostretch","type":"boolean","default":"nil","page":"MatSelect:SetAutoHeight"},{"text":"If specified, calls  with this value.","name":"width","type":"number","default":"nil","page":"MatSelect:SetItemWidth"},{"text":"If specified, calls  with this value.","name":"height","type":"number","default":"nil","page":"MatSelect:SetItemHeight"}]},"rets":{"ret":{"text":"The created MatSelect panel.","name":"","type":"MatSelect"}}}},
{"function":{"name":"FillViaFunction","parent":"ControlPanel","type":"panelfunc","ispanel":true,"description":"Calls the given function with this panel as the only argument. Used by the spawnmenu to populate the control panel.","file":{"text":"gamemodes/sandbox/gamemode/spawnmenu/controlpanel.lua","line":"98-L102"},"realm":"Client","args":{"arg":{"text":"A function that takes one argument:\n*  panelToPopulate","name":"func","type":"function","page":"ControlPanel"}}}},
{"function":{"name":"AddPanel","parent":"ControlPanel","type":"panelfunc","ispanel":true,"description":{"text":"Adds an item by calling .","page":"DForm:AddItem"},"file":{"text":"gamemodes/sandbox/gamemode/spawnmenu/controlpanel.lua","line":"41-L46"},"realm":"Client","args":{"arg":{"text":"Panel to add as an item to the control panel.","name":"panel","type":"Panel"}}}},
{"function":{"name":"ControlValues","parent":"ControlPanel","type":"panelfunc","ispanel":true,"description":"Sets control values of the control panel.","file":{"text":"gamemodes/sandbox/gamemode/spawnmenu/controlpanel.lua","line":"107-L114"},"realm":"Client","args":{"arg":{"text":"A two-membered table:\n*  closed - Sets if the control panel should be unexpanded.\n*  label - The text to display inside the control's label.","name":"data","type":"table","page":["boolean","string"]}}}},
{"function":{"name":"AddControl","parent":"ControlPanel","type":"panelfunc","ispanel":true,"description":{"text":"Adds a control to the control panel.","deprecated":{"text":"It is recommended to use 's members instead.","page":"DForm"}},"file":{"text":"gamemodes/sandbox/gamemode/spawnmenu/controlpanel.lua","line":"119-L397"},"realm":"Client","args":{"arg":[{"text":"The control type to add. The complete list is:\n* header\n* textbox\n* label\n* checkbox/toggle\n* slider\n* propselect\n* matselect\n* ropematerial\n* button\n* numpad\n* color\n* combobox\n* listbox\n* materialgallery","name":"type","type":"string"},{"text":"Each control takes their own table structure. You may search \"AddControl\" on GitHub for examples.\n\nHere is a full list of each type and the table members it requires:\n\n- header\n- - description\n\n- textbox:\n- - label (def: \"Untitled\")\n- - command\n\n- label:\n- - text\n\n checkbox, toggle (same thing):\n- - label (def: \"Untitled\")\n- - command\n- - help (boolean, if true assumes label is a language string (\"#tool.toolname.stuff\") and adds \".help\" at the end)\n\n- slider:\n- - type (optional string, if equals \"float\" then 2 digits after the decimal will be used, otherwise 0)\n- - label (def: \"Untitled\")\n- - command\n- - min (def: 0)\n- - max (def: 100)\n\n- - help (boolean, see above)\n\n- propselect:\n- - (data goes directly to PropSelect's :ControlValues(data))\n\n- matselect:\n- - (data goes directly to MatSelect's :ControlValues(data))\n\n- ropematerial:\n- - convar (notice: NOT called command this time!)\n\n- button:\n- - label / text (if label is missing will use text. Def: \"No Label\")\n- - command\n\n- numpad:\n- - command\n- - command2\n- - label\n- - label2\n\n- color:\n- - label\n- - red (convar)\n- - green (convar)\n- - blue (convar)\n- - alpha (convar)\n\n- combobox:\n- - menubutton (if doesn't equal \"1\", becomes a listbox)\n- - folder\n- - options (optional, ha)\n- - cvars (optional)\n\n- listbox:\n- - height (if set, becomes , otherwise is )\n- - label (def: \"unknown\")\n- - options (optional)\n\n- materialgallery:\n- - width (def: 32)\n- - height (def: 32)\n- - rows (def: 4)\n- - convar\n- - options","name":"controlinfo","type":"table","page":["DListView","CtrlListBox"]}]}}},
{"function":{"name":"TestForChanges","parent":"ContextBase","type":"panelfunc","ispanel":true,"description":"You should override this function and use it to check whether your convar value changed.","realm":"Client"}},
{"function":{"name":"SetConVar","parent":"ContextBase","type":"panelfunc","ispanel":true,"description":{"text":"Sets the  for the panel to change/handle.","page":"ConVar"},"realm":"Client","args":{"arg":{"text":"The  for the panel to change.","name":"cvar","type":"string","page":"ConVar"}}}},
{"function":{"name":"ConVar","parent":"ContextBase","type":"panelfunc","ispanel":true,"description":{"text":"Returns the  for the panel to change/handle, set by","page":["ConVar","ContextBase:SetConVar"]},"realm":"Client","rets":{"ret":{"text":"The  for the panel to change.","name":"","type":"string","page":"ConVar"}}}},
{"function":{"name":"ControlValues","parent":"ContextBase","type":"panelfunc","ispanel":true,"description":"Called by spawnmenu functions (when creating a context menu) to fill this control with data.","file":{"text":"lua/vgui/contextbase.lua","line":"20-L25"},"realm":"Client","args":{"arg":{"text":"A two-membered table:\n*  convar - The console variable to use. Calls \n*  label - The text to display inside the control's label.","name":"contextData","type":"table","page":["string","ContextBase:SetConVar.","string"]}}}},
{"function":{"name":"SetNPCWeapon","parent":"ContentIcon","type":"panelfunc","ispanel":true,"description":"Sets a table of weapon classes for the content icon with \"NPC\" content type to be randomly chosen from when user tries to spawn the NPC.","realm":"Client","args":{"arg":{"text":"A table of weapon classes to be chosen from when user tries to spawn the NPC.","name":"weapons","type":"table"}}}},
{"function":{"name":"SetSpawnName","parent":"ContentIcon","type":"panelfunc","ispanel":true,"description":"Sets the internal \"name\" for the content icon, usually a class name for an entity.","realm":"Client","args":{"arg":{"text":"Internal \"name\" to be used when user left clicks the icon.","name":"name","type":"string"}}}},
{"function":{"name":"SetName","parent":"ContentIcon","type":"panelfunc","ispanel":true,"description":"Sets the tool tip and the \"nice\" name to be displayed by the content icon.","realm":"Client","args":{"arg":{"text":"\"Nice\" name to display.","name":"name","type":"string"}}}},
{"function":{"name":"SetMaterial","parent":"ContentIcon","type":"panelfunc","ispanel":true,"description":"Sets the material to be displayed as the content icon.","realm":"Client","args":{"arg":{"text":"Path to the icon to use.","name":"path","type":"string"}}}},
{"function":{"name":"SetColor","parent":"ContentIcon","type":"panelfunc","ispanel":true,"description":"Sets the color for the content icon. Currently is not used by the content icon panel.","realm":"Client","args":{"arg":{"text":"The color to set. See","name":"clr","type":"table","page":"Color"}}}},
{"function":{"name":"SetContentType","parent":"ContentIcon","type":"panelfunc","ispanel":true,"description":"Sets the content type used to save and restore the content icon in a spawnlist.","realm":"Client","args":{"arg":{"text":"The content type, for example \"entity\" or \"weapon\"","name":"type","type":"string"}}}},
{"function":{"name":"SetAdminOnly","parent":"ContentIcon","type":"panelfunc","ispanel":true,"description":"Sets whether the content item is admin only. This makes the icon to display a admin icon in the top left corner of the icon.","realm":"Client","args":{"arg":{"text":"Whether this content should be admin only or not","name":"adminOnly","type":"boolean"}}}},
{"function":{"name":"OpenMenu","parent":"ContentIcon","type":"panelfunc","ispanel":true,"description":{"text":"A hook for override, by default does nothing. Called when user right clicks on the content icon, you are supposed to open a  here with additional options.","page":"Global.DermaMenu"},"realm":"Client"}},
{"function":{"name":"GetSpawnName","parent":"ContentIcon","type":"panelfunc","ispanel":true,"description":"Returns the internal \"name\" for the content icon, usually a class name for an entity.","realm":"Client","rets":{"ret":{"text":"Internal \"name\" to be used when user left clicks the icon.","name":"","type":"string"}}}},
{"function":{"name":"GetNPCWeapon","parent":"ContentIcon","type":"panelfunc","ispanel":true,"description":"Returns a table of weapon classes for the content icon with \"NPC\" content type to be randomly chosen from when user tries to spawn the NPC.","realm":"Client","rets":{"ret":{"text":"A table of weapon classes to be chosen from when user tries to spawn the NPC.","name":"","type":"table"}}}},
{"function":{"name":"GetContentType","parent":"ContentIcon","type":"panelfunc","ispanel":true,"description":"Returns the content type used to save and restore the content icon in a spawnlist.","realm":"Client","rets":{"ret":{"text":"The content type, for example \"entity\" or \"weapon\".","name":"","type":"string"}}}},
{"function":{"name":"ViewModelDrawn","parent":"WEAPON","type":"hook","ishook":true,"description":{"text":"Called straight after the view model has been drawn. This is called before  and .","page":["GM:PostDrawViewModel","WEAPON:PostDrawViewModel"]},"realm":"Client","predicted":"No","args":{"arg":{"text":"Players view model","name":"ViewModel","type":"Entity"}}}},
{"function":{"name":"TranslateFOV","parent":"WEAPON","type":"hook","ishook":true,"description":{"text":"Allows to change players field of view while player holds the weapon.","note":"This hook must be defined shared and return same value on both to properly affect Area Portals."},"realm":"Shared","predicted":"No","args":{"arg":{"text":"The current/default FOV.","name":"fov","type":"number"}},"rets":{"ret":{"text":"The target FOV.","name":"","type":"number"}}},"example":{"description":"Reduces players FOV by 30.","code":"function SWEP:TranslateFOV( fov )\n\treturn fov - 30\nend","output":"Players view is zoomed in."}},
{"function":{"name":"TranslateFOV","parent":"WEAPON","type":"hook","ishook":true,"description":{"text":"Allows to change players field of view while player holds the weapon.","note":"This hook must be defined shared and return same value on both to properly affect Area Portals."},"realm":"Shared","predicted":"No","args":{"arg":{"text":"The current/default FOV.","name":"fov","type":"number"}},"rets":{"ret":{"text":"The target FOV.","name":"","type":"number"}}},"example":{"description":"Reduces players FOV by 30.","code":"function SWEP:TranslateFOV( fov )\n\treturn fov - 30\nend","output":"Players view is zoomed in."}},
{"function":{"name":"TranslateActivity","parent":"WEAPON","type":"hook","ishook":true,"description":"Translate a player's Activity into a weapon's activity, depending on how you want the player to be holding the weapon.\n\nFor example, ACT_MP_RUN becomes ACT_HL2MP_RUN_PISTOL.","realm":"Shared","predicted":"No","args":{"arg":{"text":"The activity to translate","name":"act","type":"number"}},"rets":{"ret":{"text":"The translated activity","name":"","type":"number"}}},"example":{"description":"Default action","code":"function SWEP:TranslateActivity( act )\n\n\tif ( self.Owner:IsNPC() ) then\n\t\tif ( self.ActivityTranslateAI[ act ] ) then\n\t\t\treturn self.ActivityTranslateAI[ act ]\n\t\tend\n\t\treturn -1\n\tend\n\n\tif ( self.ActivityTranslate[ act ] != nil ) then\n\t\treturn self.ActivityTranslate[ act ]\n\tend\n\n\treturn -1\n\nend"}},
{"function":{"name":"Think","parent":"WEAPON","type":"hook","ishook":true,"description":{"text":"Called when the swep thinks.\n\nThis hook won't be called during the deploy animation and when using .","page":"Weapon:DefaultReload","note":[{"text":"Despite being a predicted hook, this hook is called clientside in single player, however it will not be recognized as a predicted hook to .","page":"Player:GetCurrentCommand"},"This hook will be called before Player movement is processed on the client, and after on the server."],"bug":{"text":"This will not be run during deploy animations after a serverside-only deploy. This usually happens after picking up and dropping an object with +use.","issue":"2855"}},"realm":"Shared","predicted":"Yes","hidepredictionwarning":"Disable automatic prediction warning"}},
{"function":{"name":"TakeSecondaryAmmo","parent":"WEAPON","type":"hook","ishook":true,"description":"A convenience function to remove secondary ammo from clip.","realm":"Shared","args":{"arg":{"text":"How much of secondary ammo to remove","name":"amount","type":"number"}}},"example":{"description":"As defined in weapon_base","code":"function SWEP:TakeSecondaryAmmo( num )\n\t\n\t-- Doesn't use clips\n\tif ( self.Weapon:Clip2() <= 0 ) then \n\t\n\t\tif ( self:Ammo2() <= 0 ) then return end\n\t\t\n\t\tself.Owner:RemoveAmmo( num, self.Weapon:GetSecondaryAmmoType() )\n\t\n\treturn end\n\t\n\tself.Weapon:SetClip2( self.Weapon:Clip2() - num )\t\n\t\nend"}},
{"function":{"name":"TakeSecondaryAmmo","parent":"WEAPON","type":"hook","ishook":true,"description":"A convenience function to remove secondary ammo from clip.","realm":"Shared","args":{"arg":{"text":"How much of secondary ammo to remove","name":"amount","type":"number"}}},"example":{"description":"As defined in weapon_base","code":"function SWEP:TakeSecondaryAmmo( num )\n\t\n\t-- Doesn't use clips\n\tif ( self.Weapon:Clip2() <= 0 ) then \n\t\n\t\tif ( self:Ammo2() <= 0 ) then return end\n\t\t\n\t\tself.Owner:RemoveAmmo( num, self.Weapon:GetSecondaryAmmoType() )\n\t\n\treturn end\n\t\n\tself.Weapon:SetClip2( self.Weapon:Clip2() - num )\t\n\t\nend"}},
{"function":{"name":"ShouldDropOnDie","parent":"WEAPON","type":"hook","ishook":true,"description":{"text":"Should this weapon be dropped when its owner dies?\n\nThis only works if the player has  set to true.","page":"Player:ShouldDropWeapon"},"realm":"Server","rets":{"ret":{"text":"Return true to drop the weapon, false otherwise. Default ( if you don't return anything ) is false.","name":"","type":"boolean"}}}},
{"function":{"name":"ShootEffects","parent":"WEAPON","type":"hook","ishook":true,"description":"A convenience function to create shoot effects.","realm":"Shared"},"example":{"description":"As defined in weapon_base","code":"function SWEP:ShootEffects()\n\n\tself.Weapon:SendWeaponAnim( ACT_VM_PRIMARYATTACK )  -- View model animation\n\tself.Owner:MuzzleFlash() -- Crappy muzzle light\n\tself.Owner:SetAnimation( PLAYER_ATTACK1 ) -- 3rd Person Animation\n\nend"}},
{"function":{"name":"SetWeaponHoldType","parent":"WEAPON","type":"hook","ishook":true,"description":{"text":"Sets the hold type of the weapon. This must be called on **both** the server and the client to work properly.\n\n**NOTE:** You should avoid calling this function and call  now.","page":"Weapon:SetHoldType"},"realm":"Shared","args":{"arg":{"text":"Name of the hold type. You can find all default hold types","name":"name","type":"string","page":",hereHold_Types"}}}},
{"function":{"name":"ShouldDrawViewModel","parent":"WEAPON","type":"hook","ishook":true,"description":"Called to determine if the view model should be drawn or not.","realm":"Client","rets":{"ret":{"text":"Return true to draw the view model, false otherwise.","name":"","type":"boolean"}}}},
{"function":{"name":"ShootBullet","parent":"WEAPON","type":"hook","ishook":true,"description":"A convenience function to shoot bullets.","realm":"Shared","predicted":"No","file":{"text":"gamemodes/base/entities/weapons/weapon_base/shared.lua","line":"137-L157"},"args":{"arg":[{"text":"The damage of the bullet","name":"damage","type":"number"},{"text":"Amount of bullets to shoot","name":"num_bullets","type":"number"},{"text":"Spread of bullets","name":"aimcone","type":"number"},{"text":"Ammo type of the bullets","name":"ammo_type","type":"string","default":"self.Primary.Ammo"},{"text":"Force of the bullets","name":"force","type":"number","default":"1"},{"text":"Show a tracer on every x bullets","name":"tracer","type":"number","default":"5"}]}}},
{"function":{"name":"SecondaryAttack","parent":"WEAPON","type":"hook","ishook":true,"description":{"text":"Called when secondary attack button ( +attack2 ) is pressed.\n\nFor issues with this hook being called rapidly on the client side, see the global function .","page":"Global.IsFirstTimePredicted"},"realm":"Shared","predicted":"Yes"},"example":{"description":"This is how it is defined in weapon_base","code":"function SWEP:SecondaryAttack()\n\n\t-- Make sure we can shoot first\n\tif ( !self:CanSecondaryAttack() ) then return end\n\n\t-- Play shoot sound\n\tself.Weapon:EmitSound(\"Weapon_Shotgun.Single\")\n\t\n\t-- Shoot 9 bullets, 150 damage, 0.75 aimcone\n\tself:ShootBullet( 150, 9, 0.2 )\n\t\n\t-- Remove 1 bullet from our clip\n\tself:TakeSecondaryAmmo( 1 )\n\t\n\t-- Punch the player's view\n\tself.Owner:ViewPunch( Angle( -10, 0, 0 ) )\n\nend"}},
{"function":{"name":"SetDeploySpeed","parent":"WEAPON","type":"hook","ishook":true,"description":"Sets the weapon deploy speed. This value needs to match on client and server.","realm":"Shared","predicted":"No","args":{"arg":{"text":"The value to set deploy speed to. Negative will slow down playback.","name":"speed","type":"number"}}},"example":{"description":"As defined in weapon_base","code":"function SWEP:SetDeploySpeed( speed )\n\tself.m_WeaponDeploySpeed = tonumber( speed )\nend"}},
{"function":{"name":"SetupDataTables","parent":"WEAPON","type":"hook","ishook":true,"description":{"text":"Called when the SWEP should set up its .","page":", Data TablesNetworking_Entities"},"realm":"Shared"},"example":{"description":"Sets up networked variables, adds functions SetDamage, GetDamage, SetMuzzlePos and GetMuzzlePos.","code":"function SWEP:SetupDataTables()\n\tself:NetworkVar( \"Float\", 0, \"Damage\" )\n\tself:NetworkVar( \"Vector\", 0, \"MuzzlePos\" )\nend"}},
{"function":{"name":"RenderScreen","parent":"WEAPON","type":"hook","ishook":true,"description":{"text":"Called every frame just before .\n\nUsed by the Tool Gun to render view model screens ().","page":["GM:RenderScene","TOOL:DrawToolScreen"],"note":"Materials rendered in this hook require $ignorez parameter to draw properly."},"realm":"Client","predicted":"No"}},
{"function":{"name":"Reload","parent":"WEAPON","type":"hook","ishook":true,"description":"Called when the reload key ( +reload ) is pressed.","realm":"Shared","predicted":"Yes"}},
{"function":{"name":"PrimaryAttack","parent":"WEAPON","type":"hook","ishook":true,"description":{"text":"Called when primary attack button ( +attack ) is pressed.\n\nSince this is a .\n\nWhen in singleplayer, this function is only called in the server realm. When in multiplayer, the hook will be called on both the server and the client in order to allow for .\n\nYou can force the hook to always be called on client like this:\n\n```\nif ( game.SinglePlayer() ) then self:CallOnClient( \"PrimaryAttack\" ) end\n```\n\n\nNote that due to prediction, in multiplayer SWEP:PrimaryAttack is called multiple times per one \"shot\" with the gun. To work around that, use .","page":["Prediction","Global.IsFirstTimePredicted"]},"realm":"Shared","predicted":"Yes","hidepredictionwarning":"Disable automatic prediction warning"},"example":{"description":"This is how it is defined in weapon_base","code":"function SWEP:PrimaryAttack()\n\n\t-- Make sure we can shoot first\n\tif ( !self:CanPrimaryAttack() ) then return end\n\n\t-- Play shoot sound\n\tself.Weapon:EmitSound(\"Weapon_AR2.Single\")\n\t\n\t-- Shoot 1 bullet, 150 damage, 0.01 aimcone\n\tself:ShootBullet( 150, 1, 0.01 )\n\t\n\t-- Remove 1 bullet from our clip\n\tself:TakePrimaryAmmo( 1 )\n\t\n\t-- Punch the player's view\n\tself.Owner:ViewPunch( Angle( -1, 0, 0 ) )\n\nend"}},
{"function":{"name":"PrintWeaponInfo","parent":"WEAPON","type":"hook","ishook":true,"description":{"text":"A convenience function that draws the weapon info box, used in .","page":"WEAPON:DrawWeaponSelection"},"realm":"Client","args":{"arg":[{"text":"The x co-ordinate of box position","name":"x","type":"number"},{"text":"The y co-ordinate of box position","name":"y","type":"number"},{"text":"Alpha value for the box","name":"alpha","type":"number"}]}},"example":{"description":"As defined in weapon_base","code":{"text":"function SWEP:PrintWeaponInfo( x, y, alpha )\n\n\tif ( self.DrawWeaponInfoBox == false ) then return end\n\n\tif (self.InfoMarkup == nil ) then\n\t\tlocal str\n\t\tlocal title_color = \"\\n\" end\n\t\tif ( self.Contact != \"\" ) then str = str .. title_color .. \"Contact:</color>\\t\"..text_color..self.Contact..\"</color>\\n\\n\" end\n\t\tif ( self.Purpose != \"\" ) then str = str .. title_color .. \"Purpose:</color>\\n\"..text_color..self.Purpose..\"</color>\\n\\n\" end\n\t\tif ( self.Instructions != \"\" ) then str = str .. title_color .. \"Instructions:</color>\\n\"..text_color..self.Instructions..\"</color>\\n\" end\n\t\tstr = str .. \"</font>\"\n\t\t\n\t\tself.InfoMarkup = markup.Parse( str, 250 )\n\tend\n\t\n\tsurface.SetDrawColor( 60, 60, 60, alpha )\n\tsurface.SetTexture( self.SpeechBubbleLid )\n\t\n\tsurface.DrawTexturedRect( x, y - 64 - 5, 128, 64 ) \n\tdraw.RoundedBox( 8, x - 5, y - 6, 260, self.InfoMarkup:GetHeight() + 18, Color( 60, 60, 60, alpha ) )\n\t\n\tself.InfoMarkup:Draw( x+5, y+5, nil, nil, alpha )\n\t\nend","color":{"text":"\"\n\t\tlocal text_color = \"\\t\"..text_color..self.Author..\"","color":{"text":"\"\n\t\t\n\t\tstr = \"","font":{"text":"\"\n\t\tif ( self.Author != \"\" ) then str = str .. title_color .. \"Author:","hudselectiontext":"HudSelectionText"}}}}}},
{"function":{"name":"PreDrawViewModel","parent":"WEAPON","type":"hook","ishook":true,"description":{"text":"Allows you to modify viewmodel while the weapon in use before it is drawn. This hook only works if you haven't overridden .","page":"GM:PreDrawViewModel"},"realm":"Client","predicted":"No","args":{"arg":[{"text":"This is the view model entity before it is drawn.","name":"vm","type":"Entity"},{"text":"This is the weapon that is from the view model.","name":"weapon","type":"Weapon"},{"text":"The the owner of the view model.","name":"ply","type":"Player"}]}}},
{"function":{"name":"PostDrawViewModel","parent":"WEAPON","type":"hook","ishook":true,"description":{"text":"Called after the view model has been drawn while the weapon in use. This hook is called from the default implementation of , and as such, will not occur if it has been overridden.\n\n is an alternative hook which is always called before .","page":["GM:PostDrawViewModel","WEAPON:ViewModelDrawn","GM:PostDrawViewModel"]},"realm":"Client","predicted":"No","args":{"arg":[{"text":"This is the view model entity after it is drawn","name":"vm","type":"Entity"},{"text":"This is the weapon that is from the view model (same as self)","name":"weapon","type":"Weapon"},{"text":"The owner of the view model","name":"ply","type":"Player"}]}}},
{"function":{"name":"OwnerChanged","parent":"WEAPON","type":"hook","ishook":true,"description":{"text":"Called when weapon is dropped or picked up by a new player.\n\nSee also .","page":"WEAPON:OnDrop"},"realm":"Shared","predicted":"No"}},
{"function":{"name":"OnRestore","parent":"WEAPON","type":"hook","ishook":true,"description":{"text":"Called when the weapon entity is reloaded from a Source Engine save (not the Sandbox saves or dupes) or on a changelevel (for example Half-Life 2 campaign level transitions).\n\nFor the  callbacks, see .\n\nSee also  for relevant functions.","page":["duplicator","ENTITY:OnDuplicated","saverestore"]},"realm":"Shared","predicted":"No"}},
{"function":{"name":"OnDrop","parent":"WEAPON","type":"hook","ishook":true,"description":{"text":"Called when weapon is dropped by .\n\nSee also .","page":["Player:DropWeapon","WEAPON:OwnerChanged"]},"realm":"Server","predicted":"No"}},
{"function":{"name":"OnRemove","parent":"WEAPON","type":"hook","ishook":true,"description":"Called when the swep is about to be removed.","realm":"Shared"}},
{"function":{"name":"OnReloaded","parent":"WEAPON","type":"hook","ishook":true,"description":"Called whenever the weapons Lua script is reloaded.","realm":"Shared"}},
{"function":{"name":"KeyValue","parent":"WEAPON","type":"hook","ishook":true,"description":{"text":"Called when the engine sets a value for this scripted weapon.\n\nSee  for a hook that works for all entities.\n\n\nSee  for an  hook that works for scripted entities.","page":["GM:EntityKeyValue","ENTITY:KeyValue"]},"realm":"Server","predicted":"No","args":{"arg":[{"text":"The key that was affected.","name":"key","type":"string"},{"text":"The new value.","name":"value","type":"string"}]},"rets":{"ret":{"text":"Return true to suppress this KeyValue or return false or nothing to apply this key value.","name":"","type":"boolean"}}}},
{"function":{"name":"Initialize","parent":"WEAPON","type":"hook","ishook":true,"description":{"text":"Called when the weapon entity is created.","note":{"text":"will return NULL at this point because the weapon is not equpped by a player or NPC yet. Use  or  if you need the owner to be valid.","page":["Entity:GetOwner","WEAPON:Equip","WEAPON:Deploy"]},"bug":[{"text":"This is sometimes not called clientside. You can work around this by setting a variable in Initialize and check if it exists in . See the example below.","issue":"2732","page":"WEAPON:Think"},{"text":"This is not called serverside after a quicksave.","issue":"3015"}]},"realm":"Shared","predicted":"No"},"example":[{"description":"Sets the weapon hold type to SWEP.HoldType.","code":"function SWEP:Initialize()\n\n\tself:SetHoldType( self.HoldType )\n\nend"},{"description":"Fixes the function not being called clientside.","code":"function SWEP:Initialize()\n\tself.m_bInitialized = true\n\n\t-- Other code\nend\n\nfunction SWEP:Think()\n\tif (not self.m_bInitialized) then\n\t\tself:Initialize()\n\tend\n\n\t-- Other code\nend"}]},
{"function":{"name":"HUDShouldDraw","parent":"WEAPON","type":"hook","ishook":true,"description":"This hook determines which parts of the HUD to draw.","realm":"Client","args":{"arg":{"text":"The HUD element in question","name":"element","type":"string"}},"rets":{"ret":{"text":"Return false to hide this HUD element","name":"","type":"boolean"}}}},
{"function":{"name":"Holster","parent":"WEAPON","type":"hook","ishook":true,"description":{"text":"Called when weapon tries to holster.","bug":[{"text":"This is called twice for every holster clientside, one in  and one not.","issue":"2854","page":"Prediction"},{"text":"Before  is called, this function is only called serverside.","issue":"3133","page":"WEAPON:OnRemove"}]},"realm":"Shared","predicted":"Yes","args":{"arg":{"text":"The weapon we are trying switch to.","name":"weapon","type":"Entity"}},"rets":{"ret":{"text":"Return true to allow weapon to holster","name":"","type":"boolean"}}},"example":{"description":"Returns the weapon switched to when when the weapon is being holstered.","code":"function SWEP:Holster( wep )\n\tif not IsFirstTimePredicted() then return end\n\tLocalPlayer():ChatPrint(\"Switched to: \"..(wep.PrintName or wep:GetClass()))\nend","output":"Switched to Toolgun\nSwitched to weapon_crowbar"}},
{"function":{"name":"GetViewModelPosition","parent":"WEAPON","type":"hook","ishook":true,"description":"This hook allows you to adjust view model position and angles.","realm":"Client","predicted":"No","args":{"arg":[{"text":"Current position","name":"EyePos","type":"Vector"},{"text":"Current angle","name":"EyeAng","type":"Angle"}]},"rets":{"ret":[{"text":"New position","name":"","type":"Vector"},{"text":"New angle","name":"","type":"Angle"}]}},"example":{"description":"This moves and rotates the original viewmodel based on fixed offsets, changing its idle position in front of the player.","code":"-- Adjust these variables to move the viewmodel's position\nSWEP.IronSightsPos  = Vector(9.49, 10.5, -12.371)\nSWEP.IronSightsAng  = Vector(12, 65, -22.19)\n\nfunction SWEP:GetViewModelPosition(EyePos, EyeAng)\n\tlocal Mul = 1.0\n\n\tlocal Offset = self.IronSightsPos\n\n\tif (self.IronSightsAng) then\n        EyeAng = EyeAng * 1\n        \n\t\tEyeAng:RotateAroundAxis(EyeAng:Right(), \tself.IronSightsAng.x * Mul)\n\t\tEyeAng:RotateAroundAxis(EyeAng:Up(), \t\tself.IronSightsAng.y * Mul)\n\t\tEyeAng:RotateAroundAxis(EyeAng:Forward(),   self.IronSightsAng.z * Mul)\n\tend\n\n\tlocal Right \t= EyeAng:Right()\n\tlocal Up \t\t= EyeAng:Up()\n\tlocal Forward \t= EyeAng:Forward()\n\n\tEyePos = EyePos + Offset.x * Right * Mul\n\tEyePos = EyePos + Offset.y * Forward * Mul\n\tEyePos = EyePos + Offset.z * Up * Mul\n\t\n\treturn EyePos, EyeAng\nend"}},
{"function":{"name":"GetTracerOrigin","parent":"WEAPON","type":"hook","ishook":true,"description":"Allows you to override where the tracer effect comes from. ( Visual bullets )","realm":"Client","rets":{"ret":{"text":"The new position to start tracer effect from","name":"","type":"Vector"}}}},
{"function":{"name":"GetNPCRestTimes","parent":"WEAPON","type":"hook","ishook":true,"description":"Called when the weapon is used by NPCs to tell the NPC how to use this weapon. Controls amount of time the NPC can rest (not shoot) between bursts.","realm":"Server","predicted":"No","rets":{"ret":[{"text":"Minimum amount of time the NPC can rest (not shoot) between bursts in seconds. Default is 0.3 seconds.","name":"","type":"number"},{"text":"Maximum amount of time the NPC can rest (not shoot) between bursts in seconds. Default is 0.66 seconds.","name":"","type":"number"}]}}},
{"function":{"name":"GetNPCBurstSettings","parent":"WEAPON","type":"hook","ishook":true,"description":"Called when the weapon is used by NPCs to tell the NPC how to use this weapon. Controls how long the NPC can or should shoot continuously.","realm":"Server","predicted":"No","rets":{"ret":[{"text":"Minimum amount of bullets per burst. Default is 1.","name":"","type":"number"},{"text":"Maximum amount of bullets per burst. Default is 1.","name":"","type":"number"},{"text":"Delay between each shot, aka firerate. Default is 1.","name":"","type":"number"}]}}},
{"function":{"name":"GetNPCBulletSpread","parent":"WEAPON","type":"hook","ishook":true,"description":{"text":"Called when the weapon is used by NPCs to determine how accurate the bullets fired should be.\n\nThe inaccuracy is simulated by changing the  based on the value returned from this hook.","page":"NPC:GetAimVector"},"realm":"Server","predicted":"No","args":{"arg":{"text":"How proficient the NPC is with this gun. See","name":"proficiency","type":"number","page":"Enums/WEAPON_PROFICIENCY"}},"rets":{"ret":{"text":"An amount of degrees the bullets should deviate from the NPC's . Default is 15.","name":"","type":"number","page":"NPC:GetAimVector"}}}},
{"function":{"name":"GetCapabilities","parent":"WEAPON","type":"hook","ishook":true,"description":"This hook is for NPCs, you return what they should try to do with it.","realm":"Server","rets":{"ret":{"text":"A number defining what NPC should do with the weapon. Use the .","name":"","type":"number","page":"Enums/CAP"}}},"example":{"description":"As defined in weapon_base","code":"function SWEP:GetCapabilities()\n\n\treturn bit.bor( CAP_WEAPON_RANGE_ATTACK1, CAP_INNATE_RANGE_ATTACK1 )\n\nend"}},
{"function":{"name":"FreezeMovement","parent":"WEAPON","type":"hook","ishook":true,"description":{"text":"This hook allows you to freeze players screen.","note":"Player will still be able to move or shoot"},"realm":"Client","predicted":"No","rets":{"ret":{"text":"Return true to freeze moving the view","name":"","type":"boolean"}}}},
{"function":{"name":"EquipAmmo","parent":"WEAPON","type":"hook","ishook":true,"description":"The player has picked up the weapon and has taken the ammo from it.\nThe weapon will be removed immidiately after this call.","realm":"Server","args":{"arg":{"text":"The player who picked up the weapon","name":"ply","type":"Player"}}}},
{"function":{"name":"FireAnimationEvent","parent":"WEAPON","type":"hook","ishook":true,"description":"Called before firing animation events, such as muzzle flashes or shell ejections.\n\nThis will only be called serverside for 3000-range events, and clientside for 5000-range  and other events.","realm":"Shared","predicted":"No","args":{"arg":[{"text":"Position of the effect.","name":"pos","type":"Vector"},{"text":"Angle of the effect.","name":"ang","type":"Angle"},{"text":"The event ID of happened even. See [this page](http://developer.valvesoftware.com/wiki/Animation_Events).","name":"event","type":"number"},{"text":"Name or options of the event.","name":"options","type":"string"},{"text":"The source entity. This will be a viewmodel on the client and the weapon itself on the server","name":"source","type":"Entity"}]},"rets":{"ret":{"text":"Return true to disable the effect.","name":"","type":"boolean"}}},"example":[{"description":"Disables muzzle flashes. Taken from tool gun source code.","code":"function SWEP:FireAnimationEvent( pos, ang, event, options )\n\t\n\t-- Disables animation based muzzle event\n\tif ( event == 21 ) then return true end\t\n\n\t-- Disable thirdperson muzzle flash\n\tif ( event == 5003 ) then return true end\n\nend"},{"description":"Counter-Strike: Source like muzzle flashes.","code":"function SWEP:FireAnimationEvent( pos, ang, event, options )\n\n\tif ( !self.CSMuzzleFlashes ) then return end\n\n\t-- CS Muzzle flashes\n\tif ( event == 5001 or event == 5011 or event == 5021 or event == 5031 ) then\n\t\n\t\tlocal data = EffectData()\n\t\tdata:SetFlags( 0 )\n\t\tdata:SetEntity( self.Owner:GetViewModel() )\n\t\tdata:SetAttachment( math.floor( ( event - 4991 ) / 10 ) )\n\t\tdata:SetScale( 1 ) -- Change me\n\n\t\tif ( self.CSMuzzleX ) then\n\t\t\tutil.Effect( \"CS_MuzzleFlash_X\", data )\n\t\telse\n\t\t\tutil.Effect( \"CS_MuzzleFlash\", data )\n\t\tend\n\t\n\t\treturn true\n\tend\n\nend"}]},
{"function":{"name":"Equip","parent":"WEAPON","type":"hook","ishook":true,"description":"Called when a player or NPC has picked the weapon up.","realm":"Server","args":{"arg":{"text":"The one who picked the weapon up. Can be  or .","name":"NewOwner","type":"Entity","page":["Player","NPC"]}}}},
{"function":{"name":"DrawWorldModelTranslucent","parent":"WEAPON","type":"hook","ishook":true,"description":"Called when we are about to draw the translucent world model.","realm":"Client"},"example":{"description":"Do the default action - render it without any changes.","code":"function SWEP:DrawWorldModelTranslucent()\n\tself:DrawModel()\nend"}},
{"function":{"name":"DrawWorldModel","parent":"WEAPON","type":"hook","ishook":true,"description":"Called when we are about to draw the world model.","realm":"Client","predicted":"No"},"example":[{"description":"The default action - render the world model.","code":"function SWEP:DrawWorldModel()\n\tself:DrawModel()\nend"},{"description":"Draw the world model on the player without bonemerging it.","code":"-- ...\nSWEP.HoldType = \"pistol\" -- You might need to do self:SetHoldType(self.HoldType) under the initialization hook for the SWEP.\n\nif CLIENT then\n\tlocal WorldModel = ClientsideModel(SWEP.WorldModel)\n\n\t-- Settings...\n\tWorldModel:SetSkin(1)\n\tWorldModel:SetNoDraw(true)\n\n\tfunction SWEP:DrawWorldModel()\n\t\tlocal _Owner = self:GetOwner()\n\n\t\tif (IsValid(_Owner)) then\n            -- Specify a good position\n\t\t\tlocal offsetVec = Vector(5, -2.7, -3.4)\n\t\t\tlocal offsetAng = Angle(180, 90, 0)\n\t\t\t\n\t\t\tlocal boneid = _Owner:LookupBone(\"ValveBiped.Bip01_R_Hand\") -- Right Hand\n\t\t\tif !boneid then return end\n\n\t\t\tlocal matrix = _Owner:GetBoneMatrix(boneid)\n\t\t\tif !matrix then return end\n\n\t\t\tlocal newPos, newAng = LocalToWorld(offsetVec, offsetAng, matrix:GetTranslation(), matrix:GetAngles())\n\n\t\t\tWorldModel:SetPos(newPos)\n\t\t\tWorldModel:SetAngles(newAng)\n\n            WorldModel:SetupBones()\n\t\telse\n\t\t\tWorldModel:SetPos(self:GetPos())\n\t\t\tWorldModel:SetAngles(self:GetAngles())\n\t\tend\n\n\t\tWorldModel:DrawModel()\n\tend\nend","output":{"image":[{"src":"DrawWorldModel_example2.JPG","alt":"thumb|left|The_World_model_is_in_the_Players_hand,_with_a_skin_applied."},{"src":"DrawWorldModel_example2_2.JPG","alt":"thumb|left|The_World_model_when_dropped."}]}}]},
{"function":{"name":"DrawHUDBackground","parent":"WEAPON","type":"hook","ishook":true,"description":{"text":"This hook allows you to draw on screen while this weapon is in use. This hook is called **before**  and is equivalent of .","page":["WEAPON:DrawHUD","GM:HUDPaintBackground"]},"realm":"Client"}},
{"function":{"name":"DrawWeaponSelection","parent":"WEAPON","type":"hook","ishook":true,"description":"This hook draws the selection icon in the weapon selection menu.","realm":"Client","args":{"arg":[{"text":"X coordinate of the selection panel","name":"x","type":"number"},{"text":"Y coordinate of the selection panel","name":"y","type":"number"},{"text":"Width of the selection panel","name":"width","type":"number"},{"text":"Height of the selection panel","name":"height","type":"number"},{"text":"Alpha value of the selection panel","name":"alpha","type":"number"}]}},"example":{"description":"As defined in weapon_base","code":"function SWEP:DrawWeaponSelection( x, y, wide, tall, alpha )\n\t\n\t-- Set us up the texture\n\tsurface.SetDrawColor( 255, 255, 255, alpha )\n\tsurface.SetTexture( self.WepSelectIcon )\n\t\n\t-- Lets get a sin wave to make it bounce\n\tlocal fsin = 0\n\t\n\tif ( self.BounceWeaponIcon == true ) then\n\t\tfsin = math.sin( CurTime() * 10 ) * 5\n\tend\n\t\n\t-- Borders\n\ty = y + 10\n\tx = x + 10\n\twide = wide - 20\n\t\n\t-- Draw that mother\n\tsurface.DrawTexturedRect( x + (fsin), y - (fsin),  wide-fsin*2 , ( wide / 2 ) + (fsin) )\n\t\n\t-- Draw weapon info box\n\tself:PrintWeaponInfo( x + wide + 20, y + tall * 0.95, alpha )\n\t\nend"}},
{"function":{"name":"DrawHUD","parent":"WEAPON","type":"hook","ishook":true,"description":{"text":"This hook allows you to draw on screen while this weapon is in use.\n\nIf you want to draw a custom crosshair, consider using  instead.","page":"WEAPON:DoDrawCrosshair"},"realm":"Client","predicted":"No"},"example":{"description":"Weapon:DrawHud() as defined in weapon_cs_base, with more notes","code":"function SWEP:DrawHUD()\n\n\t-- No crosshair when ironsights is on\n\tif ( self.Weapon:GetNWBool( \"Ironsights\" ) ) then return end\n\n\tlocal x, y -- local, always\n\n\t-- If we're drawing the local player, draw the crosshair where they're aiming\n\t-- instead of in the center of the screen.\n\tif ( self.Owner == LocalPlayer() && self.Owner:ShouldDrawLocalPlayer() ) then\n\t\tlocal tr = util.GetPlayerTrace( self.Owner )\n\t\ttr.mask = ( CONTENTS_SOLID+CONTENTS_MOVEABLE+CONTENTS_MONSTER+CONTENTS_WINDOW+CONTENTS_DEBRIS+CONTENTS_GRATE+CONTENTS_AUX ) -- List the enums that should mask the crosshair on camrea/thridperson\n\t\tlocal trace = util.TraceLine( tr )\n\t\t\n\t\tlocal coords = trace.HitPos:ToScreen()\n\t\tx, y = coords.x, coords.y\n\n\telse\n\t\tx, y = ScrW() / 2.0, ScrH() / 2.0 -- Center of screen\n\tend\n\t\n\tlocal scale = 10 * self.Primary.Cone\n\tlocal LastShootTime = self.Weapon:GetNWFloat( \"LastShootTime\", 0 )\n        -- Scale the size of the crosshair according to how long ago we fired our weapon\n\tscale = scale * (2 - math.Clamp( (CurTime() - LastShootTime) * 5, 0.0, 1.0 ))\n\t--                    R   G    B  Alpha\n\tsurface.SetDrawColor( 0, 255, 0, 255 ) -- Sets the color of the lines we're drawing\n\t\n-- Draw a crosshair\n\tlocal gap = 40 * scale\n\tlocal length = gap + 20 * scale\n        --                 x1,        y1, x2,     y2\n\tsurface.DrawLine( x - length, y, x - gap, y )\t-- Left\n\tsurface.DrawLine( x + length, y, x + gap, y )\t-- Right\n\tsurface.DrawLine( x, y - length, x, y - gap )\t-- Top\n\tsurface.DrawLine( x, y + length, x, y + gap )\t-- Bottom\n\nend","output":"Draws 4 lines for crosshairs"}},
{"function":{"name":"DoImpactEffect","parent":"WEAPON","type":"hook","ishook":true,"description":"Called so the weapon can override the impact effects it makes.","realm":"Shared","predicted":"No","args":{"arg":[{"text":"A  from player's eyes to the impact point","name":"tr","type":"table","page":"Structures/TraceResult"},{"text":"The damage type of bullet. See","name":"damageType","type":"number","page":"Enums/DMG"}]},"rets":{"ret":{"text":"Return true to not do the default thing - which is to call UTIL_ImpactTrace in C++","name":"","type":"boolean"}}},"example":{"description":"Makes the SWEP have the AR2 bullet impact effect.","code":"function SWEP:DoImpactEffect( tr, nDamageType )\n\n\tif ( tr.HitSky ) then return end\n\t\n\tlocal effectdata = EffectData()\n\teffectdata:SetOrigin( tr.HitPos + tr.HitNormal )\n\teffectdata:SetNormal( tr.HitNormal )\n\tutil.Effect( \"AR2Impact\", effectdata )\n\nend"}},
{"function":{"name":"DoDrawCrosshair","parent":"WEAPON","type":"hook","ishook":true,"description":{"text":"Called when the crosshair is about to get drawn, and allows you to override it.","note":["This function will not be called if **SWEP.DrawCrosshair** set to false.",{"text":"This function will not be called if player was affected by .","page":"Player:CrosshairDisable"}],"bug":{"text":"The arguments passed to this function are not affected by **SWEP.AccurateCrosshair**.","issue":"2117"}},"realm":"Client","predicted":"No","args":{"arg":[{"text":"X coordinate of the crosshair.","name":"x","type":"number"},{"text":"Y coordinate of the crosshair.","name":"y","type":"number"}]},"rets":{"ret":{"text":"Return true to override the default crosshair.","name":"","type":"boolean"}}},"example":{"description":"Draws an outlined rectangle in place of the crosshair.","code":"function SWEP:DoDrawCrosshair( x, y )\n\tsurface.SetDrawColor( 0, 250, 255, 255 )\n\tsurface.DrawOutlinedRect( x - 32, y - 32, 64, 64 )\n\treturn true\nend"}},
{"cat":"hook","function":{"name":"Deploy","parent":"WEAPON","type":"hook","ishook":true,"description":{"text":"Called when player has just switched to this weapon.","note":{"text":"Due to this hook being predicted, it is not called clientside in singleplayer at all, and in multiplayer it will not be called clientside if the weapon is switched with  or the \"use\" console command, however it will be called clientside with the default weapon selection menu and when using","page":["Player:SelectWeapon","CUserCmd:SelectWeapon"]}},"realm":"Shared","predicted":"Yes","hidepredictionwarning":"Disable automatic prediction warning","rets":{"ret":{"text":"Return true to allow switching away from this weapon using lastinv command","name":"","type":"boolean"}}}},
{"function":{"name":"CustomAmmoDisplay","parent":"WEAPON","type":"hook","ishook":true,"description":"Allows you to use any numbers you want for the ammo display on the HUD.\n\nCan be useful for weapons that don't use standard ammo.","realm":"Client","predicted":"No","rets":{"ret":{"text":"The new ammo display settings. A table with 4 possible keys:\n*  Draw - Whether to draw the ammo display or not\n*  PrimaryClip - Amount of primary ammo in the clip\n*  PrimaryAmmo - Amount of primary ammo in the reserves\n*  SecondaryAmmo - Amount of secondary ammo. It is shown like alt-fire for SMG1 and AR2 are shown.\n\nThere is **no** SecondaryClip!","name":"","type":"table","page":["boolean","number","number","number"]}}},"example":{"description":"How it would look with standard information","code":"function SWEP:CustomAmmoDisplay()\n\tself.AmmoDisplay = self.AmmoDisplay or {} \n \n\tself.AmmoDisplay.Draw = true //draw the display?\n \n\tif self.Primary.ClipSize > 0 then\n\t\tself.AmmoDisplay.PrimaryClip = self:Clip1() //amount in clip\n\t\tself.AmmoDisplay.PrimaryAmmo = self:Ammo1() //amount in reserve\n\tend\n\tif self.Secondary.ClipSize > 0 then\n\t\tself.AmmoDisplay.SecondaryAmmo = self:Ammo2() // amount of secondary ammo\n\tend\n \n\treturn self.AmmoDisplay //return the table\nend"}},
{"function":{"name":"CanSecondaryAttack","parent":"WEAPON","type":"hook","ishook":true,"description":"Helper function for checking for no ammo.","realm":"Shared","rets":{"ret":{"text":"Can use secondary attack","name":"","type":"boolean"}}},"example":{"description":"As defined in weapon_base","code":"function SWEP:CanSecondaryAttack()\n\n\tif ( self.Weapon:Clip2() <= 0 ) then\n\t\n\t\tself.Weapon:EmitSound( \"Weapon_Pistol.Empty\" )\n\t\tself.Weapon:SetNextSecondaryFire( CurTime() + 0.2 )\n\t\treturn false\n\t\t\n\tend\n\n\treturn true\n\nend"}},
{"function":{"name":"CanPrimaryAttack","parent":"WEAPON","type":"hook","ishook":true,"description":"Helper function for checking for no ammo.","realm":"Shared","rets":{"ret":{"text":"Can use primary attack","name":"","type":"boolean"}}},"example":{"description":"As defined in weapon_base","code":"function SWEP:CanPrimaryAttack()\n\n\tif ( self.Weapon:Clip1() <= 0 ) then\n\t\n\t\tself:EmitSound( \"Weapon_Pistol.Empty\" )\n\t\tself:SetNextPrimaryFire( CurTime() + 0.2 )\n\t\tself:Reload()\n\t\treturn false\n\t\t\n\tend\n\n\treturn true\n\nend"}},
{"function":{"name":"CanPrimaryAttack","parent":"WEAPON","type":"hook","ishook":true,"description":"Helper function for checking for no ammo.","realm":"Shared","rets":{"ret":{"text":"Can use primary attack","name":"","type":"boolean"}}},"example":{"description":"As defined in weapon_base","code":"function SWEP:CanPrimaryAttack()\n\n\tif ( self.Weapon:Clip1() <= 0 ) then\n\t\n\t\tself:EmitSound( \"Weapon_Pistol.Empty\" )\n\t\tself:SetNextPrimaryFire( CurTime() + 0.2 )\n\t\tself:Reload()\n\t\treturn false\n\t\t\n\tend\n\n\treturn true\n\nend"}},
{"function":{"name":"CalcViewModelView","parent":"WEAPON","type":"hook","ishook":true,"description":{"text":"Allows overriding the position and angle of the viewmodel. This hook only works if you haven't overridden .","page":"GM:CalcViewModelView"},"realm":"Client","predicted":"No","args":{"arg":[{"text":"The viewmodel entity","name":"ViewModel","type":"Entity"},{"text":"Original position (before viewmodel bobbing and swaying)","name":"OldEyePos","type":"Vector"},{"text":"Original angle (before viewmodel bobbing and swaying)","name":"OldEyeAng","type":"Angle"},{"text":"Current position","name":"EyePos","type":"Vector"},{"text":"Current angle","name":"EyeAng","type":"Angle"}]},"rets":{"ret":[{"text":"New position","name":"","type":"Vector"},{"text":"New angle","name":"","type":"Angle"}]}},"example":{"description":"One way to change the viewmodel texture (skin) for your SWEP. Changing it from 0 to 1. \n\nRemember to define the base path ([$cdmaterials](https://developer.valvesoftware.com/wiki/$cdmaterials)) for your model when e.g. using [Crowbar](https://developer.valvesoftware.com/wiki/Crowbar) to compile .smd to .mdl; or else you won't get any texture(s) applied. (the game won't know where to look) [QC Commands](https://developer.valvesoftware.com/wiki/Category:QC_Commands)\n\nAnd remember to use [$texturegroup](https://developer.valvesoftware.com/wiki/$texturegroup) for multiple skins.","code":"function SWEP:CalcViewModelView(ViewModel, OldEyePos, OldEyeAng, EyePos, EyeAng)\n    -- Set skin to the SWEPs second skin; 1. Starts at 0\n    ViewModel:SetSkin(1)\nend","output":{"image":[{"src":"CalcViewModelView_ex1_skin0.JPG","alt":"thumb|left|Skin_0"},{"src":"CalcViewModelView_ex1_skin1.JPG","alt":"thumb|left|Skin_1"}]}}},
{"function":{"name":"Ammo1","parent":"WEAPON","type":"hook","ishook":true,"description":"Returns how much of primary ammo the player has.","realm":"Shared","rets":{"ret":{"text":"The amount of primary ammo player has","name":"","type":"number"}}},"example":{"description":"As defined in weapon_base","code":"function SWEP:Ammo1()\n\treturn self.Owner:GetAmmoCount( self.Weapon:GetPrimaryAmmoType() )\nend"}},
{"function":{"name":"Ammo2","parent":"WEAPON","type":"hook","ishook":true,"description":"Returns how much of secondary ammo the player has.","realm":"Shared","rets":{"ret":{"text":"The amount of secondary ammo player has","name":"","type":"number"}}},"example":{"description":"As defined in weapon_base","code":"function SWEP:Ammo2()\n\treturn self.Owner:GetAmmoCount( self.Weapon:GetSecondaryAmmoType() )\nend"}},
{"function":{"name":"CalcView","parent":"WEAPON","type":"hook","ishook":true,"description":{"text":"Allows you to adjust player view while this weapon in use.\n\nThis hook is called from the default implementation of  which is [here](https://github.com/garrynewman/garrysmod/blob/master/garrysmod/gamemodes/base/gamemode/cl_init.lua#L376-L383). Therefore, it will not be called if any other hook added to CalcView returns any value, or if the current gamemode overrides the default hook and does not call the SWEP function.","page":"GM:CalcView","bug":{"text":"SWEPs that define this function will not work with the","pull":"1348","page":",taunt camera.Global.TauntCamera"}},"realm":"Client","predicted":"No","args":{"arg":[{"text":"The owner of weapon","name":"ply","type":"Player"},{"text":"Current position of players view","name":"pos","type":"Vector"},{"text":"Current angles of players view","name":"ang","type":"Angle"},{"text":"Current FOV of players view","name":"fov","type":"number"}]},"rets":{"ret":[{"text":"New position of players view","name":"","type":"Vector"},{"text":"New angle of players view","name":"","type":"Angle"},{"text":"New FOV of players view","name":"","type":"number"}]}}},
{"function":{"name":"AdjustMouseSensitivity","parent":"WEAPON","type":"hook","ishook":true,"description":{"text":"Allows you to adjust the mouse sensitivity. This hook only works if you haven't overridden .","page":"GM:AdjustMouseSensitivity"},"realm":"Client","rets":{"ret":{"text":"Sensitivity scale","name":"","type":"number"}}},"example":{"description":"Makes your sensitivity twice slower","code":"function SWEP:AdjustMouseSensitivity()\n\treturn 0.5\nend"}},
{"function":{"name":"Think","parent":"TOOL","type":"hook","ishook":true,"description":{"text":"Called when  of the toolgun is called. This only happens when the tool gun is currently equipped/selected by the player and the selected tool is this tool.","page":"WEAPON:Think"},"realm":"Shared","predicted":"No"}},
{"function":{"name":"RightClick","parent":"TOOL","type":"hook","ishook":true,"description":"Called when the user right clicks with the tool.","realm":"Shared","predicted":"Yes","args":{"arg":{"text":"A trace from users eyes to wherever he aims at. See","name":"tr","type":"table","page":"Structures/TraceResult"}},"rets":{"ret":{"text":"Return true to make the tool gun beam and play fire animations, false otherwise","name":"","type":"boolean"}}}},
{"function":{"name":"AcceptInput","parent":"WEAPON","type":"hook","ishook":true,"description":"Called when another entity fires an event to this entity.","realm":"Server","args":{"arg":[{"text":"The name of the input that was triggered.","name":"inputName","type":"string"},{"text":"The initial cause for the input getting triggered.","name":"activator","type":"Entity"},{"text":"The entity that directly trigger the input.","name":"called","type":"Entity"},{"text":"The data passed.","name":"data","type":"string"}]},"rets":{"ret":{"text":"Should we suppress the default action for this input?","name":"","type":"boolean"}}},"example":{"description":"A workaround for weapons created by maps not taking into account spawnflags.","code":"function SWEP:AcceptInput( name, activator, caller, data )\n\n\t-- Check for input and spawnflag\n\tif ( name == \"ConstraintBroken\" && self:HasSpawnFlags( 1 ) ) then\n\n\t\t-- Freeze the weapon\n\t\tlocal phys = self:GetPhysicsObject()\n\t\tif ( IsValid( phys ) ) then phys:EnableMotion( false ) end\n\t\n\t\t-- Remove the spawnflag so it doesn't freeze the weapon when it is dropped\n\t\tlocal newflags = bit.band( self:GetSpawnFlags(), bit.bnot( 1 ) )\n\t\tself:SetKeyValue( \"spawnflags\", newflags )\n\tend\nend"}},
{"function":{"name":"Reload","parent":"TOOL","type":"hook","ishook":true,"description":"Called when the user presses the reload key with the tool out.","realm":"Shared","predicted":"Yes","args":{"arg":{"text":"A trace from users eyes to wherever he aims at. See","name":"tr","type":"table","page":"Structures/TraceResult"}},"rets":{"ret":{"text":"Return true to make the tool gun beam and play fire animations, false otherwise","name":"","type":"boolean"}}}},
{"function":{"name":"Holster","parent":"TOOL","type":"hook","ishook":true,"description":{"text":"Called when  of the toolgun is called, as well as when switching between different toolguns.","page":"WEAPON:Holster"},"realm":"Shared","predicted":"Yes"},"example":{"description":{"text":"Clears any objects set by .","page":"Tool:SetObject"},"code":"function TOOL:Holster()\n\n\tself:ClearObjects()\n\nend"}},
{"function":{"name":"LeftClick","parent":"TOOL","type":"hook","ishook":true,"description":"Called when the user left clicks with the tool","realm":"Shared","predicted":"Yes","args":{"arg":{"text":"A trace from users eyes to wherever he aims at. See","name":"tr","type":"table","page":"Structures/TraceResult"}},"rets":{"ret":{"text":"Return true to make the tool gun beam and play fire animations, false otherwise","name":"","type":"boolean"}}}},
{"function":{"name":"FreezeMovement","parent":"TOOL","type":"hook","ishook":true,"description":{"text":"Called when  of the toolgun is called, only when the user has this tool selected.","page":"WEAPON:Think"},"realm":"Client","predicted":"No","rets":{"ret":{"text":"Return true to freeze the player","name":"","type":"boolean"}}}},
{"function":{"name":"DrawToolScreen","parent":"TOOL","type":"hook","ishook":true,"description":{"text":"Called after the default tool screen has been drawn from .","page":"WEAPON:RenderScreen","note":["If this method exists on the TOOL object table, the default scrolling text will not be drawn","Materials rendered in this hook require $ignorez parameter to draw properly."]},"realm":"Client","predicted":"No","file":{"text":"gamemodes/sandbox/entities/weapons/gmod_tool/cl_viewscreen.lua","line":"67-69"},"args":{"arg":[{"text":"The width of the tool's screen in pixels.","name":"width","type":"number"},{"text":"The height of the tool's screen in pixels.","name":"height","type":"number"}]}},"example":{"description":"White text that says \"Hello world!\" on a black background.","code":"function TOOL:DrawToolScreen( width, height )\n\t-- Draw black background\n\tsurface.SetDrawColor( Color( 20, 20, 20 ) )\n\tsurface.DrawRect( 0, 0, width, height )\n\t\n\t-- Draw white text in middle\n\tdraw.SimpleText( \"Hello world!\", \"DermaLarge\", width / 2, height / 2, Color( 200, 200, 200 ), TEXT_ALIGN_CENTER, TEXT_ALIGN_CENTER )\nend","output":{"image":{"src":"drawtoolscreen.jpg"}}}},
{"function":{"name":"Deploy","parent":"TOOL","type":"hook","ishook":true,"description":{"text":"Called when  of the toolgun is called.\n\nThis is also called when switching from another tool on the server.","page":"WEAPON:Deploy"},"realm":"Shared","predicted":"Yes"}},
{"function":{"name":"DrawHUD","parent":"TOOL","type":"hook","ishook":true,"description":{"text":"Called when  of the toolgun is called, only when the user has this tool selected.","page":"WEAPON:DrawHUD"},"realm":"Client","predicted":"No"}},
{"function":{"name":"SpawnMenuEnabled","parent":"SANDBOX","type":"hook","ishook":true,"description":"If false is returned then the spawn menu is never created. This saves load times if your mod doesn't actually use the spawn menu for any reason.","realm":"Client","predicted":"No","rets":{"ret":{"text":"Whether to create spawnmenu or not.","name":"","type":"boolean"}}}},
{"function":{"name":"SpawnMenuOpen","parent":"SANDBOX","type":"hook","ishook":true,"description":{"text":"Called when spawnmenu is trying to be opened.","note":"Hiding the spawnmenu will not stop people from being able to use the various console commands to spawn in items, etc. See GM:PlayerSpawn* hooks for blocking actual spawning."},"realm":"Client","predicted":"No","rets":{"ret":{"text":"Return false to dissallow opening the spawnmenu","name":"","type":"boolean"}}},"example":{"description":"Only allow the people you want to open the spawn menu.","code":"local allowed = {\n\t[\"STEAM_0:0:00000000\"] = true,\n\t[\"STEAM_0:0:10000000\"] = true\n}\n\nhook.Add( \"SpawnMenuOpen\", \"SpawnMenuWhitelist\", function()\n\tif ( !allowed[ LocalPlayer():SteamID() ] ) then\n\t\treturn false\n\tend\nend )"}},
{"function":{"name":"PostReloadToolsMenu","parent":"SANDBOX","type":"hook","ishook":true,"description":"Called right after the Lua Loaded tool menus are reloaded. This is a good place to set up any ControlPanels.","realm":"Client","predicted":"No"}},
{"function":{"name":"PreReloadToolsMenu","parent":"SANDBOX","type":"hook","ishook":true,"description":"Called right before the Lua Loaded tool menus are reloaded.","realm":"Client","predicted":"No"}},
{"function":{"name":"PopulateSTOOLMenu","parent":"SANDBOX","type":"hook","ishook":true,"description":{"text":"Called to populate the Scripted Tool menu.\n\n, instead.</page>","deprecated":{"text":"This hook is never called. Use","page":"SANDBOX:PopulateToolMenu"}},"realm":"Client","predicted":"No"}},
{"function":{"name":"PopulateToolMenu","parent":"SANDBOX","type":"hook","ishook":true,"description":{"text":"Add the STOOLS to the tool menu. You want to call  in this hook.","page":"spawnmenu.AddToolMenuOption"},"realm":"Client","predicted":"No"}},
{"function":{"name":"PopulatePropMenu","parent":"SANDBOX","type":"hook","ishook":true,"description":{"text":"This hook makes the engine load the spawnlist text files.\nIt calls  by default.","page":"spawnmenu.PopulateFromEngineTextFiles"},"realm":"Client","predicted":"No"},"example":{"description":"Source code for this hook.","code":"function GM:PopulatePropMenu()\n\n\t-- This function makes the engine load the spawn menu text files.\n\t-- We call it here so that any gamemodes not using the default \n\t-- spawn menu can totally not call it.\n\tspawnmenu.PopulateFromEngineTextFiles()\n\nend"}},
{"function":{"name":"PlayerSpawnVehicle","parent":"SANDBOX","type":"hook","ishook":true,"description":"Called to ask if player allowed to spawn a particular vehicle or not.","realm":"Server","args":{"arg":[{"text":"The player that wants to spawn that vehicle","name":"ply","type":"Player"},{"text":"The vehicle model that player wants to spawn","name":"model","type":"string"},{"text":"Vehicle name","name":"name","type":"string"},{"text":"Table of that vehicle, containing info about it","name":"table","type":"table"}]},"rets":{"ret":{"text":"Return false to disallow spawning that vehicle","name":"","type":"boolean"}}}},
{"function":{"name":"PlayerSpawnSWEP","parent":"SANDBOX","type":"hook","ishook":true,"description":"Called when a player attempts to spawn a weapon from the Q menu. ( Mouse wheel clicks on an icon )","realm":"Server","predicted":"No","args":{"arg":[{"text":"The player who attempted to spawn a weapon.","name":"ply","type":"Player"},{"text":"Class name of the weapon the player tried to spawn.","name":"weapon","type":"string"},{"text":"Information about the weapon the player is trying to spawn, see","name":"swep","type":"table","page":"Structures/SWEP"}]},"rets":{"ret":{"text":"Can the SWEP be spawned","name":"","type":"boolean"}}},"example":{"description":"Stops non-admins from spawning weapons.","code":"hook.Add( \"PlayerSpawnSWEP\", \"SpawnBlockSWEP\", function( ply, class, info )\n\tif ( not ply:IsAdmin() ) then\n\t\treturn false\n\tend\nend )"}},
{"function":{"name":"PlayerSpawnSENT","parent":"SANDBOX","type":"hook","ishook":true,"description":"Called when a player attempts to spawn an Entity from the Q menu.","realm":"Server","args":{"arg":[{"text":"The player who attempted to spawn the entity.","name":"ply","type":"Player"},{"text":"Class name of the entity the player tried to spawn.","name":"class","type":"string"}]},"rets":{"ret":{"text":"can_spawn","name":"","type":"boolean"}}},"example":{"description":"Stops non-admins from spawning entities.","code":"function GM:PlayerSpawnSENT( ply, class )\n\tif not ply:IsAdmin() then\n\t\treturn false\n\tend\nend"}},
{"function":{"name":"PlayerSpawnRagdoll","parent":"SANDBOX","type":"hook","ishook":true,"description":"Called when a player attempts to spawn a ragdoll from the Q menu.","realm":"Server","args":{"arg":[{"text":"The player who attempted to spawn a ragdoll.","name":"ply","type":"Player"},{"text":"Path to the model of the ragdoll the player is attempting to spawn.","name":"model","type":"string"}]},"rets":{"ret":{"text":"Should the player be able to spawn the ragdoll or not.","name":"","type":"boolean"}}},"example":{"description":"Stops non-admins from spawning ragdolls.","code":"function GM:PlayerSpawnRagdoll( ply, model )\n\tif ( not ply:IsAdmin() ) then\n\t\treturn false\n\tend\nend"}},
{"function":{"name":"PlayerSpawnProp","parent":"SANDBOX","type":"hook","ishook":true,"description":"Called when a player attempts to spawn a prop from the Q menu.","realm":"Server","args":{"arg":[{"text":"The player who attempted to spawn a prop.","name":"ply","type":"Player"},{"text":"Path to the model of the prop the player is attempting to spawn.","name":"model","type":"string"}]},"rets":{"ret":{"text":"Should the player be able to spawn the prop or not.","name":"","type":"boolean"}}},"example":{"description":"Stops non-admins from spawning props.","code":"function GM:PlayerSpawnProp( ply, model )\n\tif ( !ply:IsAdmin() ) then\n\t\treturn false\n\tend\nend"}},
{"function":{"name":"PlayerSpawnObject","parent":"SANDBOX","type":"hook","ishook":true,"description":"Called to ask whether player is allowed to spawn a given model. This includes props, effects and ragdolls and is called before the respective PlayerSpawn* hook.","realm":"Server","predicted":"No","args":{"arg":[{"text":"The player in question","name":"ply","type":"Player"},{"text":"Model path","name":"model","type":"string"},{"text":"Skin number","name":"skin","type":"number"}]},"rets":{"ret":{"text":"Return false to disallow the player to spawn the given model.","name":"","type":"boolean"}}}},
{"function":{"name":"PlayerSpawnNPC","parent":"SANDBOX","type":"hook","ishook":true,"description":"Called to ask if player allowed to spawn a particular NPC or not.","realm":"Server","args":{"arg":[{"text":"The player that wants to spawn that NPC","name":"ply","type":"Player"},{"text":"The npc type that player is trying to spawn","name":"npc_type","type":"string"},{"text":"The weapon of that NPC","name":"weapon","type":"string"}]},"rets":{"ret":{"text":"Return false to disallow spawning that NPC","name":"","type":"boolean"}}}},
{"function":{"name":"PlayerSpawnEffect","parent":"SANDBOX","type":"hook","ishook":true,"description":"Called to ask if player allowed to spawn a particular effect or not.","realm":"Server","args":{"arg":[{"text":"The player that wants to spawn an effect","name":"ply","type":"Player"},{"text":"The effect model that player wants to spawn","name":"model","type":"string"}]},"rets":{"ret":{"text":"Return false to disallow spawning that effect","name":"","type":"boolean"}}}},
{"function":{"name":"PlayerSpawnedVehicle","parent":"SANDBOX","type":"hook","ishook":true,"description":"Called after the player spawned a vehicle.","realm":"Server","args":{"arg":[{"text":"The player that spawned the vehicle","name":"ply","type":"Player"},{"text":"The vehicle itself","name":"ent","type":"Entity"}]}}},
{"function":{"name":"PlayerSpawnedSWEP","parent":"SANDBOX","type":"hook","ishook":true,"description":{"text":"Called after the player has spawned a scripted weapon from the spawnmenu with a middle mouse click.\n\nFor left mouse click spawns, see .","page":"SANDBOX:PlayerGiveSWEP"},"realm":"Server","predicted":"No","args":{"arg":[{"text":"The player that spawned the SWEP","name":"ply","type":"Player"},{"text":"The SWEP itself","name":"ent","type":"Entity"}]}}},
{"function":{"name":"PlayerSpawnedSENT","parent":"SANDBOX","type":"hook","ishook":true,"description":"Called after the player has spawned a scripted entity.","realm":"Server","args":{"arg":[{"text":"The player that spawned the SENT","name":"ply","type":"Player"},{"text":"The spawned SENT","name":"ent","type":"Entity"}]}}},
{"function":{"name":"PlayerSpawnedProp","parent":"SANDBOX","type":"hook","ishook":true,"description":"Called when a player has successfully spawned a prop from the Q menu.","realm":"Server","args":{"arg":[{"text":"The player who spawned a prop.","name":"ply","type":"Player"},{"text":"Path to the model of the prop the player is attempting to spawn.","name":"model","type":"string"},{"text":"The entity that was spawned.","name":"entity","type":"Entity"}]}},"example":{"description":"Turns the spawned prop green.","code":"function GM:PlayerSpawnedProp(ply, model, ent)\n\tent:SetColor(Color(0, 255, 0))\nend"}},
{"function":{"name":"PlayerSpawnedNPC","parent":"SANDBOX","type":"hook","ishook":true,"description":"Called after the player spawned an NPC.","realm":"Server","args":{"arg":[{"text":"The player that spawned the NPC","name":"ply","type":"Player"},{"text":"The spawned NPC itself","name":"ent","type":"Entity"}]}}},
{"function":{"name":"PlayerSpawnedNPC","parent":"SANDBOX","type":"hook","ishook":true,"description":"Called after the player spawned an NPC.","realm":"Server","args":{"arg":[{"text":"The player that spawned the NPC","name":"ply","type":"Player"},{"text":"The spawned NPC itself","name":"ent","type":"Entity"}]}}},
{"function":{"name":"PlayerSpawnedNPC","parent":"SANDBOX","type":"hook","ishook":true,"description":"Called after the player spawned an NPC.","realm":"Server","args":{"arg":[{"text":"The player that spawned the NPC","name":"ply","type":"Player"},{"text":"The spawned NPC itself","name":"ent","type":"Entity"}]}}},
{"function":{"name":"PersistenceSave","parent":"SANDBOX","type":"hook","ishook":true,"description":"Called when persistent props are saved.","realm":"Server"}},
{"function":{"name":"PersistenceLoad","parent":"SANDBOX","type":"hook","ishook":true,"description":"Called when persistent props are loaded.","realm":"Server"}},
{"function":{"name":"PersistenceLoad","parent":"SANDBOX","type":"hook","ishook":true,"description":"Called when persistent props are loaded.","realm":"Server"}},
{"function":{"name":"PaintWorldTips","parent":"SANDBOX","type":"hook","ishook":true,"description":{"text":"Called from  to draw world tips. By default, enabling cl_drawworldtooltips will stop world tips from being drawn here.\nSee  for more information.","page":["GM:HUDPaint","Global.AddWorldTip"],"br":"","note":{"text":"This cannot be used with","page":"hook.Add"}},"realm":"Client","predicted":"No"}},
{"function":{"name":"ContextMenuCreated","parent":"SANDBOX","type":"hook","ishook":true,"description":"Called when the context menu is created.","realm":"Client","args":{"arg":{"text":"The created context menu panel","name":"g_ContextMenu","type":"Panel"}}}},
{"function":{"name":"CanTool","parent":"SANDBOX","type":"hook","ishook":true,"description":"Called when a player attempts to fire their tool gun. Return true to specifically allow the attempt, false to block it.","realm":"Shared","predicted":"Yes","args":{"arg":[{"text":"The player who attempted to use their toolgun.","name":"ply","type":"Player"},{"text":"A trace from the players eye to where in the world their crosshair/cursor is pointing. See","name":"tr","type":"table","page":"Structures/TraceResult"},{"text":"The tool mode the player currently has selected.","name":"tool","type":"string"}]},"rets":{"ret":{"text":"Can use toolgun or not.","name":"","type":"boolean"}}},"example":{"description":"Stops players from removing doors.","code":"function GM:CanTool( ply, tr, tool )\n   if tool == \"remover\" and IsValid( tr.Entity ) and tr.Entity:GetClass() == \"prop_door_rotating\" then\n      return false\n   end\nend"}},
{"function":{"name":"CanProperty","parent":"SANDBOX","type":"hook","ishook":true,"description":"Controls if a property can be used or not.","realm":"Shared","predicted":"Yes","args":{"arg":[{"text":"Player, that tried to use the property","name":"ply","type":"Player"},{"text":"Class of the property that is tried to use, for example - bonemanipulate","name":"property","type":"string","warning":{"text":"This is not guaranteed to be the internal property name used in !","page":"properties.Add"}},{"text":"The entity, on which property is tried to be used on","name":"ent","type":"Entity"}]},"rets":{"ret":{"text":"Return false to disallow using that property","name":"","type":"boolean"}}},"example":{"description":"Stops non-admins from using the remover property.","code":"hook.Add( \"CanProperty\", \"block_remover_property\", function( ply, property, ent )\n\tif ( !ply:IsAdmin() && property == \"remover\" ) then return false end\nend )"}},
{"function":{"name":"CanDrive","parent":"SANDBOX","type":"hook","ishook":true,"description":"Called when a player attempts to drive a prop via Prop Drive","realm":"Shared","predicted":"Yes","args":{"arg":[{"text":"The player who attempted to use Prop Drive.","name":"ply","type":"Player"},{"text":"The entity the player is attempting to drive","name":"ent","type":"Entity"}]},"rets":{"ret":{"text":"Return true to allow driving, false to disallow","name":"","type":"boolean"}}},"example":{"description":"Stops nonadmins from using Prop Drive","code":"function GM:CanDrive( ply, ent )\n\tif !ply:IsAdmin() then return false end\nend"}},
{"function":{"name":"ContentSidebarSelection","parent":"SANDBOX","type":"hook","ishook":true,"description":"Called when player selects an item on the spawnmenu sidebar at the left.","realm":"Client","args":{"arg":[{"text":"The panel that holds spawnicons and the sidebar of spawnmenu","name":"parent","type":"Panel"},{"text":"The item player selected","name":"node","type":"Panel"}]}}},
{"function":{"name":"AddToolMenuTabs","parent":"SANDBOX","type":"hook","ishook":true,"description":"This hook is used to add new tool tabs to spawnmenu.","realm":"Client"},"example":{"description":"Add a new tab and a few categories into it.","code":"hook.Add( \"AddToolMenuTabs\", \"myHookClass\", function()\n\tspawnmenu.AddToolTab(\"myTab\", \"My Tab\", \"icon16/shield.png\") -- Add a new tab\n\n\tspawnmenu.AddToolCategory(\"myTab\", \"myCategory\", \"My Category\") -- Add a category into that new tab\n\n\tspawnmenu.AddToolMenuOption( \"myTab\", \"myCategory\", \"myEntry\", \"My Entry\", \"\", \"\", function( panel )\n\t\tpanel:AddControl( \"Header\", { Text = \"Hello!\" } )\n\tend ) -- Add an entry to our new category\nend)"}},
{"function":{"name":"AddGamemodeToolMenuTabs","parent":"SANDBOX","type":"hook","ishook":true,"description":{"text":"This hook is used to add default tool tabs to spawnmenu.\n\nDo not override or hook this function, use !","internal":"","page":"SANDBOX:AddToolMenuTabs"},"realm":"Client"}},
{"function":{"name":"AddToolMenuCategories","parent":"SANDBOX","type":"hook","ishook":true,"description":"This hook is used to add new categories to spawnmenu tool tabs.","realm":"Client"},"example":{"description":"Adds default categories to Utilities tab in spawnmenu.","code":"local function CreateUtilitiesCategories()\n\n        spawnmenu.AddToolCategory( \"Utilities\", \"User\", \"#spawnmenu.utilities.user\" )\n        spawnmenu.AddToolCategory( \"Utilities\", \"Admin\", \"#spawnmenu.utilities.admin\" )\n\nend        \nhook.Add( \"AddToolMenuCategories\", \"CreateUtilitiesCategories\", CreateUtilitiesCategories )"}},
{"function":{"name":"PaintNotes","parent":"SANDBOX","type":"hook","ishook":true,"description":{"text":"Called from ; does nothing by default.","page":"GM:HUDPaint","note":{"text":"This cannot be used with","page":"hook.Add"}},"realm":"Client","predicted":"No"}},
{"function":{"name":"AddGamemodeToolMenuCategories","parent":"SANDBOX","type":"hook","ishook":true,"description":{"text":"This hook is used to add default categories to spawnmenu tool tabs.\n\nDo not override or hook this function, use !","internal":"","page":"SANDBOX:AddToolMenuCategories"},"realm":"Client"}},
{"function":{"name":"ViewModelChanged","parent":"PLAYER","type":"hook","ishook":true,"description":"Called when the player changes their weapon to another one causing their viewmodel model to change","realm":"Client","file":{"text":"gamemodes/base/gamemode/player_class/player_default.lua","line":"92"},"args":{"arg":[{"text":"The viewmodel that is changing","name":"viewmodel","type":"Entity"},{"text":"The old model","name":"old","type":"string"},{"text":"The new model","name":"new","type":"string"}]}}},
{"function":{"name":"Spawn","parent":"PLAYER","type":"hook","ishook":true,"description":"Called when the player spawns","realm":"Server","file":{"text":"gamemodes/base/gamemode/player_class/player_default.lua","line":"49"}}},
{"function":{"name":"SetupDataTables","parent":"PLAYER","type":"hook","ishook":true,"description":"Setup the network table accessors.","realm":"Shared","predicted":"No","file":{"text":"gamemodes/base/gamemode/player_class/player_default.lua","line":"31"}},"example":{"description":"Example usage.","code":"function PLAYER:SetupDataTables()\n\tself.Player:NetworkVar( \"Int\", 0, \"Money\" )\nend"}},
{"function":{"name":"StartMove","parent":"PLAYER","type":"hook","ishook":true,"description":{"text":"Called from .","page":"GM:CreateMove","warning":{"text":"This hook will not work if the current gamemode overrides  and does not call this hook.","page":"GM:SetupMove"},"note":{"text":"This hook is run after the  has been called.","page":"drive.StartMove"}},"realm":"Client","predicted":"No","file":{"text":"gamemodes/base/gamemode/shared.lua","line":"197"},"args":{"arg":[{"name":"mv","type":"CMoveData"},{"name":"cmd","type":"CUserCmd"}]},"rets":{"ret":{"text":"Return true to prevent default action","name":"","type":"boolean"}}}},
{"function":{"name":"PostDrawViewModel","parent":"PLAYER","type":"hook","ishook":true,"description":"Called after the viewmodel has been drawn","realm":"Client","file":{"text":"gamemodes/base/gamemode/player_class/player_default.lua","line":"112"},"args":{"arg":[{"text":"The viewmodel","name":"viewmodel","type":"Entity"},{"text":"The weapon","name":"weapon","type":"Entity"}]}}},
{"function":{"name":"PreDrawViewModel","parent":"PLAYER","type":"hook","ishook":true,"description":"Called before the viewmodel is drawn","realm":"Client","file":{"text":"gamemodes/base/gamemode/player_class/player_default.lua","line":"102"},"args":{"arg":[{"text":"The viewmodel","name":"viewmodel","type":"Entity"},{"text":"The weapon","name":"weapon","type":"Entity"}]}}},
{"function":{"name":"SetModel","parent":"PLAYER","type":"hook","ishook":true,"description":{"text":"Called when we need to set player model from the class.","note":{"text":"This will only be called if you have not overridden  or call this function from it or anywhere else using","page":["GM:PlayerSetModel","player_manager.RunClass"]}},"realm":"Server","predicted":"No"}},
{"function":{"name":"Move","parent":"PLAYER","type":"hook","ishook":true,"description":{"text":"Called from .","page":"GM:Move","warning":{"text":"This hook will not work if the current gamemode overrides  and does not call this hook.","page":"GM:Move"},"note":{"text":"This hook is run after the  has been called.","page":"drive.Move"}},"realm":"Client","file":{"text":"gamemodes/base/gamemode/shared.lua","line":"197"},"args":{"arg":{"text":"Movement information","name":"mv","type":"CMoveData"}},"rets":{"ret":{"text":"Return true to prevent default action","name":"","type":"boolean"}}}},
{"function":{"name":"Loadout","parent":"PLAYER","type":"hook","ishook":true,"description":"Called on spawn to give the player their default loadout","realm":"Server","file":{"text":"gamemodes/base/gamemode/player_class/player_default.lua","line":"58"}}},
{"function":{"name":"Init","parent":"PLAYER","type":"hook","ishook":true,"description":"Called when the class object is created","realm":"Shared","file":{"text":"gamemodes/base/gamemode/player_class/player_default.lua","line":"40"}}},
{"function":{"name":"GetHandsModel","parent":"PLAYER","type":"hook","ishook":true,"description":"Called on player spawn to determine which hand model to use","realm":"Client","predicted":"No","file":{"text":"gamemodes/base/gamemode/player_class/player_default.lua","line":"121"},"rets":{"ret":{"text":"A table containing info about view model hands model to be set. See examples.","name":"","type":"table"}}},"example":{"description":"Default action of player_default class","code":"function PLAYER:GetHandsModel()\n\n\t-- return { model = \"models/weapons/c_arms_cstrike.mdl\", skin = 1, body = \"0100000\" }\n\n\tlocal playermodel = player_manager.TranslateToPlayerModelName( self.Player:GetModel() )\n\treturn player_manager.TranslatePlayerHands( playermodel )\n\nend","output":"View model hands model is chosen according to players player model."}},
{"function":{"name":"FinishMove","parent":"PLAYER","type":"hook","ishook":true,"description":{"text":"Called from .","page":"GM:FinishMove","warning":{"text":"This hook will not work if the current gamemode overrides  and does not call this hook.","page":"GM:FinishMove"},"note":{"text":"This hook is run after the  has been called.","page":"drive.FinishMove"}},"realm":"Client","file":{"text":"gamemodes/base/gamemode/shared.lua","line":"207"},"args":{"arg":{"name":"mv","type":"CMoveData"}},"rets":{"ret":{"text":"Return true to prevent default action","name":"","type":"boolean"}}}},
{"function":{"name":"Think","parent":"PANEL","type":"hook","ishook":true,"description":{"text":"Called every frame while  is true.","page":"Panel:IsVisible"},"realm":"Client","predicted":"No"}},
{"function":{"name":"PreAutoRefresh","parent":"PANEL","type":"hook","ishook":true,"description":{"text":"Only works on elements defined with  and only if the panel has **AllowAutoRefresh** set to true.\n\nCalled when  is called with this panel's class name before applying changes to this panel.\n\nSee also","page":["derma.DefineControl","derma.DefineControl","PANEL:PostAutoRefresh"]},"realm":"Client","predicted":"No"}},
{"function":{"name":"PostAutoRefresh","parent":"PANEL","type":"hook","ishook":true,"description":{"text":"Only works on elements defined with  and only if the panel has **AllowAutoRefresh** set to true.\n\nCalled after  is called with panel's class name.\n\nSee also","page":["derma.DefineControl","derma.DefineControl","PANEL:PreAutoRefresh"]},"realm":"Client","predicted":"No"}},
{"function":{"name":"PerformLayout","parent":"PANEL","type":"hook","ishook":true,"description":{"text":"Called whenever the panels layout was invalidated. This means all child panels must be re-positioned to fit the possibly new size of this panel.","warning":{"text":"Do **NOT** call this function directly. Use  instead!","page":"Panel:InvalidateLayout"}},"realm":"Client","predicted":"No","args":{"arg":[{"text":"The panels current width.","name":"width","type":"number"},{"text":"The panels current height.","name":"height","type":"number"}]}}},
{"function":{"name":"PaintOver","parent":"PANEL","type":"hook","ishook":true,"description":"Called whenever the panel and all its children were drawn, return true to override the default drawing.","realm":"Client","args":{"arg":[{"text":"The panels current width.","name":"width","type":"number"},{"text":"The panels current height.","name":"height","type":"number"}]},"rets":{"ret":{"text":"Should we disable default PaintOver rendering? This is useful in case with Derma panels that use Derma hooks.","name":"","type":"boolean"}}}},
{"function":{"name":"Paint","parent":"PANEL","type":"hook","ishook":true,"description":{"text":"Called whenever the panel should be drawn. \n\nYou can create panels with a customized appearance by overriding their Paint() function, which will prevent the default appearance from being drawn.","note":[{"text":"Render operations from the  (and consequentially the ) are always offset by the global position of this panel, as seen in the example below","page":["surface","draw"]},"This hook will not run if the panel is completely off the screen. The hook will still run however if any parts of the panel are still on screen."]},"realm":"Client","predicted":"No","args":{"arg":[{"text":"The panel's width.","name":"width","type":"number"},{"text":"The panel's height.","name":"height","type":"number"}]},"rets":{"ret":{"text":"Returning true prevents the background from being drawn.","name":"","type":"boolean"}}},"example":{"description":"Creates a DPanel and overrides its Paint() function to draw a 100x100 pixel black rounded box in the center of the screen.","code":"local panel = vgui.Create( \"DPanel\" )\npanel:SetSize( 100, 100 )\npanel:SetPos( ScrW() / 2 - 50, ScrH() / 2 - 50 )\n\nfunction panel:Paint( w, h )\n    draw.RoundedBox( 8, 0, 0, w, h, Color( 0, 0, 0 ) )\nend"}},
{"function":{"name":"ContextMenuOpen","parent":"SANDBOX","type":"hook","ishook":true,"description":"Called when the context menu is trying to be opened. Return false to disallow it.","realm":"Client","predicted":"No","rets":{"ret":{"text":"Allow menu to open.","name":"","type":"boolean"}}}},
{"function":{"name":"OnStopDragging","parent":"PANEL","type":"hook","ishook":true,"description":{"text":"Called by  when the panel object is released after being dragged.","internal":"","page":"Panel:DragMouseRelease"},"realm":"Client"}},
{"function":{"name":"OnStartDragging","parent":"PANEL","type":"hook","ishook":true,"description":{"text":"Called by  when the panel starts being dragged.","internal":"","page":"dragndrop.StartDragging"},"realm":"Client"}},
{"function":{"name":"OnSizeChanged","parent":"PANEL","type":"hook","ishook":true,"description":{"text":"Called just after the panel size changes.\n\nAll size functions will return the new values when this hook is called.","warning":"Changing the panel size in this hook will cause an infinite loop!"},"realm":"Client","predicted":"No","args":{"arg":[{"text":"The new width of the panel","name":"newWidth","type":"number"},{"text":"The new height of the panel","name":"newHeight","type":"number"}]}}},
{"function":{"name":"OnRemove","parent":"PANEL","type":"hook","ishook":true,"description":"Called when the panel is about to be removed.","realm":"Client"}},
{"function":{"name":"OnScreenSizeChanged","parent":"PANEL","type":"hook","ishook":true,"description":{"text":"Called when the player's screen resolution of the game changes.\n\n and  will return the new values when this hook is called.","page":["Global.ScrW","Global.ScrH"]},"realm":"Client","predicted":"No","args":{"arg":[{"text":"The previous width  of the game's window","name":"oldWidth","type":"number"},{"text":"The previous height of the game's window","name":"oldHeight","type":"number"}]}}},
{"function":{"name":"OnMouseWheeled","parent":"PANEL","type":"hook","ishook":true,"description":"Called whenever the mouse wheel was used.","realm":"Client","predicted":"No","args":{"arg":{"text":"The scroll delta, indicating how much the user turned the mouse wheel.","name":"scrollDelta","type":"number"}},"rets":{"ret":{"text":"Return true to suppress default action.","name":"","type":"boolean"}}}},
{"function":{"name":"OnMouseReleased","parent":"PANEL","type":"hook","ishook":true,"description":"Called whenever a mouse key was released while the panel is focused.","realm":"Client","predicted":"No","args":{"arg":{"text":"They key code of the key released, see .","name":"keyCode","type":"number","page":"Enums/MOUSE"}},"rets":{"ret":{"text":"Return true to suppress default action.","name":"","type":"boolean"}}}},
{"function":{"name":"OnMousePressed","parent":"PANEL","type":"hook","ishook":true,"description":"Called whenever a mouse key was pressed while the panel is focused.","realm":"Client","predicted":"No","args":{"arg":{"text":"They key code of the key pressed, see .","name":"keyCode","type":"number","page":"Enums/MOUSE"}},"rets":{"ret":{"text":"Return true to suppress default action such as right click opening edit menu for .","name":"","type":"boolean","page":"DTextEntry"}}}},
{"function":{"name":"OnKeyCodeReleased","parent":"PANEL","type":"hook","ishook":true,"description":{"text":"Called whenever a keyboard key was released while the panel is focused.","bug":{"text":"This is not run for TILDE/\"toggleconsole\" binding.","issue":"2886"}},"realm":"Client","predicted":"No","args":{"arg":{"text":"The key code of the released key, see .","name":"keyCode","type":"number","page":"Enums/KEY"}},"rets":{"ret":{"text":"Return true to suppress default action.","name":"","type":"boolean"}}}},
{"function":{"name":"OnKeyCodePressed","parent":"PANEL","type":"hook","ishook":true,"description":{"text":"Called whenever a keyboard key was pressed while the panel is focused.","bug":{"text":"This is not run for ESC/\"cancelselect\" binding.","issue":"2886"}},"realm":"Client","predicted":"No","args":{"arg":{"text":"The key code of the pressed key, see .","name":"keyCode","type":"number","page":"Enums/KEY"}},"rets":{"ret":{"text":"Return true to suppress default action.","name":"","type":"boolean"}}}},
{"function":{"name":"OnFocusChanged","parent":"PANEL","type":"hook","ishook":true,"description":{"text":"Called whenever the panel gained or lost focus.","note":{"text":"will only be updated on the next frame and will return the \"old\" value at the time this hook is run. Same goes for .","page":["Panel:HasFocus","vgui.GetKeyboardFocus"]}},"realm":"Client","predicted":"No","hidepredictionwarning":"No","args":{"arg":{"text":"Is the focus was gained ( true ) or lost ( false )","name":"gained","type":"boolean"}}}},
{"function":{"name":"OnDrop","parent":"PANEL","type":"hook","ishook":true,"description":{"text":"We're being dropped on something\nWe can create a new panel here and return it, so that instead of dropping us - it drops the new panel instead! We remain where we are!\n\nOnly works for panels derived from .","page":"DDragBase"},"realm":"Client","predicted":"No","file":{"text":"lua/includes/extensions/client/panel/dragdrop.lua","line":"384"},"rets":{"ret":{"text":"The panel to drop instead of us. By default you should return self.","name":"","type":"Panel"}}}},
{"function":{"name":"OnDocumentReady","parent":"PANEL","type":"hook","ishook":true,"description":"Called by HTML panels when the panel's DOM has been set up. You can run JavaScript in here.","realm":"Client","args":{"arg":{"text":"The URL of the current page.","name":"url","type":"string"}}}},
{"function":{"name":"OnDeactivate","parent":"PANEL","type":"hook","ishook":true,"description":{"text":"Called when we are deactivated during level load. Used by the loading screen panel.","internal":""},"realm":"Client and Menu","predicted":"No"}},
{"function":{"name":"OnCursorExited","parent":"PANEL","type":"hook","ishook":true,"description":"Called whenever the cursor left the panels bounds.","realm":"Client"}},
{"function":{"name":"OnCursorExited","parent":"PANEL","type":"hook","ishook":true,"description":"Called whenever the cursor left the panels bounds.","realm":"Client"}},
{"function":{"name":"OnCursorEntered","parent":"PANEL","type":"hook","ishook":true,"description":"Called whenever the cursor entered the panels bounds.","realm":"Client"}},
{"function":{"name":"OnChildViewCreated","parent":"PANEL","type":"hook","ishook":true,"description":"Called by HTML panels when the page attempts to open a new child view (such as a popup or new tab).","realm":"Client","args":{"arg":[{"text":"The URL of the page requesting to create a child.","name":"sourceURL","type":"string"},{"text":"The URL of the requested child.","name":"targetURL","type":"string"},{"text":"True if the requested view is a popup.","name":"isPopup","type":"boolean"}]}}},
{"function":{"name":"OnChildAdded","parent":"PANEL","type":"hook","ishook":true,"description":{"text":"Called whenever a child was parented to the panel.","bug":{"text":"This is called before the panel's metatable is set.","issue":"2759"}},"realm":"Client","predicted":"No","args":{"arg":{"text":"The child which was added.","name":"child","type":"Panel"}}}},
{"function":{"name":"OnChildRemoved","parent":"PANEL","type":"hook","ishook":true,"description":"Called whenever a child of the panel is about to removed.","realm":"Client","args":{"arg":{"text":"The child which is about to be removed.","name":"child","type":"Panel"}}}},
{"function":{"name":"OnChangeTitle","parent":"PANEL","type":"hook","ishook":true,"description":"Called by HTML panels when the title of the loaded page has been changed.","realm":"Client","args":{"arg":{"text":"The new title of the page.","name":"newTitle","type":"string"}}}},
{"function":{"name":"OnChangeTargetURL","parent":"PANEL","type":"hook","ishook":true,"description":"Called by HTML panels when the target URL of the frame has changed, this happens when you hover over a link.","realm":"Client","args":{"arg":{"text":"New target URL.","name":"targetURL","type":"string"}}}},
{"function":{"name":"OnActivate","parent":"PANEL","type":"hook","ishook":true,"description":{"text":"Called when we are activated during level load. Used by the loading screen panel.","internal":""},"realm":"Client and Menu","predicted":"No"}},
{"function":{"name":"OnActivate","parent":"PANEL","type":"hook","ishook":true,"description":{"text":"Called when we are activated during level load. Used by the loading screen panel.","internal":""},"realm":"Client and Menu","predicted":"No"}},
{"function":{"name":"Init","parent":"PANEL","type":"hook","ishook":true,"description":"Called when the panel is created. This is called for each base type that the panel has.","realm":"Client","predicted":"No"},"example":{"description":"Shows how this method is called recursively for each base type a panel has.","code":"local BASE = {}\nfunction BASE:Init()\n\tprint(\"Base Init Called\")\nend\n\n\nlocal PANEL = {}\nfunction PANEL:Init()\n\tprint(\"Panel Init Called\")\nend\n\n\nvgui.Register(\"MyBase\", BASE, \"DFrame\")\nvgui.Register(\"MyPanel\", PANEL, \"MyBase\")\n\nlocal panel = vgui.Create(\"MyPanel\")","output":"Base Init Called\n\nPanel Init Called"}},
{"function":{"name":"DroppedOn","parent":"PANEL","type":"hook","ishook":true,"description":{"text":"Called when this panel is dropped onto another panel.\n\nOnly works for panels derived from .","page":"DDragBase"},"realm":"Client","predicted":"No","file":{"text":"lua/includes/extensions/client/panel/dragdrop.lua","line":"375"},"args":{"arg":{"text":"The panel we are dropped onto","name":"pnl","type":"Panel"}}}},
{"function":{"name":"GenerateExample","parent":"PANEL","type":"hook","ishook":true,"description":"Called when the panel should generate example use case / example code to use for this panel. Used in the panel opened by **derma_controls** console command.","realm":"Client","predicted":"No","hidepredictionwarning":"No","args":{"arg":[{"text":"The classname of the panel to generate example for. This will be the class name of your panel.","name":"class","type":"string"},{"text":"A  to add your example to. See examples below.","name":"dpropertysheet","type":"Panel","page":"DPropertySheet"},{"text":"Width of the property sheet?","name":"width","type":"number"},{"text":"Width of the property sheet?","name":"height","type":"number"}]}},"example":{"description":"Example usage of this hook from DButton's code.","code":"function PANEL:GenerateExample( ClassName, PropertySheet, Width, Height )\n\n\tlocal ctrl = vgui.Create( ClassName )\n\tctrl:SetText( \"Example Button\" )\n\tctrl:SetWide( 200 )\n\n\tPropertySheet:AddSheet( ClassName, ctrl, nil, true, true )\n\nend\n\nderma.DefineControl( \"DButton\", \"A standard Button\", PANEL, \"DLabel\" )","output":"A tab named \"DButton\" will appear in **derma_controls** menu."}},
{"function":{"name":"ApplySchemeSettings","parent":"PANEL","type":"hook","ishook":true,"description":"Called whenever the panel should apply its scheme (colors, fonts, style).\n\nIt is called a few frames after Panel's creation once.","realm":"Client","predicted":"No"}},
{"function":{"name":"DragHoverClick","parent":"PANEL","type":"hook","ishook":true,"description":{"text":"Called when an object is dragged and hovered over this panel for 0.1 seconds.\n\nThis is used by  and , for example to open a tab or expand a node when an object is hovered over it.","page":["DPropertySheet","DTree"]},"realm":"Client","predicted":"No","args":{"arg":{"text":"The time the object was hovered over this panel.","name":"hoverTime","type":"number"}}}},
{"function":{"name":"AnimationThink","parent":"PANEL","type":"hook","ishook":true,"description":{"text":"Called every frame unless  is set to false. Similar to , but can be disabled by  as explained below.\n\nIf you are overriding this, you must call  every frame, else animations will cease to work.\n\nIf you want to \"disable\" this hook with , you must call it after defining this hook. Once disabled, a custom hook **will not** be re-enabled by  again - the hook will have to be re-defined.","page":["Panel:IsVisible","PANEL:Think","Panel:SetAnimationEnabled","Panel:AnimationThinkInternal","Panel:SetAnimationEnabled","Panel:SetAnimationEnabled"]},"realm":"Client","predicted":"No"}},
{"function":{"name":"OnUnStuck","parent":"NEXTBOT","type":"hook","ishook":true,"description":"Called when the bot thinks it is un-stuck.","realm":"Server","predicted":"No"}},
{"function":{"name":"RunBehaviour","parent":"NEXTBOT","type":"hook","ishook":true,"description":{"text":"A hook called to process nextbot logic.\n\nThis hook runs in a  by default. It will only be called if  is not overriden.","page":["coroutine","NEXTBOT:BehaveStart"]},"realm":"Server","predicted":"No"},"example":{"description":"Example usage of the hook to make NextBot logic from the Example NextBot NPC shipped with the game.","code":"function ENT:RunBehaviour()\n\n\twhile ( true ) do\n\n\t\t-- walk somewhere random\n\t\tself:StartActivity( ACT_WALK ) -- walk anims\n\t\tself.loco:SetDesiredSpeed( 100 ) -- walk speeds\n\t\tself:MoveToPos( self:GetPos() + Vector( math.Rand( -1, 1 ), math.Rand( -1, 1 ), 0 ) * 200 ) -- walk to a random place within about 200 units (yielding)\n\n\t\tself:StartActivity( ACT_IDLE ) -- revert to idle activity\n\n\t\tself:PlaySequenceAndWait( \"idle_to_sit_ground\" ) -- Sit on the floor\n\t\tself:SetSequence( \"sit_ground\" ) -- Stay sitting\n\t\tcoroutine.wait( self:PlayScene( \"scenes/eli_lab/mo_gowithalyx01.vcd\" ) ) -- play a scene and wait for it to finish before progressing\n\t\tself:PlaySequenceAndWait( \"sit_ground_to_idle\" ) -- Get up\n\n\t\t-- find the furthest away hiding spot\n\t\tlocal pos = self:FindSpot( \"random\", { type = 'hiding', radius = 5000 } )\n\n\t\t-- if the position is valid\n\t\tif ( pos ) then\n\t\t\tself:StartActivity( ACT_RUN ) -- run anim\n\t\t\tself.loco:SetDesiredSpeed( 200 ) -- run speed\n\t\t\tself:PlayScene( \"scenes/npc/female01/watchout.vcd\" ) -- shout something while we run just for a laugh\n\t\t\tself:MoveToPos( pos ) -- move to position (yielding)\n\t\t\tself:PlaySequenceAndWait( \"fear_reaction\" ) -- play a fear animation\n\t\t\tself:StartActivity( ACT_IDLE ) -- when we finished, go into the idle anim\n\t\telse\n\n\t\t\t-- some activity to signify that we didn't find shit\n\n\t\tend\n\n\t\tcoroutine.yield()\n\n\tend\n\n\nend"}},
{"function":{"name":"ActionSignal","parent":"PANEL","type":"hook","ishook":true,"description":{"text":"Called whenever a panel receives a command signal from one of its children.\n\nThis hook is called when using , when clicking a  with  set, and when clicking text within a  panel that is marked as click-able.","page":["Panel:Command","Button","Panel:SetCommand","RichText"]},"realm":"Client","args":{"arg":[{"text":"The name of the signal, usually the sender of the signal or the command name.","name":"signalName","type":"string"},{"text":"The value of the signal, usually a command argument.","name":"signalValue","type":"string"}]}}},
{"function":{"name":"OnStuck","parent":"NEXTBOT","type":"hook","ishook":true,"description":"Called when the bot thinks it is stuck.","realm":"Server","predicted":"No"},"example":{"description":"Kills the bot when getting stuck, using a new damageinfo object.","code":"function ENT:OnStuck()\n\n\tlocal dmginfo = DamageInfo()\n\tdmginfo:SetAttacker( self )\n\n\tself:OnKilled( dmginfo )\n\t\nend"}},
{"function":{"name":"OnTraceAttack","parent":"NEXTBOT","type":"hook","ishook":true,"description":{"text":"Called when a trace attack is done against the nextbot, allowing override of the damage being dealt by altering the .\n\nThis is called before .","page":["CTakeDamageInfo","NEXTBOT:OnInjured"]},"realm":"Server","predicted":"No","args":{"arg":[{"text":"The damage info","name":"info","type":"CTakeDamageInfo"},{"text":"The direction the damage goes in","name":"dir","type":"Vector"},{"text":"The  of the attack, containing the hitgroup.","name":"trace","type":"table","page":"Structures/TraceResult"}]}}},
{"function":{"name":"OnOtherKilled","parent":"NEXTBOT","type":"hook","ishook":true,"description":"Called when someone else or something else has been killed.","realm":"Server","predicted":"No","args":{"arg":[{"text":"The victim that was killed","name":"victim","type":"Entity"},{"text":"The damage info","name":"info","type":"CTakeDamageInfo"}]}}},
{"function":{"name":"OnOtherKilled","parent":"NEXTBOT","type":"hook","ishook":true,"description":"Called when someone else or something else has been killed.","realm":"Server","predicted":"No","args":{"arg":[{"text":"The victim that was killed","name":"victim","type":"Entity"},{"text":"The damage info","name":"info","type":"CTakeDamageInfo"}]}}},
{"function":{"name":"OnLeaveGround","parent":"NEXTBOT","type":"hook","ishook":true,"description":"Called when the bot's feet leave the ground - for whatever reason.","realm":"Server","predicted":"No","args":{"arg":{"text":"The entity the bot \"jumped\" from.","name":"ent","type":"Entity"}}}},
{"function":{"name":"OnLandOnGround","parent":"NEXTBOT","type":"hook","ishook":true,"description":"Called when the bot's feet return to the ground.","realm":"Server","predicted":"No","args":{"arg":{"text":"The entity the nextbot has landed on.","name":"ent","type":"Entity"}}}},
{"function":{"name":"OnInjured","parent":"NEXTBOT","type":"hook","ishook":true,"description":"Called when the bot gets hurt. This is a good place to play hurt sounds or voice lines.","realm":"Server","predicted":"No","args":{"arg":{"text":"The damage info","name":"info","type":"CTakeDamageInfo"}}}},
{"function":{"name":"OnKilled","parent":"NEXTBOT","type":"hook","ishook":true,"description":"Called when the bot gets killed.","realm":"Server","predicted":"No","args":{"arg":{"text":"The damage info","name":"info","type":"CTakeDamageInfo"}}},"example":[{"description":"Example of NPC becoming a ragdoll after death and sending death notification to everybodys killfeed.","code":"function ENT:OnKilled( dmginfo )\n\n\thook.Call( \"OnNPCKilled\", GAMEMODE, self, dmginfo:GetAttacker(), dmginfo:GetInflictor() )\n\n\tself:BecomeRagdoll( dmginfo )\n\nend"},{"description":"Removes the body after 5 seconds, to prevent having lots of bodies laying around after a while.","code":"function ENT:OnKilled( dmginfo )\n\t\n\thook.Call( \"OnNPCKilled\", GAMEMODE, self, dmginfo:GetAttacker(), dmginfo:GetInflictor() )\n\t\n\tlocal body = ents.Create( \"prop_ragdoll\" )\n\tbody:SetPos( self:GetPos() )\n\tbody:SetModel( self:GetModel() )\n\tbody:Spawn()\n\t\n\tself:Remove()\n\t\n\ttimer.Simple( 5, function()\n\t\n\t\tbody:Remove()\n\t\t\n\tend )\n\nend","output":"The body disappears after 5 seconds."}]},
{"function":{"name":"OnIgnite","parent":"NEXTBOT","type":"hook","ishook":true,"description":"Called when the bot is ignited.","realm":"Server","predicted":"No"}},
{"function":{"name":"OnContact","parent":"NEXTBOT","type":"hook","ishook":true,"description":"Called when the nextbot touches another entity.","realm":"Server","args":{"arg":{"text":"The entity the nextbot came in contact with.","name":"ent","type":"Entity"}}}},
{"function":{"name":"BodyUpdate","parent":"NEXTBOT","type":"hook","ishook":true,"description":"Called to update the bot's animation.","realm":"Server","predicted":"No"}},
{"function":{"name":"BehaveUpdate","parent":"NEXTBOT","type":"hook","ishook":true,"description":"Called to update the bot's behaviour.","realm":"Server","predicted":"No","args":{"arg":{"text":"How long since the last update","name":"interval","type":"number"}}}},
{"function":{"name":"BehaveStart","parent":"NEXTBOT","type":"hook","ishook":true,"description":{"text":"Called to initialize the behaviour.\n\nThis is called automatically when the NextBot is created, you should not call it manually.","note":{"text":"You shouldn't override this unless you know what you are doing - it's used to kick off the  that runs the bot's behaviour. See  instead.","page":["coroutine","NEXTBOT:RunBehaviour"]}},"realm":"Server","predicted":"No"}},
{"function":{"name":"WorkshopStart","parent":"GM","type":"hook","ishook":true,"description":"Called when downloading content from Steam workshop begins. Used by default to show fancy workshop downloading panel.\n\nThe order of Workshop hooks is this:\n* WorkshopStart\n* WorkshopDownloadTotals\n* * These are called for each new item:\n*** WorkshopDownloadFile\n*** WorkshopDownloadProgress - This is called until the file is finished\n*** WorkshopDownloadedFile\n* WorkshopEnd","realm":"Menu","predicted":"No","file":{"text":"lua/menu/mount/mount.lua","line":"5-11"}}},
{"function":{"name":"WorkshopSubscriptionsProgress","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called by the engine when the game initially fetches subscriptions to be displayed on the bottom of the main menu screen.","internal":""},"realm":"Menu","predicted":"No","args":{"arg":[{"text":"Amount of subscribed addons that have info retrieved.","name":"num","type":"number"},{"text":"Total amount of subscribed addons that need their info retrieved.","name":"max","type":"number"}]}}},
{"function":{"name":"WorkshopExtractProgress","parent":"GM","type":"hook","ishook":true,"description":"Called while an addon from the Steam workshop is extracting. Used by default to update details on the fancy workshop download panel.","realm":"Menu","predicted":"No","file":{"text":"lua/menu/mount/mount.lua","line":"52-62"},"args":{"arg":[{"text":"Workshop ID of addon.","name":"id","type":"number"},{"text":"ID of addon's preview image.\n\n\n\nFor example, for **Extended Spawnmenu** addon, the image URL is\n\n```\nhttp://cloud-4.steamusercontent.com/ugc/702859018846106764/9E7E1946296240314751192DA0AD15B6567FF92D/\n```\n\nSo, the value of this argument would be **702859018846106764**.","name":"ImageID","type":"number"},{"text":"Name of addon.","name":"title","type":"string"},{"text":"Current bytes of addon extracted.","name":"percent","type":"number"}]}}},
{"function":{"name":"WorkshopEnd","parent":"GM","type":"hook","ishook":true,"description":"Called when downloading content from Steam workshop ends. Used by default to hide fancy workshop downloading panel.","realm":"Menu","predicted":"No","file":{"text":"lua/menu/mount/mount.lua","line":"13-19"}}},
{"function":{"name":"WorkshopDownloadTotals","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called after .","page":"GM:WorkshopStart"},"realm":"Menu","predicted":"No","file":{"text":"lua/menu/mount/mount.lua","line":"52-71"},"args":{"arg":[{"text":"Remaining addons to download","name":"remain","type":"number"},{"text":"Total addons needing to be downloaded","name":"total","type":"number"}]}}},
{"function":{"name":"WorkshopDownloadProgress","parent":"GM","type":"hook","ishook":true,"description":"Called while an addon from the Steam workshop is downloading. Used by default to update details on the fancy workshop download panel.","realm":"Menu","predicted":"No","file":{"text":"lua/menu/mount/mount.lua","line":"40-50"},"args":{"arg":[{"text":"Workshop ID of addon.","name":"id","type":"number"},{"text":"ID of addon's preview image.\n\n\n\nFor example, for **Extended Spawnmenu** addon, the image URL is\n\n```\nhttp://cloud-4.steamusercontent.com/ugc/702859018846106764/9E7E1946296240314751192DA0AD15B6567FF92D/\n```\n\nSo, the value of this argument would be **702859018846106764**.","name":"imageID","type":"number"},{"text":"Name of addon.","name":"title","type":"string"},{"text":"Current bytes of addon downloaded.","name":"downloaded","type":"number"},{"text":"Expected file size of addon in bytes.","name":"expected","type":"number"}]}}},
{"function":{"name":"WorkshopDownloadFile","parent":"GM","type":"hook","ishook":true,"description":"Called when an addon from the Steam workshop begins downloading. Used by default to place details on the workshop downloading panel.","realm":"Menu","predicted":"No","file":{"text":"lua/menu/mount/mount.lua","line":"21-30"},"args":{"arg":[{"text":"Workshop ID of addon.","name":"id","type":"number"},{"text":"ID of addon's preview image.\n\n\n\nFor example, for **Extended Spawnmenu** addon, the image URL is\n\n```\nhttp://cloud-4.steamusercontent.com/ugc/702859018846106764/9E7E1946296240314751192DA0AD15B6567FF92D/\n```\n\nSo, the value of this argument would be **702859018846106764**.","name":"imageID","type":"number"},{"text":"Name of addon.","name":"title","type":"string"},{"text":"File size of addon in bytes.","name":"size","type":"number"}]}}},
{"function":{"name":"WorkshopDownloadedFile","parent":"GM","type":"hook","ishook":true,"description":"Called when an addon from the Steam workshop finishes downloading. Used by default to update details on the workshop downloading panel.","realm":"Menu","predicted":"No","file":{"text":"lua/menu/mount/mount.lua","line":"32-38"},"args":{"arg":[{"text":"Workshop ID of addon.","name":"id","type":"number"},{"text":"Name of addon.","name":"title","type":"string"}]}}},
{"function":{"name":"WeaponEquip","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called as a weapon entity is picked up by a player.\n\nSee also .","page":"GM:PlayerDroppedWeapon","note":[{"text":"At the time when this hook is called  will return NULL. The owner is set on the next frame","page":"Entity:GetOwner"},{"text":"This will not be called when picking up a weapon you already have as the weapon will be removed and  will be called instead","page":"WEAPON:EquipAmmo"}]},"realm":"Server","predicted":"No","args":{"arg":[{"text":"The equipped weapon.","name":"weapon","type":"Weapon"},{"text":"The player that is picking up the weapon.","name":"owner","type":"Player"}]}},"example":{"description":"Drops the player's weapons as soon as they pick one up.","code":"hook.Add( \"WeaponEquip\", \"WeaponEquipExample\", function( wep, ply )\n\ttimer.Simple( 0, function() ply:DropWeapon( wep ) end )\nend )"}},
{"function":{"name":"VGUIMousePressed","parent":"GM","type":"hook","ishook":true,"description":"Called when a mouse button is pressed on a VGUI element or menu.","realm":"Client","predicted":"No","file":{"text":"lua/derma/derma_menus.lua","line":"71"},"args":{"arg":[{"text":"Panel that currently has focus.","name":"pnl","type":"Panel"},{"text":"The key that the player pressed using .","name":"mouseCode","type":"number","page":"Enums/MOUSE"}]}}},
{"function":{"name":"VGUIMousePressAllowed","parent":"GM","type":"hook","ishook":true,"description":"Called when user clicks on a VGUI panel.","realm":"Client","predicted":"No","args":{"arg":{"text":"The button that was pressed, see","name":"button","type":"number","page":"Enums/MOUSE"}},"rets":{"ret":{"text":"Return true if the mouse click should be ignored or not.","name":"","type":"boolean"}}}},
{"function":{"name":"VehicleMove","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called when you are driving a vehicle. This hook works just like .\n\nThis hook is called before  and will be called when  is not.","page":["GM:Move","GM:Move","GM:PlayerTick"]},"realm":"Shared","predicted":"Yes","hidepredictionwarning":"No","args":{"arg":[{"text":"Player who is driving the vehicle","name":"ply","type":"Player"},{"text":"The vehicle being driven","name":"veh","type":"Vehicle"},{"text":"Move data","name":"mv","type":"CMoveData"}]}}},
{"function":{"name":"VariableEdited","parent":"GM","type":"hook","ishook":true,"description":"Called when a variable is edited on an Entity (called by Edit Properties... menu)","realm":"Server","predicted":"No","args":{"arg":[{"text":"The entity being edited","name":"ent","type":"Entity"},{"text":"The player doing the editing","name":"ply","type":"Player"},{"text":"The name of the variable","name":"key","type":"string"},{"text":"The new value, as a string which will later be converted to its appropriate type","name":"val","type":"string"},{"text":"The edit table defined in","name":"editor","type":"table","page":"Entity:NetworkVar"}]}},"example":{"description":"From base/gamemode/variable_edit.lua","code":"function GM:VariableEdited( ent, ply, key, val, editor )\n    if ( !IsValid( ent ) ) then return end\n    if ( !IsValid( ply ) ) then return end\n    local CanEdit = hook.Run( \"CanEditVariable\", ent, ply, key, val, editor )\n    if ( !CanEdit ) then return end\n    ent:EditValue( key, val )\nend"}},
{"function":{"name":"UpdateAnimation","parent":"GM","type":"hook","ishook":true,"description":"Animation updates (pose params etc) should be done here.","realm":"Shared","predicted":"No","args":{"arg":[{"text":"The player to update the animation info for.","name":"ply","type":"Player"},{"text":"The player's velocity.","name":"velocity","type":"Vector"},{"text":"Speed of the animation - used for playback rate scaling.","name":"maxSeqGroundSpeed","type":"number"}]}}},
{"function":{"name":"TranslateActivity","parent":"GM","type":"hook","ishook":true,"description":"Allows you to translate player activities.","realm":"Shared","args":{"arg":[{"text":"The player","name":"ply","type":"Player"},{"text":"The activity. See","name":"act","type":"number","page":"Enums/ACT"}]},"rets":{"ret":{"text":"The new, translated activity","name":"","type":"number"}}}},
{"function":{"name":"Tick","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called every server tick. Serverside, this is similar to .","page":"GM:Think"},"realm":"Shared","predicted":"No"}},
{"function":{"name":"StartGame","parent":"GM","type":"hook","ishook":true,"description":"Called when you start a new game via the menu.","realm":"Menu","predicted":"No","file":{"text":"html/js/menu/control.NewGame.js","line":"148"}}},
{"function":{"name":"Think","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called every frame on client and every tick on server.\n\nSee  for a hook that runs every tick on both the client and server.","page":"GM:Tick","note":{"text":"This hook **WILL NOT** run if the server is empty, unless you set the  `sv_hibernate_think` to 1","page":"ConVar"}},"realm":"Shared","predicted":"No"}},
{"function":{"name":"StartEntityDriving","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called right before an entity starts driving. Overriding this hook will cause it to not call  and the player will not begin driving the entity.","page":"drive.Start"},"realm":"Shared","predicted":"No","args":{"arg":[{"text":"The entity that is going to be driven","name":"ent","type":"Entity"},{"text":"The player that is going to drive the entity","name":"ply","type":"Player"}]}}},
{"function":{"name":"StartCommand","parent":"GM","type":"hook","ishook":true,"description":{"text":"Allows you to change the players inputs before they are processed by the server.\n\n\n\n\nThis is basically a shared version of .","page":"GM:CreateMove","note":["This function is also called for bots, making it the best solution to control them so far",{"text":"This hook is predicted, but not by usual means, this hook is called when a  is generated on the client, and on the server when it is received, so it is necessary for this hook to be called clientside even on singleplayer","page":"CUserCmd"}]},"realm":"Shared","predicted":"Yes","hidepredictionwarning":"Disable automatic prediction warning","args":{"arg":[{"text":"The player","name":"ply","type":"Player"},{"text":"The usercommand","name":"ucmd","type":"CUserCmd"}]}},"example":{"description":"Example of how you'd control a bot using this hook.\n\nThe example causes all bots to go kill any players they can get to with crowbars.","code":"hook.Add( \"StartCommand\", \"StartCommandExample\", function( ply, cmd )\n\n\t-- If the player is not a bot or the bot is dead, do not do anything\n\t-- TODO: Maybe spawn the bot manually here if the bot is dead\n\tif ( !ply:IsBot() or !ply:Alive() ) then return end\n\n\t-- Clear any default movement or actions\n\tcmd:ClearMovement() \n\tcmd:ClearButtons()\n\n\t-- Bot has no enemy, try to find one\n\tif ( !IsValid( ply.CustomEnemy ) ) then\n\t\t-- Scan through all players and select one not dead\n\t\tfor id, pl in pairs( player.GetAll() ) do\n\t\t\tif ( !pl:Alive() or pl == ply ) then continue end -- Don't select dead players or self as enemies \n\t\t\tply.CustomEnemy = pl\n\t\tend\n\t\t-- TODO: Maybe add a Line Of Sight check so bots won't walk into walls to try to get to their target\n\t\t-- Or add path finding so bots can find their way to enemies\n\tend\n\n\t-- We failed to find an enemy, don't do anything\n\tif ( !IsValid( ply.CustomEnemy ) ) then return end\n\n\t-- Move forwards at the bots normal walking speed\n\tcmd:SetForwardMove( ply:GetWalkSpeed() )\n\n\t-- Aim at our enemy\n\tif ( ply.CustomEnemy:IsPlayer() ) then\n\t\tcmd:SetViewAngles( ( ply.CustomEnemy:GetShootPos() - ply:GetShootPos() ):GetNormalized():Angle() )\n\telse\n\t\tcmd:SetViewAngles( ( ply.CustomEnemy:GetPos() - ply:GetShootPos() ):GetNormalized():Angle() )\n\tend\n\n\t-- Give the bot a crowbar if the bot doesn't have one yet\n\tif ( SERVER and !ply:HasWeapon( \"weapon_crowbar\" ) ) then ply:Give( \"weapon_crowbar\" ) end\n\n\t-- Select the crowbar\n\tcmd:SelectWeapon( ply:GetWeapon( \"weapon_crowbar\" ) )\n\n\t-- Hold Mouse 1 to cause the bot to attack\n\tcmd:SetButtons( IN_ATTACK )\n\n\t-- Enemy is dead, clear our enemy so that we may acquire a new one\n\tif ( !ply.CustomEnemy:Alive() ) then\n\t\tply.CustomEnemy = nil\n\tend\n\nend )"}},
{"function":{"name":"StartChat","parent":"GM","type":"hook","ishook":true,"description":{"text":"Runs when the user tries to open the chat box.","bug":{"text":"Returning true won't stop the chatbox from taking VGUI focus.","issue":"855"}},"realm":"Client","predicted":"No","args":{"arg":{"text":"Whether the message was sent through team chat.","name":"isTeamChat","type":"boolean"}},"rets":{"ret":{"text":"Return true to hide the default chat box.","name":"","type":"boolean"}}},"example":{"code":"hook.Add( \"StartChat\", \"HasStartedTyping\", function( isTeamChat )\n\tif ( isTeamChat ) then\n\t\tprint( \"Player started typing a message in teamchat.\" )\n\telse\n\t\tprint( \"Player started typing a message.\" )\n\tend\nend )"}},
{"function":{"name":"ShutDown","parent":"GM","type":"hook","ishook":true,"description":"Called whenever the Lua environment is about to be shut down, for example on map change, or when the server is going to shut down.","realm":"Shared","predicted":"No"}},
{"function":{"name":"SpawniconGenerated","parent":"GM","type":"hook","ishook":true,"description":"Called when spawn icon is generated.","realm":"Client","predicted":"No","args":{"arg":[{"text":"File path of previously generated model.","name":"lastmodel","type":"string"},{"text":"File path of the generated icon.","name":"imagename","type":"string"},{"text":"Amount of models left to generate.","name":"modelsleft","type":"number"}]}},"example":{"description":"That's how it is used in **garrysmod/lua/includes/gui/icon_progress.lua** for show progress of generating icons","code":"local g_Progress = nil\n\nhook.Add( \"SpawniconGenerated\", \"SpawniconGenerated\", function( lastmodel, imagename, modelsleft )\n\n\tif ( !IsValid( g_Progress ) ) then\n\t\n\t\tg_Progress = vgui.Create( \"DPanel\" )\n\t\tg_Progress:SetSize( 64+10, 64+10+20 )\n\t\tg_Progress:SetBackgroundColor( Color( 0, 0, 0, 100 ) )\n\t\tg_Progress:SetDrawOnTop( true )\n\t\tg_Progress:DockPadding( 5, 0, 5, 5 )\n\t\tg_Progress.Think = function()\n\t\t\n\t\t\tif ( SysTime() - g_Progress.LastTouch < 3 ) then return end\n\t\t\t\n\t\t\tg_Progress:Remove()\n\t\t\tg_Progress.LastTouch = SysTime()\n\t\t\n\t\tend\n\t\t\n\n\t\t\n\t\tlocal label = g_Progress:Add( \"DLabel\" )\n\t\tlabel:Dock( BOTTOM )\n\t\tlabel:SetText( \"remaining\" )\n\t\tlabel:SetTextColor( Color( 255, 255, 255, 255 ) )\n\t\tlabel:SetExpensiveShadow( 1, Color( 0, 0, 0, 200 ) )\n\t\tlabel:SetContentAlignment( 5 )\n\t\tlabel:SetHeight( 14 )\n\t\tlabel:SetFont( \"DefaultSmall\" )\n\t\t\n\t\tg_Progress.Label = g_Progress:Add( \"DLabel\" )\n\t\tg_Progress.Label:Dock( BOTTOM )\n\t\tg_Progress.Label:SetTextColor( Color( 255, 255, 255, 255 ) )\n\t\tg_Progress.Label:SetExpensiveShadow( 1, Color( 0, 0, 0, 200 ) )\n\t\tg_Progress.Label:SetContentAlignment( 5 )\n\t\tg_Progress.Label:SetFont( \"DermaDefaultBold\" )\n\t\tg_Progress.Label:SetHeight( 14 )\n\t\t\n\t\tg_Progress.icon = vgui.Create( \"DImage\", g_Progress )\n\t\tg_Progress.icon:SetSize( 64, 64 )\n\t\tg_Progress.icon:Dock( TOP )\n\t\n\tend\n\t\n\tg_Progress.LastTouch = SysTime()\n\t\n\timagename = imagename:Replace( \"materials\\\\\", \"\" )\n\timagename = imagename:Replace( \"materials/\", \"\" )\n\t\t\n\tg_Progress.icon:SetImage( imagename )\n\t\t\n\tg_Progress:AlignRight( 10 )\n\tg_Progress:AlignBottom( 10 )\n\t\n\tg_Progress.Label:SetText( modelsleft )\n\nend )","output":{"image":{"src":"spawnicon_progress.png"}}}},
{"function":{"name":"ShowTeam","parent":"GM","type":"hook","ishook":true,"description":"Called when a player executes gm_showteam console command. ( Default bind is F2 )","realm":"Server","args":{"arg":{"text":"Player who executed the command","name":"ply","type":"Player"}}}},
{"function":{"name":"ShowSpare2","parent":"GM","type":"hook","ishook":true,"description":"Called when a player executes gm_showspare2 console command. ( Default bind is F4 )","realm":"Server","args":{"arg":{"text":"Player who executed the command","name":"ply","type":"Player"}}}},
{"function":{"name":"ShowSpare1","parent":"GM","type":"hook","ishook":true,"description":"Called when a player executes gm_showspare1 console command. ( Default bind is F3 )","realm":"Server","args":{"arg":{"text":"Player who executed the command","name":"ply","type":"Player"}}}},
{"function":{"name":"ShowHelp","parent":"GM","type":"hook","ishook":true,"description":"Called when a player executes gm_showhelp console command. ( Default bind is F1 )","realm":"Server","args":{"arg":{"text":"Player who executed the command","name":"ply","type":"Player"}}}},
{"function":{"name":"ShouldDrawLocalPlayer","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called to determine if the  should be drawn.\n\nDue to an [optimization](https://garry.tv/2012/10/30/optimising-gmod/), this hook is only called once per frame ([github issue](https://github.com/Facepunch/garrysmod-issues/issues/3092)). This is problematic if you need to have the player drawn only in certain contexts, such as within  or based on the render target. As a workaround, you can call <kbd>() ()</kbd> within this hook to force the engine to call it every time.","page":["Global.LocalPlayer","render.RenderView","cam.Start3D","cam.End3D"],"note":{"text":"If you're using this hook to draw a player for a  hook, then you may want to consider using the drawviewer variable you can use in your  table instead.","page":["GM:CalcView","Structures/CamData"]}},"realm":"Client","predicted":"No","args":{"arg":{"text":"The player","name":"ply","type":"Player"}},"rets":{"ret":{"text":"True to draw the player, false to hide.","name":"","type":"boolean"}}}},
{"function":{"name":"SetupWorldFog","parent":"GM","type":"hook","ishook":true,"description":"Allows you to use render.Fog* functions to manipulate world fog.","realm":"Client","predicted":"No","rets":{"ret":{"text":"Return true to tell the engine that fog is set up","name":"","type":"boolean"}}}},
{"function":{"name":"SetupSkyboxFog","parent":"GM","type":"hook","ishook":true,"description":"Allows you to use render.Fog* functions to manipulate skybox fog.","realm":"Client","predicted":"No","args":{"arg":{"text":"The scale of 3D skybox","name":"scale","type":"number"}},"rets":{"ret":{"text":"Return true to tell the engine that fog is set up","name":"","type":"boolean"}}}},
{"function":{"name":"ShouldCollide","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called to decide whether a pair of entities should collide with each other. This is only called if  was used on one or both entities.\n\nWhere applicable, consider using  instead - it is considerably easier to use.","page":["Entity:SetCustomCollisionCheck","constraint.NoCollide"],"warning":{"text":"This hook **must** return the same value consistently for the same pair of entities. If an entity changed in such a way that its collision rules change, you **must** call  on that entity immediately - **not in this hook.**","page":"Entity:CollisionRulesChanged"},"bug":{"text":"This hook can cause all physics to break under certain conditions.","issue":"642"}},"realm":"Shared","predicted":"Yes","args":{"arg":[{"text":"The first entity in the collision poll.","name":"ent1","type":"Entity"},{"text":"The second entity in the collision poll.","name":"ent2","type":"Entity"}]},"rets":{"ret":{"text":"Whether the entities should collide.","name":"","type":"boolean"}}},"example":{"description":"This should always return true unless you have a good reason for it not to.","code":"function GM:ShouldCollide( ent1, ent2 )\n\n    -- If players are about to collide with each other, then they won't collide.\n    if ( IsValid( ent1 ) and IsValid( ent2 ) and ent1:IsPlayer() and ent2:IsPlayer() ) then return false end \n\n    -- We must call this because anything else should return true.\n    return true\n\nend"}},
{"function":{"name":"SetupPlayerVisibility","parent":"GM","type":"hook","ishook":true,"description":{"text":"Allows you to add extra positions to the player's PVS. This is the place to call .","page":"Global.AddOriginToPVS"},"realm":"Server","args":{"arg":[{"text":"The player","name":"ply","type":"Player"},{"text":"Players","name":"viewEntity","type":"Entity","page":"Player:GetViewEntity"}]}}},
{"function":{"name":"SetPlayerSpeed","parent":"GM","type":"hook","ishook":true,"description":{"text":"Sets player run and sprint speeds.","warning":"This is not a hook. Treat this as a utility function to set the player's speed."},"realm":"Shared","predicted":"No","hidepredictionwarning":"No","args":{"arg":[{"text":"The player to set the speed of.","name":"ply","type":"Player"},{"text":"The walk speed.","name":"walkSpeed","type":"number"},{"text":"The run speed.","name":"runSpeed","type":"number"}]}}},
{"function":{"name":"ScoreboardShow","parent":"GM","type":"hook","ishook":true,"description":"Called when player presses the scoreboard button. ( TAB by default )\n<!--NOTE: DO NOT ADD A RETURN VALUE TO THIS FUNCTION! IT DOES NOT HAVE A RETURN VALUE.\nRETURNING ANYTHING TO HIDE THE DEFAULT SCOREBOARD IS A SIDE EFFECT OF HOW THE HOOK LIBRARY WORKS.\nTHAT EFFECT WILL NOT BE CONSISTENT BETWEEN GAMEMODES/ADDON COMBINATIONS-->","realm":"Client","predicted":"No"}},
{"function":{"name":"SetupMove","parent":"GM","type":"hook","ishook":true,"description":{"text":"SetupMove is called before the engine process movements. This allows us to override the players movement.\n\nSee  for an explanation on the move system.","page":"Game Movement"},"realm":"Shared","predicted":"Yes","args":{"arg":[{"text":"The player whose movement we are about to process","name":"ply","type":"Player"},{"text":"The move data to override/use","name":"mv","type":"CMoveData"},{"text":"The command data","name":"cmd","type":"CUserCmd"}]}},"example":[{"description":"Make drowning even more entertaining:","code":"hook.Add( \"SetupMove\", \"Drowning:HandleWaterInLungs\", function( ply, mv, cmd )\n\tif ( ply:WaterLevel() >= 2 ) then\n\t\tmv:SetUpSpeed( -100 )\n\t\tcmd:SetUpMove( -100 )\n\tend\nend )"},{"description":"Disable the player's ability to jump by removing a key from CMoveData:","code":"local CMoveData = FindMetaTable(\"CMoveData\")\n\nfunction CMoveData:RemoveKeys(keys)\n\t-- Using bitwise operations to clear the key bits.\n\tlocal newbuttons = bit.band(self:GetButtons(), bit.bnot(keys))\n\tself:SetButtons(newbuttons)\nend\n\nhook.Add(\"SetupMove\", \"Disable Jumping\", function(ply, mvd, cmd)\n\tif mvd:KeyDown(IN_JUMP) then\n\t\tmvd:RemoveKey(IN_JUMP)\n\tend\nend)"}]},
{"function":{"name":"ScoreboardHide","parent":"GM","type":"hook","ishook":true,"description":"Called when player released the scoreboard button. ( TAB by default )","realm":"Client"}},
{"function":{"name":"Saved","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called when the game is saved using the Source Engine save system (not the Sandbox saves or dupes).\n\nSee  for a hook that is called when such a save file is loaded.\n\nSee also the  for relevant functions.","page":["GM:Restored","saverestore"]},"realm":"Shared","predicted":"No"}},
{"function":{"name":"ScalePlayerDamage","parent":"GM","type":"hook","ishook":true,"description":{"text":"This hook allows you to change how much damage a player receives when one takes damage to a specific body part.","note":{"text":"This is called only for bullet damage a player receives, you should use  instead if you need to detect *ALL* damage.","page":"GM:EntityTakeDamage"}},"realm":"Shared","predicted":"No","args":{"arg":[{"text":"The player taking damage.","name":"ply","type":"Player"},{"text":"The hitgroup where the player took damage. See","name":"hitgroup","type":"number","page":"Enums/HITGROUP"},{"text":"The damage info.","name":"dmginfo","type":"CTakeDamageInfo"}]},"rets":{"ret":{"text":"Return true to prevent damage that this hook is called for, stop blood particle effects and blood decals.\n\nIt is possible to return true only on client ( This will work **only in multiplayer** ) to stop the effects but still take damage.","name":"","type":"boolean"}}},"example":{"description":"Makes the player take twice as much damage when shot in the head, and only half damage when shot in the limbs.","code":"function GM:ScalePlayerDamage( ply, hitgroup, dmginfo )\n\t if ( hitgroup == HITGROUP_HEAD ) then\n\t\tdmginfo:ScaleDamage( 2 ) // More damage when we're shot in the head\n \t else\n\t\tdmginfo:ScaleDamage( 0.50 )  // Less damage when shot anywhere else\n\t end\nend"}},
{"function":{"name":"ScaleNPCDamage","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called when an NPC takes damage.","note":{"text":"This hook is called only when a specific hit group of the NPC is hit. In cases where the hitgroup doesn't matter, you should use  instead!","page":"GM:EntityTakeDamage"}},"realm":"Server","predicted":"No","args":{"arg":[{"text":"The NPC that takes damage","name":"npc","type":"NPC"},{"text":"The hitgroup (hitbox) enum where the NPC took damage. See","name":"hitgroup","type":"number","page":"Enums/HITGROUP"},{"text":"Damage info","name":"dmginfo","type":"CTakeDamageInfo"}]}},"example":{"description":"Double the damage whenever an NPC is hurt.","code":"hook.Add( \"ScaleNPCDamage\", \"ScaleNPCDamageExample\", function( npc, hitgroup, dmginfo )\n\tdmginfo:ScaleDamage( 2 )\nend )"}},
{"function":{"name":"Restored","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called when the game is reloaded from a Source Engine save system ( not the Sandbox saves or dupes ).\n\nSee  for a hook that is called when such a save file is created.","page":"GM:Saved"},"realm":"Shared","predicted":"No"}},
{"function":{"name":"RenderScreenspaceEffects","parent":"GM","type":"hook","ishook":true,"description":{"text":"Used to render post processing effects.","rendercontext":{"hook":"true","type":"2D"}},"realm":"Client","predicted":"No"},"example":{"description":"Renders color modify and sobel effects to create a cartoon effect.","code":"local tab = {\n\t[\"$pp_colour_addr\"] = 0,\n\t[\"$pp_colour_addg\"] = 0,\n\t[\"$pp_colour_addb\"] = 0,\n\t[\"$pp_colour_brightness\"] = -0.04,\n\t[\"$pp_colour_contrast\"] = 1.35,\n\t[\"$pp_colour_colour\"] = 5,\n\t[\"$pp_colour_mulr\"] = 0,\n\t[\"$pp_colour_mulg\"] = 0,\n\t[\"$pp_colour_mulb\"] = 0\n}\nfunction GM:RenderScreenspaceEffects()\n\tDrawColorModify( tab ) --Draws Color Modify effect\n\tDrawSobel( 0.5 ) --Draws Sobel effect\nend"}},
{"function":{"name":"PropBreak","parent":"GM","type":"hook","ishook":true,"description":"Called when a prop has been destroyed.","realm":"Shared","args":{"arg":[{"text":"The person who broke the prop.","name":"attacker","type":"Player"},{"text":"The entity that has been broken by the attacker.","name":"prop","type":"Entity"}]}},"example":{"description":"This kills a player when a person breaks a prop (i.e. a wooden crate).","code":"hook.Add(\"PropBreak\", \"PropVengeance\", function(client, prop)\n\tclient:Kill()\nend)"}},
{"function":{"name":"RenderScene","parent":"GM","type":"hook","ishook":true,"description":{"text":"Render the scene. Used by the \"Stereoscopy\" Post-processing effect.","note":"Materials rendered in this hook require $ignorez parameter to draw properly."},"realm":"Client","predicted":"No","args":{"arg":[{"text":"View origin","name":"origin","type":"Vector"},{"text":"View angles","name":"angles","type":"Angle"},{"text":"View FOV","name":"fov","type":"number"}]},"rets":{"ret":{"text":"Return true to override drawing the scene","name":"","type":"boolean"}}}},
{"function":{"name":"PreventScreenClicks","parent":"GM","type":"hook","ishook":true,"description":"This will prevent IN_ATTACK from sending to server when player tries to shoot from C menu.","realm":"Client","predicted":"No","rets":{"ret":{"text":"Return true to prevent screen clicks","name":"","type":"boolean"}}},"example":{"description":"Prevents usage of the World Clicker feature, where a player can hold C to shoot at their cursor instead of their crosshair.","code":"hook.Add( \"PreventScreenClicks\", \"DisableWorldClicker\", function()\n\tlocal pnl = vgui.GetHoveredPanel()\n\tif ( pnl:IsWorldClicker() ) then return true end\nend )"}},
{"function":{"name":"PreRender","parent":"GM","type":"hook","ishook":true,"description":"Called before the renderer is about to start rendering the next frame.","realm":"Client","predicted":"No","rets":{"ret":{"text":"Return true to prevent all rendering. This can make the whole game stop rendering anything.","name":"","type":"boolean"}}},"example":{"description":"Fills the draw buffer with black pixels, removing tearing when looking at a world leak. Achieves the same effect as using gl_clear. This is no longer needed as GMod does this by default.","code":"hook.Add(\"PreRender\", \"ResetBuffer\", function()\n\tcam.Start2D()\n\t\tsurface.SetDrawColor(0, 0, 0, 255)\n\t\tsurface.DrawRect(0, 0, ScrW(), ScrH())\n\tcam.End2D()\nend)"}},
{"function":{"name":"PreGamemodeLoaded","parent":"GM","type":"hook","ishook":true,"description":"Called before the gamemode is loaded.","realm":"Shared"}},
{"function":{"name":"PrePlayerDraw","parent":"GM","type":"hook","ishook":true,"description":"Called before the player is drawn.","realm":"Client","args":{"arg":{"text":"The player that is about to be drawn.","name":"player","type":"Player"}},"rets":{"ret":{"text":"Prevent default player rendering. Return true to hide the player.","name":"","type":"boolean"}}}},
{"function":{"name":"PreDrawViewModel","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called before the view model has been drawn. This hook by default also calls this on weapons, so you can use .","page":"WEAPON:PreDrawViewModel","rendercontext":{"hook":"true","type":"3D"},"bug":{"text":"This is also called once a frame with no arguments.","issue":"3024"}},"realm":"Client","predicted":"No","args":{"arg":[{"text":"This is the view model entity before it is drawn. On server-side, this entity is the predicted view model.","name":"vm","type":"Entity"},{"text":"The the owner of the view model.","name":"ply","type":"Player"},{"text":"This is the weapon that is from the view model.","name":"weapon","type":"Weapon"}]},"rets":{"ret":{"text":"Return true to prevent the default view model rendering. This also affects .","name":"","type":"boolean","page":"GM:PostDrawViewModel"}}}},
{"function":{"name":"PreDrawSkyBox","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called before the sky box is drawn.","rendercontext":{"hook":"true","type":"3D"}},"realm":"Client","predicted":"No","rets":{"ret":{"text":"Return true to disable skybox drawing (both 2D and 3D skybox)","name":"","type":"boolean"}}}},
{"function":{"name":"PreDrawTranslucentRenderables","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called before all the translucent entities are drawn.\n\nSee also  and  .","page":["GM:PreDrawOpaqueRenderables","GM:PostDrawTranslucentRenderables"],"rendercontext":{"hook":"true","type":"3D"},"bug":[{"text":"This is still called when r_drawentities or r_drawopaquerenderables is disabled.","issue":"3295"},{"text":"This is not called when r_drawtranslucentworld is disabled.","issue":"3296"}]},"realm":"Client","predicted":"No","args":{"arg":[{"text":"Whether the current draw is writing depth.","name":"isDrawingDepth","type":"boolean"},{"text":"Whether the current draw is drawing the skybox.","name":"isDrawSkybox","type":"boolean"}]},"rets":{"ret":{"text":"Return true to prevent translucent renderables from drawing.","name":"","type":"boolean"}}}},
{"function":{"name":"PreDrawPlayerHands","parent":"GM","type":"hook","ishook":true,"description":"Called before the player hands are drawn.","realm":"Client","predicted":"No","args":{"arg":[{"text":"This is the gmod_hands entity before it is drawn.","name":"hands","type":"Entity"},{"text":"This is the view model entity before it is drawn.","name":"vm","type":"Entity"},{"text":"The the owner of the view model.","name":"ply","type":"Player"},{"text":"This is the weapon that is from the view model.","name":"weapon","type":"Weapon"}]},"rets":{"ret":{"text":"Return true to prevent the viewmodel hands from rendering","name":"","type":"boolean"}}}},
{"function":{"name":"PreDrawOpaqueRenderables","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called before all opaque entities are drawn.\n\nSee also  and  .","page":["GM:PreDrawTranslucentRenderables","GM:PostDrawOpaqueRenderables"],"rendercontext":{"hook":"true","type":"3D"}},"realm":"Client","predicted":"No","args":{"arg":[{"text":"Whether the current draw is writing depth.","name":"isDrawingDepth","type":"boolean"},{"text":"Whether the current draw is drawing the skybox.","name":"isDrawSkybox","type":"boolean"}]},"rets":{"ret":{"text":"Return true to prevent opaque renderables from drawing.","name":"","type":"boolean"}}}},
{"function":{"name":"PreDrawHUD","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called before any of 2D drawing functions. Drawing anything in it seems to work incorrectly.<!--\n\n-->","rendercontext":{"hook":"true","type":"2D"}},"realm":"Client","predicted":"No"},"example":{"description":"Allows you to draw something before any other HUD elements.","code":"local clr = Color(20, 20, 20, 200)\nhook.Add(\"PreDrawHUD\", \"PreDrawExample\", function()\n\tcam.Start2D() -- If you don't call this the drawing will not work properly.\n\t\n\tsurface.SetDrawColor(clr)\n\tsurface.DrawRect(0, 0, ScrW(), ScrH())\n\t\n\tcam.End2D()\nend)"}},
{"function":{"name":"PreDrawHalos","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called before rendering the halos. This is the place to call . This hook is actually running inside of .","page":["halo.Add","GM:PostDrawEffects"],"rendercontext":{"hook":"true","type":"3D"}},"realm":"Client","predicted":"No","file":{"text":"lua/includes/modules/halo.lua","line":"148"}}},
{"function":{"name":"PreDrawEffects","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called just after  and can technically be considered \"PostDrawAllViewModels\".","page":"GM:PreDrawViewModel","rendercontext":{"hook":"true","type":"3D"}},"realm":"Client","predicted":"No"}},
{"function":{"name":"PreCleanupMap","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called right before the map cleans up (usually because  was called)\n\nSee also .","page":["game.CleanUpMap","GM:PostCleanupMap"]},"realm":"Shared","predicted":"No"}},
{"function":{"name":"PostRenderVGUI","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called after the VGUI has been drawn.","rendercontext":{"hook":"true","type":"2D"}},"realm":"Client","predicted":"No"}},
{"function":{"name":"PostRender","parent":"GM","type":"hook","ishook":true,"description":"Called after the frame has been rendered.","realm":"Client","predicted":"No"}},
{"function":{"name":"PostProcessPermitted","parent":"GM","type":"hook","ishook":true,"description":"Allows you to suppress post processing effect drawing.","realm":"Client","predicted":"No","args":{"arg":{"text":"The classname of Post Processing effect","name":"ppeffect","type":"string"}},"rets":{"ret":{"text":"Return true/false depending on whether this post process should be allowed","name":"","type":"boolean"}}}},
{"function":{"name":"PostPlayerDraw","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called after the player was drawn.","rendercontext":{"hook":"true","type":"3D"}},"realm":"Client","predicted":"No","args":{"arg":{"text":"The player that was drawn.","name":"ply","type":"Player"}}},"example":[{"description":"Show each player's name above their model.","code":"local function DrawName( ply )\n\tif ( !IsValid( ply ) ) then return end \n\tif ( ply == LocalPlayer() ) then return end -- Don't draw a name when the player is you\n\tif ( !ply:Alive() ) then return end -- Check if the player is alive \n \n\tlocal Distance = LocalPlayer():GetPos():Distance( ply:GetPos() ) --Get the distance between you and the player\n\t\n\tif ( Distance < 1000 ) then --If the distance is less than 1000 units, it will draw the name\n \n\t\tlocal offset = Vector( 0, 0, 85 )\n\t\tlocal ang = LocalPlayer():EyeAngles()\n\t\tlocal pos = ply:GetPos() + offset + ang:Up()\n\t \n\t\tang:RotateAroundAxis( ang:Forward(), 90 )\n\t\tang:RotateAroundAxis( ang:Right(), 90 )\n\t \n\t\t\n\t\tcam.Start3D2D( pos, Angle( 0, ang.y, 90 ), 0.25 )\n\t\t\tdraw.DrawText( ply:GetName(), \"HudSelectionText\", 2, 2, team.GetColor(ply:Team()), TEXT_ALIGN_CENTER )\n\t\tcam.End3D2D()\n\tend\nend\nhook.Add( \"PostPlayerDraw\", \"DrawName\", DrawName )"},{"description":{"text":"Draw a headcrab hat on all players.","note":"TODO: screenshot in output"},"code":"local model = ClientsideModel( \"models/headcrabclassic.mdl\" )\nmodel:SetNoDraw( true )\n\nhook.Add( \"PostPlayerDraw\" , \"manual_model_draw_example\" , function( ply )\n\tif not IsValid(ply) or not ply:Alive() then return end\n\n\tlocal attach_id = ply:LookupAttachment('eyes')\n\tif not attach_id then return end\n\t\t\t\n\tlocal attach = ply:GetAttachment(attach_id)\n\t\t\t\n\tif not attach then return end\n\t\t\t\n\tlocal pos = attach.Pos\n\tlocal ang = attach.Ang\n\t\t\n\tmodel:SetModelScale(1.1, 0)\n\tpos = pos + (ang:Forward() * 2.5)\n\tang:RotateAroundAxis(ang:Right(), 20)\n\t\t\n\tmodel:SetPos(pos)\n\tmodel:SetAngles(ang)\n\n\tmodel:SetRenderOrigin(pos)\n\tmodel:SetRenderAngles(ang)\n\tmodel:SetupBones()\n\tmodel:DrawModel()\n\tmodel:SetRenderOrigin()\n\tmodel:SetRenderAngles()\n\nend )"}]},
{"function":{"name":"PostPlayerDeath","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called right after ,  and .\n\nThis hook will be called for all deaths, including","page":["GM:DoPlayerDeath","GM:PlayerDeath","GM:PlayerSilentDeath","Player:KillSilent"],"note":{"text":"The player is considered dead when this is hook is called,  will return false.","page":"Player:Alive"}},"realm":"Server","predicted":"No","args":{"arg":{"text":"The player","name":"ply","type":"Player"}}}},
{"function":{"name":"PostGamemodeLoaded","parent":"GM","type":"hook","ishook":true,"description":"Called after the gamemode has loaded.","realm":"Shared"}},
{"function":{"name":"PostEntityTakeDamage","parent":"GM","type":"hook","ishook":true,"added":"2020.03.17","description":"Called when an entity receives a damage event, after passing damage filters, etc.","realm":"Server","predicted":"No","args":{"arg":[{"text":"The entity that took the damage","name":"ent","type":"Entity"},{"name":"dmg","type":"CTakeDamageInfo"},{"text":"Whether the entity actually took the damage. (For example, shooting a Strider will generate this event, but it won't take bullet damage.)","name":"took","type":"boolean"}]}}},
{"function":{"name":"PostDrawViewModel","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called after view model is drawn.","rendercontext":{"hook":"true","type":"3D"},"note":"The 3D rendering context in this event is different from the main view. Every render operation will only be accurate with the view model entity."},"realm":"Client","predicted":"No","args":{"arg":[{"text":"Players view model","name":"viewmodel","type":"Entity"},{"text":"The owner of the weapon/view model","name":"player","type":"Player"},{"text":"The weapon the player is currently holding","name":"weapon","type":"Weapon"}]}}},
{"function":{"name":"PostDrawTranslucentRenderables","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called after all translucent entities are drawn.\n\nSee also  and  .","page":["GM:PostDrawOpaqueRenderables","GM:PreDrawTranslucentRenderables"],"rendercontext":{"hook":"true","type":"3D"},"bug":[{"text":"This is still called when r_drawentities or r_drawopaquerenderables is disabled.","issue":"3295"},{"text":"This is not called when r_drawtranslucentworld is disabled.","issue":"3296"}]},"realm":"Client","predicted":"No","args":{"arg":[{"text":"Whether the current call is writing depth.","name":"bDrawingDepth","type":"boolean"},{"text":"Whether the current call is drawing skybox.","name":"bDrawingSkybox","type":"boolean"}]}},"example":{"description":"Draws a solid black sphere at where the player is looking at, but not when the skybox is being drawn.\n\nYou can see why this is needed if you disable the skybox check and look into the sky on gm_flatgrass (or any other map where the 3d skybox is below the map) and you will notice 2 spheres and not 1.","code":"hook.Add( \"PostDrawTranslucentRenderables\", \"test\", function( bDepth, bSkybox )\n\n\t-- If we are drawing in the skybox, bail\n\tif ( bSkybox ) then return end\n\n\t-- Set the draw material to solid white\n\trender.SetColorMaterial()\n\n\t-- The position to render the sphere at, in this case, the looking position of the local player\n\tlocal pos = LocalPlayer():GetEyeTrace().HitPos\n\n\t-- Draw the sphere!\n\trender.DrawSphere( pos, 500, 30, 30, Color( 0, 0, 0 ) )\n\nend )"}},
{"function":{"name":"PostDrawSkyBox","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called after drawing the skybox.","rendercontext":{"hook":"true","type":"3D"}},"realm":"Client","predicted":"No"}},
{"function":{"name":"PostDrawPlayerHands","parent":"GM","type":"hook","ishook":true,"description":"Called after the player hands are drawn.","realm":"Client","predicted":"No","args":{"arg":[{"text":"This is the gmod_hands entity.","name":"hands","type":"Entity"},{"text":"This is the view model entity.","name":"vm","type":"Entity"},{"text":"The the owner of the view model.","name":"ply","type":"Player"},{"text":"This is the weapon that is from the view model.","name":"weapon","type":"Weapon"}]}}},
{"function":{"name":"PostDrawOpaqueRenderables","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called after drawing opaque entities.\n\nSee also  and  .","page":["GM:PostDrawTranslucentRenderables","GM:PreDrawOpaqueRenderables"],"rendercontext":{"hook":"true","type":"3D"}},"realm":"Client","predicted":"No","args":{"arg":[{"text":"Whether the current draw is writing depth.","name":"bDrawingDepth","type":"boolean"},{"text":"Whether the current draw is drawing the skybox.","name":"bDrawingSkybox","type":"boolean"}]}}},
{"function":{"name":"PostDrawHUD","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called after ,   and  but before  .","page":["GM:PreDrawHUD","GM:HUDPaintBackground","GM:HUDPaint","GM:DrawOverlay"],"rendercontext":{"hook":"true","type":"2D"}},"realm":"Client","predicted":"No"}},
{"function":{"name":"PostDrawEffects","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called after rendering effects. This is where halos are drawn. Called just before .","page":"GM:PreDrawHUD","rendercontext":{"hook":"true","type":"2D"}},"realm":"Client","predicted":"No"}},
{"function":{"name":"PostDraw2DSkyBox","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called right after the 2D skybox has been drawn - allowing you to draw over it.","rendercontext":{"hook":"true","type":"3D"}},"realm":"Client","predicted":"No"},"example":{"description":"Draw a textured quad on the horizon, behind the 3D skybox.","code":"local Mat = Material( \"dev/graygrid\" )\n\nhook.Add(\"PostDraw2DSkyBox\", \"ExampleHook\", function()\n    \n    render.OverrideDepthEnable( true, false ) -- ignore Z to prevent drawing over 3D skybox\n\n    -- Start 3D cam centered at the origin\n    cam.Start3D( Vector( 0, 0, 0 ), EyeAngles() )\n        render.SetMaterial( Mat )\n        render.DrawQuadEasy( Vector(1,0,0) * 200, Vector(-1,0,0), 64, 64, Color(255,255,255), 0 )\n    cam.End3D()\n\n    render.OverrideDepthEnable( false, false )\n\nend)"}},
{"function":{"name":"PostCleanupMap","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called right after the map has cleaned up (usually because  was called)\n\nSee also .","page":["game.CleanUpMap","GM:PreCleanupMap"]},"realm":"Shared","predicted":"No"}},
{"function":{"name":"PopulateMenuBar","parent":"GM","type":"hook","ishook":true,"description":"Called when it's time to populate the context menu menu bar at the top.","realm":"Client","predicted":"No","args":{"arg":{"text":"The  itself.","name":"menubar","type":"Panel","page":"DMenuBar"}}},"example":{"description":"Example usage of the hook","code":"hook.Add( \"PopulateMenuBar\", \"My_MenuBar\", function( menubar )\n\n\tlocal m = menubar:AddOrGetMenu( \"Test\" )\n\n\tm:AddCVar( \"Item 1\", \"console_var1\", \"1\", \"0\" )\n\n\tm:AddSpacer()\n\n\tm:AddCVar( \"Item 2\", \"console_var2\", \"0\", \"100\" )\n\n\tm:AddCVar( \"Check console\", \"console_var3\", \"1\", \"0\", function() print(\"I was clicked!\") end )\n\n\n\tlocal submenu = m:AddSubMenu( \"Submenu\" )\n\n\tsubmenu:SetDeleteSelf( false )\n\tsubmenu:AddCVar( \"No password\", \"password\", \"\" )\n\tsubmenu:AddSpacer()\n\n\tsubmenu:AddCVar( \"Password: test1\", \"password\", \"test1\" )\n\tsubmenu:AddCVar( \"Password: lolno\", \"password\", \"lolno\" )\n\nend )"}},
{"function":{"name":"PlayerUse","parent":"GM","type":"hook","ishook":true,"description":"Triggered when the player presses use on an object. Continuously runs until USE is released but will not activate other Entities until the USE key is released; dependent on activation type of the Entity.","realm":"Server","predicted":"No","args":{"arg":[{"text":"The player pressing the \"use\" key.","name":"ply","type":"Player"},{"text":"The entity which the player is looking at / activating USE on.","name":"ent","type":"Entity"}]},"rets":{"ret":{"text":"Return false if the player is not allowed to USE the entity.\n\nDo not return true if using a hook, otherwise other mods may not get a chance to block a player's use.","name":"","type":"boolean"}}},"example":[{"description":"The arguments will continue to be output as long as the user holds their USE key. If the user activates one object, say a door, and looks at a different object, say a different door, then the print statement will reflect the new Entity, however even when true is returned the new Entity will not be activated until the user lets go of USE and depresses it once again; this is dependent on the USE TYPE of the Entity.","code":"hook.Add( \"PlayerUse\", \"some_unique_name2\", function( ply, ent )\n\tprint( ply, ent )\nend )","output":"After holding it for a VERY brief moment looking at one door in a way that I would look at the other door once the first opens.\n\n```\nPlayer [1][Example_User_Name] \tEntity [369][func_door_rotating]\nPlayer [1][Example_User_Name] \tEntity [369][func_door_rotating]\nPlayer [1][Example_User_Name] \tEntity [368][func_door_rotating]\nPlayer [1][Example_User_Name] \tEntity [368][func_door_rotating]\n```"},{"description":"Prevent users from using the ammo cache on the back of a Jeep.","code":"hook.Add( \"PlayerUse\", \"some_unique_name\", function( ply, ent )\n\tif ( !IsValid( ent ) or !ent:IsVehicle() ) then return end\n\t\n\tif ( ply:GetEyeTrace().HitGroup == 5 ) then\n\t\treturn false\n\tend\nend )"}]},
{"function":{"name":"PlayerUnfrozeObject","parent":"GM","type":"hook","ishook":true,"description":"Called when a player unfreezes an object.","realm":"Server","args":{"arg":[{"text":"Player who has unfrozen an object","name":"ply","type":"Player"},{"text":"The unfrozen object","name":"ent","type":"Entity"},{"text":"The frozen physics object of the unfrozen entity ( For ragdolls )","name":"physobj","type":"PhysObj"}]}}},
{"function":{"name":"PlayerTraceAttack","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called when a player has been hit by a trace and damaged (such as from a bullet). Returning true overrides the damage handling and prevents  from being called.","page":"GM:ScalePlayerDamage"},"realm":"Shared","args":{"arg":[{"text":"The player that has been hit","name":"ply","type":"Player"},{"text":"The damage info of the bullet","name":"dmginfo","type":"CTakeDamageInfo"},{"text":"Normalized vector direction of the bullet's path","name":"dir","type":"Vector"},{"text":"The trace of the bullet's path, see","name":"trace","type":"table","page":"Structures/TraceResult"}]},"rets":{"ret":{"text":"Override engine handling","name":"","type":"boolean"}}}},
{"function":{"name":"PlayerTick","parent":"GM","type":"hook","ishook":true,"description":{"text":"The Move hook is called for you to manipulate the player's . This hook is called moments before  and .","page":["CMoveData","GM:Move","GM:PlayerNoClip"],"warning":{"text":"This hook will not run when inside a vehicle.  will be called instead.","page":"GM:VehicleMove"}},"realm":"Shared","predicted":"Yes","args":{"arg":[{"text":"The player","name":"player","type":"Player"},{"text":"The current movedata for the player.","name":"mv","type":"CMoveData"}]}}},
{"function":{"name":"PlayerSwitchWeapon","parent":"GM","type":"hook","ishook":true,"description":"Called when a player switches their weapon.","realm":"Shared","predicted":"Yes","args":{"arg":[{"text":"The player switching weapons.","name":"player","type":"Player"},{"text":"The previous weapon. Will be NULL if the previous weapon was removed or the player is switching from nothing.","name":"oldWeapon","type":"Weapon"},{"text":"The weapon the player switched to. Will be NULL if the player is switching to nothing.","name":"newWeapon","type":"Weapon","bug":{"text":"This can be NULL on the client if the weapon hasn't been created over the network yet.","issue":"2922"}}]},"rets":{"ret":{"text":"Return true to prevent weapon switch","name":"","type":"boolean"}}},"example":{"description":"The players weapon information will be printed when the player switched weapons.","code":"function GM:PlayerSwitchWeapon(ply, oldWeapon, newWeapon)\n\t//GetClass() will return the weapons class as a string.\n\tMsgN(\"You switched weapons! Your old weapon is \" .. oldWeapon:GetClass() ..\".\")\n\tMsgN(\"Your new weapon is \" .. newWeapon:GetClass() .. \".\");\nend","outputfixedwidth":"Fixed width","output":"You switched weapons! Your old weapon is gmod_camera.\nYour new weapon is weapon_crossbow."}},
{"function":{"name":"PlayerStartVoice","parent":"GM","type":"hook","ishook":true,"description":"Called when a player starts using voice chat.","realm":"Client","args":{"arg":{"text":"Player who started using voice chat","name":"ply","type":"Player"}}}},
{"function":{"name":"PlayerSwitchFlashlight","parent":"GM","type":"hook","ishook":true,"description":"Called whenever a player attempts to either turn on or off their flashlight, returning false will deny the change.","realm":"Server","args":{"arg":[{"text":"The player who attempts to change their flashlight state.","name":"ply","type":"Player"},{"text":"The new state the player requested, true for on, false for off.","name":"enabled","type":"boolean"}]},"rets":{"ret":{"text":"Can toggle the flashlight or not","name":"","type":"boolean"}}},"note":{"text":"Also gets called when using .","page":"Player:Flashlight"}},
{"function":{"name":"PlayerStepSoundTime","parent":"GM","type":"hook","ishook":true,"description":"Allows you to override the time between footsteps.","realm":"Shared","args":{"arg":[{"text":"Player who is walking","name":"ply","type":"Player"},{"text":"The type of footsteps, see","name":"type","type":"number","page":"Enums/STEPSOUNDTIME"},{"text":"Is the player walking or not ( +walk? )","name":"walking","type":"boolean"}]},"rets":{"ret":{"text":"Time between footsteps, in ms","name":"","type":"number"}}}},
{"function":{"name":"PlayerStartTaunt","parent":"GM","type":"hook","ishook":true,"description":"Called when player starts taunting.","realm":"Server","predicted":"No","args":{"arg":[{"text":"The player who is taunting","name":"ply","type":"Player"},{"text":"The sequence ID of the taunt","name":"act","type":"number"},{"text":"Length of the taunt","name":"length","type":"number"}]}}},
{"function":{"name":"PlayerSpray","parent":"GM","type":"hook","ishook":true,"description":"Determines if the player can spray using the \"impulse 201\" console command.","realm":"Server","predicted":"No","args":{"arg":{"text":"The player","name":"sprayer","type":"Player"}},"rets":{"ret":{"text":"Return false to allow spraying, return true to prevent spraying.","name":"","type":"boolean"}}},"example":{"description":"Makes so that only Admins can spray.","code":"hook.Add( \"PlayerSpray\", \"DisablePlayerSpray\", function( ply )\n\treturn !ply:IsAdmin()\nend )"}},
{"function":{"name":"PlayerSpawnAsSpectator","parent":"GM","type":"hook","ishook":true,"description":"Called to spawn the player as a spectator.","realm":"Server","predicted":"No","file":{"text":"gamemodes/base/gamemode/player.lua","line":"232-246"},"args":{"arg":{"text":"The player to spawn as a spectator","name":"ply","type":"Player"}}},"example":{"description":"Makes all players spawn as spectators.","code":"function GM:PlayerSpawn( ply )\n \n\tGAMEMODE:PlayerSpawnAsSpectator( ply )\n \nend"}},
{"function":{"name":"PlayerSpawn","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called whenever a player spawns, including respawns.\n\nSee  for a hook called only the first time a player spawns.\n\nSee the  for a shared version of this hook.","page":["GM:PlayerInitialSpawn",",player_spawn gameeventGame_Events"],"warning":{"text":"By default, in \"base\" derived gamemodes, this hook will also call  and , which may override your  and  calls. Consider using the other hooks or a 0-second timer.","page":["GM:PlayerLoadout","GM:PlayerSetModel","Entity:SetModel","Player:Give"]}},"realm":"Server","predicted":"No","args":{"arg":[{"text":"The player who spawned.","name":"player","type":"Player"},{"text":"If true, the player just spawned from a map transition. You probably want to not touch player's weapons if this is set to true from this hook.","name":"transition","type":"boolean"}]}},"example":[{"description":"Prints a message when a player spawns.","code":"function GM:PlayerSpawn( ply )\n    MsgN( ply:Nick() .. \" has spawned!\" )\nend","outputfixedwidth":"Fixed width","output":"Player1 has spawned!"},{"description":"Prints a message when a player spawns using a hook.","code":"local function spawn( ply )\n\tprint( ply:Nick().. \" has spawned!.\")\nend\nhook.Add( \"PlayerSpawn\", \"some_unique_name\", spawn )","outputfixedwidth":"Fixed width","output":"Player1 has spawned!"}]},
{"function":{"name":"PlayerSilentDeath","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called when the player is killed by .\n\nThe player is already considered dead when this hook is called.\n\n* See  for a hook which handles all other death causes.\n*  is called **after** this hook.","page":["Player:KillSilent","GM:PlayerDeath","GM:PostPlayerDeath"],"note":{"text":"will return true in this hook.","page":"Player:Alive"}},"realm":"Server","predicted":"No","args":{"arg":{"text":"The player who was killed","name":"ply","type":"Player"}}}},
{"function":{"name":"PlayerShouldTaunt","parent":"GM","type":"hook","ishook":true,"description":"Allows to suppress player taunts.","realm":"Server","args":{"arg":[{"text":"Player who tried to taunt","name":"ply","type":"Player"},{"text":"Act ID of the taunt player tries to do, see","name":"act","type":"number","page":"Enums/ACT"}]},"rets":{"ret":{"text":"Return false to disallow player taunting","name":"","type":"boolean"}}}},
{"function":{"name":"PlayerShouldTakeDamage","parent":"GM","type":"hook","ishook":true,"description":"Returns true if the player should take damage from the given attacker.","realm":"Server","predicted":"No","args":{"arg":[{"text":"The player","name":"ply","type":"Player"},{"text":"The attacker","name":"attacker","type":"Entity"}]},"rets":{"ret":{"text":"Allow damage","name":"","type":"boolean"}}}},
{"function":{"name":"PlayerSetModel","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called whenever a player spawns and must choose a model. A good place to assign a model to a player.","note":{"text":"This function may not work in your custom gamemode if you have overridden your  and you do not use self.BaseClass.PlayerSpawn or .","page":["GM:PlayerSpawn","hook.Call"]}},"realm":"Server","predicted":"No","args":{"arg":{"text":"The player being chosen","name":"ply","type":"Player"}}},"example":{"description":"Sets the player's model to Odessa","code":"function GM:PlayerSetModel( ply )\n   ply:SetModel( \"models/player/odessa.mdl\" )\nend"}},
{"function":{"name":"PlayerSetHandsModel","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called whenever view model hands needs setting a model. By default this calls  and if that fails, sets the hands model according to his player model.","page":"PLAYER:GetHandsModel"},"realm":"Server","predicted":"No","args":{"arg":[{"text":"The player whose hands needs a model set","name":"ply","type":"Player"},{"text":"The hands to set model of","name":"ent","type":"Entity"}]}},"example":{"description":"Sets the players hands to the model's hands.","code":"function GM:PlayerSetHandsModel( ply, ent )\n   local simplemodel = player_manager.TranslateToPlayerModelName(ply:GetModel())\n   local info = player_manager.TranslatePlayerHands(simplemodel)\n   if info then\n      ent:SetModel(info.model)\n      ent:SetSkin(info.skin)\n      ent:SetBodyGroups(info.body)\n   end\nend"}},
{"function":{"name":"PlayerSelectTeamSpawn","parent":"GM","type":"hook","ishook":true,"description":"Find a team spawn point entity for this player.","realm":"Server","args":{"arg":[{"text":"Players team","name":"team","type":"number"},{"text":"The player","name":"ply","type":"Player"}]},"rets":{"ret":{"text":"The entity to use as a spawn point.","name":"","type":"Entity"}}}},
{"function":{"name":"PlayerSelectSpawn","parent":"GM","type":"hook","ishook":true,"description":"Called to determine a spawn point for a player to spawn at.","realm":"Server","predicted":"No","args":{"arg":[{"text":"The player who needs a spawn point","name":"ply","type":"Player"},{"text":"If true, the player just spawned from a map transition. You probably want to not return an entity for that case to not override player's position.","name":"transition","type":"boolean"}]},"rets":{"ret":{"text":"The spawnpoint entity to spawn the player at","name":"","type":"Entity"}}},"example":{"description":"Find a random spawn point","code":"function GM:PlayerSelectSpawn( pl )\n    \n    local spawns = ents.FindByClass( \"info_player_start\" )\n    local random_entry = math.random( #spawns )\n    \n    return spawns[ random_entry ]\n\t\nend"}},
{"function":{"name":"PlayerSay","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called when a player dispatched a chat message. For the clientside equivalent, see .","page":"GM:OnPlayerChat"},"realm":"Server","predicted":"No","args":{"arg":[{"text":"The player which sent the message.","name":"sender","type":"Player"},{"text":"The message's content","name":"text","type":"string"},{"text":"Is team chat?","name":"teamChat","type":"boolean"}]},"rets":{"ret":{"text":"What to show instead of original text.\n\n\nSet to \"\" to stop the message from displaying.","name":"","type":"string"}}},"example":{"description":"Will put \"[Global]\" in front of the players message if they type \"/all \" before the message.","code":"hook.Add(\"PlayerSay\", \"PlayerSayExample\", function( ply, text, team )\n\t-- Make the chat message entirely lowercase\n\tif ( string.sub(string.lower( text ),1,4) == \"/all\" ) then\n\t\treturn \"[Global] \" .. string.sub( text, 5 ) -- add [Global] in front of the players text then display\n\tend\nend)"}},
{"function":{"name":"PlayerRequestTeam","parent":"GM","type":"hook","ishook":true,"description":{"text":"Request a player to join the team. This function will check if the team is available to join or not.\n\nThis hook is called when the player runs \"changeteam\" in the console.\n\nTo prevent the player from changing teams, see","page":"GM:PlayerCanJoinTeam"},"realm":"Server","predicted":"No","args":{"arg":[{"text":"The player to try to put into a team","name":"ply","type":"Player"},{"text":"Team to put the player into if the checks succeeded","name":"team","type":"number"}]}}},
{"function":{"name":"PlayerPostThink","parent":"GM","type":"hook","ishook":true,"description":"Called after the player's think.","realm":"Shared","args":{"arg":{"text":"The player","name":"ply","type":"Player"}}}},
{"function":{"name":"PlayerNoClip","parent":"GM","type":"hook","ishook":true,"description":"Called when a player tries to switch noclip mode.","realm":"Shared","predicted":"Yes","args":{"arg":[{"text":"The person who entered/exited noclip","name":"ply","type":"Player"},{"text":"Represents the noclip state (on/off) the user will enter if this hook allows them to.","name":"desiredState","type":"boolean"}]},"rets":{"ret":{"text":"Return false to disallow the switch.","name":"","type":"boolean"}}},"example":[{"description":"Disable Noclip for all but admins.","code":"local function DisableNoclip( ply )\n\treturn ply:IsAdmin()\nend\nhook.Add( \"PlayerNoClip\", \"DisableNoclip\", DisableNoclip )"},{"description":"Get the player when they enter/exit no clip and display their status","code":"hook.Add( \"PlayerNoClip\", \"isInNoClip\", function( ply, desiredNoClipState )\n\tif ( desiredNoClipState ) then\n\t\tprint( ply:Name() .. \" wants to enter noclip.\" )\n\telse\n\t\tprint( ply:Name() .. \" wants to leave noclip.\" )\n\tend\nend )","outputfixedwidth":"Fixed width","output":"Player [1][Player1]\ttrue\nPlayer [1][Player2]\tfalse"},{"description":"While keeping the default behaviour of admin-only noclip, the following example will also allow anyone to turn it off (if it's set on by a third-party administration addon, for example).","code":"hook.Add( \"PlayerNoClip\", \"FeelFreeToTurnItOff\", function( ply, desiredState )\n\tif ( desiredState == false ) then -- the player wants to turn noclip off\n\t\treturn true -- always allow\n\telseif ( ply:IsAdmin() ) then\n\t\treturn true -- allow administrators to enter noclip\n\tend\nend )"}]},
{"function":{"name":"PlayerLoadout","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called to give players the default set of weapons.","note":{"text":"This function may not work in your custom gamemode if you have overridden your  and you do not use self.BaseClass.PlayerSpawn or .","page":["GM:PlayerSpawn","hook.Call"]}},"realm":"Server","predicted":"No","args":{"arg":{"text":"Player to give weapons to.","name":"ply","type":"Player"}}},"example":{"description":"Gives the player only a pistol.","code":"function GM:PlayerLoadout( ply )\n\tply:Give( \"weapon_pistol\" )\n\n\t-- Prevent default Loadout.\n\treturn true\nend"}},
{"function":{"name":"PlayerLeaveVehicle","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called when a player leaves a vehicle.","note":"For vehicles with exit animations, this will be called **at the end** of the animation, **not at the start**!","bug":{"text":"This is not called when a different vehicle is immediately entered with .","issue":"2619","page":"Player:EnterVehicle"}},"realm":"Server","predicted":"No","args":{"arg":[{"text":"Player who left a vehicle.","name":"ply","type":"Player"},{"text":"Vehicle the player left.","name":"veh","type":"Vehicle"}]}},"example":{"description":"Make the vehicle continue running (or more precisely start its engine again) when a player exists it, unless the player holds their Reload key.","code":"hook.Add( \"PlayerLeaveVehicle\", \"PlayerLeaveVehicleTurnOn\", function( ply, veh )\n\tif ( ply:KeyDown( IN_RELOAD ) ) then return end\n\n\t-- We need to wait a few frames for the vehicle to stop working\n\ttimer.Create( \"magic timer\" .. veh:EntIndex(), 0, 2, function()\n\t\t-- Only run on the last time the timer is fired\n\t\tif ( timer.RepsLeft( \"magic timer\" .. veh:EntIndex() ) > 0 ) then return end\n\n\t\tveh:StartEngine( true ) -- Start the engine back up\n\t\tveh:ReleaseHandbrake() -- Release the handbrake\n\tend )\nend )"}},
{"function":{"name":"PlayerJoinTeam","parent":"GM","type":"hook","ishook":true,"description":{"text":"Makes the player join a specified team. This is a convenience function that calls  and runs the  hook.","page":["Player:SetTeam","GM:OnPlayerChangedTeam"]},"realm":"Server","predicted":"No","args":{"arg":[{"text":"Player to force","name":"ply","type":"Player"},{"text":"The team to put player into","name":"team","type":"number"}]}}},
{"function":{"name":"PlayerHurt","parent":"GM","type":"hook","ishook":true,"description":"Called when a player gets hurt.","realm":"Server","predicted":"No","args":{"arg":[{"text":"Victim","name":"victim","type":"Player"},{"text":"Attacker Entity","name":"attacker","type":"Entity"},{"text":"Remaining Health","name":"healthRemaining","type":"number"},{"text":"Damage Taken","name":"damageTaken","type":"number"}]}},"example":{"description":"Show players attacker in Chat.","code":"function GM:PlayerHurt(victim, attacker)\n    if ( attacker:IsPlayer() ) then\n        victim:ChatPrint(\"You were attacked by : \" .. attacker:Nick())\n    end\nend"}},
{"function":{"name":"PlayerInitialSpawn","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called when the player spawns for the first time.\n\nSee  for a hook called every player spawn.","page":"GM:PlayerSpawn","note":{"text":"This hook is called before the player has fully loaded, when the player is still in seeing the \"Starting Lua\" screen. For example, trying to use the  function will return the default model (\"player/default.mdl\")","page":"Entity:GetModel"},"warning":{"text":"Due to the above note, sending  messages to the spawned player in this hook is highly unreliable, and they most likely won't be received. See https://github.com/Facepunch/garrysmod-requests/issues/718. A quick and dirty work-around is to delay any sending using  with at least 5 seconds delay.","page":["net","timer.Simple"]}},"realm":"Server","predicted":"No","args":{"arg":[{"text":"The player who spawned.","name":"player","type":"Player"},{"text":"If true, the player just spawned from a map transition.","name":"transition","type":"boolean"}]}},"example":{"description":"Prints the name of the player joining.","code":"function GM:PlayerInitialSpawn(ply)\n\tprint( ply:GetName()..\" joined the server.\\n\" )\nend\n\n-- That way you are overriding the default hook\n-- you can use hook.Add to make more functions get called when this event occurs\nlocal function spawn(ply)\n\tprint( ply:GetName()..\" joined the game.\\n\")\nend\nhook.Add( \"PlayerInitialSpawn\", \"some_unique_name\", spawn )","output":"Player1 joined the game"}},
{"function":{"name":"PlayerFrozeObject","parent":"GM","type":"hook","ishook":true,"description":"Called when a player freezes an object.","realm":"Server","args":{"arg":[{"text":"Player who has frozen an object","name":"ply","type":"Player"},{"text":"The frozen object","name":"ent","type":"Entity"},{"text":"The frozen physics object of the frozen entity ( For ragdolls )","name":"physobj","type":"PhysObj"}]}}},
{"function":{"name":"PlayerFootstep","parent":"GM","type":"hook","ishook":true,"description":"Called whenever a player steps. Return true to mute the normal sound.","realm":"Shared","predicted":"No","hidepredictionwarning":"No","args":{"arg":[{"text":"The stepping player","name":"ply","type":"Player"},{"text":"The position of the step","name":"pos","type":"Vector"},{"text":"Foot that is stepped. 0 for left, 1 for right","name":"foot","type":"number"},{"text":"Sound that is going to play","name":"sound","type":"string"},{"text":"Volume of the footstep","name":"volume","type":"number"},{"text":"The Recipient filter of players who can hear the footstep","name":"filter","type":"CRecipientFilter"}]},"rets":{"ret":{"text":"Prevent default step sound","name":"","type":"boolean"}}},"example":{"description":"Disables default player footsteps and plays custom ones.","code":"function GM:PlayerFootstep( ply, pos, foot, sound, volume, rf ) \n\tply:EmitSound(\"NPC_Hunter.Footstep\") -- Play the footsteps hunter is using\n\treturn true -- Don't allow default footsteps\nend"}},
{"function":{"name":"PlayerEnteredVehicle","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called when a player enters a vehicle.\n\nCalled just after .\n\nSee also .","page":["GM:CanPlayerEnterVehicle","GM:PlayerLeaveVehicle"]},"realm":"Server","predicted":"No","args":{"arg":[{"text":"Player who entered vehicle","name":"ply","type":"Player"},{"text":"Vehicle the player entered","name":"veh","type":"Vehicle"},{"name":"role","type":"number"}]}}},
{"function":{"name":"PlayerEndVoice","parent":"GM","type":"hook","ishook":true,"description":"Called when player stops using voice chat.","realm":"Client","args":{"arg":{"text":"Player who stopped talking","name":"ply","type":"Player"}}}},
{"function":{"name":"PlayerDroppedWeapon","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called when a weapon is dropped by a player via .\n\nSee also  for a hook when a player picks up a weapon.\n\nThe weapon's  will be NULL at the time this hook is called.\n\n\n will be called before this hook is.","page":["Player:DropWeapon","GM:WeaponEquip","Entity:GetOwner","WEAPON:OnDrop"]},"realm":"Server","predicted":"No","args":{"arg":[{"text":"The player who owned this weapon before it was dropped","name":"owner","type":"Player"},{"text":"The weapon that was dropped","name":"wep","type":"Weapon"}]}}},
{"function":{"name":"PlayerDriveAnimate","parent":"GM","type":"hook","ishook":true,"description":"Called to update the player's animation during a drive.","realm":"Shared","predicted":"No","args":{"arg":{"text":"The driving player","name":"ply","type":"Player"}}}},
{"function":{"name":"PlayerDisconnected","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called when a player leaves the server. See the  for a shared version of this hook.","page":",player_disconnect gameeventGame_Events","bug":{"text":"This is not called in single-player or listen servers for the host.","issue":"3523"}},"realm":"Server","predicted":"No","args":{"arg":{"text":"the player","name":"ply","type":"Player"}}},"example":{"description":"Print a message to the chatbox upon player disconnect","code":"function GM:PlayerDisconnected( ply )\n     PrintMessage( HUD_PRINTTALK, ply:Name().. \" has left the server.\" )\nend","output":"Player1 has left the server."}},
{"function":{"name":"PlayerDeathThink","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called every think while the player is dead. The return value will determine if the player respawns.\n\nOverwriting this function will prevent players from respawning by pressing space or clicking.","bug":{"text":"This hook is not called for players with the  flag applied.","issue":"1577","page":",FL_FROZENEnums/FL"}},"realm":"Server","predicted":"No","args":{"arg":{"text":"The player affected in the hook.","name":"ply","type":"Player"}},"rets":{"ret":{"text":"Allow spawn","name":"","type":"boolean"}}}},
{"function":{"name":"PlayerDeathSound","parent":"GM","type":"hook","ishook":true,"description":"Returns whether or not the default death sound should be muted.","realm":"Server","predicted":"No","rets":{"ret":{"text":"Mute death sound","name":"","type":"boolean"}}}},
{"function":{"name":"PlayerDeath","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called when a player is killed by  or any other normal means.\n\nThis hook is **not** called if the player is killed by . See  for that.\n\n*  is called **before** this hook.\n*  is called **after** this hook.\n\nSee  if you need to get the last hit hitgroup of the player.","page":["Player:Kill","Player:KillSilent","GM:PlayerSilentDeath","GM:DoPlayerDeath","GM:PostPlayerDeath","Player:LastHitGroup"],"note":{"text":"will return true in this hook.","page":"Player:Alive"}},"realm":"Server","predicted":"No","args":{"arg":[{"text":"The player who died","name":"victim","type":"Player"},{"text":"Item used to kill the victim","name":"inflictor","type":"Entity"},{"text":"Player or entity that killed the victim","name":"attacker","type":"Entity"}]}},"example":{"description":"If the player suicides (he is the killer and the victim (ply)), then it will print a message to console. If someone else kills him, it will print a different message to console.","code":"function GM:PlayerDeath( victim, inflictor, attacker )\n    if ( victim == attacker ) then\n        PrintMessage( HUD_PRINTTALK, victim:Name() .. \" committed suicide.\" )\n    else\n        PrintMessage( HUD_PRINTTALK, victim:Name() .. \" was killed by \" .. attacker:Name() .. \".\")\n    end\nend","output":"If suicide:\n\nPlayer1 has committed suicide.\n\nElse:\n\nPlayer1 was killed by Player2."}},
{"function":{"name":"PlayerConnect","parent":"GM","type":"hook","ishook":true,"description":{"text":"Executes when a player connects to the server. Called before the player has been assigned a  and entity. See the  for a version of this hook called after the player entity has been created.","page":[",UserIDPlayer:UserID",",player_connect gameeventGame_Events"],"note":["This is only called clientside for listen server hosts.","This is not called clientside for the local player."]},"realm":"Shared","predicted":"No","args":{"arg":[{"text":"The player's name.","name":"name","type":"string"},{"text":"The player's IP address. Will be \"none\" for bots.","name":"ip","type":"string","note":"This argument will only be passed serverside."}]}},"example":{"description":"prints a message to the chatbox when a player joins the game","code":"function GM:PlayerConnect( name, ip )\n\tPrintMessage( HUD_PRINTTALK, name .. \" has joined the game.\" )\nend","output":"Player1 has joined the game."}},
{"function":{"name":"PlayerClassChanged","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called whenever a player's class is changed on the server-side with .","internal":"","page":"player_manager.SetPlayerClass"},"realm":"Client","predicted":"No","file":{"text":"gamemodes/base/gamemode/cl_init.lua","line":"682"},"args":{"arg":[{"text":"The player whose class has been changed.","name":"ply","type":"Player"},{"text":"The network ID of the player class's name string, or 0 if we are clearing a player class from the player.\n\nPass this into  to retrieve the proper name of the player class.","name":"newID","type":"number","page":"util.NetworkIDToString"}]}}},
{"function":{"name":"PlayerChangedTeam","parent":"GM","type":"hook","ishook":true,"added":"2020.03.17","description":{"text":"Called when a player has changed team using .","page":"Player:SetTeam","warning":{"text":"Avoid calling  in this hook as it may cause an infinite loop!","page":"Player:SetTeam"}},"realm":"Server","predicted":"No","args":{"arg":[{"text":"Player whose team has changed","name":"ply","type":"Player"},{"text":"Index of the team the player was originally in. See  and the  library.","name":"oldTeam","type":"number","page":["team.GetName","team"]},{"text":"Index of the team the player has changed to","name":"newTeam","type":"number"}]}}},
{"function":{"name":"PlayerCanPickupWeapon","parent":"GM","type":"hook","ishook":true,"description":"Returns whether or not a player is allowed to pick up a weapon.","realm":"Server","predicted":"No","args":{"arg":[{"text":"The player attempting to pick up the weapon","name":"ply","type":"Player"},{"text":"The weapon entity in question","name":"wep","type":"Weapon"}]},"rets":{"ret":{"text":"Allowed pick up or not","name":"","type":"boolean"}}},"example":[{"description":"Disallows picking up a weapon if player already has this weapon.\n( Prevents ammo pickups from lying guns )","code":"hook.Add( \"PlayerCanPickupWeapon\", \"noDoublePickup\", function( ply, wep )\n    if ( ply:HasWeapon( wep:GetClass() ) ) then return false end\nend )"},{"description":"Players can only pick up the HL2 Pistol.","code":"function GM:PlayerCanPickupWeapon(ply, wep)\n    return (wep:GetClass() == \"weapon_pistol\")\nend"},{"description":"How you could give a player an alternate weapon to the one they picked up (such as an RPG Launcher rather than a pistol)","code":"hook.Add( \"PlayerCanPickupWeapon\", \"NoPistolGiveFists\", function( ply, wep )\n\tif wep:GetClass() == \"weapon_pistol\" then -- if the weapon they are trying to pick up is a pistol\n\t\tply:Give( \"weapon_rpg\" ) -- give them an RPG\n\t\twep:Remove() -- remove the one they were trying to pick up\n\t\treturn false -- don't give them a pistol\n\tend\nend )"}]},
{"function":{"name":"PlayerCanPickupItem","parent":"GM","type":"hook","ishook":true,"description":"Returns whether or not a player is allowed to pick an item up.","realm":"Server","predicted":"No","args":{"arg":[{"text":"Player attempting to pick up","name":"ply","type":"Player"},{"text":"The item the player is attempting to pick up","name":"item","type":"Entity"}]},"rets":{"ret":{"text":"Allow pick up","name":"","type":"boolean"}}}},
{"function":{"name":"PlayerCanSeePlayersChat","parent":"GM","type":"hook","ishook":true,"description":"Returns whether or not the player can see the other player's chat.","realm":"Server","predicted":"No","args":{"arg":[{"text":"The chat text","name":"text","type":"string"},{"text":"If the message is team-only","name":"teamOnly","type":"boolean"},{"text":"The player receiving the message","name":"listener","type":"Player"},{"text":"The player sending the message","name":"speaker","type":"Player"}]},"rets":{"ret":{"text":"Can see other player's chat","name":"","type":"boolean"}}}},
{"function":{"name":"PlayerCanJoinTeam","parent":"GM","type":"hook","ishook":true,"description":"Returns whether or not a player is allowed to join a team","realm":"Server","args":{"arg":[{"text":"Player attempting to switch teams","name":"ply","type":"Player"},{"text":"Index of the team","name":"team","type":"number"}]},"rets":{"ret":{"text":"Allowed to switch","name":"","type":"boolean"}}}},
{"function":{"name":"PlayerCanHearPlayersVoice","parent":"GM","type":"hook","ishook":true,"description":{"text":"Decides whether a player can hear another player using voice chat.","note":"This hook is called several times a tick, so ensure your code is efficient."},"realm":"Server","predicted":"No","hidepredictionwarning":"No","args":{"arg":[{"text":"The listening player.","name":"listener","type":"Player"},{"text":"The talking player.","name":"talker","type":"Player"}]},"rets":{"ret":[{"text":"Return true if the listener should hear the talker, false if they shouldn't.","name":"","type":"boolean"},{"text":"3D sound. If set to true, will fade out the sound the further away listener is from the  talker, the voice will also be in stereo, and not mono.","name":"","type":"boolean"}]}},"example":{"description":"Players can only hear each other if they are within 500 units.","code":"hook.Add(\"PlayerCanHearPlayersVoice\", \"Maximum Range\", function(listener, talker)\n    if listener:GetPos():Distance(talker:GetPos()) > 500 then return false end\nend)"}},
{"function":{"name":"PlayerButtonUp","parent":"GM","type":"hook","ishook":true,"description":"Called when a player releases a button.","realm":"Shared","predicted":"Yes","args":{"arg":[{"text":"Player who released the button","name":"ply","type":"Player"},{"text":"The button, see","name":"button","type":"number","page":"Enums/BUTTON_CODE"}]}}},
{"function":{"name":"PlayerButtonDown","parent":"GM","type":"hook","ishook":true,"description":"Called when a player presses a button.","realm":"Shared","predicted":"Yes","args":{"arg":[{"text":"Player who pressed the button","name":"ply","type":"Player"},{"text":"The button, see","name":"button","type":"number","page":"Enums/BUTTON_CODE"}]}}},
{"function":{"name":"PlayerBindPress","parent":"GM","type":"hook","ishook":true,"description":{"text":"Runs when a bind has been pressed. Allows to block commands.","note":["By using the \"alias\" console command, this hook can be effectively circumvented",{"text":"To stop the user from using +attack, +left and any other movement commands of the sort, please look into using  instead","page":"GM:StartCommand"}],"bug":[{"text":"The third argument will always be true.","issue":"1176"},{"text":"This does not run for function keys binds (F1-F12).","issue":"2888"}]},"realm":"Client","predicted":"No","args":{"arg":[{"text":"The player who used the command; this will always be equal to","name":"ply","type":"Player","page":"Global.LocalPlayer"},{"text":"The bind command","name":"bind","type":"string"},{"text":"If the bind was activated or deactivated","name":"pressed","type":"boolean"}]},"rets":{"ret":{"text":"Return true to prevent the bind","name":"","type":"boolean"}}},"example":{"description":"Prevents players from using flashlight.","code":"hook.Add( \"PlayerBindPress\", \"PlayerBindPressExample\", function( ply, bind, pressed )\n\t--To block more commands, you could add another line similar to\n\t--the one below, just replace the command\n\tif ( string.find( bind, \"impulse 100\" ) ) then return true end\nend )"}},
{"function":{"name":"PlayerAuthed","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called once when the player is authenticated.","bug":{"text":"returns 0 in this hook.","issue":"3026","page":"Global.CurTime"}},"realm":"Server","predicted":"No","args":{"arg":[{"text":"The player","name":"ply","type":"Player"},{"text":"The player's SteamID","name":"steamid","type":"string"},{"text":"The player's UniqueID","name":"uniqueid","type":"string"}]}},"example":{"code":"function GM:PlayerAuthed( ply, steamid, uniqueid )\n    print( ply:Name() .. \" has been authenticated as \" .. steamid .. \".\" )\nend","outputfixedwidth":"Fixed width","output":"Player1 has been authenticated as STEAM_0:1:12345678."}},
{"function":{"name":"PhysgunDrop","parent":"GM","type":"hook","ishook":true,"description":"Called when a player drops an entity with the Physgun.","realm":"Shared","args":{"arg":[{"text":"The player who dropped an entitiy","name":"ply","type":"Player"},{"text":"The dropped entity","name":"ent","type":"Entity"}]}}},
{"function":{"name":"PhysgunPickup","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called to determine if a player should be able to pick up an entity with the Physics Gun.\n\nSee  for a hook which is called when a player has successfully picked up an entity.","page":"GM:OnPhysgunPickup"},"realm":"Shared","predicted":"Yes","args":{"arg":[{"text":"The player that is picking up using the Physics Gun.","name":"player","type":"Player"},{"text":"The entity that is being picked up.","name":"entity","type":"Entity"}]},"rets":{"ret":{"text":"Returns whether the player can pick up the entity or not.","name":"","type":"boolean"}}},"example":{"description":"Allows Admins to pick up players.","code":"hook.Add( \"PhysgunPickup\", \"AllowPlayerPickup\", function( ply, ent )\n\tif ( ply:IsAdmin() and ent:IsPlayer() ) then\n\t\treturn true\n\tend\nend )"}},
{"function":{"name":"OnViewModelChanged","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called when the player changes their weapon to another one - and their viewmodel model changes.","bug":{"text":"This is not always called clientside.","issue":"2473"}},"realm":"Shared","predicted":"No","args":{"arg":[{"text":"The viewmodel that is changing","name":"viewmodel","type":"Entity"},{"text":"The old model","name":"oldModel","type":"string"},{"text":"The new model","name":"newModel","type":"string"}]}}},
{"function":{"name":"OnUndo","parent":"GM","type":"hook","ishook":true,"description":"Called when the player undoes something.","realm":"Client","predicted":"No","args":{"arg":[{"text":"The name of the undo action","name":"name","type":"string"},{"text":"The custom text for the undo, set by","name":"customText","type":"string","page":"undo.SetCustomUndoText"}]}},"example":{"description":"Print a message when the player undoes something.","code":"function GM:OnUndo( name, customText )\n     if customText != nil then\n          MsgN( \"Undone \" .. customText )\n     else\n          MsgN( \"Undone \" .. name )\n     end\nend","output":"Undone <action>"}},
{"function":{"name":"OnTextEntryLoseFocus","parent":"GM","type":"hook","ishook":true,"description":"Called when DTextEntry loses focus.","realm":"Client","args":{"arg":{"text":"The panel that lost focus","name":"panel","type":"Panel"}}}},
{"function":{"name":"OnTextEntryGetFocus","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called when a  gets focus.\n\nThis hook is run from  and  of .","page":["DTextEntry","DTextEntry:OnGetFocus","PANEL:OnMousePressed","DTextEntry"]},"realm":"Client","args":{"arg":{"text":"The panel that got focus","name":"panel","type":"Panel"}}}},
{"function":{"name":"OnSpawnMenuOpen","parent":"GM","type":"hook","ishook":true,"description":"Called when a player presses the \"+menu\" bind on their keyboard, which is bound to Q by default.","realm":"Client","predicted":"No"}},
{"function":{"name":"OnSpawnMenuClose","parent":"GM","type":"hook","ishook":true,"description":"Called when a player releases the \"+menu\" bind on their keyboard, which is bound to Q by default.","realm":"Client","predicted":"No"}},
{"function":{"name":"OnScreenSizeChanged","parent":"GM","type":"hook","ishook":true,"added":"2020.03.20","description":{"text":"Called when the player's screen resolution of the game changes.\n\n and  will return the new values when this hook is called.","page":["Global.ScrW","Global.ScrH"]},"realm":"Client","predicted":"No","args":{"arg":[{"text":"The previous width  of the game's window","name":"oldWidth","type":"number"},{"text":"The previous height of the game's window","name":"oldHeight","type":"number"}]}}},
{"function":{"name":"OnReloaded","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called when gamemode has been reloaded by auto refresh.","note":"It seems that this event can be triggered more than once for a single refresh event."},"realm":"Shared","predicted":"No","hidepredictionwarning":"No"}},
{"function":{"name":"OnPlayerHitGround","parent":"GM","type":"hook","ishook":true,"description":"Called when a player makes contact with the ground.","realm":"Shared","predicted":"Yes","args":{"arg":[{"text":"Player","name":"player","type":"Entity"},{"text":"Did the player land in water?","name":"inWater","type":"boolean"},{"text":"Did the player land on an object floating in the water?","name":"onFloater","type":"boolean"},{"text":"The speed at which the player hit the ground","name":"speed","type":"number"}]},"rets":{"ret":{"text":"Return true to suppress default action","name":"","type":"boolean"}}},"example":{"description":"Explode players when they hit the ground too hard.","code":"function GM:OnPlayerHitGround( ply, inWater, onFloater, speed )\n    if speed > 1000 && !inWater then\n        local exp = ents.Create(\"env_explosion\")\n        exp:SetPos(ply:GetPos())\n        exp:Spawn()\n        exp:SetKeyValue(\"iMagnitude\", \"0\")\n        exp:Fire(\"Explode\", 0, 0)\n \n        ply:Kill()\n    end\nend"}},
{"function":{"name":"OnPlayerChat","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called whenever a player sends a chat message. For the serverside equivalent, see .","page":"GM:PlayerSay","note":{"text":"The text input of this hook depends on . If it is suppressed on the server, it will be suppressed on the client. This also means, that a message surpressed with this hook will be still visible to other clients.","page":"GM:PlayerSay"}},"realm":"Client","predicted":"No","args":{"arg":[{"text":"The player","name":"ply","type":"Player"},{"text":"The message's text","name":"text","type":"string"},{"text":"Is the player typing in team chat?","name":"teamChat","type":"boolean"},{"text":"Is the player dead?","name":"isDead","type":"boolean"}]},"rets":{"ret":{"text":"Should the message be suppressed?","name":"","type":"boolean"}}},"example":[{"description":"Code from base gamemode. See garrysmod/gamemodes/base/gamemode/cl_init.lua#L139","code":"function GM:OnPlayerChat( player, strText, bTeamOnly, bPlayerIsDead )\n \n\t--\n\t-- I've made this all look more complicated than it is. Here's the easy version\n\t--\n\t-- chat.AddText( player, Color( 255, 255, 255 ), \": \", strText )\n\t--\n\n\tlocal tab = {}\n\n\tif ( bPlayerIsDead ) then\n\t\ttable.insert( tab, Color( 255, 30, 40 ) )\n\t\ttable.insert( tab, \"*DEAD* \" )\n\tend\n\n\tif ( bTeamOnly ) then\n\t\ttable.insert( tab, Color( 30, 160, 40 ) )\n\t\ttable.insert( tab, \"(TEAM) \" )\n\tend\n\n\tif ( IsValid( player ) ) then\n\t\ttable.insert( tab, player )\n\telse\n\t\ttable.insert( tab, \"Console\" )\n\tend\n\n\ttable.insert( tab, Color( 255, 255, 255 ) )\n\ttable.insert( tab, \": \"..strText )\n\n\tchat.AddText( unpack(tab) )\n\n\treturn true\n \nend"},{"description":"How you could create a clientside only chat command.","code":"hook.Add( \"OnPlayerChat\", \"HelloCommand\", function( ply, strText, bTeam, bDead ) \n    if ( ply != LocalPlayer() ) then return end\n\n\tstrText = string.lower( strText ) -- make the string lower case\n\n\tif (strText == \"/hello\") then -- if the player typed /hello then\n\t\tprint(\"Hello world!\") -- print Hello world to the console\n\t\treturn true -- this suppresses the message from being shown\n\tend\n\nend )","output":"Prints \"Hello world!\" to the console when you type /hello in the chat."}]},
{"function":{"name":"OnPhysgunReload","parent":"GM","type":"hook","ishook":true,"description":"Called when a player reloads with the physgun. Override this to disable default unfreezing behavior.","realm":"Server","predicted":"No","args":{"arg":[{"text":"The physgun in question","name":"physgun","type":"Weapon"},{"text":"The player wielding the physgun","name":"ply","type":"Player"}]},"rets":{"ret":{"text":"Whether the player can reload with the physgun or not","name":"","type":"boolean"}}}},
{"function":{"name":"OnPlayerChangedTeam","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called when a player has changed team using .","deprecated":{"text":"Use  instead, which works for every  call.","page":["GM:PlayerChangedTeam","Player:SetTeam"]},"page":"GM:PlayerJoinTeam","warning":{"text":"This hook will not work with  and it is only called manually from  by the base gamemode","page":["hook.Add","GM:PlayerJoinTeam"]}},"realm":"Server","predicted":"No","args":{"arg":[{"text":"Player who has changed team","name":"ply","type":"Player"},{"text":"Index of the team the player was originally in","name":"oldTeam","type":"number"},{"text":"Index of the team the player has changed to","name":"newTeam","type":"number"}]}}},
{"function":{"name":"OnPhysgunPickup","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called to when a player has successfully picked up an entity with their Physics Gun.\n\nNot to be confused with  which is called multiple times to ask if the player should be able to pick up an entity.","page":"GM:PhysgunPickup"},"realm":"Server","predicted":"No","args":{"arg":[{"text":"The player that has picked up something using the physics gun.","name":"ply","type":"Player"},{"text":"The entity that was picked up.","name":"ent","type":"Entity"}]}}},
{"function":{"name":"OnNPCKilled","parent":"GM","type":"hook","ishook":true,"description":"Called whenever an NPC is killed.","realm":"Server","predicted":"No","hidepredictionwarning":"No","args":{"arg":[{"text":"The killed NPC","name":"npc","type":"NPC"},{"text":"The NPCs attacker, the entity that gets the kill credit, for example a player or an NPC.","name":"attacker","type":"Entity"},{"text":"Death inflictor. The entity that did the killing. Not necessarily a weapon.","name":"inflictor","type":"Entity"}]}}},
{"function":{"name":"OnPhysgunFreeze","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called when a player freezes an entity with the physgun.","bug":{"text":"This is not called for players or NPCs being held with the physgun.","issue":"723"}},"realm":"Server","predicted":"No","args":{"arg":[{"text":"The weapon that was used to freeze the entity.","name":"weapon","type":"Entity"},{"text":"Physics object of the entity.","name":"physobj","type":"PhysObj"},{"text":"The target entity.","name":"ent","type":"Entity"},{"text":"The player who tried to freeze the entity.","name":"ply","type":"Player"}]},"rets":{"ret":{"text":"Allows you to override whether the player can freeze the entity","name":"","type":"boolean"}}},"example":{"description":"Only allows admins to freeze things.","code":"hook.Add( \"OnPhysgunFreeze\", \"PhysFreeze\", function( weapon, phys, ent, ply )\n\n  \tif ( !ply:IsAdmin() ) then\n\n\t\treturn false\n\n\tend\n\nend )"}},
{"function":{"name":"OnLuaError","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called when a Lua error occurs, only works in the Menu realm.","warning":"Modify menu state Lua code at your own risk!"},"realm":"Menu","predicted":"No","file":{"text":"lua/menu/errors.lua","line":"11"},"args":{"arg":[{"text":"The error that occurred.","name":"error","type":"string"},{"text":"Where the Lua error took place","name":"realm","type":"number"},{"text":"Title of the addon that is creating the Lua errors","name":"name","type":"string"},{"text":"Steam Workshop ID of the addon creating Lua errors, if it is an addon.","name":"id","type":"number"}]}},"example":{"description":"Code from garrysmod/lua/menu/errors.lua","code":{"text":"local Errors = {}\n\nhook.Add( \"OnLuaError\", \"MenuErrorHandler\", function( str, realm, addontitle, addonid )\n\n\tlocal text = \"Something is creating script errors\"\n\n\t--\n\t-- This error is caused by a specific addon\n\t--\n\tif ( isstring( addonid ) ) then\n\n\t\t--\n\t\t-- Down Vote\n\t\t--\n\t\t-- steamworks.Vote( addonid, false )\n\n\t\t--\n\t\t-- Disable Naughty Addon\n\t\t--\n\t\t--timer.Simple( 5, function()\n\t\t--\tMsgN( \"Disabling addon '\", addontitle, \"' due to lua errors\" )\n\t\t--\tsteamworks.SetShouldMountAddon( addonid, false )\n\t\t--\tsteamworks.ApplyAddons()\n\t\t--end )\n\n\t\ttext = \"The addon \\\"\" .. addontitle .. \"\\\" is creating errors, check the console for details\"\n\n\tend\n\n\tif ( addonid == nil ) then addonid = 0 end\n\n\tif ( Errors[ addonid ] ) then\n\n\t\tErrors[ addonid ].times\t= Errors[ addonid ].times + 1\n\t\tErrors[ addonid ].last\t= SysTime()\n\n\t\treturn\n\tend\n\n\tlocal error = {\n\t\tfirst\t= SysTime(),\n\t\tlast\t= SysTime(),\n\t\ttimes\t= 1,\n\t\ttitle\t= addontitle,\n\t\tx\t\t= 32,\n\t\ttext\t= text\n\t}\n\n\tErrors[ addonid ] = error\n\nend )\n\nlocal matAlert = Material( \"icon16/error.png\" )\n\nhook.Add( \"DrawOverlay\", \"MenuDrawLuaErrors\", function()\n\n\tif ( table.IsEmpty( Errors ) ) then return end\n\n\tlocal idealy = 32\n\tlocal height = 30\n\tlocal EndTime = SysTime() - 10\n\tlocal Recent = SysTime() - 0.5\n\n\tfor k, v in SortedPairsByMemberValue( Errors, \"last\" ) do\n\n\t\tsurface.SetFont( \"DermaDefaultBold\" )\n\t\tif ( v.y == nil ) then v.y = idealy end\n\t\tif ( v.w == nil ) then v.w = surface.GetTextSize( v.text ) + 48 end\n\n\t\tdraw.RoundedBox( 2, v.x + 2, v.y + 2, v.w, height, Color( 40, 40, 40, 255 ) )\n\t\tdraw.RoundedBox( 2, v.x, v.y, v.w, height, Color( 240, 240, 240, 255 ) )\n\n\t\tif ( v.last > Recent ) then\n\n\t\t\tdraw.RoundedBox( 2, v.x, v.y, v.w, height, Color( 255, 200, 0, ( v.last - Recent ) * 510 ) )\n\n\t\tend\n\n\t\tsurface.SetTextColor( 90, 90, 90, 255 )\n\t\tsurface.SetTextPos( v.x + 34, v.y + 8 )\n\t\tsurface.DrawText( v.text )\n\n\t\tsurface.SetDrawColor( 255, 255, 255, 150 + math.sin( v.y + SysTime() * 30 ) * 100 )\n\t\tsurface.SetMaterial( matAlert )\n\t\tsurface.DrawTexturedRect( v.x + 6, v.y + 6, 16, 16 )\n\n\t\tv.y = idealy\n\n\t\tidealy = idealy + 40\n\n\t\tif ( v.last","endtime":{"then":"","errorsk":"nil","end":"","ode":"ode"}}}},
{"function":{"name":"OnGamemodeLoaded","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called when the gamemode is loaded.\n\n() returns NULL at the time this is run.","page":"Global.LocalPlayer"},"realm":"Shared","predicted":"No"}},
{"function":{"name":"OnEntityCreated","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called when the entity is created.","note":{"text":"Some entities on initial map spawn are passed through this hook, and then removed in the same frame. This is used by the engine to precache things like models and sounds, so always check their validity with .","page":"Global.IsValid"},"warning":{"text":"Removing the created entity during this event can lead to unexpected problems. Use ( 0, .... ) to safely remove the entity.","page":"timer.Simple"}},"realm":"Shared","predicted":"No","args":{"arg":{"text":"The entity","name":"entity","type":"Entity"}}},"example":[{"description":"When a prop spawns it yells.","code":"function GM:OnEntityCreated( ent )\n\tif ( ent:GetClass() == \"prop_physics\" ) then\n\t\tent:EmitSound( \"vo/npc/male01/no02.wav\" )\n\tend\nend"},{"description":"Adds all props and ragdolls into a list. More efficient alternative to looping over ents.GetAll().","code":"local TrackedEnts =\n{\n\t[ \"prop_physics\" ] = true,\n\t[ \"prop_ragdoll\" ] = true\n}\n\nlocal EntList = {}\n\nhook.Add( \"OnEntityCreated\", \"SoftEntList\", function( ent )\n\tif ( not ent:IsValid() or not TrackedEnts[ ent:GetClass() ] ) then return end\n\t\n\tEntList[ ent:EntIndex() ] = ent\nend )"}]},
{"function":{"name":"OnEntityWaterLevelChanged","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called when the  of an entity is changed.","page":"Entity:WaterLevel"},"realm":"Server","added":"2020.03.17","predicted":"No","args":{"arg":[{"text":"The entity","name":"entity","type":"Entity"},{"text":"Previous water level","name":"old","type":"number"},{"text":"The new water level","name":"new","type":"number"}]}}},
{"function":{"name":"OnCrazyPhysics","parent":"GM","type":"hook","ishook":true,"description":"Called when the crazy physics detection detects an entity with Crazy Physics.","realm":"Shared","predicted":"No","args":{"arg":[{"text":"The entity that was detected as crazy","name":"ent","type":"Entity"},{"text":"The physics object that is going crazy","name":"physobj","type":"PhysObj"}]}}},
{"function":{"name":"OnDamagedByExplosion","parent":"GM","type":"hook","ishook":true,"description":"Called when a player has been hurt by an explosion. Override to disable default sound effect.","realm":"Server","predicted":"No","args":{"arg":[{"text":"Player who has been hurt","name":"ply","type":"Player"},{"text":"Damage info from explsion","name":"dmginfo","type":"CTakeDamageInfo"}]}},"example":{"description":{"text":"Disables the high pitched ringing sound effect.\n\nNote that this hook does not have a return value, and instead by default it calls ( 35, false ) in the base gamemode.","page":"Player:SetDSP"},"code":"hook.Add( \"OnDamagedByExplosion\", \"DisableSound\", function()\n\treturn true\nend )"}},
{"function":{"name":"OnContextMenuClose","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called when the context menu keybind (+menu_context) is released, which by default is C.\n\nThis hook will not run if  returns true.\n\nSee also .","page":["input.IsKeyTrapping","GM:OnContextMenuOpen"]},"realm":"Client","predicted":"No"}},
{"function":{"name":"OnContextMenuOpen","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called when the context menu keybind (+menu_context) is pressed, which by default is C.\n\nSee also .","page":"GM:OnContextMenuClose"},"realm":"Client","predicted":"No"}},
{"function":{"name":"OnChatTab","parent":"GM","type":"hook","ishook":true,"description":"Called when the local player presses TAB while having their chatbox opened.","realm":"Client","args":{"arg":{"text":"The currently typed into chatbox text","name":"text","type":"string"}},"rets":{"ret":{"text":"What should be placed into the chatbox instead of what currently is when player presses tab","name":"","type":"string"}}}},
{"function":{"name":"OnAchievementAchieved","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called when a player has achieved an achievement. You can get the name and other information from an achievement ID with the  library.","page":"achievements"},"realm":"Client","predicted":"No","args":{"arg":[{"text":"The player that earned the achievement","name":"ply","type":"Player"},{"text":"The index of the achievement","name":"achievement","type":"number"}]}}},
{"function":{"name":"NetworkIDValidated","parent":"GM","type":"hook","ishook":true,"description":"Called when a player has been validated by Steam.","realm":"Server","predicted":"No","args":{"arg":[{"text":"Player name","name":"name","type":"string"},{"text":"Player SteamID","name":"steamID","type":"string"}]}}},
{"function":{"name":"NotifyShouldTransmit","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called whenever this entity changes its transmission state for this , such as exiting or re entering the PVS.","page":"Global.LocalPlayer","note":[{"text":"This is the best place to handle the reset of , as this would be usually called when the player lags and requests a full packet update","page":"Entity:SetPredictable"},{"text":"When the entity stops transmitting,  will only return true **after** this hook","page":"Entity:IsDormant"}]},"realm":"Client","predicted":"No","args":{"arg":[{"text":"The entity that changed its transmission state.","name":"ent","type":"Entity"},{"text":"True if we started transmitting to this client and false if we stopped.","name":"shouldtransmit","type":"boolean"}]}}},
{"function":{"name":"NetworkEntityCreated","parent":"GM","type":"hook","ishook":true,"description":"Called when an entity has been created over the network.","realm":"Client","predicted":"No","args":{"arg":{"text":"Created entity","name":"ent","type":"Entity"}}}},
{"function":{"name":"NeedsDepthPass","parent":"GM","type":"hook","ishook":true,"description":{"text":"Returning true in this hook will cause it to render depth buffers defined with .","page":"render.GetResolvedFullFrameDepth"},"realm":"Client","rets":{"ret":{"text":"Render depth buffer","name":"","type":"boolean"}}}},
{"function":{"name":"MouthMoveAnimation","parent":"GM","type":"hook","ishook":true,"description":"Override this gamemode function to disable mouth movement when talking on voice chat.","realm":"Shared","predicted":"No","args":{"arg":{"text":"Player in question","name":"ply","type":"Player"}}}},
{"function":{"name":"Move","parent":"GM","type":"hook","ishook":true,"description":{"text":"The Move hook is called for you to manipulate the player's MoveData. \n\nYou shouldn't adjust the player's position in any way in the move hook. This is because due to prediction errors, the netcode might run the move hook multiple times as packets arrive late. Therefore you should only adjust the movedata construct in this hook.\n\nGenerally you shouldn't have to use this hook - if you want to make a custom move type you should look at the drive system.\n\nThis hook is called after .\n\nSee  for an explanation on the move system.","page":["GM:PlayerTick","Game Movement"]},"realm":"Shared","predicted":"Yes","args":{"arg":[{"text":"Player","name":"ply","type":"Player"},{"text":"Movement information","name":"mv","type":"CMoveData"}]},"rets":{"ret":{"text":"Return true to suppress default engine action","name":"","type":"boolean"}}},"example":{"description":"A noclip move type","code":"function GM:Move( ply, mv )\n\n\t--\n\t-- Set up a speed, go faster if shift is held down\n\t--\n\tlocal speed = 0.0005 * FrameTime()\n\tif ( mv:KeyDown( IN_SPEED ) ) then speed = 0.005 * FrameTime() end\n\n\t--\n\t-- Get information from the movedata\n\t--\n\tlocal ang = mv:GetMoveAngles()\n\tlocal pos = mv:GetOrigin()\n\tlocal vel = mv:GetVelocity()\n\n\t--\n\t-- Add velocities. This can seem complicated. On the first line\n\t-- we're basically saying get the forward vector, then multiply it\n\t-- by our forward speed (which will be > 0 if we're holding W, < 0 if we're\n\t-- holding S and 0 if we're holding neither) - and add that to velocity.\n\t-- We do that for right and up too, which gives us our free movement.\n\t--\n\tvel = vel + ang:Forward() * mv:GetForwardSpeed() * speed\n\tvel = vel + ang:Right() * mv:GetSideSpeed() * speed\n\tvel = vel + ang:Up() * mv:GetUpSpeed() * speed\n\n\t--\n\t-- We don't want our velocity to get out of hand so we apply\n\t-- a little bit of air resistance. If no keys are down we apply\n\t-- more resistance so we slow down more.\n\t--\n\tif ( math.abs(mv:GetForwardSpeed()) + math.abs(mv:GetSideSpeed()) + math.abs(mv:GetUpSpeed()) < 0.1 ) then\n\tvel = vel * 0.90\n\telse\n\tvel = vel * 0.99\n\tend\n\n\t--\n\t-- Add the velocity to the position (this is the movement)\n\t--\n\tpos = pos + vel\n\n\t--\n\t-- We don't set the newly calculated values on the entity itself\n\t-- we instead store them in the movedata. They should get applied\n\t-- in the FinishMove hook.\n\t--\n\tmv:SetVelocity( vel )\n\tmv:SetOrigin( pos )\n\n\t--\n\t-- Return true to not use the default behavior\n\t--\n\treturn true\n\nend"}},
{"function":{"name":"LoadGModSave","parent":"GM","type":"hook","ishook":true,"description":"Called from gm_load when the game should load a map.","realm":"Server","args":{"arg":[{"name":"data","type":"string"},{"name":"map","type":"string"},{"name":"timestamp","type":"number"}]}}},
{"function":{"name":"MenuStart","parent":"GM","type":"hook","ishook":true,"description":"Called when `menu.lua` has finished loading.","realm":"Menu","predicted":"No"}},
{"function":{"name":"KeyRelease","parent":"GM","type":"hook","ishook":true,"description":{"text":"Runs when a IN key was released by a player.\n\nFor a more general purpose function that handles all kinds of input, see","page":"GM:PlayerButtonUp"},"realm":"Shared","predicted":"Yes","args":{"arg":[{"text":"The player releasing the key. If running client-side, this will always be","name":"ply","type":"Player","page":"Global.LocalPlayer"},{"text":"The key that the player released using .","name":"key","type":"number","page":"Enums/IN"}]}},"example":{"description":"\"hi\" will be printed to the console when the player releases the IN_USE (E) key.","code":"function GM:KeyRelease( player, key )\n    if ( key == IN_USE ) then\n        print( \"hi\" )\n    end\nend","outputfixedwidth":"Fixed width","output":"hi"}},
{"cat":"hook","function":{"name":"KeyPress","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called whenever a player pressed a key included within the IN keys.\n\nFor a more general purpose function that handles all kinds of input, see","page":"GM:PlayerButtonDown","warning":{"text":"Due to this being a predicted hook, s created only serverside from this hook will not be networked to the client, so make sure to do that on both realms","page":"Global.ParticleEffect"}},"realm":"Shared","predicted":"Yes","args":{"arg":[{"text":"The player pressing the key. If running client-side, this will always be","name":"ply","type":"Player","page":"Global.LocalPlayer"},{"text":"The key that the player pressed using .","name":"key","type":"number","page":"Enums/IN"}]}},"example":[{"description":"\"hi\" will be printed to the console when the player presses the IN_USE (E) key.","code":"hook.Add( \"KeyPress\", \"keypress_use_hi\", function( ply, key )\n\tif ( key == IN_USE ) then\n\t\tprint( \"hi\" )\n\tend\nend )","outputfixedwidth":"Fixed width","output":"hi"},{"description":"When a player tries to jump, they will be shot straight up in the air.","code":"hook.Add( \"KeyPress\", \"keypress_jump_super\", function( ply, key )\n    if ( key == IN_JUMP ) then\n        ply:SetVelocity( ply:GetVelocity() + Vector( 0, 0, 1000 ) )\n    end\nend )"}]},
{"function":{"name":"IsSpawnpointSuitable","parent":"GM","type":"hook","ishook":true,"description":"Check if a player can spawn at a certain spawnpoint.","realm":"Server","predicted":"No","args":{"arg":[{"text":"The player who is spawned","name":"ply","type":"Player"},{"text":"The spawnpoint entity (on the map)","name":"spawnpoint","type":"Entity"},{"text":"If this is true, it'll kill any players blocking the spawnpoint","name":"makeSuitable","type":"boolean"}]},"rets":{"ret":{"text":"Return true to indicate that the spawnpoint is suitable (Allow for the player to spawn here), false to prevent spawning","name":"","type":"boolean"}}},"example":{"description":"This will check if anyone is blocking the spawnpoint. If someone is, then it'll, depending on the bMakeSuitable value, kill the player, or return false.","code":"function GM:IsSpawnpointSuitable( ply, spawnpointent, bMakeSuitable )\n\n\tlocal Pos = spawnpointent:GetPos()\n\n\t-- Note that we're searching the default hull size here for a player in the way of our spawning.\n\t-- This seems pretty rough, seeing as our player's hull could be different.. but it should do the job\n\t-- (HL2DM kills everything within a 128 unit radius)\n\tlocal Ents = ents.FindInBox( Pos + Vector( -16, -16, 0 ), Pos + Vector( 16, 16, 72 ) )\n\n\tif ( ply:Team() == TEAM_SPECTATOR or ply:Team() == TEAM_UNASSIGNED ) then return true end\n\n\tlocal Blockers = 0\n\n\tfor k, v in pairs( Ents ) do\n\t\tif ( IsValid( v ) && v:GetClass() == \"player\" && v:Alive() ) then\n\n\t\t\tBlockers = Blockers + 1\n\n\t\t\tif ( bMakeSuitable ) then\n\t\t\t\tv:Kill()\n\t\t\tend\n\n\t\tend\n\tend\n\n\tif ( bMakeSuitable ) then return true end\n\tif ( Blockers > 0 ) then return false end\n\treturn true\n\nend","output":"true or false"}},
{"function":{"name":"InputMouseApply","parent":"GM","type":"hook","ishook":true,"description":"Allows you to modify the supplied User Command with mouse input. This could be used to make moving the mouse do funky things to view angles.","realm":"Client","predicted":"No","args":{"arg":[{"text":"User command","name":"cmd","type":"CUserCmd"},{"text":"The amount of mouse movement across the X axis this frame","name":"x","type":"number"},{"text":"The amount of mouse movement across the Y axis this frame","name":"y","type":"number"},{"text":"The current view angle","name":"ang","type":"Angle"}]},"rets":{"ret":{"text":"Return true if we modified something","name":"","type":"boolean"}}},"example":{"description":"Prevents all players from turning with the mouse.","code":"hook.Add(\"InputMouseApply\", \"FreezeTurning\", function( cmd )\n\tcmd:SetMouseX(0)\n\tcmd:SetMouseY(0)\n\t\n\treturn true\nend)"}},
{"function":{"name":"InitPostEntity","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called after all the entities are initialized.\n\nStarting from this hook  will return valid object.","page":"Global.LocalPlayer","note":"At this point the client only knows about the entities that are within the spawnpoints' [PVS](https://en.wikipedia.org/wiki/Potentially_visible_set). For instance, if the server sends an entity that is not within this PVS, the client will receive it as NULL entity."},"realm":"Shared","predicted":"No"},"example":{"description":"Some message will be printed in the console when the entities initialize.","code":"function GM:InitPostEntity()\n\tprint(\"All Entities have initialized\" )\nend\n\n-- That way you are overriding the default hook\n-- you can use hook.Add to make more functions get called when this event occurs\n\nhook.Add( \"InitPostEntity\", \"some_unique_name\", function()\n\tprint(\"Initialization hook called\")\nend )","outputfixedwidth":"Fixed width","output":"Initialization hook called\nAll Entities have initialized"}},
{"function":{"name":"Initialize","parent":"GM","type":"hook","ishook":true,"description":"Called after the gamemode loads and starts.","realm":"Shared"},"example":{"description":"\"hi\" will be printed to the console when the gamemode initializes.","code":"function GM:Initialize()\n\tprint(\"hi\" )\nend\n\n-- That way you are overriding the default hook\n-- you can use hook.Add to make more functions get called on initialization\nlocal function init()\n\tprint(\"Initialization hook called\")\nend\nhook.Add( \"Initialize\", \"some_unique_name\", init )","outputfixedwidth":"Fixed Width","output":"Initializtion hook called\nhi"}},
{"function":{"name":"HUDWeaponPickedUp","parent":"GM","type":"hook","ishook":true,"description":"Called when a weapon has been picked up. Override to disable the default HUD notification.","realm":"Client","predicted":"No","args":{"arg":{"text":"The picked up weapon","name":"weapon","type":"Weapon"}}}},
{"function":{"name":"HUDShouldDraw","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called when the Gamemode is about to draw a given element on the client's HUD (heads-up display).","note":"This hook is called HUNDREDS of times per second (more than 5 times per frame on average). You shouldn't be performing any computationally intensive operations."},"realm":"Client","predicted":"No","args":{"arg":{"text":"The name of the HUD element. You can find a full list of HUD elements for this hook .","name":"name","type":"string","page":",hereHUD_Element_List"}},"rets":{"ret":{"text":"Return false to prevent the given element from being drawn on the client's screen.","name":"","type":"boolean"}}},"example":{"description":"Hides the default health and battery (armor) HUD elements, while still allowing the display of other elements to be controlled by other addons.","code":"local hide = {\n\t[\"CHudHealth\"] = true,\n\t[\"CHudBattery\"] = true\n}\n\nhook.Add( \"HUDShouldDraw\", \"HideHUD\", function( name )\n\tif ( hide[ name ] ) then return false end\n\n\t-- Don't return anything here, it may break other addons that rely on this hook.\nend )"}},
{"function":{"name":"HUDPaintBackground","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called before  when the HUD background is being drawn.\n\n\nThings rendered in this hook will **always** appear behind things rendered in .","page":["GM:HUDPaint","GM:HUDPaint"],"rendercontext":{"hook":"true","type":"2D"}},"realm":"Client","predicted":"No"}},
{"function":{"name":"HUDPaint","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called whenever the HUD should be drawn. Called right before  and after .\n\nNot called when the Camera SWEP is equipped. See also .","page":["GM:HUDDrawScoreBoard","GM:HUDPaintBackground","GM:DrawOverlay"],"note":{"text":"Gets called only when r_drawvgui and  are enabled and the game is not paused","page":",CHudGModGM:HUDShouldDraw"},"rendercontext":{"hook":"true","type":"2D"}},"realm":"Client","predicted":"No"},"example":{"description":"Draws a transparent black box in the top left corner of the screen.","code":"hook.Add(\"HUDPaint\", \"HUDPaint_DrawABox\", function()\n\tsurface.SetDrawColor( 0, 0, 0, 128 )\n\tsurface.DrawRect( 50, 50, 128, 128 )\nend )"}},
{"function":{"name":"HUDItemPickedUp","parent":"GM","type":"hook","ishook":true,"description":"Called when an item has been picked up. Override to disable the default HUD notification.","realm":"Client","predicted":"No","args":{"arg":{"text":"Name of the picked up item","name":"itemName","type":"string"}}}},
{"function":{"name":"HUDDrawTargetID","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called from  to draw player info when you hover over a player with your crosshair or mouse.","page":"GM:HUDPaint"},"realm":"Client"},"example":{"description":"This code will turn off the player and health appearing when you look at them.","code":"function GM:HUDDrawTargetID()\nend"}},
{"function":{"name":"HUDDrawScoreBoard","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called every frame to render the scoreboard.\n\n\nIt is recommended to use Derma and VGUI for this job instead of this hook. Called right after .","page":"GM:HUDPaint","rendercontext":{"hook":"true","type":"2D"}},"realm":"Client","predicted":"No"}},
{"function":{"name":"HUDDrawPickupHistory","parent":"GM","type":"hook","ishook":true,"description":"Renders the HUD pick-up history. Override to hide default or draw your own HUD.","realm":"Client","predicted":"No"}},
{"function":{"name":"HUDAmmoPickedUp","parent":"GM","type":"hook","ishook":true,"description":"Called when the client has picked up ammo. Override to disable default HUD notification.","realm":"Client","predicted":"No","args":{"arg":[{"text":"Name of the item (ammo) picked up","name":"itemName","type":"string"},{"text":"Amount of the item (ammo) picked up","name":"amount","type":"number"}]}}},
{"function":{"name":"HideTeam","parent":"GM","type":"hook","ishook":true,"description":"Hides the team selection panel.","realm":"Client","predicted":"No"}},
{"function":{"name":"HandlePlayerVaulting","parent":"GM","type":"hook","ishook":true,"description":"Allows to override player flying ( in mid-air, not noclipping ) animations.","realm":"Shared","args":{"arg":[{"text":"The player","name":"ply","type":"Player"},{"text":"Players velocity","name":"velocity","type":"number"}]},"rets":{"ret":{"text":"Return true if we've changed/set the animation, false otherwise","name":"","type":"boolean"}}}},
{"function":{"name":"HandlePlayerSwimming","parent":"GM","type":"hook","ishook":true,"description":"Allows to override player swimming animations.","realm":"Shared","args":{"arg":[{"text":"The player","name":"ply","type":"Player"},{"text":"Players velocity","name":"velocity","type":"number"}]},"rets":{"ret":{"text":"Return true if we've changed/set the animation, false otherwise","name":"","type":"boolean"}}}},
{"function":{"name":"HandlePlayerNoClipping","parent":"GM","type":"hook","ishook":true,"description":"Allows to override player noclip animations.","realm":"Shared","args":{"arg":[{"text":"The player","name":"ply","type":"Player"},{"text":"Players velocity","name":"velocity","type":"number"}]},"rets":{"ret":{"text":"Return true if we've changed/set the animation, false otherwise","name":"","type":"boolean"}}}},
{"function":{"name":"HandlePlayerLanding","parent":"GM","type":"hook","ishook":true,"description":"Allows to override player landing animations.","realm":"Shared","args":{"arg":[{"text":"The player","name":"ply","type":"Player"},{"text":"Players velocity","name":"velocity","type":"number"},{"text":"Was the player on ground?","name":"onGround","type":"boolean"}]},"rets":{"ret":{"text":"Return true if we've changed/set the animation, false otherwise","name":"","type":"boolean"}}}},
{"function":{"name":"HandlePlayerJumping","parent":"GM","type":"hook","ishook":true,"description":"Allows to override player jumping animations.","realm":"Shared","args":{"arg":[{"text":"The player","name":"ply","type":"Player"},{"text":"Players velocity","name":"velocity","type":"number"}]},"rets":{"ret":{"text":"Return true if we've changed/set the animation, false otherwise","name":"","type":"boolean"}}}},
{"function":{"name":"HandlePlayerDucking","parent":"GM","type":"hook","ishook":true,"description":"Allows to override player crouch animations.","realm":"Shared","args":{"arg":[{"text":"The player","name":"ply","type":"Player"},{"text":"Players velocity","name":"velocity","type":"number"}]},"rets":{"ret":{"text":"Return true if we've changed/set the animation, false otherwise","name":"","type":"boolean"}}}},
{"function":{"name":"HandlePlayerDriving","parent":"GM","type":"hook","ishook":true,"description":"Allows to override player driving animations.","realm":"Shared","args":{"arg":{"text":"Player to process","name":"ply","type":"Player"}},"rets":{"ret":{"text":"Return true if we've changed/set the animation, false otherwise","name":"","type":"boolean"}}}},
{"function":{"name":"GUIMouseReleased","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called whenever a players releases a mouse key on the context menu in Sandbox or on any panel derived from CGModBase, such as the panel used by  and the panel used by .","page":["gui.EnableScreenClicker","Panel:ParentToHUD"]},"realm":"Client","predicted":"No","hidepredictionwarning":"No","args":{"arg":[{"text":"The key the player released, see","name":"mouseCode","type":"number","page":"Enums/MOUSE"},{"text":"A normalized direction vector local to the camera. Internally this is  ( () ).","name":"aimVector","type":"Vector","page":["gui.ScreenToVector","gui.MousePos"]}]}}},
{"function":{"name":"GUIMousePressed","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called whenever a players presses a mouse key on the context menu in Sandbox or on any panel derived from CGModBase, such as the panel used by  and the panel used by .\n\nSee  for a hook that is called on all VGUI elements.","page":["gui.EnableScreenClicker","Panel:ParentToHUD","GM:VGUIMousePressed"]},"realm":"Client","predicted":"No","hidepredictionwarning":"No","args":{"arg":[{"text":"The key that the player pressed using .","name":"mouseCode","type":"number","page":"Enums/MOUSE"},{"text":"A normalized direction vector local to the camera. Internally, this is  ( () ).","name":"aimVector","type":"Vector","page":["gui.ScreenToVector","gui.MousePos"]}]}}},
{"function":{"name":"GUIMouseDoublePressed","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called when the mouse has been double clicked on any panel derived from CGModBase, such as the panel used by  and the panel used by .\n\nBy default this hook calls .","page":["gui.EnableScreenClicker","Panel:ParentToHUD","GM:GUIMousePressed"]},"realm":"Client","args":{"arg":[{"text":"The code of the mouse button pressed, see","name":"mouseCode","type":"number","page":"Enums/MOUSE"},{"text":"A normalized vector pointing in the direction the client has clicked","name":"aimVector","type":"Vector"}]}}},
{"function":{"name":"GravGunPunt","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called when an entity is about to be punted with the gravity gun (primary fire).\n\nBy default this function makes  work in Sandbox derived gamemodes.","page":"ENTITY:GravGunPunt"},"realm":"Shared","predicted":"No","args":{"arg":[{"text":"The player wielding the gravity gun","name":"ply","type":"Player"},{"text":"The entity the player is attempting to punt","name":"ent","type":"Entity"}]},"rets":{"ret":{"text":"Return true to allow and false to disallow.","name":"","type":"boolean"}}}},
{"function":{"name":"GravGunPickupAllowed","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called every tick to poll whether a player is allowed to pick up an entity with the gravity gun or not.\n\nSee  for the +USE pickup variant.\n\nCalls  on the entity being hovered every frame in Sandbox-derived gamemodes.","page":["GM:AllowPlayerPickup","ENTITY:GravGunPickupAllowed"]},"realm":"Server","predicted":"No","args":{"arg":[{"text":"The player wielding the gravity gun","name":"ply","type":"Player"},{"text":"The entity the player is attempting to pick up","name":"ent","type":"Entity"}]},"rets":{"ret":{"text":"Return true to allow entity pick up","name":"","type":"boolean"}}}},
{"function":{"name":"GravGunOnPickedUp","parent":"GM","type":"hook","ishook":true,"description":"Called when an entity is picked up by a gravity gun.","realm":"Server","args":{"arg":[{"text":"The player wielding the gravity gun","name":"ply","type":"Player"},{"text":"The entity that has been picked up by the gravity gun","name":"ent","type":"Entity"}]}}},
{"function":{"name":"GravGunOnDropped","parent":"GM","type":"hook","ishook":true,"description":"Called when an entity is released by a gravity gun.","realm":"Server","predicted":"No","args":{"arg":[{"text":"Player who is wielding the gravity gun","name":"ply","type":"Player"},{"text":"The entity that has been dropped","name":"ent","type":"Entity"}]}}},
{"function":{"name":"GrabEarAnimation","parent":"GM","type":"hook","ishook":true,"description":"Override this hook to disable/change ear-grabbing in your gamemode.","realm":"Shared","predicted":"No","args":{"arg":{"text":"Player","name":"ply","type":"Player"}}}},
{"function":{"name":"GetTeamNumColor","parent":"GM","type":"hook","ishook":true,"description":"Returns the team color for the given team index.","realm":"Client","predicted":"No","args":{"arg":{"text":"Team index","name":"team","type":"number"}},"rets":{"ret":{"text":"Team","name":"","type":"table","page":"Global.Color"}}}},
{"function":{"name":"GetTeamColor","parent":"GM","type":"hook","ishook":true,"description":"Returns the color for the given entity's team. This is used in chat and deathnotice text.","realm":"Client","predicted":"No","args":{"arg":{"text":"Entity","name":"ent","type":"Entity"}},"rets":{"ret":{"text":"Team","name":"","type":"table","page":"Global.Color"}}}},
{"function":{"name":"GetPreferredCarryAngles","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called to determine preferred carry angles for the entity. It works for both, +use pickup and gravity gun pickup.","warning":"Due to nature of the gravity gun coding in multiplayer, this hook **MAY** seem to not work ( but rest assured it does ), due to clientside prediction not knowing the carry angles. The +use pickup doesn't present this issue as it doesn't predict the player carrying the object clientside ( as you may notice by the prop lagging behind in multiplayer )","note":"This hook can **not** override preferred carry angles of props such as the sawblade and the harpoon."},"realm":"Server","predicted":"No","args":{"arg":{"text":"The entity to generate carry angles for","name":"ent","type":"Entity"}},"rets":{"ret":{"text":"The preferred carry angles for the entity.","name":"","type":"Angle"}}},"example":{"description":"Makes all pickupable entities default to Angle( 0, 0, 0 ) relatively to players aim direction.","code":"hook.Add( \"GetPreferredCarryAngles\", \"MyPreferredCarryAngles\", function( ent )\n\treturn Angle( 0, 0, 0 )\nend )"}},
{"function":{"name":"GetMotionBlurValues","parent":"GM","type":"hook","ishook":true,"description":"Allows you to modify the Source Engine's motion blur shaders.","realm":"Client","args":{"arg":[{"text":"The amount of horizontal blur.","name":"horizontal","type":"number"},{"text":"The amount of vertical  blur.","name":"vertical","type":"number"},{"text":"The amount of forward/radial blur.","name":"forward","type":"number"},{"text":"The amount of rotational blur.","name":"rotational","type":"number"}]},"rets":{"ret":[{"text":"New amount of horizontal blur.","name":"","type":"number"},{"text":"New amount of vertical blur.","name":"","type":"number"},{"text":"New amount of forward/radial blur.","name":"","type":"number"},{"text":"New amount of rotational blur.","name":"","type":"number"}]}},"example":{"description":"Makes your forward/radial blur pulse.","code":"local function GetNewMotionBlurValues( h, v, f, r )\n    f = f * math.sin( CurTime() * 5 )\n    return h, v, f, r\nend\nhook.Add( \"GetMotionBlurValues\", \"GetNewMotionBlurValues\", GetNewMotionBlurValues )","output":"Your radial blur pulses."}},
{"function":{"name":"GetGameDescription","parent":"GM","type":"hook","ishook":true,"description":"Called when the game(server) needs to update the text shown in the server browser as the gamemode.","realm":"Shared","predicted":"No","rets":{"ret":{"text":"The text to be shown in the server browser as the gamemode","name":"","type":"string"}}}},
{"function":{"name":"GetFallDamage","parent":"GM","type":"hook","ishook":true,"description":"Called when a player takes damage from falling, allows to override the damage.","realm":"Server","predicted":"No","args":{"arg":[{"text":"The player","name":"ply","type":"Player"},{"text":"The fall speed","name":"speed","type":"number"}]},"rets":{"ret":{"text":"New fall damage","name":"","type":"number"}}},"example":[{"description":"The player takes a realistic amount of damage when they fall. Fall damage becomes the fall speed divided by 8.","code":"function GM:GetFallDamage( ply, speed )\n    return ( speed / 8 )\nend"},{"description":"Closely approximates the Counter-Strike: Source fall damage.","code":"function GM:GetFallDamage( ply, speed )\n\treturn math.max( 0, math.ceil( 0.2418*speed - 141.75 ) )\nend"}]},
{"function":{"name":"GameContentChanged","parent":"GM","type":"hook","ishook":true,"description":"Called to refresh menu content once it has initialized or something has been mounted.","realm":"Menu","predicted":"No","file":{"text":"lua/menu/mainmenu.lua","line":"290-304"}}},
{"function":{"name":"ForceDermaSkin","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called to allow override of the default Derma skin for all panels.","note":"This hook is only called on Lua start up, changing its value (or adding new hooks) after it has been already called will not have any effect."},"realm":"Client","predicted":"No","rets":{"ret":{"text":"A **case sensitive** Derma skin name to be used as default, registered previously via .\n\n\nReturning nothing, nil or invalid name will make it fallback to the \"Default\" skin.","name":"","type":"string","page":"derma.DefineSkin"}}},"example":{"description":"Example on how to use this hook. This will make that all panels","code":"hook.Add( \"ForceDermaSkin\", \"my_new_skin\", function()\n\treturn \"some_skin\"\nend )"}},
{"function":{"name":"FinishChat","parent":"GM","type":"hook","ishook":true,"description":"Runs when user cancels/finishes typing.","realm":"Client","predicted":"No"},"example":{"description":"Prints \"User has closed the chatbox.\" when player closes their chat or sends the message.","code":"hook.Add( \"FinishChat\", \"ClientFinishTyping\", function()\n\tprint( \"User has closed the chatbox.\" )\nend)"}},
{"function":{"name":"FinishMove","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called after , applies all the changes from the  to the player.\n\nSee  for an explanation on the move system.","page":["GM:Move","CMoveData","Game Movement"]},"realm":"Shared","predicted":"Yes","args":{"arg":[{"text":"Player","name":"ply","type":"Player"},{"text":"Movement data","name":"mv","type":"CMoveData"}]},"rets":{"ret":{"text":"Return true to suppress default engine behavior, i.e. declare that you have already moved the player according to the move data in a custom way.","name":"","type":"boolean"}}}},
{"function":{"name":"FindUseEntity","parent":"GM","type":"hook","ishook":true,"description":{"text":"This hook polls the entity the player use action should be applied to.","note":"The default behavior of this hook is in [CBasePlayer::FindUseEntity](https://github.com/ValveSoftware/source-sdk-2013/blob/0d8dceea4310fde5706b3ce1c70609d72a38efdf/mp/src/game/shared/baseplayer_shared.cpp#L1068-L1270). Despite CBasePlayer::FindUseEntity being defined shared, it is only called serverside in practice, so this hook will be only called serverside, as well. It is possible for modules to call it clientside, so the Lua code should still be treated as shared."},"realm":"Shared","predicted":"No","args":{"arg":[{"text":"The player who initiated the use action.","name":"ply","type":"Player"},{"text":"The entity that was chosen by the engine.","name":"defaultEnt","type":"Entity"}]},"rets":{"ret":{"text":"The entity to use instead of default entity","name":"","type":"Entity"}}}},
{"function":{"name":"EntityTakeDamage","parent":"GM","type":"hook","ishook":true,"description":"Called when an entity takes damage. You can modify all parts of the damage info in this hook.","realm":"Server","predicted":"No","args":{"arg":[{"text":"The entity taking damage","name":"target","type":"Entity"},{"text":"Damage info","name":"dmg","type":"CTakeDamageInfo"}]},"rets":{"ret":{"text":"Return true to completely block the damage event","name":"","type":"boolean"}}},"example":[{"description":"Explosion damage is reduced to players only.","code":"hook.Add( \"EntityTakeDamage\", \"EntityDamageExample\", function( target, dmginfo )\n\n\tif ( target:IsPlayer() and dmginfo:IsExplosionDamage() ) then\n\n\t\tdmginfo:ScaleDamage( 0.5 ) // Damage is now half of what you would normally take.\n\n\tend\n\nend )"},{"description":"Players in vehicles takes halved damage.","code":"hook.Add( \"EntityTakeDamage\", \"EntityDamageExample2\", function( target, dmginfo )\n\n    if ( target:IsVehicle() ) then\n \n        local ply = target:GetDriver()\n        if ( IsValid(ply) && dmginfo:GetDamage() > 1 ) then\n            dmginfo:SetDamage(dmginfo:GetDamage() / 2)\n            ply:TakeDamageInfo(dmginfo)\n            dmginfo:SetDamage(0)\n        \n        end\n\n    end\n\nend )"}]},
{"function":{"name":"EntityRemoved","parent":"GM","type":"hook","ishook":true,"description":"Called right before the removal of an entity.","realm":"Shared","args":{"arg":{"text":"Entity being removed","name":"ent","type":"Entity"}}}},
{"function":{"name":"EntityNetworkedVarChanged","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called when an NWVar is changed.","note":["Currently this hook only works for the NW2Var system (accessed by adding a 2 in between NW and Var for most NWVar functions), which will replace the original one at some point in the future","This hook is fired before the client value is actually changed. Calling the GetNW function for the specified variable name within this hook will return the old value, not the current/updated one."]},"realm":"Shared","predicted":"No","args":{"arg":[{"text":"The owner entity of changed NWVar","name":"ent","type":"Entity"},{"text":"The name if changed NWVar","name":"name","type":"string"},{"text":"The old value of the NWVar","name":"oldval","type":"any"},{"text":"The new value of the NWVar","name":"newval","type":"any"}]}},"example":{"description":"Example usage of the hook. Prints out all NWVar changes.","code":"hook.Add(\"EntityNetworkedVarChanged\",\"printchange\", print )\n\n-- Trigger a change!\nEntity(1):SetNW2String( \"UserGroup\", \"owner\" )","outputfixedwidth":"Fixed width","output":"Player [1][Player1]\tUserGroup\tsuperadmin\towner"}},
{"function":{"name":"EntityKeyValue","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called when a key-value pair is set on an entity, either by the engine (for example when map spawns) or .\n\nSee  for a hook that works for scripted entities.\n\n\nSee  for a hook that works for scripted weapons.","page":["Entity:SetKeyValue","ENTITY:KeyValue","WEAPON:KeyValue"]},"realm":"Shared","predicted":"No","args":{"arg":[{"text":"Entity that the keyvalue is being set on","name":"ent","type":"Entity"},{"text":"Key of the key/value pair","name":"key","type":"string"},{"text":"Value of the key/value pair","name":"value","type":"string"}]},"rets":{"ret":{"text":"If set, the value of the key-value pair will be overridden by this string.","name":"","type":"string"}}}},
{"function":{"name":"EntityFireBullets","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called every time a bullet is fired from an entity.","warning":{"text":"This hook is called directly from . Due to this, you cannot call  inside this hook or an infinite loop will occur crashing the game.","page":["Entity:FireBullets","Entity:FireBullets"]}},"realm":"Shared","predicted":"No","args":{"arg":[{"text":"The entity that fired the bullet","name":"ent","type":"Entity"},{"text":"The bullet data. See","name":"data","type":"table","page":"Structures/Bullet"}]},"rets":{"ret":{"text":"Return true to apply all changes done to the bullet table.\n\nReturn false to suppress the bullet.","name":"","type":"boolean"}}}},
{"function":{"name":"EndEntityDriving","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called right before an entity stops driving. Overriding this hook will cause it to not call  and the player will not stop driving.","page":"drive.End"},"realm":"Shared","predicted":"No","args":{"arg":[{"text":"The entity being driven","name":"ent","type":"Entity"},{"text":"The player driving the entity","name":"ply","type":"Player"}]}}},
{"function":{"name":"EntityEmitSound","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called whenever a sound has been played. This will not be called clientside if the server played the sound without the client also calling .","page":"Entity:EmitSound","bug":{"text":"This is not called for scripted sequences.","issue":"1021"}},"realm":"Shared","predicted":"No","args":{"arg":{"text":"Information about the played sound. Changes done to this table can be applied by returning true from this hook.\n\nSee .","name":"data","type":"table","page":"Structures/EmitSoundInfo"}},"rets":{"ret":{"text":"Return true to apply all changes done to the data table.\n\nReturn false to prevent the sound from playing.\n\nReturn nil or nothing to play the sound without altering it.","name":"","type":"boolean"}}},"example":{"description":{"text":"Slows down all sounds to reflect .","page":"game.SetTimeScale"},"code":"hook.Add( \"EntityEmitSound\", \"TimeWarpSounds\", function( t )\n\t\n\tlocal p = t.Pitch\n\t\n\tif ( game.GetTimeScale() != 1 ) then\n\t\tp = p * game.GetTimeScale()\n\tend\n\t\n\tif ( GetConVarNumber( \"host_timescale\" ) != 1 && GetConVarNumber( \"sv_cheats\" ) >= 1 ) then\n\t\tp = p * GetConVarNumber( \"host_timescale\" )\n\tend\n\t\n\tif ( p != t.Pitch ) then\n\t\tt.Pitch = math.Clamp( p, 0, 255 )\n\t\treturn true\n\tend\n\t\n\tif ( CLIENT && engine.GetDemoPlaybackTimeScale() != 1 ) then\n\t\tt.Pitch = math.Clamp( t.Pitch * engine.GetDemoPlaybackTimeScale(), 0, 255 )\n\t\treturn true\n\tend\n\t\nend )"}},
{"function":{"name":"DrawOverlay","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called after all other 2D draw hooks are called. Draws over all VGUI Panels and HUDs.\n\nUnlike , this hook is called with the game paused and while the Camera SWEP is equipped.","page":"GM:HUDPaint","note":"Only gets called when r_drawvgui is enabled.","rendercontext":{"hook":"true","type":"2D"}},"realm":"Client and Menu","predicted":"No"}},
{"function":{"name":"DrawMonitors","parent":"GM","type":"hook","ishook":true,"description":"Called every frame before drawing the in-game monitors ( Breencast, in-game TVs, etc ), but doesn't seem to be doing anything, trying to render 2D or 3D elements fail.","realm":"Client","predicted":"No"}},
{"function":{"name":"DrawPhysgunBeam","parent":"GM","type":"hook","ishook":true,"description":{"text":"Allows you to override physgun beam drawing.","bug":{"text":"This is still called when physgun_drawbeams is disabled.","issue":"3294"}},"realm":"Client","predicted":"No","args":{"arg":[{"text":"Physgun owner","name":"ply","type":"Player"},{"text":"The physgun","name":"physgun","type":"Weapon"},{"text":"Is the beam enabled","name":"enabled","type":"boolean"},{"text":"Entity we are grabbing. This will be NULL if nothing is being held","name":"target","type":"Entity"},{"text":"ID of the physics bone () we are grabbing at. Use  to translate to an actual bone.","name":"physBone","type":"number","page":["PhysObj","Entity:TranslatePhysBoneToBone"]},{"text":"Beam hit position relative to the physics bone () we are grabbing.","name":"hitPos","type":"Vector","page":"PhysObj"}]},"rets":{"ret":{"text":"Return false to hide default beam","name":"","type":"boolean"}}},"example":{"description":"Example code that will draw a direct line from the physgun to the target.","code":"hook.Add( \"DrawPhysgunBeam\", \"test\", function( ply, wep, enabled, target, bone, deltaPos )\n\n\t-- Draw any physgun effects here that are not the beam.\n\n\t-- Not \"firing\" the physgun? Don't draw anything.\n\tif ( !enabled ) then return false end\n\n\tlocal clr = Color( 255, 0, 0 )\n\n\t-- White when not \"firing\" physgun, this will not work with the \"if\" above\n\tif ( !enabled ) then clr = Color( 255, 255, 255, 255 ) end\n\n\tlocal hitpos = ply:GetEyeTrace().HitPos\n\tif ( IsValid( target ) ) then\n\t\tlocal mt = target:GetBoneMatrix( bone )\n\t\tif ( target:TranslatePhysBoneToBone( bone ) >= 0 ) then\n\t\t\tmt = target:GetBoneMatrix( target:TranslatePhysBoneToBone( bone ) )\n\t\tend\n\n\t\thitpos = LocalToWorld( deltaPos, Angle( 0, 0, 0 ), mt:GetTranslation(), mt:GetAngles() )\n\tend\n\n\tlocal srcPos = wep:GetAttachment( 1 ).Pos\n\tif ( !ply:ShouldDrawLocalPlayer() ) then\n\t\tsrcPos = ply:GetViewModel():GetAttachment( 1 ).Pos\n\tend\n\n\trender.DrawLine( srcPos, hitpos, clr )\n\n\treturn false -- Hide original physics gun beam\n\nend )"}},
{"function":{"name":"DrawDeathNotice","parent":"GM","type":"hook","ishook":true,"description":"This hook is called every frame to draw all of the current death notices.","realm":"Client","args":{"arg":[{"text":"X position to draw death notices as a ratio","name":"x","type":"number"},{"text":"Y position to draw death notices as a ratio","name":"y","type":"number"}]}}},
{"function":{"name":"CreateTeams","parent":"GM","type":"hook","ishook":true,"description":{"text":"Teams are created within this hook using .","page":"team.SetUp","note":{"text":"This hook is called before .","page":"GM:PreGamemodeLoaded"}},"realm":"Shared","predicted":"No"}},
{"function":{"name":"DoPlayerDeath","parent":"GM","type":"hook","ishook":true,"description":{"text":"Handles the player's death.\n\nThis hook is **not** called if the player is killed by . See  for that.\n\n*  is called after this hook\n*  is called after that","page":["Player:KillSilent","GM:PlayerSilentDeath","GM:PlayerDeath","GM:PostPlayerDeath"],"note":{"text":"returns true when this is called","page":"Player:Alive"}},"realm":"Server","predicted":"No","args":{"arg":[{"text":"The player","name":"ply","type":"Player"},{"text":"The entity that killed the player","name":"attacker","type":"Entity"},{"text":"Damage info","name":"dmg","type":"CTakeDamageInfo"}]}}},
{"function":{"name":"CreateMove","parent":"GM","type":"hook","ishook":true,"description":{"text":"Allows you to change the players movements before they're sent to the server.\n\nSee  for an explanation on the move system.","page":"Game Movement","note":{"text":"Due to this hook being clientside only, it could be overridden by the user allowing them to completely skip your logic, it is recommended to use  in a shared file instead.","page":"GM:StartCommand"}},"realm":"Client","predicted":"No","args":{"arg":{"text":"The User Command data","name":"cmd","type":"CUserCmd"}},"rets":{"ret":{"text":"Return true to:\n* Disable Sandbox C menu \"screen clicking\"\n* Disable Teammate nocollide (verification required)\n* Prevent calling of C_BaseHLPlayer::CreateMove & subsequently C_BasePlayer::CreateMove","name":"","type":"boolean"}}}},
{"function":{"name":"DoAnimationEvent","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called upon an animation event, this is the ideal place to call player animation functions such as ,  and so on.","page":["Player:AddVCDSequenceToGestureSlot","Player:AnimRestartGesture"]},"realm":"Shared","predicted":"No","args":{"arg":[{"text":"Player who is being animated","name":"ply","type":"Player"},{"text":"Animation event. See","name":"event","type":"number","page":"Enums/PLAYERANIMEVENT"},{"text":"The data for the event. This is interpreted as an  by PLAYERANIMEVENT_CUSTOM and PLAYERANIMEVENT_CUSTOM_GESTURE, or a sequence by PLAYERANIMEVENT_CUSTOM_SEQUENCE.","name":"data","type":"number","default":"0","page":"Enums/ACT"}]},"rets":{"ret":{"text":"The translated activity to send to the weapon. See . Return ACT_INVALID if you don't want to send an activity.","name":"","type":"number","page":"Enums/ACT"}}},"example":{"description":"Fires a custom animation event with PLAYERANIMEVENT_ATTACK_GRENADE as the event, and 123 as the extra data on primary attack, and 321 as the secondary attack.\nThe player will play the item throw gesture on the primary attack, and the drop one on secondary.","code":"function SWEP:PrimaryAttack()\n\tself.Owner:DoCustomAnimEvent( PLAYERANIMEVENT_ATTACK_GRENADE , 123 )\n\tself:SetNextPrimaryFire(CurTime() + 0.5 )\n\tself:SetNextSecondaryFire(CurTime() + 0.5 )\nend\n\nfunction SWEP:SecondaryAttack()\n\tself.Owner:DoCustomAnimEvent( PLAYERANIMEVENT_ATTACK_GRENADE , 321 )\n\tself:SetNextPrimaryFire(CurTime() + 0.5 )\n\tself:SetNextSecondaryFire(CurTime() + 0.5 )\nend\n\nhook.Add(\"DoAnimationEvent\" , \"AnimEventTest\" , function( ply , event , data )\n\tif event == PLAYERANIMEVENT_ATTACK_GRENADE then\n\t\tif data == 123 then\n\t\t\tply:AnimRestartGesture( GESTURE_SLOT_GRENADE, ACT_GMOD_GESTURE_ITEM_THROW, true )\n\t\t\treturn ACT_INVALID\n\t\tend\n\t\t\n\t\tif data == 321 then\n\t\t\tply:AnimRestartGesture( GESTURE_SLOT_GRENADE, ACT_GMOD_GESTURE_ITEM_DROP, true )\n\t\t\treturn ACT_INVALID\n\t\tend\n\tend\nend)"}},
{"function":{"name":"CreateEntityRagdoll","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called when a serverside ragdoll of an entity has been created.\n\nSee  for clientside ragdolls.","page":"GM:CreateClientsideRagdoll"},"realm":"Server","predicted":"No","args":{"arg":[{"text":"Entity that owns the ragdoll","name":"owner","type":"Entity"},{"text":"The ragdoll entity","name":"ragdoll","type":"Entity"}]}}},
{"function":{"name":"CreateClientsideRagdoll","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called whenever an entity becomes a clientside ragdoll.\n\nSee  for serverside ragdolls.","page":"GM:CreateEntityRagdoll"},"realm":"Client","predicted":"No","args":{"arg":[{"text":"The Entity that created the ragdoll","name":"entity","type":"Entity"},{"text":"The ragdoll being created.","name":"ragdoll","type":"Entity"}]}},"example":{"description":"A way of fade out a ragdoll easily. Idea from [here](https://github.com/ValveSoftware/source-sdk-2013/blob/0d8dceea4310fde5706b3ce1c70609d72a38efdf/mp/src/game/client/c_baseanimating.cpp#L533).","code":"hook.Add( \"CreateClientsideRagdoll\", \"fade_out_corpses\", function( entity, ragdoll )\n\n\tragdoll:SetSaveValue( \"m_bFadingOut\", true ) -- Set the magic internal variable that will cause the ragdoll to immediately start fading out\n\nend )"}},
{"function":{"name":"CloseDermaMenus","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called when derma menus are closed with .","page":"Global.CloseDermaMenus"},"realm":"Client and Menu","predicted":"No"}},
{"function":{"name":"CheckPassword","parent":"GM","type":"hook","ishook":true,"description":"Called when a non local player connects to allow the Lua system to check the password.\n\nThe default behaviour in the base gamemodes emulates what would normally happen. If sv_password is set and its value matches the password passed in by the client - then they are allowed to join. If it isn't set it lets them in too.","realm":"Server","predicted":"No","args":{"arg":[{"text":"The 64bit Steam ID of the joining player, use  to convert it to a \"STEAM_0:\" one.","name":"steamID64","type":"string","page":"util.SteamIDFrom64"},{"text":"The IP of the connecting client","name":"ipAddress","type":"string"},{"text":"The current value of sv_password (the password set by the server)","name":"svPassword","type":"string"},{"text":"The password provided by the client","name":"clPassword","type":"string"},{"text":"The name of the joining player","name":"name","type":"string"}]},"rets":{"ret":[{"text":"If the hook returns false then the player is disconnected","name":"","type":"boolean"},{"text":"If returning false in the first argument, then this should be the disconnect message. This will default to \"#GameUI_ServerRejectBadPassword\", which is \"Bad Password.\" translated to the client's language.","name":"","type":"string"}]}},"example":{"description":"A user access whitelist to the server\n\nAvailable pre-defined messages can be found in `../sourceengine/resource/gameui_english.txt` files.\n\nSuggested messages are `#GameUI_ConnectionFailed` and `#GameUI_ServerRejectLANRestrict`","code":"local allowed = {\n\t[\"76561198012345678\"] = true, -- Me\n\t[\"76561198123456789\"] = true, -- Friend #1\n\t[\"76561198234567890\"] = true, -- Friend #2\n}\n\nhook.Add( \"CheckPassword\", \"access_whitelist\", function( steamID64 )\n\tif not allowed[steamID64] then\n\t\treturn false, \"#GameUI_ServerRejectLANRestrict\"\n\tend\nend )"}},
{"function":{"name":"ChatTextChanged","parent":"GM","type":"hook","ishook":true,"description":"Called whenever the content of the user's chat input box is changed.","realm":"Client","args":{"arg":{"text":"The new contents of the input box","name":"text","type":"string"}}}},
{"function":{"name":"CaptureVideo","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called each frame to record demos to video using .","page":"IVideoWriter","note":"This hook is called every frame regardless of whether or not a demo is being recorded"},"realm":"Menu","predicted":"No","file":{"text":"lua/menu/demo_to_video.lua","line":"286-310"}}},
{"function":{"name":"ChatText","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called when a message is printed to the chat box. Note, that this isn't working with player messages even though there are arguments for it.\n\nFor player messages see  and","page":["GM:PlayerSay","GM:OnPlayerChat"]},"realm":"Client","predicted":"No","args":{"arg":[{"text":"The index of the player.","name":"index","type":"number"},{"text":"The name of the player.","name":"name","type":"string"},{"text":"The text that is being sent.","name":"text","type":"string"},{"text":"Chat filter type. Possible values are:\n* joinleave - Player join and leave messages\n* namechange - Player name change messages\n* servermsg - Server messages such as convar changes\n* teamchange - Team changes?\n* chat - (Obsolete?) Player chat?\n* none - A fallback value","name":"type","type":"string"}]},"rets":{"ret":{"text":"Return true to suppress the chat message","name":"","type":"boolean"}}},"example":{"description":"Hides default join and leave messages in chat.","code":"hook.Add( \"ChatText\", \"hide_joinleave\", function( index, name, text, typ )\n\tif ( typ == \"joinleave\" ) then return true end\nend )"}},
{"function":{"name":"CanPlayerUnfreeze","parent":"GM","type":"hook","ishook":true,"description":"Determines if the player can unfreeze the entity.","realm":"Server","predicted":"No","args":{"arg":[{"text":"The player","name":"player","type":"Player"},{"text":"The entity","name":"entity","type":"Entity"},{"text":"The physics object of the entity","name":"phys","type":"PhysObj"}]},"rets":{"ret":{"text":"True if they can unfreeze.","name":"","type":"boolean"}}}},
{"function":{"name":"CanPlayerSuicide","parent":"GM","type":"hook","ishook":true,"description":"Determines if the player can kill themselves using the concommands \"kill\" or \"explode\".","realm":"Server","predicted":"No","args":{"arg":{"text":"The player","name":"player","type":"Player"}},"rets":{"ret":{"text":"True if they can suicide.","name":"","type":"boolean"}}},"example":{"description":"Makes suiciding only accessible for super admins.","code":"function GM:CanPlayerSuicide( ply )\n\treturn ply:IsSuperAdmin()\nend"}},
{"function":{"name":"CanPlayerEnterVehicle","parent":"GM","type":"hook","ishook":true,"description":{"text":"Determines whether or not the player can enter the vehicle.\n\nCalled just before .","page":"GM:PlayerEnteredVehicle"},"realm":"Server","predicted":"No","args":{"arg":[{"text":"The player","name":"player","type":"Player"},{"text":"The vehicle","name":"vehicle","type":"Vehicle"},{"name":"role","type":"number"}]},"rets":{"ret":{"text":"False if the player is not allowed to enter the vehicle.","name":"","type":"boolean"}}}},
{"function":{"name":"CanEditVariable","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called when a variable is edited on an Entity (called by Edit Properties... menu), to determine if the edit should be permitted.\n\nSee  for more details about the system.","page":",Editable entitiesEditable_Entities"},"realm":"Server","predicted":"No","args":{"arg":[{"text":"The entity being edited","name":"ent","type":"Entity"},{"text":"The player doing the editing","name":"ply","type":"Player"},{"text":"The name of the variable","name":"key","type":"string"},{"text":"The new value, as a string which will later be converted to its appropriate type","name":"val","type":"string"},{"text":"The edit table defined in","name":"editor","type":"table","page":"Entity:NetworkVar"}]},"rets":{"ret":{"text":"Return true to allow editing","name":"","type":"boolean"}}},"example":{"description":"From base/gamemode/variable_edit.lua\n\n\nMakes \"Edit Properties...\" right click property admin only","code":"function GM:CanEditVariable( ent, ply, key, val, editor )\n    return ply:IsAdmin()\nend"}},
{"function":{"name":"CalcViewModelView","parent":"GM","type":"hook","ishook":true,"description":"Allows overriding the position and angle of the viewmodel.","realm":"Client","args":{"arg":[{"text":"The weapon entity","name":"wep","type":"Weapon"},{"text":"The viewmodel entity","name":"vm","type":"Entity"},{"text":"Original position (before viewmodel bobbing and swaying)","name":"oldPos","type":"Vector"},{"text":"Original angle (before viewmodel bobbing and swaying)","name":"oldAng","type":"Angle"},{"text":"Current position","name":"pos","type":"Vector"},{"text":"Current angle","name":"ang","type":"Angle"}]},"rets":{"ret":[{"text":"New position","name":"","type":"Vector"},{"text":"New angle","name":"","type":"Angle"}]}}},
{"function":{"name":"CalcView","parent":"GM","type":"hook","ishook":true,"description":"Allows override of the default view.","realm":"Client","predicted":"No","args":{"arg":[{"text":"The local player.","name":"ply","type":"Player"},{"text":"The player's view position.","name":"origin","type":"Vector"},{"text":"The player's view angles.","name":"angles","type":"Angle"},{"text":"Field of view.","name":"fov","type":"number"},{"text":"Distance to near clipping plane.","name":"znear","type":"number"},{"text":"Distance to far clipping plane.","name":"zfar","type":"number"}]},"rets":{"ret":{"text":"View data table. See","name":"","type":"table","page":"Structures/CamData"}}},"example":{"description":"Draws the LocalPlayer and sets the view behind.","code":"local function MyCalcView(ply, pos, angles, fov)\n\tlocal view = {}\n\tview.origin = pos-(angles:Forward()*100)\n\tview.angles = angles\n\tview.fov = fov\n\tview.drawviewer = true\n\n\treturn view\nend\n \nhook.Add( \"CalcView\", \"MyCalcView\", MyCalcView )"}},
{"function":{"name":"CalcVehicleView","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called from  when player is in driving a vehicle.\n\nThis hook may not be called in gamemodes that override .","page":["GM:CalcView","GM:CalcView"]},"realm":"Client","predicted":"No","args":{"arg":[{"text":"The vehicle the player is driving","name":"veh","type":"Vehicle"},{"text":"The vehicle driver","name":"ply","type":"Player"},{"text":"The view data containing players FOV, view position and angles, see","name":"view","type":"table","page":"Structures/CamData"}]},"rets":{"ret":{"text":"The modified view table containing new values, see","name":"","type":"table","page":"Structures/CamData"}}}},
{"function":{"name":"CalcMainActivity","parent":"GM","type":"hook","ishook":true,"description":{"text":"This hook is used to calculate animations for a player.","warning":"This hook must return the same values at the same time on both, client **and** server. On client for players to see the animations, on server for hit detection to work properly.","bug":{"text":"This can return the incorrect velocity when on a moving object.","issue":"3322"}},"realm":"Shared","predicted":"No","args":{"arg":[{"text":"The player to apply the animation.","name":"ply","type":"Player"},{"text":"The velocity of the player.","name":"vel","type":"Vector"}]},"rets":{"ret":[{"text":"for the activity the player should use. A nil return will be treated as ACT_INVALID.","name":"","type":"number","page":"Enums/ACT"},{"text":"Sequence for the player to use. This takes precedence over the activity (the activity is still used for layering). Return -1 or nil to let the activity determine the sequence.","name":"","type":"number"}]}}},
{"function":{"name":"CanExitVehicle","parent":"GM","type":"hook","ishook":true,"description":"Determines if the player can exit the vehicle.","realm":"Server","predicted":"No","args":{"arg":[{"text":"The vehicle entity","name":"veh","type":"Vehicle"},{"text":"The player","name":"ply","type":"Player"}]},"rets":{"ret":{"text":"True if the player can exit the vehicle.","name":"","type":"boolean"}}},"example":{"description":"Only lets player exit vehicle if it is not in motion.","code":"function GM:CanExitVehicle(veh, ply)\n    return (veh:GetVelocity() == Vector(0,0,0))\nend"}},
{"function":{"name":"AllowPlayerPickup","parent":"GM","type":"hook","ishook":true,"description":{"text":"Called when a player tries to pick up something using the \"use\" key, return to override.\n\nSee  for the Gravity Gun pickup variant.","page":"GM:GravGunPickupAllowed"},"realm":"Server","predicted":"No","file":{"text":"gamemodes/base/gamemode/player.lua","line":"786"},"args":{"arg":[{"text":"The player trying to pick up something.","name":"ply","type":"Player"},{"text":"The Entity the player attempted to pick up.","name":"ent","type":"Entity"}]},"rets":{"ret":{"text":"Allow the player to pick up the entity or not.","name":"","type":"boolean"}}},"example":{"description":"Allows only admins to pick up things","code":"local function up( ply, ent )\n    return ply:IsAdmin()\nend\nhook.Add( \"AllowPlayerPickup\", \"some_unique_name\", up )"}},
{"function":{"name":"AdjustMouseSensitivity","parent":"GM","type":"hook","ishook":true,"description":"Allows you to adjust the mouse sensitivity.","realm":"Client","predicted":"No","hidepredictionwarning":"No","file":{"text":"gamemodes/base/gamemode/cl_init.lua","line":"408"},"args":{"arg":{"text":"The old sensitivity\n\nIn general it will be 0, which is equivalent to a sensitivity of 1.","name":"defaultSensitivity","type":"number"}},"rets":{"ret":{"text":"A fraction of the normal sensitivity (0.5 would be half as sensitive), return -1 to not override.","name":"","type":"number"}}}},
{"function":{"name":"AddDeathNotice","parent":"GM","type":"hook","ishook":true,"description":{"text":"Adds a death notice entry.","bug":{"text":"You cannot use  on this hook yet.","issue":"2611","pull":"1380","page":"hook.Add"}},"realm":"Client","predicted":"No","file":{"text":"gamemodes/base/gamemode/cl_deathnotice.lua","line":"127"},"args":{"arg":[{"text":"The name of the attacker","name":"attacker","type":"string"},{"text":"The team of the attacker","name":"attackerTeam","type":"number"},{"text":"Class name of the entity inflicting the damage","name":"inflictor","type":"string"},{"text":"Name of the victim","name":"victim","type":"string"},{"text":"Team of the victim","name":"victimTeam","type":"number"}]}},"example":{"description":"Shows a suicide death notice in Sandbox.","code":"local ply = Entity(1)\nGAMEMODE:AddDeathNotice( ply:GetName(), ply:Team(), nil, ply:GetName(), ply:Team() )","output":{"image":{"src":"suidcide_death_notice.jpg"}}}},
{"function":{"name":"AddDeathNotice","parent":"GM","type":"hook","ishook":true,"description":{"text":"Adds a death notice entry.","bug":{"text":"You cannot use  on this hook yet.","issue":"2611","pull":"1380","page":"hook.Add"}},"realm":"Client","predicted":"No","file":{"text":"gamemodes/base/gamemode/cl_deathnotice.lua","line":"127"},"args":{"arg":[{"text":"The name of the attacker","name":"attacker","type":"string"},{"text":"The team of the attacker","name":"attackerTeam","type":"number"},{"text":"Class name of the entity inflicting the damage","name":"inflictor","type":"string"},{"text":"Name of the victim","name":"victim","type":"string"},{"text":"Team of the victim","name":"victimTeam","type":"number"}]}},"example":{"description":"Shows a suicide death notice in Sandbox.","code":"local ply = Entity(1)\nGAMEMODE:AddDeathNotice( ply:GetName(), ply:Team(), nil, ply:GetName(), ply:Team() )","output":{"image":{"src":"suidcide_death_notice.jpg"}}}},
{"function":{"name":"Use","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Called when another entity uses this entity, example would be a player pressing \"+use\" this entity.\n\nTo change how often the function is called, see .","page":"Entity:SetUseType","note":"This hook only works for \"nextbot\", \"ai\" and \"anim\" scripted entity types."},"realm":"Server","predicted":"No","args":{"arg":[{"text":"The entity that caused this input. This will usually be the player who pressed their use key","name":"activator","type":"Entity"},{"text":"The entity responsible for the input. This will typically be the same as `activator` unless some other entity is acting as a proxy","name":"caller","type":"Entity"},{"text":"Use type, see .","name":"useType","type":"number","page":"Enums/USE"},{"text":"Any passed value.","name":"value","type":"number"}]}},"example":{"description":"Kills any player that uses this entity.","code":"function ENT:Use( activator )\n\n\tif activator:IsPlayer() then \n\n\t\tactivator:Kill()\n\n\tend\n\nend"}},
{"function":{"name":"UpdateTransmitState","parent":"ENTITY","type":"hook","ishook":true,"description":"Called whenever the transmit state should be updated.","realm":"Server","predicted":"No","rets":{"ret":{"text":"Transmit state to set, see .","name":"","type":"number","page":"Enums/TRANSMIT"}}},"example":{"description":"Entity pickup example, stops the entity from being networked after it's been picked up, and restores it once it \"respawns\".","code":{"text":"function ENT:Touch( other )\n\tif ( self.NextRespawn > CurTime() ) then return end\n\t\n\tself.NextRespawn = CurTime() + 5\n\tself:AddEFlags( EFL_FORCE_CHECK_TRANSMIT )\nend\n\nfunction ENT:UpdateTransmitState()\n\tif ( self.NextRespawn > CurTime() ) then\n\t\treturn TRANSMIT_NEVER\n\tend\n\t\n\treturn TRANSMIT_PVS\nend\n\nfunction ENT:Think()\n\tif ( self.NextRespawn != -1 && self.NextRespawn","curtime":{"then":"","self.nextrespawn":"-1","self:addeflags":"","efl_force_check_transmit":"","end":"","ode":"ode"}}}},
{"function":{"name":"Touch","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Called every tick for every entity being \"touched\".\n\nSee also  and .","page":["ENTITY:StartTouch","ENTITY:EndTouch"],"warning":{"text":"This only works for **brush** entities and for entities that have  set to true.","page":"Entity:SetTrigger"},"note":{"text":"For physics enabled entities, this hook will **not** be ran while the entity's physics is asleep. See .","page":"PhysObj:Wake"}},"realm":"Server","predicted":"No","args":{"arg":{"text":"The entity that touched it.","name":"entity","type":"Entity"}}},"example":{"code":"function ENTITY:Touch(entity)\n\tself:EmitSound(\"ambient/explosions/explode_\" .. math.random(1, 9) .. \".wav\")\n\tself:Remove()\nend"}},
{"function":{"name":"Think","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Called every frame on the client.\nCalled every tick on the server.","note":"By default, it runs about 5-6 times per second on the server, but you can force it to run at servers tickrate using the example below."},"realm":"Shared","predicted":"No","rets":{"ret":{"text":"Return true if you used  to override the next execution time.","name":"","type":"boolean","page":"Entity:NextThink"}}},"example":{"description":"Force the think hook to run at the maximum frequency.\nThis is generally only used for anim entities, if the entity has to play any animations.","code":"ENT.AutomaticFrameAdvance = true -- Must be set on client\n\nfunction ENT:Think()\n\t-- Do stuff\n\n\tself:NextThink( CurTime() )\n\treturn true\nend"}},
{"function":{"name":"TriggerOutput","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Triggers all outputs stored using .","page":"ENTITY:StoreOutput"},"realm":"Server","predicted":"No","args":{"arg":[{"text":"Name of output to fire","name":"output","type":"string"},{"text":"Activator entity","name":"activator","type":"Entity"},{"text":"The data to give to the output.","name":"data","type":"string","default":"nil"}]}},"example":{"description":{"text":"For engine entities you can use  to hook outputs. This example hooks all trigger_teleport","page":"Entity:Fire"},"code":"local function SetupMapLua()\n\tMapLua = ents.Create( \"lua_run\" )\n\tMapLua:SetName( \"triggerhook\" )\n\tMapLua:Spawn()\n\n\tfor k, v in pairs( ents.FindByClass( \"trigger_teleport\" ) ) do\n\t\tprint( v )\n\t\tv:Fire( \"AddOutput\", \"OnStartTouch triggerhook:RunPassedCode:hook.Run( 'OnTeleport' ):0:-1\" )\n\tend\nend\n\nhook.Add( \"InitPostEntity\", \"SetupMapLua\", SetupMapLua )\nhook.Add( \"PostCleanupMap\", \"SetupMapLua\", SetupMapLua )\nhook.Add( \"OnTeleport\", \"TestTeleportHook\", function()\n\tlocal activator, caller = ACTIVATOR, CALLER\n\tprint( activator, caller )\nend )","output":"When player touches trigger_teleport this will be printed in the console:\n```\nPlayer [1][Player1] Entity [3][trigger_teleport]\n```"}},
{"function":{"name":"TaskTime","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Returns how many seconds we've been doing this current task","note":"This hook only exists for **ai** type SENTs"},"realm":"Server","rets":{"ret":{"text":"How many seconds we've been doing this current task","name":"","type":"number"}}}},
{"function":{"name":"TestCollision","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Allows you to override trace result when a trace hits the entitys Bounding Box.","note":{"text":"Your entity must have  enabled for this hook to work","page":"Entity:EnableCustomCollisions"}},"realm":"Shared","predicted":"No","args":{"arg":[{"text":"Start position of the trace","name":"startpos","type":"Vector"},{"text":"Offset from startpos to the endpos of the trace","name":"delta","type":"Vector"},{"text":"Is the trace a hull trace?","name":"isbox","type":"boolean"},{"text":"Size of the hull trace?","name":"extents","type":"Vector"},{"text":"The  mask","name":"mask","type":"number","page":"Enums/CONTENTS"}]},"rets":{"ret":{"text":"A table containing new HitPos, Fraction and Normal. Returning nothing allows the trace to ignore the entity completely.","name":"","type":"table"}}},"example":{"description":"Example taken from lua/entities/widget_base.lua","code":"function ENT:TestCollision( startpos, delta, isbox, extents )\n\n        if ( isbox ) then return end\n        if ( !widgets.Tracing ) then return end\n        \n        -- TODO. Actually trace against our cube!\n        \n        return \n        { \n                HitPos                = self:GetPos(),\n                Fraction        = 0.5 * self:GetPriority()\n        }\n\nend"}},
{"function":{"name":"TaskFinished","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Returns true if the current running Task is finished.","note":"This hook only exists for **ai** type SENTs"},"realm":"Server","rets":{"ret":{"text":"Is the current running Task is finished or not.","name":"","type":"boolean"}}}},
{"function":{"name":"StoreOutput","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Used to store an output so it can be triggered with .\nOutputs compiled into a map are passed to entities as key/value pairs through .\n\nTriggerOutput will do nothing if this function has not been called first.","page":["ENTITY:TriggerOutput","ENTITY:KeyValue"]},"realm":"Server","predicted":"No","file":{"text":"garrysmod/gamemodes/base/entities/entities/base_entity/outputs.lua","line":"10-L24"},"args":{"arg":[{"text":"Name of output to store","name":"name","type":"string"},{"text":"Output info","name":"info","type":"string"}]}},"example":{"description":"Stores all outputs that are assigned to an entity in Hammer.","code":"function ENT:KeyValue( k, v )\n\t-- 99% of all outputs are named 'OnSomethingHappened'.\n\tif ( string.Left( k, 2 ) == \"On\" ) then\n\t\tself:StoreOutput( k, v )\n\tend\nend"}},
{"function":{"name":"StartTask","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Called once on starting task.","note":"This hook only exists for **ai** type SENTs"},"realm":"Server","args":{"arg":{"text":"The task to start, created by .","name":"task","type":"Task","page":"ai_task.New"}}},"example":{"description":"How it is defined:","code":"function ENT:StartTask( task )\n\ttask:Start( self.Entity )\nend"}},
{"function":{"name":"StartTouch","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Called when the entity starts touching another entity.","warning":{"text":"This only works for **brush** entities and for entities that have  set to true.","page":"Entity:SetTrigger"}},"realm":"Server","args":{"arg":{"text":"The entity which is being touched.","name":"entity","type":"Entity"}}}},
{"function":{"name":"StartSchedule","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Starts a schedule previously created by .\n\nNot to be confused with  or  which start an Engine-based schedule.","page":["ai_schedule.New","ENTITY:StartEngineSchedule","NPC:SetSchedule"],"note":"This hook only exists for **ai** type SENTs"},"realm":"Server","args":{"arg":{"text":"Schedule to start.","name":"sched","type":"Schedule"}}}},
{"function":{"name":"StartEngineTask","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Called when an engine task has been started on the entity.","note":"This hook only exists for **ai** type SENTs"},"realm":"Server","predicted":"No","args":{"arg":[{"text":"Task ID to start, see [ai_task.h](https://github.com/ValveSoftware/source-sdk-2013/blob/55ed12f8d1eb6887d348be03aee5573d44177ffb/mp/src/game/server/ai_task.h#L89-L502)","name":"taskID","type":"number"},{"text":"Task data","name":"TaskData","type":"number"}]},"rets":{"ret":{"text":"true to stop default action","name":"","type":"boolean"}}}},
{"function":{"name":"StartEngineSchedule","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Starts an engine schedule.","note":"This hook only exists for **ai** type SENTs"},"realm":"Server","args":{"arg":{"text":"Schedule ID to start. See","name":"scheduleID","type":"number","page":"Enums/SCHED"}}}},
{"function":{"name":"SpawnFunction","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"This is the spawn function. It's called when a player spawns the entity from the spawnmenu.\n\nIf you want to make your SENT spawnable you need this function to properly create the entity.","warning":{"text":"Unlike other ENTITY functions, the \"self\" parameter of this function is not an entity but rather the table used to generate the SENT. This table is equivalent to (\"ent_name\").","page":"scripted_ents.GetStored"}},"realm":"Server","predicted":"No","args":{"arg":[{"text":"The player that is spawning this SENT","name":"ply","type":"Player"},{"text":"A  from player eyes to their aim position","name":"tr","type":"table","page":"Structures/TraceResult"},{"text":"The classname of your entity","name":"ClassName","type":"string"}]}},"example":[{"description":"This is how it is defined in sent_ball","code":"function ENT:SpawnFunction( ply, tr, ClassName )\n\n\tif ( !tr.Hit ) then return end\n\n\tlocal SpawnPos = tr.HitPos + tr.HitNormal * 16\n\n\tlocal ent = ents.Create( ClassName )\n\tent:SetPos( SpawnPos )\n\tent:SetBallSize( math.random( 16, 48 ) )\n\tent:Spawn()\n\tent:Activate()\n\n\treturn ent\n\nend"},{"description":"This is how base_edit spawns (also rotates the entity to face the player, remove * 10 if it spawns in the air)","code":"function ENT:SpawnFunction( ply, tr, ClassName )\n\n\tif ( !tr.Hit ) then return end\n\t\n\tlocal SpawnPos = tr.HitPos + tr.HitNormal * 10\n\tlocal SpawnAng = ply:EyeAngles()\n\tSpawnAng.p = 0\n\tSpawnAng.y = SpawnAng.y + 180\n\t\n\tlocal ent = ents.Create( ClassName )\n\tent:SetPos( SpawnPos )\n\tent:SetAngles( SpawnAng )\n\tent:Spawn()\n\tent:Activate()\n\t\n\treturn ent\n\t\nend"}]},
{"function":{"name":"SetupDataTables","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Called when the entity should set up its .\n\nThis is a much better option than using Set/Get Networked Values.\n\nThis hook is called after  and .","page":[", Data TablesNetworking_Entities","GM:OnEntityCreated","GM:NetworkEntityCreated"]},"realm":"Shared","predicted":"No"},"example":{"description":"Sets up networked variables, adds functions SetAmount, GetAmount, GetBloodPos, SetBloodPos, GetUrinePos, SetUrinePos.\n\nThis function only supports 64 data tables per type (#0-63), except for strings which only supports 4.","code":"function ENT:SetupDataTables()\n\n\tself:NetworkVar( \"Float\", 0, \"Amount\" )\n\tself:NetworkVar( \"Vector\", 0, \"BloodPos\" )\n\tself:NetworkVar( \"Vector\", 1, \"UrinePos\" )\n\n\tif SERVER then\n\t\tself:SetAmount( 3 )\n\t\tself:SetBloodPos( Vector( 0, -32, 0 ) )\n\t\tself:SetUrinePos( Vector( 0, 0, -16 ) )\n\tend\n\nend"}},
{"function":{"name":"SetTask","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Sets the current task.","note":"This hook only exists for **ai** type SENTs"},"realm":"Server","args":{"arg":{"text":"The task to set.","name":"task","type":"table"}}}},
{"function":{"name":"SetAutomaticFrameAdvance","parent":"ENTITY","type":"hook","ishook":true,"description":"Toggles automatic frame advancing for animated sequences on an entity.\n\nThis has the same effect as setting the **ENT.AutomaticFrameAdvance** property.","realm":"Shared","args":{"arg":{"text":"Whether or not to set automatic frame advancing.","name":"enable","type":"boolean"}}}},
{"function":{"name":"SelectSchedule","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Set the schedule we should be playing right now.","note":"This hook only exists for **ai** type SENTs"},"realm":"Server","args":{"arg":{"name":"iNPCState","type":"number"}}},"example":{"description":"Creates a new schedule and assigns it to a scripted NPC.","code":"local schdTest = ai_schedule.New( \"Test Schedule\" )\n \nschdTest:EngTask( \"TASK_GET_PATH_TO_RANDOM_NODE\",  128 )\nschdTest:EngTask( \"TASK_RUN_PATH\", \t\t   0   )\nschdTest:EngTask( \"TASK_WAIT_FOR_MOVEMENT\", \t   0   )\n \n \nfunction ENT:SelectSchedule()\n \n\tself:StartSchedule( schdTest )\n \nend","output":"The scripted NPC will run around when spawned."}},
{"function":{"name":"RunTask","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Called every think on running task.\nThe actual task function should tell us when the task is finished.","note":"This hook only exists for **ai** type SENTs"},"realm":"Server","args":{"arg":{"text":"The task to run","name":"task","type":"table"}}}},
{"function":{"name":"ScheduleFinished","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Called whenever a schedule is finished.","note":"This hook only exists for **ai** type SENTs"},"realm":"Server"}},
{"function":{"name":"RunEngineTask","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Called when an engine task is ran on the entity.","note":"This hook only exists for **ai** type SENTs"},"realm":"Server","predicted":"No","args":{"arg":[{"text":"The task ID, see [ai_task.h](https://github.com/ValveSoftware/source-sdk-2013/blob/55ed12f8d1eb6887d348be03aee5573d44177ffb/mp/src/game/server/ai_task.h#L89-L502)","name":"taskID","type":"number"},{"text":"The task data.","name":"taskData","type":"number"}]},"rets":{"ret":{"text":"true to prevent default action","name":"","type":"boolean"}}}},
{"function":{"name":"RunAI","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Called from the engine every 0.1 seconds.","note":"This hook only exists for **ai** type SENTs"},"realm":"Server"}},
{"function":{"name":"PreEntityCopy","parent":"ENTITY","type":"hook","ishook":true,"description":"Called before the duplicator copies the entity.\n\nIf you are looking for a way to make the duplicator spawn another entity when duplicated. ( For example, you duplicate a \"prop_physics\", but you want the duplicator to spawn \"prop_physics_my\" ), you should add prop_physics.ClassOverride = \"prop_physics_my\". The duplication table should be also stored on that prop_physics, not on prop_physics_my.","realm":"Server","predicted":"No"},"example":{"description":"Example on how to store values for duplicator, and then restore them afterwards","code":"-- Store the value for duplicator\nfunction ENT:PreEntityCopy()\n\tself.MyDuplicatorVariasble = self:GetSequence()\nend\n\n-- Restore the saved value\nfunction ENT:PostEntityPaste()\n\t-- Always validate data before using it\n\tif ( !self.MyDuplicatorVariasble ) then return end\n\n\tself:ResetSequence( self.MyDuplicatorVariasble )\nend"}},
{"function":{"name":"RenderOverride","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Called instead of the engine drawing function of the entity. This hook works on any entity (scripted or not) it is applied on.\n\nThis does not work on \"physgun_beam\", use  instead.","page":"GM:DrawPhysgunBeam","note":"As a downside of this implementation, only one RenderOverride may be applied at a time.","bug":[{"text":"Drawing a viewmodel in this function will cause , , , , and  to be called twice.","issue":"3292","page":["GM:PreDrawViewModel","WEAPON:PreDrawViewModel","WEAPON:ViewModelDrawn","GM:PostDrawViewModel","WEAPON:PostDrawViewModel"]},{"text":"This is called before PrePlayerDraw for players. If this function exists at all on a player, their worldmodel will always be rendered regardless of PrePlayerDraw's return.","issue":"3299"}]},"realm":"Client","predicted":"No"},"example":{"description":"Set the entity the player is looking at to not draw if the player is its owner.","code":"local function DontDrawMe( self )\n\tif ( self:GetOwner() == LocalPlayer() ) then\n\t\treturn\n\tend\n\t\n\tself:DrawModel()\nend\n\nlocal pickent = LocalPlayer():GetEyeTrace().Entity\n\nif ( IsValid( pickent ) ) then\n\tpickent.RenderOverride = DontDrawMe\nend"}},
{"function":{"name":"PostEntityPaste","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Called after the  pastes the entity, after the bone/entity modifiers have been applied to the entity.\n\nThis hook is called after .","page":["duplicator","ENTITY:OnDuplicated"]},"realm":"Server","predicted":"No","args":{"arg":[{"text":"The player who pasted the entity.","name":"ply","type":"Player","warning":"This may not be a valid player in some circumstances. For example, when a save is loaded from the main menu, this hook will be called before the player is spawned. This argument will be a NULL entity in that case.","bug":{"text":"This will be nil for invalid players.","pull":"1408"}},{"text":"The entity itself. Same as 'self'.","name":"ent","type":"Entity"},{"text":"All entities that are within the placed dupe.","name":"createdEntities","type":"table","note":"The keys of each value in this table are the original entity indexes when the duplication was created. This can be utilized to restore entity references that don't get saved in duplications."}]}}},
{"function":{"name":"PostEntityCopy","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Called after the duplicator finished copying the entity.\n\nSee also  and .","page":["ENTITY:PreEntityCopy","ENTITY:PostEntityPaste"]},"realm":"Server","predicted":"No"}},
{"function":{"name":"PhysicsUpdate","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Called whenever the physics of the entity are updated.","warning":{"text":"This hook won't be called if the Entity's  goes asleep","page":"PhysObj"}},"realm":"Shared","predicted":"No","hidepredictionwarning":"No","args":{"arg":{"text":"The physics object of the entity.","name":"phys","type":"PhysObj"}}}},
{"function":{"name":"PhysicsSimulate","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Called from the Entity's motion controller to simulate physics.\n\nThis will only be called after using  on a scripted entity of \"anim\" type.","page":"Entity:StartMotionController","note":{"text":"This hook can work on the CLIENT if you call  and use  on the physics objects you want to control","page":["Entity:StartMotionController","Entity:AddToMotionController"]},"warning":{"text":"Do not use functions such as  or  in this hook as they're very likely to crash your game. You may want to use  instead.","page":["PhysObj:EnableCollisions","PhysObj:EnableGravity","ENTITY:PhysicsUpdate"]}},"realm":"Shared","predicted":"No","args":{"arg":[{"text":"The physics object of the entity.","name":"phys","type":"PhysObj"},{"text":"Time since the last call.","name":"deltaTime","type":"number"}]},"rets":{"ret":[{"text":"Angular force","name":"","type":"Vector"},{"text":"Linear force","name":"","type":"Vector"},{"text":"One of the .","name":"","type":"number","page":"Enums/SIM"}]}}},
{"function":{"name":"PhysicsCollide","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Called when the entity collides with anything. The move type and solid type must be VPHYSICS for the hook to be called.","note":{"text":"If you want to use this hook on default/engine/non-Lua entites ( like prop_physics ), use  instead! This page describes a hook for Lua entities","page":"Entity:AddCallback"}},"realm":"Server","predicted":"No","args":{"arg":[{"text":"Information regarding the collision. See .","name":"colData","type":"table","page":"Structures/CollisionData"},{"text":"The physics object that collided.","name":"collider","type":"PhysObj"}]}},"example":{"description":"Play a sound when we hit something.","code":"function ENT:PhysicsCollide( data, phys )\n\tif ( data.Speed > 50 ) then self:EmitSound( Sound( \"Flashbang.Bounce\" ) ) end\nend"}},
{"function":{"name":"OnTaskComplete","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Called from the engine when TaskComplete is called.\nThis allows us to move onto the next task - even when TaskComplete was called from an engine side task.","note":"This hook only exists for **ai** type SENTs"},"realm":"Server"}},
{"function":{"name":"PassesTriggerFilters","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Polls whenever the entity should trigger the brush.","warning":"This hook is broken and will not work without code below"},"realm":"Server","predicted":"No","args":{"arg":{"text":"The entity that is about to trigger.","name":"ent","type":"Entity"}},"rets":{"ret":{"text":"Should trigger or not.","name":"","type":"boolean"}}},"example":{"description":"How this is supposed to work internally","code":"ENT.Entities = {}\n\nfunction ENT:IsTouchedBy( ent )\n\treturn table.HasValue( self.Entities, ent )\nend\n\nfunction ENT:StartTouch( ent )\n\tif ( !self:PassesTriggerFilters( ent ) ) then return end\n\ttable.insert( self.Entities, ent )\n\n\t/* Code */\nend\n\nfunction ENT:Touch( ent )\n\tif ( !self:PassesTriggerFilters( ent ) ) then return end\n\tif ( !table.HasValue( ent ) ) then table.insert( self.Entities, ent ) end\n\n\t/* Code */\nend\n\nfunction ENT:EndTouch( ent )\n\tif ( !self:IsTouchedBy( ent ) ) then return end\n\ttable.RemoveByValue( self.Entities, ent )\n\n\t/* Code */\nend"}},
{"function":{"name":"OnTakeDamage","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Called when the entity is taking damage.","warning":{"text":"Calling , , , or  (if the entity is hit) in this hook on the victim entity can cause infinite loops since the hook will be called again. Make sure to setup recursion safeguards like the example below.","page":["Entity:TakeDamage","Entity:TakeDamageInfo","Entity:DispatchTraceAttack","Player:TraceHullAttack"]}},"realm":"Server","args":{"arg":{"text":"The damage to be applied to the entity.","name":"damage","type":"CTakeDamageInfo"}}},"example":{"description":{"text":"All damage taken by this entity is applied twice. This will count the damage taken as two distinctive hits as opposed to just scaling it in .","page":"GM:EntityTakeDamage"},"code":"function ENT:OnTakeDamage( dmginfo )\n\t-- Make sure we're not already applying damage a second time\n\t-- This prevents infinite loops\n\tif ( not self.m_bApplyingDamage ) then\n\t\tself.m_bApplyingDamage = true\n\t\tself:TakeDamageInfo( dmginfo )\n\t\tself.m_bApplyingDamage = false\n\tend\nend"}},
{"function":{"name":"OnRemove","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Called when the entity is about to be removed.\n\nSee also , which can even be used on engine (non-Lua) entities.\n\n## Clientside behaviour remarks\n\n\n\nThis hook may be called at odd times (when entity has actually not yet been removed from the server). This happens during fullupdate with the  function not being called even when the entity reappears.\nYou can debug this behaviour by enabling cheats and running **cl_fullupdate** on the client.\n\n can be used to circumvent this problem.  can also be used to detect that the entity has reappeared. You may reinitialize any necessary data in these hooks.","page":["Entity:CallOnRemove","ENTITY:Initialize","GM:NotifyShouldTransmit","ENTITY:Think"]},"realm":"Shared","predicted":"No"}},
{"function":{"name":"OnReloaded","parent":"ENTITY","type":"hook","ishook":true,"description":"Called when the entity is reloaded by the lua auto-refresh system, i.e. when the developer edits the lua file for the entity while the game is running.","realm":"Shared","predicted":"No"}},
{"function":{"name":"OnRestore","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Called when the entity is reloaded from a Source Engine save (not the Sandbox saves or dupes) or on a changelevel (for example Half-Life 2 campaign level transitions).\n\nFor the  callbacks, see .","page":["duplicator","ENTITY:OnDuplicated"]},"realm":"Shared","predicted":"No"}},
{"function":{"name":"OnEntityCopyTableFinish","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Called after duplicator finishes saving the entity, allowing you to modify the save data.\n\nThis is called after .","page":"ENTITY:PostEntityCopy"},"realm":"Server","predicted":"No","args":{"arg":{"text":"The save  that you can modify.","name":"data","type":"table","page":"Structures/EntityCopyData"}}},"example":{"description":"Prevent this entity from being copied and subsequently pasted.","code":"function ENT:OnEntityCopyTableFinish( data )\n\tfor k, v in pairs( data ) do data[ k ] = nil end\nend"}},
{"function":{"name":"OnCondition","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Called each time the NPC updates its condition.","note":"This hook only exists for **ai** type SENTs"},"realm":"Server","args":{"arg":{"text":"The ID of condition. See .","name":"conditionID","type":"number","page":"NPC:ConditionName"}}}},
{"function":{"name":"NextTask","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Start the next task in specific schedule.","note":"This hook only exists for **ai** type SENTs"},"realm":"Server","args":{"arg":{"text":"The schedule to start next task in.","name":"sched","type":"table"}}}},
{"function":{"name":"OnDuplicated","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Called on any entity after it has been created by the  and before any bone/entity modifiers have been applied.\n\nThis hook is called after  and before .","page":["duplicator","ENTITY:Initialize","ENTITY:PostEntityPaste"]},"realm":"Server","predicted":"No","args":{"arg":{"text":"of the source entity.","name":"entTable","type":"table","page":"Structures/EntityCopyData"}}}},
{"function":{"name":"KeyValue","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Called when the engine sets a value for this scripted entity.\n\nSee  for a hook that works for all entities.\n\n\nSee  for a hook that works for scripted weapons.","page":["GM:EntityKeyValue","WEAPON:KeyValue"]},"realm":"Server","predicted":"No","args":{"arg":[{"text":"The key that was affected.","name":"key","type":"string"},{"text":"The new value.","name":"value","type":"string"}]},"rets":{"ret":{"text":"Return true to suppress this KeyValue or return false or nothing to apply this key value.","name":"","type":"boolean"}}}},
{"function":{"name":"IsJumpLegal","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Called when deciding if the Scripted NPC should be able to perform a certain jump or not.","note":"This is only called for \"ai\" type entities"},"realm":"Server","predicted":"No","args":{"arg":[{"text":"Start of the jump","name":"startPos","type":"Vector"},{"text":"Apex point of the jump","name":"apex","type":"Vector"},{"text":"The landing position","name":"endPos","type":"Vector"}]},"rets":{"ret":{"text":"Return true if this jump should be allowed to be performed, false otherwise.\n\nNot returning anything, or returning a non boolean will perform the default action.","name":"","type":"boolean"}}}},
{"function":{"name":"Initialize","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Called when the entity is created. This is called when you  the custom entity.\n\nThis is called **after**  and .","page":["Entity:Spawn","ENTITY:SetupDataTables","GM:OnEntityCreated"],"bug":{"text":"This is sometimes not called clientside. You can work around this by setting a variable in Initialize and check if it exists in . See the example below.","issue":"2732","page":"ENTITY:Think"}},"realm":"Shared","predicted":"No"},"example":[{"description":"Example Initialize function","code":"function ENT:Initialize()\n\t-- Sets what model to use\n\tself:SetModel( \"models/props/cs_assault/money.mdl\" )\n\n\t-- Sets what color to use\n\tself:SetColor( Color( 200, 255, 200 ) )\n\n\t-- Physics stuff\n\tself:SetMoveType( MOVETYPE_VPHYSICS )\n\tself:SetSolid( SOLID_VPHYSICS )\n\n\t-- Init physics only on server, so it doesn't mess up physgun beam\n\tif ( SERVER ) then self:PhysicsInit( SOLID_VPHYSICS ) end\n\t\n\t-- Make prop to fall on spawn\n\tlocal phys = self:GetPhysicsObject()\n\tif ( IsValid( phys ) ) then phys:Wake() end\nend"},{"description":"Fixes the function not being called clientside.","code":"function SWEP:Initialize()\n\tself.m_bInitialized = true\n\n\t-- Other code\nend\n\nfunction SWEP:Think()\n\tif (not self.m_bInitialized) then\n\t\tself:Initialize()\n\tend\n\n\t-- Other code\nend"}]},
{"function":{"name":"ImpactTrace","parent":"ENTITY","type":"hook","ishook":true,"description":"Called when a bullet trace hits this entity and allows you to override the default behavior by returning true.","realm":"Client","args":{"arg":[{"text":"The trace that hit this entity as a .","name":"traceResult","type":"table","page":"Structures/TraceResult"},{"text":"The damage bits associated with the trace, see","name":"damageType","type":"number","page":"Enums/DMG"},{"text":"The effect name to override the impact effect with.\nPossible arguments are ImpactJeep, AirboatGunImpact, HelicopterImpact, ImpactGunship.","name":"customImpactName","type":"string","default":"nil"}]},"rets":{"ret":{"text":"Return true to override the default impact effects.","name":"","type":"boolean"}}},"example":{"description":"Hides the original bullet impact effect and dispatches explosions instead.","code":"function ENT:ImpactTrace(trace,dmgtype,customimpactname)\n\tlocal effectdata = EffectData()\n\teffectdata:SetOrigin( trace.HitPos )\n\tutil.Effect( \"Explosion\", effectdata )\n\treturn true\nend"}},
{"function":{"name":"HandleAnimEvent","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Called before firing serverside animation events, such as weapon reload, drawing and holstering for NPCs, scripted sequences, etc.\n\nSee  for the clientside version.","page":"ENTITY:FireAnimationEvent","note":"This hook only works on \"anim\", \"ai\" and \"nextbot\" type entities."},"realm":"Server","predicted":"No","args":{"arg":[{"text":"The event ID of happened even. See [this page](http://developer.valvesoftware.com/wiki/Animation_Events).","name":"event","type":"number"},{"text":"The absolute time this event occurred using .","name":"eventTime","type":"number","page":"Global.CurTime"},{"text":"The frame this event occurred as a number between 0 and 1.","name":"cycle","type":"number"},{"text":"Event type. See [the Source SDK](https://github.com/ValveSoftware/source-sdk-2013/blob/master/mp/src/game/shared/eventlist.h#L14-L23).","name":"type","type":"number"},{"text":"Name or options of this event.","name":"options","type":"string"}]}}},
{"function":{"name":"GravGunPunt","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Called when this entity is about to be punted with the gravity gun (primary fire).\n\nOnly works in Sandbox derived gamemodes and only if  is not overridden.","page":"GM:GravGunPunt"},"realm":"Shared","predicted":"No","args":{"arg":{"text":"The player pressing left-click with the gravity gun at an entity","name":"ply","type":"Player"}},"rets":{"ret":{"text":"Return true or false to enable or disable punting respectively.","name":"","type":"boolean"}}},"example":{"description":"Enables a scripted entity to be punted even when frozen.","code":"function ENT:GravGunPunt( ply )\n\tself:GetPhysicsObject():EnableMotion( true )\n\treturn true\nend"}},
{"function":{"name":"GravGunPickupAllowed","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Called by  on ALL entites in Sandbox-derived  gamemodes and acts as an override.","page":"GM:GravGunPickupAllowed"},"realm":"Server","predicted":"No","args":{"arg":{"text":"The player aiming at us","name":"ply","type":"Player"}},"rets":{"ret":{"text":"Return true to allow the entity to be picked up","name":"","type":"boolean"}}}},
{"function":{"name":"GetRenderMesh","parent":"ENTITY","type":"hook","ishook":true,"description":"Specify a mesh that should be rendered instead of this SENT's model.","realm":"Client","predicted":"No","rets":{"ret":{"text":"A table containing the following keys:\n*  Mesh - Required\n*  Material - Required\n*  Matrix - Optional","name":"","type":"table","page":["IMesh","IMaterial","VMatrix"]}}},"example":{"description":"A box that renders nicely with ambient lighting, projected textures, and bumpmaps. Performed in the most lines of code possible.","code":"AddCSLuaFile()\n\nDEFINE_BASECLASS( \"base_anim\" )\n\nENT.PrintName = \"Other Cube\"\nENT.Spawnable = true\n\nENT.Mins = Vector( -16, -16, -16 )\nENT.Maxs = Vector(  16,  16,  16 )\n\nENT.Material = Material( \"hunter/myplastic\" )\n\nfunction ENT:SpawnFunction( ply, tr, ClassName )\n    local ent = ents.Create( ClassName )\n    ent:SetPos( tr.HitPos + tr.HitNormal * 32 )\n    ent:Spawn()\n    return ent\nend\n\nfunction ENT:Initialize()\n    if CLIENT then\n        self:CreateMesh()\n        self:SetRenderBounds( self.Mins, self.Maxs )\n    end\n\n    self:DrawShadow( false )\nend\n\nfunction ENT:GetRenderMesh()\n    return { Mesh = self.Mesh, Material = self.Material }\nend\n\nfunction ENT:CreateMesh()\n    self.Mesh = Mesh()\n\n    local positions = {\n        Vector( -0.5, -0.5, -0.5 ),\n        Vector(  0.5, -0.5, -0.5 ),\n        Vector( -0.5,  0.5, -0.5 ),\n        Vector(  0.5,  0.5, -0.5 ),\n        Vector( -0.5, -0.5,  0.5 ),\n        Vector(  0.5, -0.5,  0.5 ),\n        Vector( -0.5,  0.5,  0.5 ),\n        Vector(  0.5,  0.5,  0.5 ),\n    };\n\n    local indices = {\n        1, 7, 5,\n        1, 3, 7,\n        6, 4, 2,\n        6, 8, 4,\n        1, 6, 2,\n        1, 5, 6,\n        3, 8, 7,\n        3, 4, 8,\n        1, 4, 3,\n        1, 2, 4,\n        5, 8, 6,\n        5, 7, 8,\n    }\n\n    local normals = {\n       Vector( -1,  0,  0 ),\n       Vector(  1,  0,  0 ),\n       Vector(  0, -1,  0 ),\n       Vector(  0,  1,  0 ),\n       Vector(  0,  0, -1 ),\n       Vector(  0,  0,  1 ),\n    }\n\n    local tangents = {\n        { 0, 1, 0, -1 },\n        { 0, 1, 0, -1 },\n        { 0, 0, 1, -1 },\n        { 1, 0, 0, -1 },\n        { 1, 0, 0, -1 },\n        { 0, 1, 0, -1 },\n    }\n\n    local uCoords = {\n       0, 1, 0,\n       0, 1, 1,\n       0, 1, 0,\n       0, 1, 1,\n       0, 1, 0,\n       0, 1, 1,\n       0, 1, 0,\n       0, 1, 1,\n       0, 1, 0,\n       0, 1, 1,\n       0, 1, 0,\n       0, 1, 1,\n    }\n\n    local vCoords = {\n       0, 1, 1,\n       0, 0, 1,\n       0, 1, 1,\n       0, 0, 1,\n       0, 1, 1,\n       0, 0, 1,\n       0, 1, 1,\n       0, 0, 1,\n       0, 1, 1,\n       0, 0, 1,\n       0, 1, 1,\n       0, 0, 1,\n    }\n\n    local verts = {}\n    local scale = self.Maxs - self.Mins\n\n    for vert_i = 1, #indices do\n        local face_i = math.ceil( vert_i / 6 )\n\n        verts[vert_i] = {\n            pos = positions[indices[vert_i]] * scale,\n            normal = normals[face_i],\n            u = uCoords[vert_i],\n            v = vCoords[vert_i],\n            userdata = tangents[face_i]\n        }\n    end\n    \n    self.Mesh:BuildFromTriangles( verts )\nend"}},
{"function":{"name":"GetRelationship","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Called when scripted NPC needs to check how he \"feels\" against another entity, such as when  is called.","page":"NPC:Disposition"},"realm":"Server","predicted":"No","args":{"arg":{"text":"The entity in question","name":"ent","type":"Entity"}},"rets":{"ret":{"text":"How our scripter NPC \"feels\" towards the entity in question. See .","name":"","type":"number","page":"Enums/D"}}}},
{"function":{"name":"GetAttackSpread","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Called to determine how good an NPC is at using a particular weapon.","note":"\"ai\" base only"},"realm":"Server","predicted":"No","file":{"text":"gamemodes/base/entities/entities/base_ai/init.lua","line":"104"},"args":{"arg":[{"text":"The weapon being used by the NPC.","name":"wep","type":"Entity"},{"text":"The target the NPC is attacking","name":"target","type":"Entity"}]},"rets":{"ret":{"text":"The number of degrees of inaccuracy in the NPC's attack.","name":"","type":"number"}}}},
{"function":{"name":"FireAnimationEvent","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Called before firing clientside animation events, such as muzzle flashes or shell ejections.\n\nSee  for the serverside version.","page":"ENTITY:HandleAnimEvent","note":"This hook only works on \"anim\", \"nextbot\" and \"ai\" type entities."},"realm":"Client","predicted":"No","args":{"arg":[{"text":"Position of the effect","name":"pos","type":"Vector"},{"text":"Angle of the effect","name":"ang","type":"Angle"},{"text":"The event ID of happened even. See [this page](http://developer.valvesoftware.com/wiki/Animation_Events).","name":"event","type":"number"},{"text":"Name of the event","name":"name","type":"string"}]},"rets":{"ret":{"text":"Return true to disable the effect","name":"","type":"boolean"}}}},
{"function":{"name":"ExpressionFinished","parent":"ENTITY","type":"hook","ishook":true,"realm":"Server","predicted":"No","file":{"text":"gamemodes/base/entities/entities/base_ai/init.lua","line":"84"},"description":{"text":"Called when an NPC's expression has finished.","note":"This hook only exists for **ai** type SENTs"},"args":{"arg":{"text":"The path of the expression.","name":"strExp","type":"string"}}}},
{"function":{"name":"EngineScheduleFinish","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Called whenever an engine schedule is finished.","note":"This hook only exists for **ai** type SENTs"},"realm":"Server"}},
{"function":{"name":"EndTouch","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Called when the entity stops touching another entity.","warning":{"text":"This only works for **brush** entities and for entities that have  set to true.","page":"Entity:SetTrigger"}},"realm":"Server","args":{"arg":{"text":"The entity which was touched.","name":"entity","type":"Entity"}}}},
{"function":{"name":"DrawTranslucent","parent":"ENTITY","type":"hook","ishook":true,"description":"Called when the entity should be drawn translucently.","realm":"Client","predicted":"No","args":{"arg":{"text":"The bit flags from","name":"flags","type":"number","page":"Enums/STUDIO"}}},"example":{"description":{"text":"The default action for this hook is to call .","page":"ENTITY:Draw"},"code":"function ENT:DrawTranslucent()\n\n\t-- This is here just to make it backwards compatible.\n\t-- You shouldn't really be drawing your model here unless it's translucent\n\n\tself:Draw()\n\nend"}},
{"function":{"name":"Draw","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Called if and when the entity should be drawn opaquely, based on the  of the entity.\n\nSee  and  for more information.\n\nSee also .","page":["Entity:GetRenderGroup","Structures/ENT","Enums/RENDERGROUP","ENTITY:DrawTranslucent"]},"realm":"Client","predicted":"No","args":{"arg":{"text":"The bit flags from","name":"flags","type":"number","page":"Enums/STUDIO"}}},"example":{"description":"Draws the model and makes a rotating text over the entity","code":"-- Draw some 3D text\nlocal function Draw3DText( pos, ang, scale, text, flipView )\n\tif ( flipView ) then\n\t\t-- Flip the angle 180 degrees around the UP axis\n\t\tang:RotateAroundAxis( Vector( 0, 0, 1 ), 180 )\n\tend\n\n\tcam.Start3D2D( pos, ang, scale )\n\t\t-- Actually draw the text. Customize this to your liking.\n\t\tdraw.DrawText( text, \"Default\", 0, 0, Color( 0, 255, 0, 255 ), TEXT_ALIGN_CENTER )\n\tcam.End3D2D()\nend\n\nfunction ENT:Draw()\n\t-- Draw the model\n\tself:DrawModel()\n\n\t-- The text to display\n\tlocal text = \"Example Text\"\n\n\t-- The position. We use model bounds to make the text appear just above the model. Customize this to your liking.\n\tlocal mins, maxs = self:GetModelBounds()\n\tlocal pos = self:GetPos() + Vector( 0, 0, maxs.z + 2 )\n\n\t-- The angle\n\tlocal ang = Angle( 0, SysTime() * 100 % 360, 90 )\n\n\t-- Draw front\n\tDraw3DText( pos, ang, 0.2, text, false )\n\t-- DrawDraw3DTextback\n\tDraw3DText( pos, ang, 0.2, text, true )\nend"}},
{"function":{"name":"Draw","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Called if and when the entity should be drawn opaquely, based on the  of the entity.\n\nSee  and  for more information.\n\nSee also .","page":["Entity:GetRenderGroup","Structures/ENT","Enums/RENDERGROUP","ENTITY:DrawTranslucent"]},"realm":"Client","predicted":"No","args":{"arg":{"text":"The bit flags from","name":"flags","type":"number","page":"Enums/STUDIO"}}},"example":{"description":"Draws the model and makes a rotating text over the entity","code":"-- Draw some 3D text\nlocal function Draw3DText( pos, ang, scale, text, flipView )\n\tif ( flipView ) then\n\t\t-- Flip the angle 180 degrees around the UP axis\n\t\tang:RotateAroundAxis( Vector( 0, 0, 1 ), 180 )\n\tend\n\n\tcam.Start3D2D( pos, ang, scale )\n\t\t-- Actually draw the text. Customize this to your liking.\n\t\tdraw.DrawText( text, \"Default\", 0, 0, Color( 0, 255, 0, 255 ), TEXT_ALIGN_CENTER )\n\tcam.End3D2D()\nend\n\nfunction ENT:Draw()\n\t-- Draw the model\n\tself:DrawModel()\n\n\t-- The text to display\n\tlocal text = \"Example Text\"\n\n\t-- The position. We use model bounds to make the text appear just above the model. Customize this to your liking.\n\tlocal mins, maxs = self:GetModelBounds()\n\tlocal pos = self:GetPos() + Vector( 0, 0, maxs.z + 2 )\n\n\t-- The angle\n\tlocal ang = Angle( 0, SysTime() * 100 % 360, 90 )\n\n\t-- Draw front\n\tDraw3DText( pos, ang, 0.2, text, false )\n\t-- DrawDraw3DTextback\n\tDraw3DText( pos, ang, 0.2, text, true )\nend"}},
{"function":{"name":"DoingEngineSchedule","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Called whenever an engine schedule is being ran.","note":"This hook only exists for **ai** type SENTs"},"realm":"Server"}},
{"function":{"name":"CreateSchedulesInternal","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Called just before  for \"ai\" type entities only.","internal":"","page":"ENTITY:Initialize"},"realm":"Server","predicted":"No"}},
{"function":{"name":"DoImpactEffect","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Called so the entity can override the bullet impact effects it makes.","note":"This hook only works for the \"anim\" type entities."},"realm":"Shared","predicted":"No","args":{"arg":[{"text":"A  from the bullet's start point to the impact point","name":"tr","type":"table","page":"Structures/TraceResult"},{"text":"The damage type of bullet. See","name":"damageType","type":"number","page":"Enums/DMG"}]},"rets":{"ret":{"text":"Return true to not do the default thing - which is to call UTIL_ImpactTrace in C++","name":"","type":"boolean"}}},"example":{"description":"Makes the ENT have the AR2 bullet impact effect.","code":"function ENT:DoImpactEffect( tr, nDamageType )\n\n\tif ( tr.HitSky ) then return end\n\t\n\tlocal effectdata = EffectData()\n\teffectdata:SetOrigin( tr.HitPos + tr.HitNormal )\n\teffectdata:SetNormal( tr.HitNormal )\n\tutil.Effect( \"AR2Impact\", effectdata )\n\nend"}},
{"function":{"name":"CanProperty","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Controls if a property can be used on this entity or not.\n\nThis hook will only work in Sandbox derived gamemodes that do not have  overridden.","page":"SANDBOX:CanProperty","note":"This hook will work on ALL entities, not just the scripted ones (SENTs)"},"realm":"Shared","predicted":"No","file":{"text":"gamemodes/sandbox/gamemode/shared.lua","line":"239-L241"},"args":{"arg":[{"text":"Player, that tried to use the property","name":"ply","type":"Player"},{"text":"Class of the property that is tried to use, for example - bonemanipulate","name":"property","type":"string"}]},"rets":{"ret":{"text":"Return false to disallow using that property, return true to allow.\n\nYou must return a value. Not returning anything can cause unexpected results.","name":"","type":"boolean"}}}},
{"function":{"name":"CanProperty","parent":"ENTITY","type":"hook","ishook":true,"description":{"text":"Controls if a property can be used on this entity or not.\n\nThis hook will only work in Sandbox derived gamemodes that do not have  overridden.","page":"SANDBOX:CanProperty","note":"This hook will work on ALL entities, not just the scripted ones (SENTs)"},"realm":"Shared","predicted":"No","file":{"text":"gamemodes/sandbox/gamemode/shared.lua","line":"239-L241"},"args":{"arg":[{"text":"Player, that tried to use the property","name":"ply","type":"Player"},{"text":"Class of the property that is tried to use, for example - bonemanipulate","name":"property","type":"string"}]},"rets":{"ret":{"text":"Return false to disallow using that property, return true to allow.\n\nYou must return a value. Not returning anything can cause unexpected results.","name":"","type":"boolean"}}}},
{"function":{"name":"Touch","parent":"EFFECT","type":"hook","ishook":true,"description":"","realm":"Client"}},
{"function":{"name":"StartTouch","parent":"EFFECT","type":"hook","ishook":true,"description":"","realm":"Client"}},
{"function":{"name":"AcceptInput","parent":"ENTITY","type":"hook","ishook":true,"description":"Called when another entity fires an event to this entity.","realm":"Server","predicted":"No","args":{"arg":[{"text":"The name of the input that was triggered.","name":"inputName","type":"string"},{"text":"The initial cause for the input getting triggered. (EG the player who pushed a button)","name":"activator","type":"Entity"},{"text":"The entity that directly triggered the input. (EG the button that was pushed)","name":"caller","type":"Entity"},{"text":"The data passed.","name":"data","type":"string"}]},"rets":{"ret":{"text":"Should we suppress the default action for this input?","name":"","type":"boolean"}}}},
{"function":{"name":"Think","parent":"EFFECT","type":"hook","ishook":true,"description":"Called when the effect should think, return false to kill the effect.","realm":"Client","rets":{"ret":{"text":"Return false to remove this effect.","name":"","type":"boolean"}}}},
{"function":{"name":"Render","parent":"EFFECT","type":"hook","ishook":true,"description":"Called when the effect should be rendered.","realm":"Client"}},
{"function":{"name":"PhysicsCollide","parent":"EFFECT","type":"hook","ishook":true,"description":"Called when the effect collides with anything.","realm":"Client","predicted":"No","args":{"arg":[{"text":"Information regarding the collision. See","name":"colData","type":"table","page":"Structures/CollisionData"},{"text":"The physics object of the entity that collided with the effect.","name":"collider","type":"PhysObj"}]}}},
{"function":{"name":"Init","parent":"EFFECT","type":"hook","ishook":true,"description":"Called when the effect is created.","realm":"Client","args":{"arg":{"text":"The effect data used to create the effect.","name":"effectData","type":"CEffectData"}}}},
{"function":{"name":"GetTracerShootPos","parent":"EFFECT","type":"hook","ishook":true,"description":"Used to get the \"real\" start position of a trace, for weapon tracer effects.\n\n\"real\" meaning in 3rd person, the 3rd person position will be used, in first person the first person position will be used.","realm":"Client","predicted":"No","args":{"arg":[{"text":"Default position if we fail","name":"pos","type":"Vector"},{"text":"The weapon to use.","name":"ent","type":"Weapon"},{"text":"Attachment ID of on the weapon \"muzzle\", to use as the start position.","name":"attachment","type":"number","note":"Please note that it is expected that the same attachment ID is used on both, the world and the view model."}]},"rets":{"ret":{"text":"The \"real\" start position.","name":"","type":"Vector"}}}},
{"function":{"name":"EndTouch","parent":"EFFECT","type":"hook","ishook":true,"description":"","realm":"Client"}},
{"function":{"name":"RenderMe","parent":"widgets","type":"libraryfunc","description":"Renders a widget. Normally you won't need to call this.","realm":"Client","args":{"arg":{"text":"Widget entity to render","name":"ent","type":"Entity"}}},"example":{"description":"Example usage in **lua/entities/widget_base.lua**","code":"function ENT:Draw()\n\n\twidgets.RenderMe( self )\n\t\nend"}},
{"function":{"name":"PlayerTick","parent":"widgets","type":"libraryfunc","description":{"text":"Automatically called to update all widgets.","internal":""},"realm":"Shared","args":{"arg":[{"text":"The player","name":"ply","type":"Player"},{"text":"Player move data","name":"mv","type":"CMoveData"}]}},"example":{"description":"That's how it is used in **lua/includes/modules/widget.lua**","code":"hook.Add( \"PlayerTick\", \"TickWidgets\", function( pl, mv ) widgets.PlayerTick( pl, mv ) end )"}},
{"function":{"name":"Register","parent":"weapons","type":"libraryfunc","description":{"text":"Used to register your SWEP with the engine.","bug":{"text":"Sub-tables provided in the first argument will not carry over their metatable, and will receive a BaseClass key if the table was merged with the base's. Userdata references, which includes Vectors, Angles, Entities, etc. will not be copied.","pull":"1300"}},"realm":"Shared","args":{"arg":[{"text":"The SWEP table","name":"swep_table","type":"table"},{"text":"Classname to assign to that swep","name":"classname","type":"string"}]}}},
{"function":{"name":"OnLoaded","parent":"weapons","type":"libraryfunc","description":{"text":"Called after all SWEPS have been loaded and runs  on each one.\n\nYou can retrieve all the currently registered SWEPS with .","internal":"","page":["baseclass.Set","weapons.GetList"],"note":{"text":"This is not called after a SWEP auto refresh, and thus the inherited baseclass functions retrieved with  will not be updated","page":"baseclass.Get"}},"realm":"Shared"}},
{"function":{"name":"GetStored","parent":"weapons","type":"libraryfunc","description":{"text":"Gets the REAL weapon table, not a copy. The produced table does `not` inherit fields from the weapon's base class, unlike .","page":"weapons.Get","warning":{"text":"Modifying this table will modify what is stored by the weapons library. Take a copy or use  to avoid this.","page":"weapons.Get"}},"realm":"Shared","args":{"arg":{"text":"Weapon class to retrieve weapon table of","name":"weapon_class","type":"string"}},"rets":{"ret":{"text":"The weapon table","name":"","type":"table"}}}},
{"function":{"name":"IsBasedOn","parent":"weapons","type":"libraryfunc","description":"Checks if name is based on base","realm":"Shared","args":{"arg":[{"text":"Entity's class name to be checked","name":"name","type":"string"},{"text":"Base class name to be checked","name":"base","type":"string"}]},"rets":{"ret":{"text":"Returns true if class name is based on base, else false.","name":"","type":"boolean"}}},"example":{"description":"See if gmod_tool is based on weapon_base, and whether weapon_base is based on itself.","code":"print(weapons.IsBasedOn(\"gmod_tool\", \"weapon_base\"), weapons.IsBasedOn(\"weapon_base\", \"weapon_base\"))","output":"true    \nfalse"}},
{"function":{"name":"GetList","parent":"weapons","type":"libraryfunc","description":"Get a list of all the registered SWEPs. This does not include weapons added to spawnmenu manually.","realm":"Shared","rets":{"ret":{"text":"List of all the registered SWEPs","name":"","type":"table"}}},"example":{"description":"Example structure.","code":"PrintTable( weapons.GetList() )","output":"```\n1:\n\tFolder = weapons/weapon_myweapon\n\tClassName = weapon_myweapon\n\t-- The rest of the SWEP table\n2:\n\tFolder = weapons/weapon_myweapon2\n\tClassName = weapon_myweapon2\n\t-- The rest of the SWEP table\n```"}},
{"function":{"name":"Get","parent":"weapons","type":"libraryfunc","description":{"text":"Get a `copy` of weapon table by name. This function also inherits fields from the weapon's base class, unlike .","page":"weapons.GetStored"},"realm":"Shared","args":{"arg":{"text":"Class name of weapon to retrieve","name":"classname","type":"string"}},"rets":{"ret":{"text":"The retrieved table or nil","name":"","type":"table"}}}},
{"function":{"name":"RegisterTable","parent":"vgui","type":"libraryfunc","description":"Registers a table to use as a panel. All this function does is assigns Base key to your table and returns the table.","realm":"Client and Menu","args":{"arg":[{"text":"The PANEL table","name":"panel","type":"table"},{"text":"A base for the panel","name":"base","type":"string","default":"Panel"}]},"rets":{"ret":{"text":"The PANEL table","name":"","type":"table"}}}},
{"function":{"name":"Record","parent":"video","type":"libraryfunc","description":{"text":"Attempts to create an .","page":"IVideoWriter"},"realm":"Client and Menu","args":{"arg":{"text":"The video config. See .","name":"config","type":"table","page":"Structures/VideoData"}},"rets":{"ret":[{"text":"The video object (returns **false** if there is an error)","name":"","type":"IVideoWriter"},{"text":"The error string, if there is an error","name":"","type":"string"}]}},"example":{"description":"How to create a basic IVideoWriter, and how to use it","code":"local config = {\n\tcontainer = \"webm\",\n\tvideo = \"vp8\",\n\taudio = \"vorbis\",\n\tquality = 50,\n\tbitrate = 200,\n\tfps = 30,\n\tlockfps = 30,\n\tname = \"Test\",\n\twidth = 1280,\n\theight = 720\n}\nlocal iVideoWriter = video.Record( config )\niVideoWriter:SetRecordSound( true )\n\nlocal function Record()\n\tiVideoWriter:AddFrame( FrameTime(), true )\nend\n\nfunction StartRecording()\n\thook.Add( \"DrawOverlay\", \"Record\", Record )\nend\n\nfunction StopRecording()\n\thook.Remove( \"DrawOverlay\", \"Record\" )\n\tiVideoWriter:Finish()\nend"}},
{"function":{"name":"RegisterFile","parent":"vgui","type":"libraryfunc","description":"Registers a new VGUI panel from a file.","realm":"Client and Menu","args":{"arg":{"text":"The file to register","name":"file","type":"string"}},"rets":{"ret":{"text":"A table containing info about the panel. Can be supplied to","name":"","type":"table","page":"vgui.CreateFromTable"}}}},
{"function":{"name":"Register","parent":"vgui","type":"libraryfunc","description":"Registers a panel for later creation.","realm":"Client and Menu","args":{"arg":[{"text":"Classname of the panel to create.","name":"classname","type":"string"},{"text":"The table containg the panel information.","name":"panelTable","type":"table"},{"text":"Name of the base of the panel.","name":"baseName","type":"string"}]},"rets":{"ret":{"text":"The given panel table from second argument","name":"","type":"table"}}}},
{"function":{"name":"GetWorldPanel","parent":"vgui","type":"libraryfunc","description":{"text":"Returns the global world panel which is the parent to all others.\n\nSee also .","page":"Global.GetHUDPanel"},"realm":"Client and Menu","rets":{"ret":{"text":"The world panel","name":"","type":"Panel"}}}},
{"function":{"name":"IsHoveringWorld","parent":"vgui","type":"libraryfunc","description":"Returns whenever the cursor is hovering the world panel.","realm":"Client and Menu","rets":{"ret":{"text":"isHoveringWorld","name":"","type":"boolean"}}}},
{"function":{"name":"GetKeyboardFocus","parent":"vgui","type":"libraryfunc","description":"Returns the panel which is currently receiving keyboard input.","realm":"Client and Menu","rets":{"ret":{"text":"The panel with keyboard focus","name":"","type":"Panel"}}}},
{"function":{"name":"GetHoveredPanel","parent":"vgui","type":"libraryfunc","description":{"text":"Returns the panel the cursor is hovering above.","warning":{"text":"This returns a cached value that is only updated after rendering and `before` the next VGUI Think/Layout pass.\n\nie. it lags one frame behind panel layout and is completely unhelpful for  if your panels are moving around under the mouse a lot every frame.","page":"PANEL:Paint"}},"realm":"Client and Menu","rets":{"ret":{"text":"The panel that the user is currently hovering over with their cursor.","name":"","type":"Panel"}}}},
{"function":{"name":"GetControlTable","parent":"vgui","type":"libraryfunc","description":"Gets the method table of this panel. Does not return parent methods!","realm":"Client and Menu","args":{"arg":{"text":"The name of the panel","name":"Panelname","type":"string"}},"rets":{"ret":{"text":"methods","name":"","type":"table"}}}},
{"function":{"name":"FocusedHasParent","parent":"vgui","type":"libraryfunc","description":"Returns whether the currently focused panel is a child of the given one.","realm":"Client and Menu","args":{"arg":{"text":"The parent panel to check the currently focused one against. This doesn't need to be a direct parent (focused panel can be a child of a child and so on).","name":"parent","type":"Panel"}},"rets":{"ret":{"text":"Whether or not the focused panel is a child of the passed one.","name":"","type":"boolean"}}}},
{"function":{"name":"CursorVisible","parent":"vgui","type":"libraryfunc","description":"Returns whenever the cursor is currently active and visible.","realm":"Client and Menu","rets":{"ret":{"text":"isCursorVisible","name":"","type":"boolean"}}}},
{"function":{"name":"CreateX","parent":"vgui","type":"libraryfunc","description":{"text":"Creates a engine panel.","internal":""},"realm":"Client and Menu","args":{"arg":[{"text":"Class of the panel to create","name":"class","type":"string"},{"text":"If specified, parents created panel to given one","name":"parent","type":"Panel","default":"nil"},{"text":"Name of the created panel","name":"name","type":"string","default":"nil"}]},"rets":{"ret":{"text":"Created panel","name":"","type":"Panel"}}}},
{"function":{"name":"CreateFromTable","parent":"vgui","type":"libraryfunc","description":"Creates a panel from table.","realm":"Client and Menu","args":{"arg":[{"text":"Your PANEL table","name":"metatable","type":"table"},{"text":"Which panel to parent the newly created panel to","name":"parent","type":"Panel","default":"nil"},{"text":"Name of your panel","name":"name","type":"string","default":"nil"}]},"rets":{"ret":{"text":"Created panel","name":"","type":"Panel"}}}},
{"function":{"name":"TypeToString","parent":"util","type":"libraryfunc","description":"Converts a type to a (nice, but still parsable) string","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/util.lua","line":"124"},"args":{"arg":{"text":"What to convert","name":"input","type":"any"}},"rets":{"ret":{"text":"Converted string","name":"","type":"string"}}}},
{"function":{"name":"Create","parent":"vgui","type":"libraryfunc","description":{"text":"Creates a panel by the specified classname.","note":{"text":"Custom VGUI elements are not loaded instantly. Use  to create them on startup.","page":"GM:OnGamemodeLoaded"}},"realm":"Client and Menu","args":{"arg":[{"text":"Classname of the panel to create. Valid classnames are listed at: .","name":"classname","type":"string","page":"VGUI Element List"},{"text":"Parent of the created panel.","name":"parent","type":"Panel","default":"nil"},{"text":"Name of the created panel.","name":"name","type":"string","default":"nil"}]},"rets":{"ret":{"text":"panel","name":"","type":"Panel"}}}},
{"function":{"name":"TraceLine","parent":"util","type":"libraryfunc","description":{"text":"Performs a trace with the given trace data.","note":"Clientside entities will not be hit by traces."},"realm":"Shared","args":{"arg":{"text":"The trace data to use. See","name":"TraceData","type":"table","page":"Structures/Trace"}},"rets":{"ret":{"text":"Trace result. See .\n\nCan return nil if  or its  is invalid. This will be the case for any traces done before  is called.","name":"","type":"table","page":["Structures/TraceResult","game.GetWorld",",physics objectEntity:GetPhysicsObject","GM:InitPostEntity"]}}},"example":{"description":"Using a function callback as filter.","code":"local tr = util.TraceLine( {\n\tstart = LocalPlayer():EyePos(),\n\tendpos = LocalPlayer():EyePos() + EyeAngles():Forward() * 10000,\n\tfilter = function( ent ) if ( ent:GetClass() == \"prop_physics\" ) then return true end end\n} )\n\nprint( tr.HitPos, tr.Entity )","output":"The trace will only hit prop_physics or world."}},
{"function":{"name":"TraceHull","parent":"util","type":"libraryfunc","description":{"text":"Performs an AABB hull (axis-aligned bounding box, aka not rotated) trace with the given trace data.","note":["Clientside entities will not be hit by traces.","This function may not always give desired results clientside due to certain physics mechanisms not existing on the client. Use it serverside for accurate results."]},"realm":"Shared","args":{"arg":{"text":"The trace data to use. See","name":"TraceData","type":"table","page":"Structures/HullTrace"}},"rets":{"ret":{"text":"Trace result. See","name":"","type":"table","page":"Structures/TraceResult"}}},"example":[{"description":"From a SWEP:PrimaryAttack()","code":"local tr = util.TraceHull( {\n\tstart = self.Owner:GetShootPos(),\n\tendpos = self.Owner:GetShootPos() + ( self.Owner:GetAimVector() * 100 ),\n\tfilter = self.Owner,\n\tmins = Vector( -10, -10, -10 ),\n\tmaxs = Vector( 10, 10, 10 ),\n\tmask = MASK_SHOT_HULL\n} )"},{"description":"Visual representation of a Hull Trace.","code":"function ENT:Draw()\n\n\tself:DrawModel()\n\t\n\tlocal ent = self\n\t\n\tlocal mins = ent:OBBMins()\n\tlocal maxs = ent:OBBMaxs()\n\tlocal startpos = ent:GetPos()\n\tlocal dir = ent:GetUp()\n\tlocal len = 128\n\n\tlocal tr = util.TraceHull( {\n\t\tstart = startpos,\n\t\tendpos = startpos + dir * len,\n\t\tmaxs = maxs,\n\t\tmins = mins,\n\t\tfilter = ent\n\t} )\n\t\n\trender.DrawLine( tr.HitPos, startpos + dir * len, color_white, true )\n\trender.DrawLine( startpos, tr.HitPos, Color( 0, 0, 255 ), true )\n\t\n\tlocal clr = color_white\n\tif ( tr.Hit ) then\n\t\tclr = Color( 255, 0, 0 )\n\tend\n\n\trender.DrawWireframeBox( startpos, Angle( 0, 0, 0 ), mins, maxs, Color( 255, 255, 255 ), true )\n\trender.DrawWireframeBox( tr.HitPos, Angle( 0, 0, 0 ), mins, maxs, clr, true )\n\nend","output":{"image":{"src":"HullTrace.gif"}}},{"description":"Trace a player sized hull to detect if a player can spawn here without getting stuck inside anything.","code":"local pos = Entity(1):GetPos() -- Choose your position.\n\nlocal tr = {\n\tstart = pos,\n\tendpos = pos,\n\tmins = Vector( -16, -16, 0 ),\n\tmaxs = Vector( 16, 16, 71 )\n}\n\nlocal hullTrace = util.TraceHull( tr )\nif ( hullTrace.Hit ) then\n    -- Find a new spawnpoint\nend"}]},
{"function":{"name":"TraceEntity","parent":"util","type":"libraryfunc","description":{"text":"Runs a trace using the entity's collisionmodel between two points. This does not take the entity's angles into account and will trace its unrotated collisionmodel.","note":"Clientside entities will not be hit by traces."},"realm":"Shared","args":{"arg":[{"text":"Trace data. See","name":"tracedata","type":"table","page":"Structures/Trace"},{"text":"The entity to use","name":"ent","type":"Entity"}]},"rets":{"ret":{"text":"Trace result. See","name":"","type":"table","page":"Structures/TraceResult"}}},"example":{"description":"From sandbox/gamemode/prop_tools.lua, this checks if there are any entities inside our entity","code":"local trace = { start = ent:GetPos(), endpos = ent:GetPos(), filter = ent }\nlocal tr = util.TraceEntity( trace, ent ) \nif ( tr.Hit ) then\n -- Do stuff\nend"}},
{"function":{"name":"TraceEntityHull","parent":"util","type":"libraryfunc","description":{"text":"Traces from one entity to another.","deprecated":"This function is broken and returns the same values all the time"},"realm":"Shared","args":{"arg":[{"text":"The first entity to trace from","name":"ent1","type":"Entity"},{"text":"The second entity to trace to","name":"ent2","type":"Entity"}]},"rets":{"ret":{"text":"Trace result. See","name":"","type":"table","page":"Structures/TraceResult"}}}},
{"function":{"name":"tobool","parent":"util","type":"libraryfunc","description":{"text":"Converts string or a number to a bool, if possible. Alias of .","deprecated":{"text":"You should use  instead.","page":"Global.tobool"},"page":"Global.tobool"},"realm":"Shared and Menu","args":{"arg":{"text":"A string or a number to convert.","name":"input","type":"any"}},"rets":{"ret":{"text":"False if the input is equal to the string or boolean \"false\", if the input is equal to the string or number \"0\", or if the input is nil. Returns true otherwise.","name":"","type":"boolean"}}}},
{"function":{"name":"TimerCycle","parent":"util","type":"libraryfunc","description":"Returns the time since this function has been last called","realm":"Shared and Menu","rets":{"ret":{"text":"Time since this function has been last called in ms","name":"","type":"number"}}}},
{"function":{"name":"Timer","parent":"util","type":"libraryfunc","description":"Creates a timer object.","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/util.lua","line":"213"},"args":{"arg":{"text":"How long you want the timer to be.","name":"startdelay","type":"number","default":"0"}},"rets":{"ret":{"text":"A timer object. It has next methods:\n;Reset() - Resets the timer to nothing\n;Start( time ) - Starts the timer, call with end time\n;Started() - Returns true if the timer has been started\n;Elapsed() - Returns true if the time has elapsed","name":"","type":"table"}}}},
{"function":{"name":"TableToKeyValues","parent":"util","type":"libraryfunc","description":"Converts the given table into a key value string.","realm":"Shared and Menu","args":{"arg":{"text":"The table to convert.","name":"table","type":"table"}},"rets":{"ret":{"text":"KeyValueString","name":"","type":"string"}}}},
{"function":{"name":"TableToJSON","parent":"util","type":"libraryfunc","description":{"text":"Converts a table to a JSON string.","warning":["All integers will be converted to decimals (5 -> 5.0).","All keys are strings in the JSON format, so all keys will be converted to strings!"],"bug":{"text":"This will produce invalid JSON if the provided table contains nan or inf values.","issue":"3561"}},"realm":"Shared and Menu","args":{"arg":[{"text":"Table to convert.","name":"table","type":"table"},{"text":"Format and indent the JSON.","name":"prettyPrint","type":"boolean","default":"false"}]},"rets":{"ret":{"text":"A JSON formatted string containing the serialized data","name":"","type":"string"}}},"example":{"description":"Writes the positions and angles of every player to a txt document called playerstuff.txt","code":"local Players = {}\nfor k, v in pairs(ents.GetAll()) do\n\tif v:IsPlayer() then -- Is a player\n\t\tPlayers[k] = { pos = v:GetPos(), ang = v:GetAngles() }\n\tend\nend\n\t\nlocal tab = util.TableToJSON( Players ) -- Convert the player table to JSON\nfile.CreateDir( \"jsontest\" ) -- Create the directory\nfile.Write( \"jsontest/playerstuff.txt\", tab) -- Write to .txt"}},
{"function":{"name":"StringToType","parent":"util","type":"libraryfunc","file":{"text":"lua/includes/extensions/util.lua","line":"106-119"},"description":"Converts a string to the specified type.\n\nThis can be useful when dealing with ConVars.","realm":"Shared and Menu","args":{"arg":[{"text":"The string to convert","name":"str","type":"string"},{"text":"The type to attempt to convert the string to. This can be vector, angle, float, int, bool, or string (case insensitive).","name":"typename","type":"string"}]},"rets":{"ret":{"text":"The result of the conversion, or nil if a bad type is specified.","name":"","type":"any"}}},"example":{"description":"Creates a vector from a string representation.","code":"local vec = util.StringToType(\"5 6 75\", \"Vector\")","output":"A vector with components **(5, 6, 75)**"}},
{"function":{"name":"SteamIDTo64","parent":"util","type":"libraryfunc","description":"Given a STEAM_0 style Steam ID will return a 64bit Steam ID","realm":"Shared","file_name":"src/garrysmod/Library/gl_util.cpp","file_line":"1275","args":{"arg":{"text":"The STEAM_0 style id","name":"id","type":"string"}},"rets":{"ret":{"text":"64bit Steam ID","name":"","type":"string"}}}},
{"function":{"name":"SteamIDFrom64","parent":"util","type":"libraryfunc","description":"Given a 64bit SteamID will return a STEAM_0: style Steam ID","realm":"Shared","file_name":"src/garrysmod/Library/gl_util.cpp","file_line":"1295","args":{"arg":{"text":"The 64 bit Steam ID","name":"id","type":"string"}},"rets":{"ret":{"text":"STEAM_0 style Steam ID","name":"","type":"string"}}}},
{"function":{"name":"Stack","parent":"util","type":"libraryfunc","description":{"text":"Returns a new  object","page":"Stack"},"realm":"Shared and Menu","file":{"text":"lua/includes/extensions/util.lua","line":"301"},"rets":{"ret":{"text":"A brand new stack object","name":"","type":"Stack"}}}},
{"function":{"name":"SpriteTrail","parent":"util","type":"libraryfunc","description":"Adds a trail to the specified entity.","realm":"Server","args":{"arg":[{"text":"Entity to attach trail to","name":"ent","type":"Entity"},{"text":"Attachment ID of the entities model to attach trail to. If you are not sure, set this to 0","name":"attachmentID","type":"number"},{"text":"Color of the trail, use","name":"color","type":"table","page":"Global.Color"},{"text":"Should the trail be additive or not","name":"additive","type":"boolean"},{"text":"Start width of the trail","name":"startWidth","type":"number"},{"text":"End width of the trail","name":"endWidth","type":"number"},{"text":"How long it takes to transition from startWidth to endWidth","name":"lifetime","type":"number"},{"text":"The resolution of trails texture. A good value can be calculated using this formula: 1 / ( startWidth + endWidth ) * 0.5","name":"textureRes","type":"number"},{"text":"Path to the texture to use as a trail.","name":"texture","type":"string"}]},"rets":{"ret":{"text":"Entity of created trail ([env_spritetrail](https://developer.valvesoftware.com/wiki/Env_spritetrail))","name":"","type":"Entity"}}},"example":{"description":"A console command that gives the player a red trail.","code":"concommand.Add( \"givetrail\", function( ply )\n\tlocal trail = util.SpriteTrail( ply, 0, Color( 255, 0, 0 ), false, 15, 1, 4, 1 / ( 15 + 1 ) * 0.5, \"trails/plasma\" )\n\tprint( trail )\nend )"}},
{"function":{"name":"SharedRandom","parent":"util","type":"libraryfunc","description":{"text":"Generates a random float value that should be the same on client and server.","note":"This function is best used in a Predicted Hook"},"realm":"Shared","args":{"arg":[{"text":"The seed for the random value","name":"uniqueName","type":"string"},{"text":"The minimum value of the random range","name":"min","type":"number"},{"text":"The maximum value of the random range","name":"max","type":"number"},{"text":"The additional seed","name":"additionalSeed","type":"number","default":"0"}]},"rets":{"ret":{"text":"The random float value","name":"","type":"number"}}},"example":{"description":"Example usage of the function. Generates some random values.","code":"print( util.SharedRandom( \"23\", 0, 100 ) )\nprint( util.SharedRandom( \"23\", 0, 100 ) )\nprint( util.SharedRandom( \"23\", 0, 100, 0 ) )\nprint( util.SharedRandom( \"23\", 0, 100, 1337 ) )\nprint( util.SharedRandom( \"lol\", 0, 100, 1337 ) )","output":"```\n15.979786317786\n15.979786317786\n15.979786317786\n24.08124470342\n78.480193614252\n```"}},
{"function":{"name":"SetPData","parent":"util","type":"libraryfunc","description":{"text":"Sets PData for offline player using his SteamID","warning":{"text":"This function internally uses , which can cause collisions (two or more players sharing the same PData entry). It's recommended that you don't use it. See the related wiki page for more information.","page":"Player:UniqueID"}},"realm":"Shared and Menu","file":{"text":"lua/includes/extensions/util.lua","line":"333"},"args":{"arg":[{"text":"SteamID of the player","name":"steamID","type":"string"},{"text":"Variable name to store the value in","name":"name","type":"string"},{"text":"The value to store","name":"value","type":"any"}]}}},
{"function":{"name":"ScreenShake","parent":"util","type":"libraryfunc","description":"Makes the screen shake","realm":"Shared","args":{"arg":[{"text":"The origin of the effect.","name":"pos","type":"Vector","note":"Does nothing on client."},{"text":"The strength of the effect","name":"amplitude","type":"number"},{"text":"The frequency of the effect in hz","name":"frequency","type":"number"},{"text":"The duration of the effect in seconds","name":"duration","type":"number"},{"text":"The range from the origin within which views will be affected, in Hammer Units","name":"radius","type":"number","note":"Does nothing on client."}]}},"example":{"description":"This will shake the screen, from the position 0 0 0 and 5000 units away, with 5 amp, frequency 5, for 10 seconds.","code":"util.ScreenShake( Vector(0,0,0), 5, 5, 10, 5000 )"}},
{"function":{"name":"RemovePData","parent":"util","type":"libraryfunc","description":{"text":"Removes PData of offline player using his SteamID","warning":{"text":"This function internally uses , which can cause collisions (two or more players sharing the same PData entry). It's recommended that you don't use it. See the related wiki page for more information.","page":"Player:UniqueID"}},"realm":"Shared and Menu","file":{"text":"lua/includes/extensions/util.lua","line":"344"},"args":{"arg":[{"text":"SteamID of the player","name":"steamID","type":"string"},{"text":"Variable name to remove","name":"name","type":"string"}]}}},
{"function":{"name":"RelativePathToFull","parent":"util","type":"libraryfunc","description":"Returns the absolute system path the file relative to /garrysmod/.","realm":"Shared","args":{"arg":{"text":"The file to get the absolute path of.","name":"file","type":"string"}},"rets":{"ret":{"text":"absolutePath","name":"","type":"string"}}}},
{"function":{"name":"PrecacheSound","parent":"util","type":"libraryfunc","description":{"text":"Precaches a sound for later use. Sound is cached after being loaded once.","note":"Soundcache is limited to 16384 unique sounds.","bug":["Positively broken on purpose because it fills stringtables","Ultimately does nothing on client, and only works with sound scripts, not direct paths"]},"realm":"Shared","args":{"arg":{"text":"The sound to precache.","name":"soundName","type":"string"}}}},
{"function":{"name":"QuickTrace","parent":"util","type":"libraryfunc","description":"Performs a trace with the given origin, direction and filter.","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/util.lua","line":"55-65"},"args":{"arg":[{"text":"The origin of the trace.","name":"origin","type":"Vector"},{"text":"The end point of the trace, relative to the start.\nThis is the direction of the trace times the distance of the trace.","name":"endpos","type":"Vector"},{"text":"Entity which should be ignored by the trace. Can also be a table of entities or a function - see .","name":"filter","type":"Entity","default":"nil","page":"Structures/Trace"}]},"rets":{"ret":{"text":"Trace result. See .","name":"","type":"table","page":"Structures/TraceResult"}}}},
{"function":{"name":"PointContents","parent":"util","type":"libraryfunc","description":"Returns the contents of the position specified.","realm":"Shared","args":{"arg":{"text":"Position to get the contents sample from.","name":"position","type":"Vector"}},"rets":{"ret":{"text":"Contents bitflag, see","name":"","type":"number","page":"Enums/CONTENTS"}}},"example":{"description":"Check if the trace position is underwater.","code":"local tr = Entity( 1 ):GetEyeTrace()\nprint( bit.band( util.PointContents( tr.HitPos ), CONTENTS_WATER ) == CONTENTS_WATER )"}},
{"function":{"name":"PrecacheModel","parent":"util","type":"libraryfunc","description":{"text":"Precaches a model for later use. Model is cached after being loaded once.","warning":"Modelprecache is limited to 4096 unique models. When it reaches the limit the game will crash."},"realm":"Shared","args":{"arg":{"text":"The model to precache.","name":"modelName","type":"string"}}}},
{"function":{"name":"PixelVisible","parent":"util","type":"libraryfunc","description":"Returns the visibility of a sphere in the world.","realm":"Client","args":{"arg":[{"text":"The center of the visibility test.","name":"position","type":"Vector"},{"text":"The radius of the sphere to check for visibility.","name":"radius","type":"number"},{"text":"The PixVis handle created with .","name":"PixVis","type":"pixelvis handle t","page":"util.GetPixelVisibleHandle","warning":"Don't use the same handle twice per tick or it will give unpredictable results."}]},"rets":{"ret":{"text":"Visibility, ranges from 0-1. 0 when none of the area is visible, 1 when all of it is visible.","name":"","type":"number"}}},"example":{"description":"Draws a box when the center of the map is visible on your screen.","code":"local PixVis\nfunction SetupPixVis()\n\tPixVis = util.GetPixelVisibleHandle()\nend\nhook.Add(\"Initialize\", \"SetupPixVis\", SetupPixVis)\n \nfunction TestPixelVisibility()\n\tlocal visible = util.PixelVisible(Vector(0, 0, 0), 16, PixVis)\n \n\tif visible && visible != 0 then\n\t\tdraw.RoundedBox( 10, 0, 0, 100, 100, Color(0, 0, 0, 200 * visible) )\n\tend\nend\nhook.Add(\"HUDPaint\", \"TestPixelVisibility\", TestPixelVisibility)"}},
{"function":{"name":"ParticleTracerEx","parent":"util","type":"libraryfunc","description":"Creates a tracer effect with the given parameters.","realm":"Shared","args":{"arg":[{"text":"The name of the tracer effect.","name":"name","type":"string"},{"text":"The start position of the tracer.","name":"startPos","type":"Vector"},{"text":"The end position of the tracer.","name":"endPos","type":"Vector"},{"text":"Play the hit miss(whiz) sound.","name":"doWhiz","type":"boolean"},{"text":"Entity index of the emitting entity.","name":"entityIndex","type":"number"},{"text":"Attachment index to be used as origin.","name":"attachmentIndex","type":"number"}]}}},
{"function":{"name":"NiceFloat","parent":"util","type":"libraryfunc","description":"Formats a float by stripping off extra 0's and .'s","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/util.lua","line":"151"},"args":{"arg":{"text":"The float to format","name":"float","type":"number"}},"rets":{"ret":{"text":"Formatted float","name":"","type":"string"}}}},
{"function":{"name":"ParticleTracer","parent":"util","type":"libraryfunc","description":"Creates a tracer effect with the given parameters.","realm":"Shared","args":{"arg":[{"text":"The name of the tracer effect.","name":"name","type":"string"},{"text":"The start position of the tracer.","name":"startPos","type":"Vector"},{"text":"The end position of the tracer.","name":"endPos","type":"Vector"},{"text":"Play the hit miss(whiz) sound.","name":"doWhiz","type":"boolean"}]}}},
{"function":{"name":"NetworkStringToID","parent":"util","type":"libraryfunc","description":"Returns the networked ID associated with the given string from the string table.","realm":"Shared","args":{"arg":{"text":"String to get the associated networked ID from.","name":"networkString","type":"string"}},"rets":{"ret":{"text":"The networked ID of the string, or 0 if it hasn't been networked with .","name":"","type":"number","page":"util.AddNetworkString"}}}},
{"function":{"name":"NetworkIDToString","parent":"util","type":"libraryfunc","description":"Returns the networked string associated with the given ID from the string table.","realm":"Shared","args":{"arg":{"text":"ID to get the associated string from.","name":"stringTableID","type":"number"}},"rets":{"ret":{"text":"The networked string, or nil if it wasn't found.","name":"","type":"string"}}}},
{"function":{"name":"JSONToTable","parent":"util","type":"libraryfunc","description":{"text":"Converts a JSON string to a Lua table.","warning":"This function converts keys to numbers whenever possible. It is also has a limit of 15000 keys total.","bug":{"text":"This will attempt cast the string keys \"inf\", \"nan\", \"true\", and \"false\" to their respective Lua values. This completely ignores nulls in arrays.","issue":"3561"}},"realm":"Shared and Menu","args":{"arg":{"text":"The JSON string to convert.","name":"json","type":"string"}},"rets":{"ret":{"text":"The table containing converted information. Returns nothing on failure.","name":"","type":"table"}}}},
{"function":{"name":"JSONToTable","parent":"util","type":"libraryfunc","description":{"text":"Converts a JSON string to a Lua table.","warning":"This function converts keys to numbers whenever possible. It is also has a limit of 15000 keys total.","bug":{"text":"This will attempt cast the string keys \"inf\", \"nan\", \"true\", and \"false\" to their respective Lua values. This completely ignores nulls in arrays.","issue":"3561"}},"realm":"Shared and Menu","args":{"arg":{"text":"The JSON string to convert.","name":"json","type":"string"}},"rets":{"ret":{"text":"The table containing converted information. Returns nothing on failure.","name":"","type":"table"}}}},
{"function":{"name":"KeyValuesToTable","parent":"util","type":"libraryfunc","description":{"text":"Converts a KeyValue string to a Lua table.","note":{"text":"Table keys will not repeat, see .","page":"util.KeyValuesToTablePreserveOrder"}},"realm":"Shared and Menu","args":{"arg":[{"text":"The KeyValue string to convert.","name":"keyValues","type":"string"},{"text":"If set to true, will replace \\t, \\n, \\\" and \\\\ in the input text with their escaped variants","name":"usesEscapeSequences","type":"boolean","default":"false"},{"text":"Whether we should preserve key case (may fail) or not (always lowercase)","name":"preserveKeyCase","type":"boolean","default":"false"}]},"rets":{"ret":{"text":"The converted table","name":"","type":"table"}}},"example":{"description":"Example usage and output of this function. Note how there's only one \"solid\" key in the table despite the fact that input string contains multiple.","code":"local ModelInfo = util.GetModelInfo(\"models/combine_gate_vehicle.mdl\" )\nPrintTable( util.KeyValuesToTable( ModelInfo.KeyValues ) )","outputfixedwidth":"Fixed width","output":"```\neditparams:\n\t\trootname\t=\t\n\t\ttotalmass\t=\t1\nsolid:\n\t\tdamping\t=\t0\n\t\tindex\t=\t4\n\t\tinertia\t=\t1\n\t\tmass\t=\t1\n\t\tname\t=\tVehicle_Gate.Gate1_L\n\t\trotdamping\t=\t0\n\t\tsurfaceprop\t=\tmetal\n\t\tvolume\t=\t68522.8828125\n```"}},
{"function":{"name":"KeyValuesToTablePreserveOrder","parent":"util","type":"libraryfunc","description":{"text":"Similar to  but it also preserves order of keys.","page":"util.KeyValuesToTable"},"realm":"Shared and Menu","args":{"arg":[{"text":"The key value string","name":"keyvals","type":"string"},{"text":"If set to true, will replace \\t, \\n, \\\" and \\\\ in the input text with their escaped variants","name":"usesEscapeSequences","type":"boolean","default":"false"},{"text":"Whether we should preserve key case (may fail) or not (always lowercase)","name":"preserveKeyCase","type":"boolean","default":"false"}]},"rets":{"ret":{"text":"The output table","name":"","type":"table"}}},"example":{"description":"Example usage and output of this function. Note how there are multiple entries where they key is \"solid\", just like in the input string.","code":"local ModelInfo = util.GetModelInfo(\"models/combine_gate_vehicle.mdl\" )\nPrintTable( util.KeyValuesToTablePreserveOrder( ModelInfo.KeyValues ) )","outputfixedwidth":"Fixed width","output":"```\n1:\n\t\tKey\t=\tsolid\n\t\tValue:\n\t\t\t\t1:\n\t\t\t\t\t\tKey\t=\tindex\n\t\t\t\t\t\tValue\t=\t0\n\t\t\t\t2:\n\t\t\t\t\t\tKey\t=\tname\n\t\t\t\t\t\tValue\t=\tVehicle_Gate.Gate2_L\n\t\t\t\t3:\n\t\t\t\t\t\tKey\t=\tmass\n\t\t\t\t\t\tValue\t=\t1\n\t\t\t\t4:\n\t\t\t\t\t\tKey\t=\tsurfaceprop\n\t\t\t\t\t\tValue\t=\tmetal\n\t\t\t\t5:\n\t\t\t\t\t\tKey\t=\tdamping\n\t\t\t\t\t\tValue\t=\t0\n\t\t\t\t6:\n\t\t\t\t\t\tKey\t=\trotdamping\n\t\t\t\t\t\tValue\t=\t0\n\t\t\t\t7:\n\t\t\t\t\t\tKey\t=\tinertia\n\t\t\t\t\t\tValue\t=\t1\n\t\t\t\t8:\n\t\t\t\t\t\tKey\t=\tvolume\n\t\t\t\t\t\tValue\t=\t68522.9296875\n2:\n\t\tKey\t=\tsolid\n\t\tValue:\n\t\t\t\t1:\n\t\t\t\t\t\tKey\t=\tindex\n\t\t\t\t\t\tValue\t=\t1\n\t\t\t\t2:\n\t\t\t\t\t\tKey\t=\tname\n\t\t\t\t\t\tValue\t=\tVehicle_Gate.Gate3_R\n....\n```"}},
{"function":{"name":"IsValidRagdoll","parent":"util","type":"libraryfunc","description":"Checks if the specified model name points to a valid ragdoll.","realm":"Shared","args":{"arg":{"text":"Name/Path of the ragdoll model to check.","name":"ragdollName","type":"string"}},"rets":{"ret":{"text":"Returns true if the specified model name points to a valid ragdoll; otherwise false.","name":"","type":"boolean"}}}},
{"function":{"name":"IsValidProp","parent":"util","type":"libraryfunc","description":"Checks if the specified prop is valid.","realm":"Shared","args":{"arg":{"text":"Name/Path of the model to check.","name":"modelName","type":"string"}},"rets":{"ret":{"text":"Returns true if the specified prop is valid; otherwise false.","name":"","type":"boolean"}}}},
{"function":{"name":"IsValidModel","parent":"util","type":"libraryfunc","description":"Checks if the specified model is valid.\n\nA model is considered invalid in following cases:\n* Starts with a space or **maps**\n* Doesn't start with **models**\n* Contains any of the following:\n* * _gestures\n* * _animations\n* * _postures\n* * _gst\n* * _pst\n* * _shd\n* * _ss\n* * _anm\n* * .bsp\n* * cs_fix\n* On server: If the model isn't precached, if the model file doesn't exist on the disk\n* If precache failed\n* Model is the error model","realm":"Shared","args":{"arg":{"text":"Name/Path of the model to check.","name":"modelName","type":"string"}},"rets":{"ret":{"text":"Whether the model is valid or not. Returns false clientside if the model is not precached by the server.","name":"","type":"boolean"}}}},
{"function":{"name":"IsValidPhysicsObject","parent":"util","type":"libraryfunc","description":"Checks if given numbered physics object of given entity is valid or not. Most useful for ragdolls.","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/util.lua","line":"13"},"args":{"arg":[{"text":"The entity","name":"ent","type":"Entity"},{"text":"Number of the physics object to test","name":"physobj","type":"number"}]},"rets":{"ret":{"text":"true is valid, false otherwise","name":"","type":"boolean"}}}},
{"function":{"name":"IsSkyboxVisibleFromPoint","parent":"util","type":"libraryfunc","description":{"text":"Check whether the skybox is visibile from the point specified.","note":"This will always return true in fullbright maps"},"realm":"Client","args":{"arg":{"text":"The position to check the skybox visibility from.","name":"position","type":"Vector"}},"rets":{"ret":{"text":"Whether the skybox is visible from the position.","name":"","type":"boolean"}}}},
{"function":{"name":"IsModelLoaded","parent":"util","type":"libraryfunc","description":"Checks if the model is loaded in the game.","realm":"Shared","args":{"arg":{"text":"Name/Path of the model to check.","name":"modelName","type":"string"}},"rets":{"ret":{"text":"Returns true if the model is loaded in the game; otherwise false.","name":"","type":"boolean"}}}},
{"function":{"name":"IsInWorld","parent":"util","type":"libraryfunc","description":"Checks if a certain position is within the world bounds.","realm":"Server","args":{"arg":{"text":"Position to check.","name":"position","type":"Vector"}},"rets":{"ret":{"text":"Whether the vector is in world.","name":"","type":"boolean"}}},"example":{"description":"Here's a trick you can do to achieve the behavior of this function on the client.\n\n(This may be less efficient than the serverside function itself)","code":"local tr = { collisiongroup = COLLISION_GROUP_WORLD }\nfunction util.IsInWorld( pos )\n\ttr.start = pos\n\ttr.endpos = pos\n\treturn util.TraceLine( tr ).HitWorld\nend"}},
{"function":{"name":"IntersectRayWithPlane","parent":"util","type":"libraryfunc","description":"Performs a [ray-plane intersection](https://en.wikipedia.org/wiki/Line%E2%80%93plane_intersection) and returns the hit position or nil.","realm":"Shared","args":{"arg":[{"text":"Origin/start position of the ray.","name":"rayOrigin","type":"Vector"},{"text":"The direction of the ray.","name":"rayDirection","type":"Vector"},{"text":"Any position of the plane.","name":"planePosition","type":"Vector"},{"text":"The normal vector of the plane.","name":"planeNormal","type":"Vector"}]},"rets":{"ret":{"text":"The position of intersection, nil if not hit.","name":"","type":"Vector"}}}},
{"function":{"name":"GetUserGroups","parent":"util","type":"libraryfunc","description":{"text":"Returns a table of all SteamIDs that have a usergroup.","note":"This returns the original usergroups table, changes done to this table are not retroactive and will only affect newly connected users"},"realm":"Server","file":{"text":"lua/includes/extensions/player_auth.lua","line":"77"},"rets":{"ret":{"text":"The table of users. The table consists of SteamID-Table pairs, where the table has 2 fields:\n name - Players name\n group - The players user group","name":"","type":"table","page":["string","string"]}}}},
{"function":{"name":"GetSurfacePropName","parent":"util","type":"libraryfunc","description":{"text":"Returns the name of a surface property at given ID.\n\nSee also  and  for opposite function.","page":["util.GetSurfaceData","util.GetSurfaceIndex"]},"realm":"Shared","args":{"arg":{"text":"Surface property ID. You can get it from .","name":"id","type":"number","page":"Structures/TraceResult"}},"rets":{"ret":{"text":"The name or an empty string if there is no valid surface property at given index.","name":"","type":"string"}}}},
{"function":{"name":"GetSurfaceIndex","parent":"util","type":"libraryfunc","description":{"text":"Returns the matching surface property index for the given surface property name.\n\nSee also  and  for opposite function.","page":["util.GetSurfaceData","util.GetSurfacePropName"]},"realm":"Shared","args":{"arg":{"text":"The name of the surface.","name":"surfaceName","type":"string"}},"rets":{"ret":{"text":"The surface property index, or -1 if name doesn't correspond to a valid surface property.","name":"","type":"number"}}}},
{"function":{"name":"IntersectRayWithOBB","parent":"util","type":"libraryfunc","description":"Performs a \"ray\" box intersection and returns position, normal and the fraction.","realm":"Shared","args":{"arg":[{"text":"Origin/start position of the ray.","name":"rayStart","type":"Vector"},{"text":"The ray vector itself. This can be thought of as: the ray end point relative to the start point.\n\nNote that in this implementation, the ray is not infinite - it's only a segment.","name":"rayDelta","type":"Vector"},{"text":"The center of the box.","name":"boxOrigin","type":"Vector"},{"text":"The angles of the box.","name":"boxAngles","type":"Angle"},{"text":"The min position of the box.","name":"boxMins","type":"Vector"},{"text":"The max position of the box.","name":"boxMaxs","type":"Vector"}]},"rets":{"ret":[{"text":"Hit position, nil if not hit.","name":"","type":"Vector"},{"text":"Normal/direction vector, nil if not hit.","name":"","type":"Vector"},{"text":"Fraction of trace used, nil if not hit.","name":"","type":"number"}]}}},
{"function":{"name":"GetSunInfo","parent":"util","type":"libraryfunc","description":"Gets information about the sun position and obstruction or nil if there is no sun.","realm":"Client","rets":{"ret":{"text":"The sun info. See","name":"","type":"table","page":"Structures/SunInfo"}}}},
{"function":{"name":"GetSurfaceData","parent":"util","type":"libraryfunc","description":"Returns data of a surface property at given ID.","realm":"Shared","args":{"arg":{"text":"Surface property ID. You can get it from .","name":"id","type":"number","page":"Structures/TraceResult"}},"rets":{"ret":{"text":"The data or no value if there is no valid surface property at given index.\n\nSee","name":"","type":"table","page":"Structures/SurfacePropertyData"}}},"example":{"description":"Prints the Surface Property Data of the place the player is looking at when executing the console command.","code":"concommand.Add( \"surfprop\", function( ply )\n\tlocal surface = ply:GetEyeTrace().SurfaceProps\n\tPrintTable( util.GetSurfaceData( surface ) )\nend )"}},
{"function":{"name":"GetSurfaceData","parent":"util","type":"libraryfunc","description":"Returns data of a surface property at given ID.","realm":"Shared","args":{"arg":{"text":"Surface property ID. You can get it from .","name":"id","type":"number","page":"Structures/TraceResult"}},"rets":{"ret":{"text":"The data or no value if there is no valid surface property at given index.\n\nSee","name":"","type":"table","page":"Structures/SurfacePropertyData"}}},"example":{"description":"Prints the Surface Property Data of the place the player is looking at when executing the console command.","code":"concommand.Add( \"surfprop\", function( ply )\n\tlocal surface = ply:GetEyeTrace().SurfaceProps\n\tPrintTable( util.GetSurfaceData( surface ) )\nend )"}},
{"function":{"name":"GetPlayerTrace","parent":"util","type":"libraryfunc","description":"Utility function to quickly generate a trace table that starts at the players view position, and ends 16384 units along a specified direction.","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/util.lua","line":"31-L48"},"args":{"arg":[{"text":"The player the trace should be based on","name":"ply","type":"Player"},{"text":"The direction of the trace","name":"dir","type":"Vector","default":"ply:GetAimVector()"}]},"rets":{"ret":{"text":"The trace data. See","name":"","type":"table","page":"Structures/Trace"}}},"example":{"description":"Prints the entity's model the local player is looking at to console","code":"local tr = util.TraceLine( util.GetPlayerTrace( LocalPlayer() ) )\nif IsValid(tr.Entity) then print(\"I saw a \"..tr.Entity:GetModel()) end\n\nlocal trground = util.TraceLine( util.GetPlayerTrace( LocalPlayer(), Vector(0,0,-1) ) )\nif IsValid(trground.Entity) then print(\"I'm standing on a \"..trground.Entity:GetModel()) end"}},
{"function":{"name":"GetPData","parent":"util","type":"libraryfunc","description":{"text":"Gets PData of an offline player using their SteamID","warning":{"text":"This function internally uses , which can cause collisions (two or more players sharing the same PData entry). It's recommended that you don't use it. See the related wiki page for more information.","page":"Player:UniqueID"}},"realm":"Shared and Menu","file":{"text":"lua/includes/extensions/util.lua","line":"319"},"args":{"arg":[{"text":"SteamID of the player","name":"steamID","type":"string"},{"text":"Variable name to get the value of","name":"name","type":"string"},{"text":"The default value, in case there's nothing stored","name":"default","type":"string"}]},"rets":{"ret":{"text":"The stored value","name":"","type":"string"}}}},
{"function":{"name":"GetModelInfo","parent":"util","type":"libraryfunc","description":{"text":"Returns a table containing the info about the model.","note":"This function will silently fail if used on models with following strings in them:\n* _shared\n* _anims\n* _gestures\n* _anim\n* _postures\n* _gst\n* _pst\n* _shd\n* _ss\n* _anm\n* _include"},"realm":"Shared","args":{"arg":{"text":"Model path","name":"mdl","type":"string"}},"rets":{"ret":{"text":"The model info as a table with the following keys:\n*  SkinCount - Identical to .\n*  KeyValues - Valve key-value formatted info about the model's physics (Constraint Info, etc). This is limited to 4096 characters.\n*  ModelKeyValues - Valve key-value formatted info about the model ($keyvalues command in the .qc of the model), if present","name":"","type":"table","page":["number","Entity:SkinCount","string","string"]}}},"example":{"description":{"text":"Example usage of the function. We use  in order to preserve multiple keys with the same name.","page":"util.KeyValuesToTablePreserveOrder"},"code":"local ModelInfo = util.GetModelInfo(\"models/combine_gate_vehicle.mdl\" )\nprint( ModelInfo.SkinCount ) // The skin count\nPrintTable( util.KeyValuesToTablePreserveOrder( ModelInfo.KeyValues ) ) // Physics data","outputfixedwidth":"Fixed width","output":"1:\n\t\tKey\t=\tsolid\n\t\tValue:\n\t\t\t\t1:\n\t\t\t\t\t\tKey\t=\tindex\n\t\t\t\t\t\tValue\t=\t0\n\t\t\t\t2:\n\t\t\t\t\t\tKey\t=\tname\n\t\t\t\t\t\tValue\t=\tVehicle_Gate.Gate2_L\n\t\t\t\t3:\n\t\t\t\t\t\tKey\t=\tmass\n\t\t\t\t\t\tValue\t=\t1\n\t\t\t\t4:\n\t\t\t\t\t\tKey\t=\tsurfaceprop\n\t\t\t\t\t\tValue\t=\tmetal\n\t\t\t\t5:\n\t\t\t\t\t\tKey\t=\tdamping\n\t\t\t\t\t\tValue\t=\t0\n\t\t\t\t6:\n\t\t\t\t\t\tKey\t=\trotdamping\n\t\t\t\t\t\tValue\t=\t0\n\t\t\t\t7:\n\t\t\t\t\t\tKey\t=\tinertia\n\t\t\t\t\t\tValue\t=\t1\n\t\t\t\t8:\n\t\t\t\t\t\tKey\t=\tvolume\n\t\t\t\t\t\tValue\t=\t68522.9296875\n\n.......\n\n6:\n\t\tKey\t=\teditparams\n\t\tValue:\n\t\t\t\t1:\n\t\t\t\t\t\tKey\t=\trootname\n\t\t\t\t\t\tValue\t=\t\n\t\t\t\t2:\n\t\t\t\t\t\tKey\t=\ttotalmass\n\t\t\t\t\t\tValue\t=\t1"}},
{"function":{"name":"Effect","parent":"util","type":"libraryfunc","description":{"text":"Creates an effect with the specified data.\n\nYou can find a list of built-in engine effects . You can create your own. Example effects can be found [here](https://github.com/garrynewman/garrysmod/tree/master/garrysmod/gamemodes/sandbox/entities/effects) and [here](https://github.com/garrynewman/garrysmod/tree/master/garrysmod/gamemodes/base/entities/effects).","page":",hereEffects","note":[{"text":"When dispatching an effect from the server, some values may be clamped for networking optimizations. Visit the Set accessors on  to see which ones are affected.","page":"CEffectData"},{"text":"You will need to couple this function with  should you use this in a .","page":["Global.IsFirstTimePredicted",",predicted hookPrediction"]}]},"realm":"Shared","args":{"arg":[{"text":"The name of the effect to create.","name":"effectName","type":"string"},{"text":"The effect data describing the effect.","name":"effectData","type":"CEffectData"},{"text":"Whether Lua-defined effects should override engine-defined effects with the same name for this/single function call.","name":"allowOverride","type":"boolean","default":"true"},{"text":"Can either be a boolean to ignore the prediction filter or a .\n\nSet this to true if you wish to call this function in multiplayer from server.","name":"ignorePredictionOrRecipientFilter","type":"any","default":"nil","page":"CRecipientFilter"}]}},"example":{"description":"Creates a HelicopterMegaBomb effect at the origin of the map. ( 0, 0, 0 )","code":"local vPoint = Vector( 0, 0, 0 )\nlocal effectdata = EffectData()\neffectdata:SetOrigin( vPoint )\nutil.Effect( \"HelicopterMegaBomb\", effectdata )"}},
{"function":{"name":"GetModelMeshes","parent":"util","type":"libraryfunc","description":{"text":"Returns a table of visual meshes of given model.\n\n\n\nSee also .","note":"This does not work on brush models (`*number` models)","page":"ENTITY:GetRenderMesh"},"realm":"Client","args":{"arg":[{"text":"The full path to a model to get the visual meshes of.","name":"model","type":"string"},{"name":"lod","type":"number","default":"0"},{"name":"bodygroupMask","type":"number","default":"0"}]},"rets":{"ret":{"text":"A table of tables with the following format:\n*  material - The material of the specific mesh\n*  triangles - A table of es ready to be fed into \n*  verticies - A table of es representing all the vertexes of the mesh. This table is used internally to generate the \"triangles\" table.\n\nEach  returned also has an extra table of tables field called \"weights\" with the following data:\n*  boneID - The bone this vertex is attached to\n*  weight - How \"strong\" this vertex is attached to the bone. A vertex can be attached to multiple bones at once.","name":"","type":"table","page":["string","table","Structures/MeshVertex","IMesh:BuildFromTriangles","table","Structures/MeshVertex","Structures/MeshVertex","number","number"]}}},"example":{"description":"Simple example usage on a Scripted Entity.","code":"-- The default material to render with in case we for some reason don't have one\nlocal myMaterial = Material( \"models/wireframe\" ) -- models/debug/debugwhite\n\nfunction ENT:CreateMesh()\n\t-- Destroy any previous meshes\n\tif ( self.Mesh ) then self.Mesh:Destroy() end\n\n\t-- Get a list of all meshes of a model\n\tlocal visualMeshes = util.GetModelMeshes( \"models/combine_helicopter/helicopter_bomb01.mdl\" )\n\n\t-- Check if the model even exists\n\tif ( !visualMeshes ) then return end\n\n\t-- Select the first mesh\n\tlocal visualMesh = visualMeshes[ 1 ]\n\n\t-- Set the material to draw the mesh with from the model data\n\tmyMaterial = Material( visualMesh.material )\n\n\t-- You can apply any changes to visualMesh.trianges table here, distorting the mesh\n\t-- or any other changes you can come up with\n\n\t-- Create and build the mesh\n\tself.Mesh = Mesh()\n\tself.Mesh:BuildFromTriangles( visualMesh.triangles )\nend\n\n-- A special hook to override the normal mesh for rendering\nfunction ENT:GetRenderMesh()\n\t-- If the mesh doesn't exist, create it!\n\tif ( !self.Mesh ) then return self:CreateMesh() end\n\n\treturn { Mesh = self.Mesh, Material = myMaterial }\nend\n\nfunction ENT:Draw()\n\t-- Draw the entity's model normally, this calls GetRenderMesh at some point\n\tself:DrawModel()\nend"}},
{"function":{"name":"DistanceToLine","parent":"util","type":"libraryfunc","description":"Gets the distance between a line and a point in 3d space.","realm":"Shared","args":{"arg":[{"text":"Start of the line.","name":"lineStart","type":"Vector"},{"text":"End of the line.","name":"lineEnd","type":"Vector"},{"text":"The position of the point.","name":"pointPos","type":"Vector"}]},"rets":{"ret":[{"text":"Distance from line.","name":"","type":"number"},{"text":"Nearest point on line.","name":"","type":"Vector"},{"text":"Distance along line from start.","name":"","type":"number"}]}}},
{"function":{"name":"Decompress","parent":"util","type":"libraryfunc","description":{"text":"Decompresses the given string using [LZMA](https://en.wikipedia.org/wiki/LZMA) algorithm. Used to decompress strings previously compressed with .","page":"util.Compress"},"realm":"Shared and Menu","args":{"arg":[{"text":"The compressed string to decompress.","name":"compressedString","type":"string"},{"text":"The maximal size in bytes it will decompress.","name":"maxSize","type":"number","default":"nil"}]},"rets":{"ret":{"text":"The original, decompressed string or an empty string on failure or invalid input.","name":"","type":"string"}}}},
{"function":{"name":"Decompress","parent":"util","type":"libraryfunc","description":{"text":"Decompresses the given string using [LZMA](https://en.wikipedia.org/wiki/LZMA) algorithm. Used to decompress strings previously compressed with .","page":"util.Compress"},"realm":"Shared and Menu","args":{"arg":[{"text":"The compressed string to decompress.","name":"compressedString","type":"string"},{"text":"The maximal size in bytes it will decompress.","name":"maxSize","type":"number","default":"nil"}]},"rets":{"ret":{"text":"The original, decompressed string or an empty string on failure or invalid input.","name":"","type":"string"}}}},
{"function":{"name":"DecalEx","parent":"util","type":"libraryfunc","description":{"text":"Performs a trace and paints a decal to the surface hit.","note":"This function has trouble spanning across multiple brushes on the map."},"realm":"Client","args":{"arg":[{"text":"The name of the decal to paint. Can be retrieved with .","name":"material","type":"IMaterial","page":"util.DecalMaterial"},{"text":"The entity to apply the decal to","name":"ent","type":"Entity"},{"text":"The position of the decal.","name":"position","type":"Vector"},{"text":"The direction of the decal.","name":"normal","type":"Vector"},{"text":"The color of the decal. Uses the .\n\nThis only works when used on a brush model and only if the decal material has set **$vertexcolor** to 1.","name":"color","type":"table","page":"Color"},{"text":"The width scale of the decal.","name":"w","type":"number"},{"text":"The height scale of the decal.","name":"h","type":"number"}]}}},
{"function":{"name":"DateStamp","parent":"util","type":"libraryfunc","description":"Returns the current date formatted like '2012-10-31 18-00-00'","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/util.lua","line":"97"},"rets":{"ret":{"text":"date","name":"","type":"string"}}}},
{"text":"##  Built in Decals \nHere's a list of all the decal names that should be possible to use by default.\n* BeerSplash\n* BirdPoop\n* Blood\n* BulletProof\n* Cross\n* Dark\n* ExplosiveGunshot\n* Eye\n* FadingScorch\n* GlassBreak\n* Impact.Antlion\n* Impact.BloodyFlesh\n* Impact.Concrete\n* Impact.Glass\n* Impact.Metal\n* Impact.Sand\n* Impact.Wood\n* Light\n* ManhackCut\n* Nought\n* Noughtsncrosses\n* PaintSplatBlue\n* PaintSplatGreen\n* PaintSplatPink\n* Scorch\n* SmallScorch\n* Smile\n* Splash.Large\n* YellowBlood","function":{"name":"Decal","parent":"util","type":"libraryfunc","description":"Performs a trace and paints a decal to the surface hit.","realm":"Shared","args":{"arg":[{"text":"The name of the decal to paint.","name":"name","type":"string"},{"text":"The start of the trace.","name":"start","type":"Vector"},{"text":"The end of the trace.","name":"end","type":"Vector"},{"text":"If set, the decal will not be able to be placed on given entity. Can also be a table of entities.","name":"filter","type":"Entity","default":"NULL"}]}}},
{"function":{"name":"CRC","parent":"util","type":"libraryfunc","description":"Generates the [CRC Checksum](https://en.wikipedia.org/wiki/Cyclic_redundancy_check) of the specified string.","realm":"Shared","args":{"arg":{"text":"The string to calculate the checksum of.","name":"stringToHash","type":"string"}},"rets":{"ret":{"text":"The unsigned 32 bit checksum.","name":"","type":"string"}}},"example":{"description":"Prints out the CRC-32 checksum of \"a\".","code":"print( util.CRC( \"a\" ))","output":"3904355907"}},
{"function":{"name":"Compress","parent":"util","type":"libraryfunc","description":{"text":"Compresses the given string using the [LZMA](https://en.wikipedia.org/wiki/LZMA) algorithm.\n\nUse with  and  for networking and   to decompress the data.","page":["net.WriteData","net.ReadData","util.Decompress"]},"realm":"Shared and Menu","args":{"arg":{"text":"String to compress.","name":"str","type":"string"}},"rets":{"ret":{"text":"The compressed string, or nil if the input string was zero length (\"\").","name":"","type":"string"}}}},
{"function":{"name":"BlastDamageInfo","parent":"util","type":"libraryfunc","description":"Applies spherical damage based on damage info to all entities in the specified radius.","realm":"Server","args":{"arg":[{"text":"The information about the damage","name":"dmg","type":"CTakeDamageInfo"},{"text":"Center of the spherical damage","name":"damageOrigin","type":"Vector"},{"text":"The radius in which entities will be damaged.","name":"damageRadius","type":"number"}]}}},
{"function":{"name":"Base64Encode","parent":"util","type":"libraryfunc","description":"Encodes the specified string to base64.","realm":"Shared and Menu","args":{"arg":{"text":"String to encode.","name":"str","type":"string"}},"rets":{"ret":{"text":"Base 64 encoded string.","name":"","type":"string"}}}},
{"function":{"name":"BlastDamage","parent":"util","type":"libraryfunc","description":"Applies explosion damage to all entities in the specified radius.","realm":"Server","args":{"arg":[{"text":"The entity that caused the damage.","name":"inflictor","type":"Entity"},{"text":"The entity that attacked.","name":"attacker","type":"Entity"},{"text":"The center of the explosion","name":"damageOrigin","type":"Vector"},{"text":"The radius in which entities will be damaged.","name":"damageRadius","type":"number"},{"text":"The amount of damage to be applied.","name":"damage","type":"number"}]}}},
{"function":{"name":"AimVector","parent":"util","type":"libraryfunc","description":{"text":"Function used to calculate aim vector from 2D screen position. It is used in SuperDOF calculate Distance.\n\nEssentially a generic version of .","page":"gui.ScreenToVector"},"realm":"Shared and Menu","args":{"arg":[{"text":"View angles","name":"ViewAngles","type":"Angle"},{"text":"View Field of View","name":"ViewFOV","type":"number"},{"text":"Mouse X position","name":"x","type":"number"},{"text":"Mouse Y position","name":"y","type":"number"},{"text":"Screen width","name":"scrWidth","type":"number"},{"text":"Screen height","name":"scrHeight","type":"number"}]},"rets":{"ret":{"text":"Calculated aim vector","name":"","type":"Vector"}}}},
{"function":{"name":"AddNetworkString","parent":"util","type":"libraryfunc","description":{"text":"Adds the specified string to a string table, which will cache it and network it to all clients automatically.\nWhenever you want to create a net message with , you must add the name of that message as a networked string via this function.\n\nIf the passed string already exists, nothing will happen and the ID of the existing item will be returned.","br":"","page":"net.Start","note":[{"text":"Each unique network name needs to be pooled once - do not put this function call into any other functions if you're using a constant string. Preferable place for this function is in a serverside lua file, or in a shared file with the  function.","page":"net.Receive"},"The string table used for this function does not interfere with the engine string tables and has 2048 slots."]},"realm":"Server","args":{"arg":{"text":"Adds the specified string to the string table.","name":"str","type":"string"}},"rets":{"ret":{"text":"The id of the string that was added to the string table.\nSame as calling .","name":"","type":"number","br":"","page":"util.NetworkStringToID"}}}},
{"function":{"name":"offset","parent":"utf8","type":"libraryfunc","description":"Returns the byte-index of the n'th UTF-8-character after the given startPos (nil if none). startPos defaults to 1 when n is positive and -1 when n is negative. If n is zero, this function instead returns the byte-index of the UTF-8-character startPos lies within.","realm":"Shared","file":{"text":"lua/includes/modules/utf8.lua","line":"226-L296"},"args":{"arg":[{"text":"The string that you will get the byte position from.","name":"string","type":"string"},{"text":"The position to get the beginning byte position from.","name":"n","type":"number"},{"text":"The offset for n.","name":"startPos","type":"number","default":"1 when n>=0, -1 otherwise"}]},"rets":{"ret":{"text":"Starting byte-index of the given position.","name":"","type":"number"}}},"example":[{"description":"Returns the byte-index where the character at the 5th byte begins.","code":"print(utf8.offset(\"( ͡° ͜ʖ ͡°)\", 5))","output":"7"},{"description":"Safely truncates the string that may contain UTF-8 characters. The first print demonstrates the problem of string.sub","code":"local s = 'Текст - Cyrillic text example'\nprint(string.sub(s,1,5))\nprint(string.sub(s,1,utf8.offset(s,5)))","output":"Те?\nТекст"}]},
{"function":{"name":"len","parent":"utf8","type":"libraryfunc","description":"Returns the number of UTF-8 sequences in the given string between positions startPos and endPos (both inclusive). If it finds any invalid UTF-8 byte sequence, returns false as well as the position of the first invalid byte.","realm":"Shared","file":{"text":"lua/includes/modules/utf8.lua","line":"197-L224"},"args":{"arg":[{"text":"The string to calculate the length of.","name":"string","type":"string"},{"text":"The starting position to get the length from.","name":"startPos","type":"number","default":"1"},{"text":"The ending position to get the length from.","name":"endPos","type":"number","default":"-1"}]},"rets":{"ret":[{"text":"The number of UTF-8 characters in the string. If there are invalid bytes, this will be false.","name":"","type":"number"},{"text":"The position of the first invalid byte. If there were no invalid bytes, this will be nil.","name":"","type":"number"}]}},"example":{"description":{"text":"Demonstrates output of this function compared to  when given a string that contains Russian text.","page":"string.len"},"code":"print( string.len( \"Мёнём\" ) )\nprint( utf8.len( \"Мёнём\" ) )","output":"```\n11\n5\n```"}},
{"function":{"name":"force","parent":"utf8","type":"libraryfunc","description":"Forces a string to contain only valid UTF-8 data. Invalid sequences are replaced with U+FFFD (the Unicode replacement character).\n\nThis is a lazy way for users to ensure a string contains only valid UTF-8 data.","realm":"Shared","file":{"text":"lua/includes/modules/utf8.lua","line":"298-L333"},"args":{"arg":{"text":"The string that will become a valid UTF-8 string.","name":"string","type":"string"}},"rets":{"ret":{"text":"The UTF-8 string.","name":"","type":"string"}}}},
{"function":{"name":"codes","parent":"utf8","type":"libraryfunc","description":{"text":"Returns an iterator (like ) which returns both the position and codepoint of each utf8 character in the string. It raises an error if it meets any invalid byte sequence.","page":"string.gmatch"},"realm":"Shared","file":{"text":"lua/includes/modules/utf8.lua","line":"141-L168"},"args":{"arg":{"text":"The string that you will get the codes from.","name":"string","type":"string"}},"rets":{"ret":{"text":"The iterator (to be used in a for loop).","name":"","type":"function"}}},"example":{"description":"Demonstrates usage of the function.","code":"for p, c in utf8.codes(\"( ͡° ͜ʖ ͡°)\") do\n    print(p,c)\nend","output":"```\n1    40    \n2    32    \n3    865    \n5    176    \n7    32    \n8    860    \n10    662    \n12    32    \n13    865    \n15    176    \n17    41\n```"}},
{"function":{"name":"codepoint","parent":"utf8","type":"libraryfunc","description":{"text":"Returns the codepoints (as numbers) from all characters in the given string that start between byte position startPos and endPos. It raises an error if it meets any invalid byte sequence. This functions similarly to .","page":"string.byte"},"realm":"Shared","file":{"text":"lua/includes/modules/utf8.lua","line":"170-L195"},"args":{"arg":[{"text":"The string that you will get the code(s) from.","name":"string","type":"string"},{"text":"The starting byte of the string to get the codepoint of.","name":"startPos","type":"number","default":"1"},{"text":"The ending byte of the string to get the codepoint of.","name":"endPos","type":"number","default":"1"}]},"rets":{"ret":{"text":"The codepoint number(s).","name":"","type":"vararg"}}},"example":{"description":"Demonstrates usage of the function.","code":"print( utf8.codepoint( \"Мёнём\", 1, -1 ) )","output":"1052\t1105\t1085\t1105\t1084"}},
{"function":{"name":"char","parent":"utf8","type":"libraryfunc","description":"Receives zero or more integers, converts each one to its corresponding UTF-8 byte sequence and returns a string with the concatenation of all these sequences.","realm":"Shared","file":{"text":"lua/includes/modules/utf8.lua","line":"90-L139"},"args":{"arg":{"text":"Unicode code points to be converted in to a UTF-8 string.","name":"codepoints","type":"vararg"}},"rets":{"ret":{"text":"UTF-8 string generated from given arguments.","name":"","type":"string"}}}},
{"function":{"name":"IncomingMessage","parent":"usermessage","type":"libraryfunc","description":{"text":"Called by the engine when a usermessage arrives, this method calls the hook function specified by  if any.","internal":"","page":"usermessage.Hook"},"realm":"Shared","args":{"arg":[{"text":"The message name.","name":"name","type":"string"},{"text":"The message.","name":"msg","type":"bf_read"}]}}},
{"function":{"name":"Hook","parent":"usermessage","type":"libraryfunc","description":{"text":"Sets a hook for the specified to be called when a usermessage with the specified name arrives.","deprecated":{"text":"You should be using  instead","page":"net"},"warning":"Usermessages have a limit of only 256 bytes!"},"realm":"Shared","args":{"arg":[{"text":"The message name to hook to.","name":"name","type":"string"},{"text":"The function to be called if the specified message was received.\nParameters (Optional):\n*  msg\n*  preArgs","name":"callback","type":"function","page":["bf_read","vararg"]},{"text":"Arguments that are passed to the callback function when the hook is called. *ring ring*","name":"preArgs","type":"vararg","default":"nil"}]}}},
{"function":{"name":"GetTable","parent":"usermessage","type":"libraryfunc","description":"Returns a table of every usermessage hook","realm":"Shared","rets":{"ret":{"text":"hooks","name":"","type":"table"}}}},
{"function":{"name":"SetupUI","parent":"undo","type":"libraryfunc","description":{"text":"Adds a hook (CPanelPaint) to the control panel paint function so we can determine when it is being drawn.","internal":""},"realm":"Client"}},
{"function":{"name":"SetPlayer","parent":"undo","type":"libraryfunc","description":"Sets the player which the current undo block belongs to","realm":"Server","args":{"arg":{"text":"The player responsible for undoing the block","name":"ply","type":"Player"}}},"example":{"description":"This example creates a prop_physics, and adds it to the players undo list.","code":"prop = ents.Create(\"prop_physics\")\nprop:SetModel(\"models/props_junk/wood_crate001a.mdl\")\nprop:Spawn()\nundo.Create(\"prop\")\n undo.AddEntity(prop)\n undo.SetPlayer(ply)\nundo.Finish()"}},
{"function":{"name":"SetCustomUndoText","parent":"undo","type":"libraryfunc","description":"Sets a custom undo text for the current undo block","realm":"Server","args":{"arg":{"text":"The text to display when the undo block is undone","name":"customText","type":"string"}}},"example":{"description":"This example creates a prop_physics, adds it to the players undo list, and sets a custom undo text","code":"local prop = ents.Create( \"prop_physics\" )\nprop:SetModel( \"models/props_junk/wood_crate001a.mdl\" )\nprop:Spawn()\nundo.Create( \"prop\" )\n undo.AddEntity( prop )\n undo.SetPlayer( Player )\n undo.SetCustomUndoText(\"Undone a crate prop\")\nundo.Finish()"}},
{"function":{"name":"ReplaceEntity","parent":"undo","type":"libraryfunc","description":"Replaces any instance of the \"from\" reference with the \"to\" reference, in any existing undo block. Returns true if something was replaced","realm":"Server","args":{"arg":[{"text":"The old entity","name":"from","type":"Entity"},{"text":"The new entity to replace the old one","name":"to","type":"Entity"}]},"rets":{"ret":{"text":"somethingReplaced","name":"","type":"boolean"}}},"example":{"description":"When an entity is ragdolled, this will replace any instances of the entity with it's ragdoll.","code":"function GM:CreateEntityRagdoll( entity, ragdoll )\n // Replace the entity with the ragdoll in cleanups etc\n undo.ReplaceEntity( entity, ragdoll )\n cleanup.ReplaceEntity( entity, ragdoll )\nend"}},
{"function":{"name":"MakeUIDirty","parent":"undo","type":"libraryfunc","description":{"text":"Makes the UI dirty - it will re-create the controls the next time it is viewed. We also take this opportun","internal":""},"realm":"Client"}},
{"function":{"name":"GetTable","parent":"undo","type":"libraryfunc","description":"Serverside, returns a table containing all undo blocks of all players. Clientside, returns a table of the local player's undo blocks.","realm":"Shared","rets":{"ret":{"text":"The undo table.","name":"","type":"table"}}}},
{"function":{"name":"Finish","parent":"undo","type":"libraryfunc","description":"Completes an undo entry, and registers it with the player's client","realm":"Shared"},"example":{"description":"This example creates a prop_physics, and adds it to the players undo list.","code":"prop = ents.Create(\"prop_physics\")\nprop:SetModel(\"models/props_junk/wood_crate001a.mdl\")\nprop:Spawn()\nundo.Create(\"prop\")\n undo.AddEntity(prop)\n undo.SetPlayer(Player)\nundo.Finish()"}},
{"function":{"name":"Do_Undo","parent":"undo","type":"libraryfunc","description":"Processes an undo block (in table form). This is used internally by the undo manager when a player presses Z.","realm":"Server","args":{"arg":{"text":"The undo block to process as an","name":"tab","type":"table","page":"Structures/Undo"}},"rets":{"ret":{"text":"Number of removed entities","name":"","type":"number"}}},"example":{"description":"This example removes two entities, and informs player 1 that they just \"Undone Prop!\"","code":"local tab = {}\ntab.Owner = Entity(1)\ntab.Name = \"prop\"\ntab.Entities = {Entity(56),Entity(57)}\nundo.Do_Undo(tab)"}},
{"function":{"name":"Create","parent":"undo","type":"libraryfunc","description":"Begins a new undo entry","realm":"Server","args":{"arg":{"text":"Name of the undo message to show to players","name":"name","type":"string"}}},"example":{"description":"This example creates a prop_physics, and adds it to Player's undo list.","code":"prop = ents.Create(\"prop_physics\")\nprop:SetModel(\"models/props_junk/wood_crate001a.mdl\")\nprop:Spawn()\nundo.Create(\"prop\")\n undo.AddEntity(prop)\n undo.SetPlayer(Player)\nundo.Finish()"}},
{"function":{"name":"AddFunction","parent":"undo","type":"libraryfunc","description":"Adds a function to call when the current undo block is undone","realm":"Server","args":{"arg":[{"text":"The function to call","name":"func","type":"function"},{"text":"Arguments to pass to the function (after the undo info table)","name":"arguments","type":"vararg"}]}},"example":{"description":"This example creates a prop_physics, and adds it to the players undo list. A message will be printed to console about it.","code":"prop = ents.Create(\"prop_physics\")\nprop:SetModel(\"models/props_junk/wood_crate001a.mdl\")\nprop:Spawn()\nundo.Create(\"prop\")\n undo.AddEntity(prop)\n undo.AddFunction(function(tab, arg2)\n print(tab.Owner:GetName()..\" removed prop \"..tab.Entities[1]:GetModel()..\", code: \"..arg2)\n end, 556)\n undo.SetPlayer(ply)\nundo.Finish()","output":"\"PlayerName removed prop models/props_junk/wood_crate001a.mdl, code: 556\" will be printed"}},
{"function":{"name":"AddEntity","parent":"undo","type":"libraryfunc","description":"Adds an entity to the current undo block","realm":"Server","args":{"arg":{"text":"The entity to add","name":"ent","type":"Entity"}}},"example":{"description":"This example creates a prop_physics, and adds it to the players undo list.","code":"prop = ents.Create(\"prop_physics\")\nprop:SetModel(\"models/props_junk/wood_crate001a.mdl\")\nprop:Spawn()\n\nundo.Create(\"prop\")\n\tundo.AddEntity(prop)\n\tundo.SetPlayer(Player)\nundo.Finish()"}},
{"function":{"name":"VectorNormal","parent":"umsg","type":"libraryfunc","description":"Writes a vector normal to the usermessage.","realm":"Server","args":{"arg":{"text":"The vector normal to be sent.","name":"normal","type":"Vector"}}},"deprecated":{"text":"You should be using the  instead","page":"net"}},
{"function":{"name":"Vector","parent":"umsg","type":"libraryfunc","description":"Writes a Vector to the usermessage.","realm":"Server","args":{"arg":{"text":"The vector to be sent.","name":"vector","type":"Vector"}}},"deprecated":{"text":"You should be using the  instead","page":"net"}},
{"function":{"name":"String","parent":"umsg","type":"libraryfunc","description":"Writes a null terminated string to the usermessage.","realm":"Server","args":{"arg":{"text":"The string to be sent.","name":"string","type":"string"}}},"deprecated":{"text":"You should be using the  instead","page":"net"},"example":{"description":"An easy way to send any string to the client or clients","code":"umsg.Start(\"Example_SendString\") -- With umsg.Start(\"Example_SendString\",pl) Must get pl value the player entity.\n\tumsg.String(\"Custom Text\")\numsg.End()"}},
{"function":{"name":"Start","parent":"umsg","type":"libraryfunc","description":{"text":"Starts a new usermessage.","deprecated":{"text":"You should be using  instead","page":"net"},"warning":"Usermessages have a limit of only 256 bytes!"},"realm":"Server","args":{"arg":[{"text":"The name of the message to be sent.","name":"name","type":"string"},{"text":"If passed a player object, it will only be sent to the player, if passed a  of players, it will be sent to all specified players, if passed nil (or another invalid value), the message will be sent to all players.","name":"filter","type":"Player","page":"CRecipientFilter"}]}}},
{"function":{"name":"Short","parent":"umsg","type":"libraryfunc","description":"Writes a signed short (16 bit) to the usermessage.","realm":"Server","args":{"arg":{"text":"The short to be sent.","name":"short","type":"number"}}},"deprecated":{"text":"You should be using the  instead","page":"net"}},
{"function":{"name":"Long","parent":"umsg","type":"libraryfunc","description":"Writes a signed int (32 bit) to the usermessage.","realm":"Server","args":{"arg":{"text":"The int to be sent.","name":"int","type":"number"}}},"deprecated":{"text":"You should be using the  instead","page":"net"}},
{"function":{"name":"Long","parent":"umsg","type":"libraryfunc","description":"Writes a signed int (32 bit) to the usermessage.","realm":"Server","args":{"arg":{"text":"The int to be sent.","name":"int","type":"number"}}},"deprecated":{"text":"You should be using the  instead","page":"net"}},
{"function":{"name":"Float","parent":"umsg","type":"libraryfunc","description":"Writes a float to the usermessage.","realm":"Server","args":{"arg":{"text":"The float to be sent.","name":"float","type":"number"}}},"deprecated":{"text":"You should be using the  instead","page":"net"}},
{"function":{"name":"Entity","parent":"umsg","type":"libraryfunc","description":"Writes an entity object to the usermessage.","realm":"Server","args":{"arg":{"text":"The entity to be sent.","name":"entity","type":"Entity"}}},"deprecated":{"text":"You should be using the  instead","page":"net"}},
{"function":{"name":"Char","parent":"umsg","type":"libraryfunc","description":"Writes a signed char to the usermessage.","realm":"Server","args":{"arg":{"text":"The char to be sent.","name":"char","type":"number"}}},"deprecated":{"text":"You should be using the  instead","page":"net"}},
{"function":{"name":"End","parent":"umsg","type":"libraryfunc","description":"Dispatches the usermessage to the client(s).","realm":"Server"},"deprecated":{"text":"You should be using the  instead","page":"net"}},
{"function":{"name":"End","parent":"umsg","type":"libraryfunc","description":"Dispatches the usermessage to the client(s).","realm":"Server"},"deprecated":{"text":"You should be using the  instead","page":"net"}},
{"function":{"name":"Angle","parent":"umsg","type":"libraryfunc","description":"Writes an angle to the usermessage.","realm":"Server","args":{"arg":{"text":"The angle to be sent.","name":"angle","type":"Angle"}}},"deprecated":{"text":"You should be using the  instead","page":"net"}},
{"function":{"name":"UnPause","parent":"timer","type":"libraryfunc","description":"Unpauses the timer.","realm":"Shared and Menu","args":{"arg":{"text":"Identifier of the timer.","name":"identifier","type":"any"}},"rets":{"ret":{"text":"false if the timer didn't exist or was already running, true otherwise.","name":"","type":"boolean"}}}},
{"function":{"name":"Toggle","parent":"timer","type":"libraryfunc","description":{"text":"Runs either  or  based on the timer's current status.","page":["timer.Pause","timer.UnPause"]},"realm":"Shared and Menu","args":{"arg":{"text":"Identifier of the timer.","name":"identifier","type":"any"}},"rets":{"ret":{"text":"status of the timer.","name":"","type":"boolean"}}}},
{"function":{"name":"TimeLeft","parent":"timer","type":"libraryfunc","description":{"text":"Returns amount of time left (in seconds) before the timer executes its function.","note":"If the timer is paused, the amount will be negative."},"realm":"Shared and Menu","args":{"arg":{"text":"Identifier of the timer.","name":"identifier","type":"any"}},"rets":{"ret":{"text":"The amount of time left (in seconds).","name":"","type":"number"}}}},
{"function":{"name":"TimeLeft","parent":"timer","type":"libraryfunc","description":{"text":"Returns amount of time left (in seconds) before the timer executes its function.","note":"If the timer is paused, the amount will be negative."},"realm":"Shared and Menu","args":{"arg":{"text":"Identifier of the timer.","name":"identifier","type":"any"}},"rets":{"ret":{"text":"The amount of time left (in seconds).","name":"","type":"number"}}}},
{"function":{"name":"Start","parent":"timer","type":"libraryfunc","description":{"text":"Restarts the given timer.","note":{"text":"Timers use  for timing.","page":"Global.CurTime"},"warning":"Timers won't advance while the client is timing out from the server."},"realm":"Shared and Menu","args":{"arg":{"text":"Identifier of the timer.","name":"identifier","type":"any"}},"rets":{"ret":{"text":"true if the timer exists, false if it doesn't.","name":"","type":"boolean"}}}},
{"function":{"name":"Simple","parent":"timer","type":"libraryfunc","description":{"text":"Creates a simple timer that runs the given function after a specified delay.\n\nFor a more advanced version that you can control after creation, see .","page":"timer.Create","warning":{"text":"Timers use  internally. Due to this, they won't advance while the client is timing out from the server or on an empty dedicated server due to hibernation. (unless sv_hibernate_think is set to 1)","page":"Global.CurTime"}},"realm":"Shared and Menu","args":{"arg":[{"text":"How long until the function should be ran (in seconds). Use 0 to have the function run in the next .","name":"delay","type":"number","page":"GM:Think"},{"text":"The function to run after the specified delay.","name":"func","type":"function"}]}},"example":[{"description":"Print \"Hello World\" after 5 seconds.","code":"timer.Simple( 5, function() print( \"Hello World\" ) end )","output":"Hello World"},{"description":"Spawns 5 zombies and creates a timer.Simple that removes them in 11, 12, 13, 14, and 15 seconds.","code":"for i = 1, 5 do\n\tlocal zombie = ents.Create(\"npc_zombie\")\n\tzombie:SetPos( Vector( i * 40, 0 , 250 ) )\n\tzombie:Spawn()\n\n\ttimer.Simple( 10 + i, function() zombie:Remove() end  )\nend","output":"--11 seconds into game 1st zombie disappears\n\n--12 seconds into game 2nd zombie disappears\n\netc."}]},
{"function":{"name":"RepsLeft","parent":"timer","type":"libraryfunc","description":"Returns amount of repetitions/executions left before the timer destroys itself.","realm":"Shared and Menu","args":{"arg":{"text":"Identifier of the timer.","name":"identifier","type":"any"}},"rets":{"ret":{"text":"The amount of executions left.","name":"","type":"number"}}}},
{"function":{"name":"Remove","parent":"timer","type":"libraryfunc","description":{"text":"Stops and removes a timer created by .","page":"timer.Create","warning":"The timers are removed in the next frame! Keep this in mind when storing identifiers in variables."},"realm":"Shared and Menu","args":{"arg":{"text":"Identifier of the timer to remove.","name":"identifier","type":"string"}}},"example":{"description":"Creates a timer and then removes it","code":"-- create timer\ntimer.Create( \"UniqueName1\", 5, 1, function() print(\"inside\") end )\n\n-- remove timer\ntimer.Remove( \"UniqueName1\" )"}},
{"function":{"name":"Pause","parent":"timer","type":"libraryfunc","description":"Pauses the given timer.","realm":"Shared and Menu","args":{"arg":{"text":"Identifier of the timer.","name":"identifier","type":"any"}},"rets":{"ret":{"text":"false if the timer didn't exist or was already paused, true otherwise.","name":"","type":"boolean"}}}},
{"function":{"name":"Exists","parent":"timer","type":"libraryfunc","description":"Returns whenever the given timer exists or not.","realm":"Shared and Menu","args":{"arg":{"text":"Identifier of the timer.","name":"identifier","type":"string"}},"rets":{"ret":{"text":"Returns true if the timer exists, false if it doesn't","name":"","type":"boolean"}}},"example":{"description":"Checks it the timer exists","code":"if ( timer.Exists( \"TimerName\" ) ) then\n\n\t-- The timer exists\n\tprint( \"The timer exists\" )\n\t\nelse\n\t-- The timer doesn't exist\n\tprint( \"The timer does not exist!\" )\n\n\t-- Create a timer\n\ttimer.Create( \"TimerName\", 1, 0, function() print( \"I'm a Timer\" ) end)\nend","output":"```\nThe timer does not exist!\nI'm a Timer\nI'm a Timer\nI'm a Timer\nI'm a Timer\n```"}},
{"function":{"name":"Destroy","parent":"timer","type":"libraryfunc","description":{"text":"Stops and destroys the given timer. Alias of .","deprecated":{"text":"You should be using  instead.","page":"timer.Remove"},"page":"timer.Remove"},"realm":"Shared and Menu","args":{"arg":{"text":"Identifier of the timer to destroy.","name":"identifier","type":"string"}}}},
{"function":{"name":"Create","parent":"timer","type":"libraryfunc","description":{"text":"Creates a new timer that will repeat its function given amount of times.\nThis function also requires the timer to be named, which allows you to control it after it was created via the .\n\nFor a simple one-time timer with no identifiers, see .","page":["timer","timer.Simple"],"warning":{"text":"Timers use  internally. Due to this, they won't advance while the client is timing out from the server or on an empty dedicated server due to hibernation. (unless sv_hibernate_think is set to 1)","page":"Global.CurTime"}},"realm":"Shared and Menu","args":{"arg":[{"text":"Identifier of the timer to create. Must be unique. If a timer already exists with the same identifier, that timer will be updated to the new settings and reset.","name":"identifier","type":"string"},{"text":"The delay interval in seconds. If the delay is too small, the timer will fire on the next frame/tick.","name":"delay","type":"number"},{"text":"The number of times to repeat the timer. Enter 0 for infinite repetitions.","name":"repetitions","type":"number"},{"text":"Function called when timer has finished the countdown.","name":"func","type":"function"}]}},"example":[{"description":"Creates a timer that has a 1 second delay and is only ran once ('UniqueName1'), a timer that has a 2 second delay and is ran continuously ('UniqueName2'), etc.\n\nThis shows the different ways you can interact with functions.","code":"local function PrintSomething( text )\n\tprint( text )\nend\n\nlocal function PrintNoArguments()\n\tprint( \"fun with timers!\" )\nend\n\nlocal function CreateSomeTimers( )\n\ttimer.Create( \"UniqueName1\", 1, 1, function() print(\"inside\") end )\n\ttimer.Create( \"UniqueName2\", 2, 0, function() PrintSomething(\"outside\") end )\n\ttimer.Create( \"UniqueName3\", 5, 1, PrintNoArguments )\nend\nhook.Add( \"Initialize\", \"Timer Example\", CreateSomeTimers )","output":"inside -- 1 second\n\noutside -- 2 seconds\n\noutside -- 4 seconds\n\nfun with timers! -- 5 seconds\n\noutside -- 6 seconds\n\noutside -- 8 seconds"},{"description":"Creates a timer that has 0.01 second delay, to demonstrate that the \"minimum\" delay of a timer is locked at the tickrate period (1/66 seconds).\n\n(As the example below shows, by setting the delay rate to 1/100 (0.01 seconds), the difference in time between the iterations of the timer should be 0.01 seconds, but instead, it is 0.149 (1/66) seconds).","code":"local tick = {} \nlocal tick_key = 1 \n\nlocal function MinimumTimerDelay()\t\n\tlocal current_time = CurTime() \n\tif tick_key > 1 then \n\t\tprint( \"Timer Iteration #\" .. tick_key - 1 .. \" had a delay of \" .. current_time - tick[tick_key - 1])\n\tend\n\ttick[tick_key] = current_time \n\ttick_key = tick_key + 1\t\nend\n\nlocal function Timer()\n\ttimer.Create(\"Timer Delay\", (1/100), 10, MinimumTimerDelay ) \nend\n\nhook.Add(\"Initialize\", \"Commence Timers\", Timer)","output":"Timer Iteration #1 had a delay of 0.014999389648438\n\nTimer Iteration #2 had a delay of 0.014999389648438\n\nTimer Iteration #3 had a delay of 0.014999389648438\n\nTimer Iteration #4 had a delay of 0.0150146484375\n\nTimer Iteration #5 had a delay of 0.014999389648438\n\nTimer Iteration #6 had a delay of 0.014999389648438\n\nTimer Iteration #7 had a delay of 0.014999389648438\n\nTimer Iteration #8 had a delay of 0.014999389648438\n\nTimer Iteration #9 had a delay of 0.014999389648438"}]},
{"function":{"name":"Check","parent":"timer","type":"libraryfunc","description":{"text":"This function does nothing.","deprecated":""},"realm":"Shared and Menu"}},
{"function":{"name":"Valid","parent":"team","type":"libraryfunc","description":"Returns true if the given team index is valid","realm":"Shared","args":{"arg":{"text":"Index of the team","name":"index","type":"number"}},"rets":{"ret":{"text":"Is valid","name":"","type":"boolean"}}}},
{"function":{"name":"TotalFrags","parent":"team","type":"libraryfunc","description":"Get's the total frags in a team.","realm":"Shared","args":{"arg":{"text":"Entity or number.","name":"Entity or number","type":"Entity"}},"rets":{"ret":{"text":"index","name":"","type":"number"}}},"example":{"description":"Get's the total frags in a team.","code":"print(team.TotalFrags(ply:Team()),team.TotalFrags(1))","output":"1"}},
{"function":{"name":"Adjust","parent":"timer","type":"libraryfunc","description":"Adjusts the timer if the timer with the given identifier exists.","realm":"Shared and Menu","args":{"arg":[{"text":"Identifier of the timer to adjust.","name":"identifier","type":"any"},{"text":"The delay interval in seconds.","name":"delay","type":"number"},{"text":"Repetitions. Use 0 for infinite.","name":"repetitions","type":"number"},{"text":"The new function.","name":"func","type":"function"}]},"rets":{"ret":{"text":"true if succeeded","name":"","type":"boolean"}}}},
{"function":{"name":"TotalDeaths","parent":"team","type":"libraryfunc","description":"Returns the sum of deaths of all players of the team.","realm":"Shared","args":{"arg":{"text":"The team index.","name":"teamIndex","type":"number"}},"rets":{"ret":{"text":"deathCount","name":"","type":"number"}}},"example":{"description":"Get's the total deaths in a team.","code":"print(team.TotalDeaths(ply:Team()),team.TotalDeaths(1))","output":"2"}},
{"function":{"name":"SetUp","parent":"team","type":"libraryfunc","description":"Creates a new team.","realm":"Shared","args":{"arg":[{"text":"The team index.","name":"teamIndex","type":"number"},{"text":"The team name.","name":"teamName","type":"string"},{"text":"The team color. Uses the .","name":"teamColor","type":"table","page":"Color"},{"text":"Whether the team is joinable or not.","name":"isJoinable","type":"boolean","default":"true"}]}},"example":{"description":"Create team 2 with name \"Mingebags\" and color red","code":"team.SetUp(2, \"Mingebags\", Color(255, 0, 0))"}},
{"function":{"name":"SetSpawnPoint","parent":"team","type":"libraryfunc","description":{"text":"Sets valid spawnpoint classes for use by a team.","note":"GM.TeamBased must be set to true for this to work"},"realm":"Shared","args":{"arg":[{"text":"Index of the team","name":"index","type":"number"},{"text":"A spawnpoint classname or table of spawnpoint classnames","name":"classes","type":"any"}]}},"example":{"description":"Allows TEAM_BLUE to spawn at terrorist spawn points","code":"team.SetSpawnPoint( TEAM_BLUE, {\"info_terror\"} )"}},
{"function":{"name":"SetScore","parent":"team","type":"libraryfunc","description":"Sets the score of the given team","realm":"Shared","args":{"arg":[{"text":"Index of the team","name":"index","type":"number"},{"text":"The team's new score","name":"score","type":"number"}]}}},
{"function":{"name":"SetColor","parent":"team","type":"libraryfunc","description":"Sets the team's color.","realm":"Shared","args":{"arg":[{"text":"The team index.","name":"teamIndex","type":"number"},{"text":"The team's new color as a .","name":"color","type":"table","page":"Color"}]}}},
{"function":{"name":"SetClass","parent":"team","type":"libraryfunc","description":{"text":"Sets valid classes for use by a team. Classes can be created using","page":"player_manager.RegisterClass"},"realm":"Shared","args":{"arg":[{"text":"Index of the team","name":"index","type":"number"},{"text":"A class ID or table of class IDs","name":"classes","type":"any"}]}},"example":{"description":"Allows TEAM_RED to access the \"Soldier\" class","code":"team.SetClass( TEAM_RED, {\"Soldier\"} )"}},
{"function":{"name":"NumPlayers","parent":"team","type":"libraryfunc","description":"Returns the amount of players in a team.","file":{"text":"lua/includes/modules/team.lua","line":"129-L133"},"realm":"Shared","args":{"arg":{"text":"The team index.","name":"teamIndex","type":"number"}},"rets":{"ret":{"text":"playerCount","name":"","type":"number"}}},"example":{"description":"Prints the amount of players in a player's team","code":"print(team.NumPlayers(ply:Team()))","output":"The number of players in ply's team."}},
{"function":{"name":"Joinable","parent":"team","type":"libraryfunc","description":{"text":"Returns if a team is joinable or not. This is set in .","page":"team.SetUp"},"realm":"Shared","args":{"arg":{"text":"The index of the team.","name":"index","type":"number"}},"rets":{"ret":{"text":"True if the team is joinable. False otherwise.","name":"","type":"boolean"}}}},
{"function":{"name":"GetSpawnPoints","parent":"team","type":"libraryfunc","description":{"text":"Returns a table of valid spawnpoint entities the team can use. These are set with  .","page":"team.SetSpawnPoint"},"realm":"Shared","args":{"arg":{"text":"Index of the team","name":"index","type":"number"}},"rets":{"ret":{"text":"Valid spawnpoint entities","name":"","type":"table"}}},"example":{"description":"Prints a random spawnpoint entity for TEAM_RED","code":"print(table.Random(team.GetSpawnPoints(TEAM_RED)))","output":"Spawnpoint Entity"}},
{"function":{"name":"GetSpawnPoint","parent":"team","type":"libraryfunc","description":{"text":"Returns a table of valid spawnpoint classes the team can use. These are set with .","page":"team.SetSpawnPoint"},"realm":"Shared","args":{"arg":{"text":"Index of the team","name":"index","type":"number"}},"rets":{"ret":{"text":"Valid spawnpoint classes","name":"","type":"table"}}}},
{"function":{"name":"GetScore","parent":"team","type":"libraryfunc","description":"Returns the score of the team.","realm":"Shared","args":{"arg":{"text":"The team index.","name":"teamIndex","type":"number"}},"rets":{"ret":{"text":"score","name":"","type":"number"}}},"example":{"description":"Get's the teams score, can be a number 1 or 2 depending on how many teams you've set up.","code":"print(team.GetScore(ply:Team()),team.GetScore(1))","output":"1"}},
{"function":{"name":"GetPlayers","parent":"team","type":"libraryfunc","description":"Returns a table with all player of the specified team.","realm":"Shared","args":{"arg":{"text":"The team index.","name":"teamIndex","type":"number"}},"rets":{"ret":{"text":"A table of s that belong to the requested team.","name":"","type":"table","page":"Player"}}},"example":{"description":"Prints all the players in a player's team.","code":"PrintTable(team.GetPlayers(ply:Team()))","output":"List of players."}},
{"function":{"name":"GetName","parent":"team","type":"libraryfunc","description":"Returns the name of the team.","realm":"Shared","args":{"arg":{"text":"The team index.","name":"teamIndex","type":"number"}},"rets":{"ret":{"text":"The team name. If the team is not defined, returns an empty string.","name":"","type":"string"}}},"example":{"description":"Get's the teams string name.","code":"print(team.GetName(Entity(1):Team()))"}},
{"function":{"name":"GetAllTeams","parent":"team","type":"libraryfunc","description":"Returns a table consisting of information on every defined team","realm":"Shared","rets":{"ret":{"text":"Team info","name":"","type":"table"}}},"example":{"description":"Prints all Jobs/Teams on the server. The list in printed from lowest to highest. Information about join able to the player, the score of the team and the colors.","code":"PrintTable( team.GetAllTeams() )","outputfixedwidth":"Fixed width","output":"0:\n\t\tColor:\n\t\t\t\ta\t=\t255\n\t\t\t\tb\t=\t100\n\t\t\t\tg\t=\t255\n\t\t\t\tr\t=\t255\n\t\tJoinable\t=\tfalse\n\t\tName\t=\tJoining/Connecting\n\t\tScore\t=\t0"}},
{"function":{"name":"GetClass","parent":"team","type":"libraryfunc","description":{"text":"Returns the selectable classes for the given team. This can be added to with","page":"team/SetClass"},"realm":"Shared","args":{"arg":{"text":"Index of the team","name":"index","type":"number"}},"rets":{"ret":{"text":"Selectable classes","name":"","type":"table"}}}},
{"function":{"name":"GetColor","parent":"team","type":"libraryfunc","description":"Returns the team's color.","realm":"Shared","args":{"arg":{"text":"The team index.","name":"teamIndex","type":"number"}},"rets":{"ret":{"text":"The team's color as a .","name":"","type":"table","page":"Color"}}}},
{"function":{"name":"BestAutoJoinTeam","parent":"team","type":"libraryfunc","description":"Returns the team index of the team with the least players. Falls back to TEAM_UNASSIGNED","realm":"Shared","rets":{"ret":{"text":"Team index","name":"","type":"number"}}}},
{"function":{"name":"AddScore","parent":"team","type":"libraryfunc","description":"Increases the score of the given team","realm":"Shared","args":{"arg":[{"text":"Index of the team","name":"index","type":"number"},{"text":"Amount to increase the team's score by","name":"increment","type":"number"}]}}},
{"function":{"name":"SortDesc","parent":"table","type":"libraryfunc","description":{"text":"Sorts a table in reverse order from","page":"table.sort"},"realm":"Shared and Menu","file":{"text":"lua/includes/extensions/table.lua","line":"121"},"args":{"arg":{"text":"The table to sort in descending order.","name":"tbl","type":"table"}},"rets":{"ret":{"text":"sorted","name":"","type":"table"}}}},
{"function":{"name":"ToString","parent":"table","type":"libraryfunc","description":"Converts a table into a string","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/table.lua","line":"239"},"args":{"arg":[{"text":"The table to iterate over.","name":"tbl","type":"table"},{"text":"Optional. A name for the table.","name":"displayName","type":"string"},{"text":"Adds new lines and tabs to the string.","name":"niceFormatting","type":"boolean"}]},"rets":{"ret":{"text":"The table formatted as a string.","name":"","type":"string"}}},"example":{"description":"Demonstrates the use of this function.","code":"local Table = { Red = \"Apple\", Green = \"Celery\", Yellow = \"Banana\"}\nlocal String = table.ToString( Table, \"Fruit and Vegetable\", true )\nprint( String )","output":"```\nFruit and Vegetable\t=\t{\n\t\tRed\t=\t\"Apple\",\n\t\tGreen\t=\t\"Celery\",\n\t\tYellow\t=\t\"Banana\",\n}\n```"}},
{"function":{"name":"SortByMember","parent":"table","type":"libraryfunc","description":"Sorts a table by a named member","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/table.lua","line":"362"},"args":{"arg":[{"text":"Table to sort","name":"tab","type":"table"},{"text":"The key used to identify the member","name":"memberKey","type":"any"},{"text":"Whether or not the order should be ascending","name":"ascending","type":"boolean","default":"false"}]}},"example":{"description":"Orders a table by a member and prints it","code":"local tab = {\n    {Name = \"Bill\", Age = 13},\n    {Name = \"Jill\", Age = 14},\n    {Name = \"Phil\", Age = 8}\n}\ntable.SortByMember(tab, \"Age\")\n\nfor k, v in ipairs(tab) do\n    print(v.Name)\nend","output":"Jill\nBill\nPhil"}},
{"function":{"name":"SortByKey","parent":"table","type":"libraryfunc","description":{"text":"Returns a list of keys sorted based on values of those keys.\n\nFor normal sorting see .","page":"table.sort"},"realm":"Shared and Menu","file":{"text":"lua/includes/extensions/table.lua","line":"140"},"args":{"arg":[{"text":"Table to sort. All values of this table must be of same type.","name":"tab","type":"table"},{"text":"Should the order be descending?","name":"descending","type":"boolean","default":"false"}]},"rets":{"ret":{"text":"A table of keys sorted by values from supplied table.","name":"","type":"table"}}},"example":{"description":"Example usage of the function.","code":"local t = {}\nt['h'] = 2 -- Lowest value\nt['a'] = 150 -- Highest value\nt['x'] = 30\n\nPrintTable( table.SortByKey( t ) )\nPrintTable( table.SortByKey( t , true ) )","output":"```\n1 = a\n2 = x\n3 = h\n```\n\n\n\n```\n1 = h\n2 = x\n3 = a\n```"}},
{"function":{"name":"sort","parent":"table","type":"libraryfunc","description":"Sorts a table either ascending or by the given sort function.","realm":"Shared and Menu","args":{"arg":[{"text":"The table to sort.","name":"tbl","type":"table"},{"text":"If specified, the function will be called with 2 parameters each.\nReturn true in this function if you want the first parameter to come first in the sorted array.","name":"sorter","type":"function"}]}},"example":[{"description":"Sorting table by an integer","code":"local tbl = {\n\t{ \"Jeff\", 8 },\n\t{ \"Peter\", 17 },\n\t{ \"Shay\", 11 },\n\t{ \"Janine\", 1 }\n}\n\ntable.sort( tbl, function(a, b) return a[2] > b[2] end )","output":"Table going from highest number to lowest (1: Peter, 2: Shay, 3: Jeff, 4: Janine)"},{"description":"Sorting a player table by a NWInt","code":"local plys = player.GetAll()\n\ntable.sort( plys, function(a, b) return a:GetNWInt(\"Score\") > b:GetNWInt(\"Score\") end )","output":"Player table sorted by score going from highest to lowest"}]},
{"function":{"name":"Sanitise","parent":"table","type":"libraryfunc","description":{"text":"Converts s, s and s to be able to be converted to and from key-values.  does the opposite","page":["Vector","Angle","boolean","table.DeSanitise"]},"realm":"Shared and Menu","file":{"text":"lua/includes/extensions/table.lua","line":"252"},"args":{"arg":{"text":"Table to sanitise","name":"tab","type":"table"}},"rets":{"ret":{"text":"Sanitised table","name":"","type":"table"}}},"example":{"description":"Example of what this function does.","code":"local table1 = { \"A\", \"Golden\", Angle( 1, 2, 3 ), Vector( 1, 2, 3 ) }\n\nPrintTable( table.Sanitise( table1 ) )","outputfixedwidth":"Fixed width","output":"1\t=\tA\n2\t=\tGolden\n3:\n\t\t__type\t=\tAngle\n\t\tp\t=\t1\n\t\tr\t=\t3\n\t\ty\t=\t2\n4:\n\t\t__type\t=\tVector\n\t\tx\t=\t1\n\t\ty\t=\t2\n\t\tz\t=\t3"}},
{"function":{"name":"Reverse","parent":"table","type":"libraryfunc","description":"Returns a reversed copy of a sequential table. Any non-sequential and non-numeric keyvalue pairs will not be copied.","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/table.lua","line":"685"},"args":{"arg":{"text":"Table to reverse.","name":"tbl","type":"table"}},"rets":{"ret":{"text":"A reversed copy of the table.","name":"","type":"table"}}},"example":{"description":"Creates a table and reverses it.","code":"local tbl = { \"One\", \"Two\", \"Three\", four = 4, [5] = \"5\" }\n\nPrintTable(tbl)\nprint(\"\")\nPrintTable(table.Reverse(tbl))","output":"```\n1\t=\tOne\n2\t=\tTwo\n3\t=\tThree\nfour\t=\t4\n5\t=\t5\n\n1\t=\tThree\n2\t=\tTwo\n3\t=\tOne\n```"}},
{"function":{"name":"RemoveByValue","parent":"table","type":"libraryfunc","description":{"text":"Removes the first instance of a given value from the specified table with , then returns the key that the value was found at.","page":"table.remove"},"realm":"Shared and Menu","file":{"text":"lua/includes/extensions/table.lua","line":"667"},"args":{"arg":[{"text":"The table that will be searched.","name":"tbl","type":"table"},{"text":"The value to find within the table.","name":"val","type":"any"}]},"rets":{"ret":{"text":"The key at which the value was found, or false if the value was not found.","name":"","type":"any"}}}},
{"function":{"name":"remove","parent":"table","type":"libraryfunc","description":"Removes a value from a table and shifts any other values down to fill the gap.","realm":"Shared and Menu","args":{"arg":[{"text":"The table to remove the value from.","name":"tbl","type":"table"},{"text":"The index of the value to remove.","name":"index","type":"number","default":"#tbl"}]},"rets":{"ret":{"text":"The value that was removed.","name":"","type":"any"}}},"example":{"description":"Demonstrates the use of this function.","code":"sentence = { \"hello\", \"there\", \"my\", \"name\", \"is\", \"Player1\" }\nprint( table.remove( sentence ) ) -- Using no second arg removes the last value\nprint( table.remove( sentence, 2 ) )\nPrintTable( sentence )","outputfixedwidth":"Fixed width","output":"Player1\nthere\n1 = hello\n2 = my\n3 = name\n4 = is"}},
{"function":{"name":"Random","parent":"table","type":"libraryfunc","description":{"text":"Returns a random value from the supplied table.","note":"This function iterates over the given table **twice**, therefore with sequential tables you should instead use following:\n\n```\nmytable[ math.random( #mytable ) ]\n```"},"realm":"Shared and Menu","file":{"text":"lua/includes/extensions/table.lua","line":"158"},"args":{"arg":{"text":"The table to choose from.","name":"haystack","type":"table"}},"rets":{"ret":[{"text":"A random value from the table.","name":"","type":"any"},{"text":"The key associated with the random value.","name":"","type":"any"}]}},"example":[{"description":"A simple example of this function using two tables.","code":"color = { \"green\", \"red\", \"blue\", \"yellow\" }\nobject = { \"car\", \"house\", \"bike\" }\n\nprint( \"I have a \" .. table.Random( color ) .. \" \" .. table.Random( object ) .. \".\" )","output":"I have a green house."},{"description":"Example of using the alternative with sequential tables for performance reasons.","code":"websites = {\"facepunch.com\", \"google.com\", \"steampowered.com\"}\nprint(\"I think the best website ever is \" .. websites[math.random(1, #websites)] .. \".\")","output":"I think the best website ever is google.com."}]},
{"function":{"name":"Merge","parent":"table","type":"libraryfunc","description":{"text":"Merges the contents of the second table with the content in the first one.\n\nSee , which doesn't override existing values.\n\n\nSee also , which simply adds values of one table to another.","page":["table.Inherit","table.Add"]},"realm":"Shared and Menu","file":{"text":"lua/includes/extensions/table.lua","line":"73"},"args":{"arg":[{"text":"The table you want the source table to merge with","name":"destination","type":"table"},{"text":"The table you want to merge with the destination table","name":"source","type":"table"}]},"rets":{"ret":{"text":"Destination table","name":"","type":"table"}}},"example":{"description":"\"Merges\" the content of the second table with the first one, overwriting any matching key/value pairs in the destination with the source's version and prints the resulting merge.","code":"local destination = {[1] = \"A\", [2] = \"Golden\", [3] = \"Apple\"}\nlocal source = {[1] = \"Two\", [2] = \"Orange\"}\ntable.Merge( destination, source )\nPrintTable( destination )","outputfixedwidth":"Fixed width","output":"1\t=\tTwo\n2\t=\tOrange\n3\t=\tApple"}},
{"function":{"name":"maxn","parent":"table","type":"libraryfunc","description":"Returns the highest numerical key.","realm":"Shared and Menu","args":{"arg":{"text":"The table to search.","name":"tbl","type":"table"}},"rets":{"ret":{"text":"The highest numerical key.","name":"","type":"number"}}},"example":{"description":"Demonstrates how this differs from the **#** operator.","code":"local tbl = {\"One\", \"Two\", [6] = \"Six\", [42] = \"Answer to life, the universe, and everything\"}\n\nPrintTable(tbl)\nprint(\"\\n\" .. #tbl)\nprint(table.maxn(tbl))","output":"```\n1\t=\tOne\n2\t=\tTwo\n6\t=\tSix\n42\t=\tAnswer to life, the universe, and everything\n\n2\n42\n```\n\nWhereas the length operator (**#**) returns the highest `sequential` index, this returns the value of the highest `numeric` index."}},
{"function":{"name":"LowerKeyNames","parent":"table","type":"libraryfunc","description":"Returns a copy of the input table with all string keys converted to be lowercase recursively","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/table.lua","line":"400"},"args":{"arg":{"text":"Table to convert","name":"tbl","type":"table"}},"rets":{"ret":{"text":"New table","name":"","type":"table"}}}},
{"function":{"name":"KeysFromValue","parent":"table","type":"libraryfunc","description":"Returns a table of keys containing the supplied value","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/table.lua","line":"677"},"args":{"arg":[{"text":"Table to search","name":"tab","type":"table"},{"text":"Value to search for","name":"value","type":"any"}]},"rets":{"ret":{"text":"Keys","name":"","type":"table"}}}},
{"function":{"name":"KeyFromValue","parent":"table","type":"libraryfunc","description":"Returns the first key found to be containing the supplied value","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/table.lua","line":"661"},"args":{"arg":[{"text":"Table to search","name":"tab","type":"table"},{"text":"Value to search for","name":"value","type":"any"}]},"rets":{"ret":{"text":"Key","name":"","type":"any"}}}},
{"function":{"name":"IsSequential","parent":"table","type":"libraryfunc","description":"Returns whether or not the table's keys are sequential","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/table.lua","line":"172"},"args":{"arg":{"text":"Table to check","name":"tab","type":"table"}},"rets":{"ret":{"text":"Is sequential","name":"","type":"boolean"}}}},
{"function":{"name":"IsEmpty","parent":"table","type":"libraryfunc","description":"Returns whether or not the given table is empty.\n\nThis works on both sequential and non-sequential tables, and is a lot faster to use than `table.Count(tbl) == 0`.","realm":"Shared and Menu","args":{"arg":{"text":"Table to check","name":"tab","type":"table"}},"rets":{"ret":{"text":"Is empty","name":"","type":"boolean"}}}},
{"function":{"name":"insert","parent":"table","type":"libraryfunc","description":"Inserts a value into a table at the end of the table or at the given position.","realm":"Shared and Menu","args":{"arg":[{"text":"The table to insert the variable into.","name":"tbl","type":"table"},{"text":"The position in the table to insert the variable. If the third argument is nil this argument becomes the value to insert at the end of given table.","name":"position","type":"number"},{"text":"The variable to insert into the table.","name":"value","type":"any"}]},"rets":{"ret":{"text":"The index the object was placed at.","name":"","type":"number"}}},"example":{"description":"Demonstrates the use of this function.","code":"sentence = { \"hello\", \"there\", \"my\", \"name\", \"is\", \"drakehawke\" }\ntable.insert( sentence, \"lol\" )\ntable.insert( sentence, 6, \"not\" )\n\nPrintTable( sentence )","output":"```\n1\t=\thello\n2\t=\tthere\n3\t=\tmy\n4\t=\tname\n5\t=\tis\n6\t=\tnot\n7\t=\tdrakehawke\n8\t=\tlol\n```"}},
{"function":{"name":"Inherit","parent":"table","type":"libraryfunc","description":{"text":"Copies any missing data from base to target, and sets the target's `BaseClass` member to the base table's pointer.\n\nSee , which overrides existing values and doesn't add a BaseClass member.\n\n\nSee also , which simply adds values of one table to another.","page":["table.Merge","table.Add"],"bug":{"text":"Sub-tables aren't inherited. The target's table value will take priority.","pull":"1304"}},"realm":"Shared and Menu","file":{"text":"lua/includes/extensions/table.lua","line":"5"},"args":{"arg":[{"text":"Table to copy data to","name":"target","type":"table"},{"text":"Table to copy data from","name":"base","type":"table"}]},"rets":{"ret":{"text":"Target","name":"","type":"table"}}},"example":{"description":"Example of how this function works.","code":"local table1 = { \"A\", \"Golden\" }\nlocal table2 = { \"Two\", \"Orange\", \"Apple\" }\ntable.Inherit( table1, table2 )\nPrintTable( table1 )","outputfixedwidth":"Fixed width","output":"1\t=\tA\n2\t=\tGolden\n3\t=\tApple\nBaseClass:\n\t\t1\t=\tTwo\n\t\t2\t=\tOrange\n\t\t3\t=\tApple"}},
{"function":{"name":"GetWinningKey","parent":"table","type":"libraryfunc","description":"Returns a key of the supplied table with the highest number value.","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/table.lua","line":"627"},"args":{"arg":{"text":"The table to search in.","name":"inputTable","type":"table"}},"rets":{"ret":{"text":"winningKey","name":"","type":"any"}}},"example":[{"description":"Code that looks up the most favourite fruit from a table where the fruit's name is the key, and it's number value determines how much favourite it is (the higher value, the better).","code":"favouriteFruit = { banana = 4, strawberry = 4, blueberry = 2, apple = 6 }\nprint(table.GetWinningKey(favouriteFruit))","output":"apple"},{"description":"A code that demonstrates a situation where there are two keys with the same value in the supplied table. String keys in the table represent the fruit name, and their number values determine how favourite it is (the higher value, the better).","code":"favouriteFruit = { apple = 1, banana = 7, strawberry = 3, blueberry = 7 }\nprint(table.GetWinningKey(favouriteFruit))","output":"banana"}]},
{"function":{"name":"getn","parent":"table","type":"libraryfunc","description":{"text":"Returns the length of the table.","deprecated":"This function was deprecated in Lua 5.1 and is removed in 5.2. Use the length (#) operator instead."},"realm":"Shared and Menu","args":{"arg":{"text":"The table to check.","name":"tbl","type":"table"}},"rets":{"ret":{"text":"Sequential length.","name":"","type":"number"}}}},
{"function":{"name":"HasValue","parent":"table","type":"libraryfunc","description":{"text":"Checks if a table has a value.","warning":"This function is **very inefficient for large tables** (O(n)) and should probably not be called in things that run each frame. Instead, consider a table structure such as example 2 below.","note":"For optimization, functions that look for a value by sorting the table should never be needed if you work on a table that you built yourself."},"realm":"Shared and Menu","file":{"text":"lua/includes/extensions/table.lua","line":"89-L98"},"args":{"arg":[{"text":"Table to check","name":"tbl","type":"table"},{"text":"Value to search for","name":"value","type":"any"}]},"rets":{"ret":{"text":"Returns true if the table has that value, false otherwise","name":"","type":"boolean"}}},"example":[{"description":"Creates a table with values \"123\" and \"test\" and checks to see it the table holds value \"apple\"","code":"local mytable = {\"123\", \"test\"}\nprint(table.HasValue(mytable, \"apple\"), table.HasValue(mytable, \"test\"))","output":"false\ttrue"},{"description":"Example usage of O(1) associative array structure","code":"local mytable = { [\"123\"] = true, test = true }\nprint(mytable[\"apple\"], mytable[\"test\"])","output":"nil\ttrue"}]},
{"function":{"name":"GetLastValue","parent":"table","type":"libraryfunc","description":{"text":"Returns the last value found in the given table","deprecated":"Instead, index the table with the result of the length (#) operator, ensuring it is not zero. Non-numerically indexed tables are not ordered and do not have a last key."},"realm":"Shared and Menu","file":{"text":"lua/includes/extensions/table.lua","line":"618"},"args":{"arg":{"text":"Table to retrieve value from","name":"tab","type":"table"}},"rets":{"ret":{"text":"Value","name":"","type":"any"}}}},
{"function":{"name":"GetLastKey","parent":"table","type":"libraryfunc","description":{"text":"Returns the last key found in the given table","deprecated":"Instead, use the result of the length (#) operator, ensuring it is not zero. Non-numerically indexed tables are not ordered and do not have a last key."},"realm":"Shared and Menu","file":{"text":"lua/includes/extensions/table.lua","line":"613"},"args":{"arg":{"text":"Table to retrieve key from","name":"tab","type":"table"}},"rets":{"ret":{"text":"Key","name":"","type":"any"}}}},
{"function":{"name":"GetKeys","parent":"table","type":"libraryfunc","description":"Returns all keys of a table.","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/table.lua","line":"706"},"args":{"arg":{"text":"The table to get keys of","name":"tabl","type":"table"}},"rets":{"ret":{"text":"Table of keys","name":"","type":"table"}}},"example":{"description":"Example usage","code":"local tabl = {\none = \"A\",\ntwo = \"B\",\n}\nPrintTable( table.GetKeys( tabl ) )","output":"```\n1\t=\tone\n2\t=\ttwo\n```"}},
{"function":{"name":"GetFirstValue","parent":"table","type":"libraryfunc","description":{"text":"Returns the first value found in the given table","deprecated":"Instead, index the table with a key of 1.\n\nNon-numerically indexed tables are not ordered and do not have a first key."},"realm":"Shared and Menu","file":{"text":"lua/includes/extensions/table.lua","line":"608"},"args":{"arg":{"text":"Table to retrieve value from","name":"tab","type":"table"}},"rets":{"ret":{"text":"Value","name":"","type":"any"}}}},
{"function":{"name":"GetFirstKey","parent":"table","type":"libraryfunc","description":{"text":"Returns the first key found in the given table","deprecated":"Instead, expect the first key to be 1.\n\nNon-numerically indexed tables are not ordered and do not have a first key."},"realm":"Shared and Menu","file":{"text":"lua/includes/extensions/table.lua","line":"603"},"args":{"arg":{"text":"Table to retrieve key from","name":"tab","type":"table"}},"rets":{"ret":{"text":"Key","name":"","type":"any"}}}},
{"function":{"name":"foreach","parent":"table","type":"libraryfunc","description":{"text":"Iterates for each key-value pair in the table, calling the function with the key and value of the pair. If the function returns anything, the loop is broken.\n\nThis is inherited from the original Lua implementation and is deprecated in Lua as of 5.1; see [here](http://lua-users.org/wiki/TableLibraryTutorial). You should use () instead. The GLua interpretation of this is .","deprecated":{"text":"This was deprecated in Lua 5.1 and removed in 5.2. You should use () instead.","page":"Global.pairs"},"page":["Global.pairs","table.ForEach"]},"realm":"Shared and Menu","args":{"arg":[{"text":"The table to iterate over.","name":"tbl","type":"table"},{"text":"The function to run for each key and value.","name":"callback","type":"function"}]}},"example":[{"description":"Demonstrates the use of this function.","code":"local food = { \"Cake\", \"Pies\", Delicious = \"Cookies\", Awesome = \"Pizza\" }\ntable.foreach( food, function( key, value )\n print( tostring(key) ..\" \".. value)\nend)","output":"```\n1 Cake\n2 Pies\nAwesome Pizza\nDelicious Cookies\n```"},{"description":"Demonstrates the breaking effect if the callback returns a value.","code":"local tbl = { \"One\", \"Two\", \"Three\", \"Four\" }\ntable.foreach( tbl, function( key, value )\n   print( key, value )\n   if key == 2 then return true end\nend)","output":"```\n1    One\n2    Two\n```"}]},
{"function":{"name":"ForceInsert","parent":"table","type":"libraryfunc","description":"Inserts a value in to the given table even if the table is non-existent","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/table.lua","line":"369"},"args":{"arg":[{"text":"Table to insert value in to","name":"tab","type":"table","default":"{}"},{"text":"Value to insert","name":"value","type":"any"}]},"rets":{"ret":{"text":"The supplied or created table","name":"","type":"table"}}}},
{"function":{"name":"foreachi","parent":"table","type":"libraryfunc","description":{"text":"Iterates for each numeric index in the table in order.\n\nThis is inherited from the original Lua implementation and is deprecated in Lua as of 5.1; see [here](http://lua-users.org/wiki/TableLibraryTutorial). You should use () instead.","deprecated":{"text":"This was deprecated in Lua 5.1 and removed in 5.2. You should use () instead.","page":"Global.ipairs"},"page":"Global.ipairs"},"realm":"Shared and Menu","args":{"arg":[{"text":"The table to iterate over.","name":"table","type":"table"},{"text":"The function to run for each index.","name":"func","type":"function"}]}}},
{"function":{"name":"FindPrev","parent":"table","type":"libraryfunc","description":{"text":"Returns the value positioned before the supplied value in a table. If it isn't found then the last element in the table is returned","deprecated":"Instead, iterate your table with ipairs, storing the previous value and checking for the target. Non-numerically indexed tables are not ordered."},"realm":"Shared and Menu","file":{"text":"lua/includes/extensions/table.lua","line":"667"},"args":{"arg":[{"text":"Table to search","name":"tbl","type":"table"},{"text":"Value to return element before","name":"value","type":"any"}]},"rets":{"ret":{"text":"Found element","name":"","type":"any"}}},"example":{"description":"Print the previous item the value \"b\" of the table","code":"local tbl = {\"a\", \"b\", \"c\"}\n\nprint(table.FindPrev(tbl, \"b\"))","output":"a in console"}},
{"function":{"name":"Empty","parent":"table","type":"libraryfunc","description":"Removes all values from a table.","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/table.lua","line":"49"},"args":{"arg":{"text":"The table to empty.","name":"tbl","type":"table"}}},"example":{"description":"Demonstrates the use of this function.","code":"local Table = {\"String Value\", \"Another value\", Var = \"Non-integer key\"}\ntable.Empty(Table)\nprint( table.Count(Table) )","output":"0"}},
{"function":{"name":"FindNext","parent":"table","type":"libraryfunc","description":{"text":"Returns the value positioned after the supplied value in a table. If it isn't found then the first element in the table is returned","deprecated":{"text":"Instead, iterate the table using ipairs or increment from the previous index using . Non-numerically indexed tables are not ordered.","page":"Global.next"}},"realm":"Shared and Menu","file":{"text":"lua/includes/extensions/table.lua","line":"655"},"args":{"arg":[{"text":"Table to search","name":"tbl","type":"table"},{"text":"Value to return element after","name":"value","type":"any"}]},"rets":{"ret":{"text":"Found element","name":"","type":"any"}}},"example":{"description":"Print the next element after the \"b\" value of the table","code":"local tbl = {\"a\", \"b\", \"c\"}\n\nprint(table.FindNext(tbl, \"b\"))","output":"c in console"}},
{"function":{"name":"DeSanitise","parent":"table","type":"libraryfunc","description":{"text":"Converts a table that has been sanitised with  back to its original form","page":"table.Sanitise"},"realm":"Shared and Menu","file":{"text":"lua/includes/extensions/table.lua","line":"303"},"args":{"arg":{"text":"Table to be de-sanitised","name":"tbl","type":"table"}},"rets":{"ret":{"text":"De-sanitised table","name":"","type":"table"}}}},
{"function":{"name":"Count","parent":"table","type":"libraryfunc","description":{"text":"Counts the amount of keys in a table. This should only be used when a table is not numerically and sequentially indexed. For those tables, consider the length (**#**) operator.\n\nIf you only want to test if the table is empty or not, use  instead as it is a lot faster.","page":"table.IsEmpty"},"realm":"Shared and Menu","file":{"text":"lua/includes/extensions/table.lua","line":"159"},"args":{"arg":{"text":"The table to count the keys of.","name":"tbl","type":"table"}},"rets":{"ret":{"text":"The number of keyvalue pairs. This includes non-numeric and non-sequential keys, unlike the length (**#**) operator.","name":"","type":"number"}}},"example":[{"description":"There are 4 keys in this table. So it will output \"4\"","code":"local Table = { A = \"1\", B = \"2\", C = \"3\", D = \"4\" }\n\nprint( table.Count( Table ) )","outputfixedwidth":"Fixed width","output":"4"},{"description":"Difference between the length (**#**) operator and this function.\n\nThe length (**#**) operator is generally considered faster, but has limitations.","code":"local Table = { A = \"1\", B = \"2\", C = \"3\", D = \"4\" }\n\nprint( table.Count( Table ), #Table ) -- #Table will return 0 because the table contains no numeric keys\n\nlocal Table2 = { \"test1\", \"test2\", \"test3\" } -- 1 = \"test1\", 2 = \"test2\"\n\nprint( table.Count( Table2 ), #Table2 ) -- Both will be 3\n\nTable2[ 5 ] = \"test5\" -- Insert a new value at index 5, so index 4 does not exist\n\n-- table.Count here will return correct value, #Table2 will return 3 because\n-- the new value is non sequential ( there is nothing at index 4 )\nprint( table.Count( Table2 ), #Table2 )","outputfixedwidth":"Fixed width","output":"4 0\n3 3\n4 3"}]},
{"function":{"name":"CopyFromTo","parent":"table","type":"libraryfunc","description":"Empties the target table, and merges all values from the source table into it.","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/table.lua","line":"61"},"args":{"arg":[{"text":"The table to copy from.","name":"source","type":"table"},{"text":"The table to write to.","name":"target","type":"table"}]}},"example":{"description":"Demonstrates the use of this function.","code":"local Test1 = {A = \"String keys\", B = \"Table 1\"}\nlocal Test2 = {\"Numeric keys\", \"Table 2\"}\ntable.CopyFromTo( Test2, Test1 )\nPrintTable( Test1 )","output":"1 = Numeric keys\n\n\n2 = Table 2"}},
{"function":{"name":"Copy","parent":"table","type":"libraryfunc","description":{"text":"Creates a deep copy and returns that copy.","warning":{"text":"This function does NOT copy userdata, such as s and s!","page":["Vector","Angle"]}},"realm":"Shared and Menu","file":{"text":"lua/includes/extensions/table.lua","line":"24"},"args":{"arg":{"text":"The table to be copied.","name":"originalTable","type":"table"}},"rets":{"ret":{"text":"A deep copy of the original table","name":"","type":"table"}}},"example":{"description":"Creates a deep copy of table A","code":"B = table.Copy(A)"}},
{"function":{"name":"concat","parent":"table","type":"libraryfunc","description":"Concatenates the contents of a table to a string.","realm":"Shared and Menu","args":{"arg":[{"text":"The table to concatenate.","name":"tbl","type":"table"},{"text":"A seperator to insert between strings","name":"concatenator","type":"string","default":""},{"text":"The key to start at","name":"startPos","type":"number","default":"1"},{"text":"The key to end at","name":"endPos","type":"number","default":"#tbl"}]},"rets":{"ret":{"text":"Concatenated values","name":"","type":"string"}}},"example":{"description":"Demonstrates the use of this function.","code":"local Table = { \"A\", \"simple\", \"table.concat\", \"test\" }\nprint( table.concat( Table ) )\nprint( table.concat( Table, \" \" ) )\nprint( table.concat( Table, \" \", 3, 4 ) )","output":"```\nAsimpletable.concattest\nA simple table.concat test\ntable.concat test\n```"}},
{"function":{"name":"CollapseKeyValue","parent":"table","type":"libraryfunc","description":"Collapses a table with keyvalue structure","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/table.lua","line":"430"},"args":{"arg":{"text":"Input table","name":"input","type":"table"}},"rets":{"ret":{"text":"Output table","name":"","type":"table"}}},"example":{"description":"Example usage","code":"local output = table.CollapseKeyValue( {\n\t{ Key = \"mykey1\", Value = \"myvalue1\" },\n\t{ Key = 123, Value = 1345 },\n\t{ Key = 1345, Value = \"myvalue1\" },\n} )","output":"```\nlocal output = {\n\t[ \"mykey1\" ] = \"myvalue1\",\n\t[ 123 ] = 1345,\n\t[ 1345 ] = \"myvalue1\",\n}\n```"}},
{"function":{"name":"Add","parent":"table","type":"libraryfunc","description":{"text":"Adds the contents from one table into another. The target table will be modified.\n\nSee also  and .","page":["table.Inherit","table.Merge"]},"realm":"Shared and Menu","file":{"text":"lua/includes/extensions/table.lua","line":"104"},"args":{"arg":[{"text":"The table to insert the new values into.","name":"target","type":"table"},{"text":"The table to retrieve the values from.","name":"source","type":"table"}]},"rets":{"ret":{"text":"The target table.","name":"","type":"table"}}},"example":{"description":"Demonstrates the use of this function. Note that duplicate values will be added.","code":"local Test1 = {\"One\",\"Two\",\"Three\", \"Four\"}\nlocal Test2 = {\"Four\", \"Five\", \"Six\"}\ntable.Add( Test1, Test2 )\nprint( table.concat(Test1, \" \") )","output":"One Two Three Four Four Five Six"}},
{"function":{"name":"ClearKeys","parent":"table","type":"libraryfunc","description":"Changes all keys to sequential integers. This creates a new table object and does not affect the original.","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/table.lua","line":"454"},"args":{"arg":[{"text":"The original table to modify.","name":"table","type":"table"},{"text":"Save the keys within each member table. This will insert a new field `__key` into each value, and should not be used if the table contains non-table values.","name":"saveKeys","type":"boolean","default":"false"}]},"rets":{"ret":{"text":"Table with integer keys.","name":"","type":"table"}}},"example":[{"description":"Changes all the table's keys to integer values","code":"local Table = {One = \"A\", Two = \"B\", Three = \"C\"}\nlocal Table2 = table.ClearKeys(Table)\nPrintTable(Table2)","output":"1 = A\n\n\n2 = C\n\n\n3 = B"},{"description":"Clears a table of its keys, and preserves the old key names within each member.","code":"local tbl = {\n\tFirstMember = { Name = \"John Smith\", Age  = 25 },\n\tSecondMember = { Name = \"Jane Doe\", Age = 42 },\n\tThirdMember = { Name = \"Joe Bloggs\", Age = 39 }\n}\nprint( \"===== Before =====\" )\nPrintTable( tbl )\nlocal tbl2 = table.ClearKeys( tbl, true )\nprint( \"===== After =====\" )\nPrintTable( tbl2 )","output":"```\n===== Before =====\nFirstMember:\n\t\tName\t=\tJohn Smith\n\t\tAge\t=\t25\nSecondMember:\n\t\tName\t=\tJane Doe\n\t\tAge\t=\t42\nThirdMember:\n\t\tName\t=\tJoe Bloggs\n\t\tAge\t=\t39\n===== After =====\n1:\n\t\tAge\t=\t25\n\t\tName\t=\tJohn Smith\n\t\t__key\t=\tFirstMember\n2:\n\t\tAge\t=\t39\n\t\tName\t=\tJoe Bloggs\n\t\t__key\t=\tThirdMember\n3:\n\t\tAge\t=\t42\n\t\tName\t=\tJane Doe\n\t\t__key\t=\tSecondMember\n```"}]},
{"function":{"name":"UpTime","parent":"system","type":"libraryfunc","description":{"text":"Returns the amount of seconds since the Steam user last moved their mouse.\n\nThis is a direct binding to ISteamUtils->GetSecondsSinceComputerActive, and is most likely related to Steam's automatic \"Away\" online status.","note":"This function does not work on Dedicated Servers and will instead return no value."},"realm":"Shared and Menu","rets":{"ret":{"text":"The amount of seconds since the Steam user last moved their mouse.","name":"","type":"number"}}}},
{"function":{"name":"SteamTime","parent":"system","type":"libraryfunc","description":{"text":"Returns the synchronized Steam time. This is the number of seconds since the [Unix epoch](http://en.wikipedia.org/wiki/Unix_time).","note":"This function does not work on Dedicated Servers and will instead return no value."},"realm":"Shared and Menu","rets":{"ret":{"text":"Current Steam-synchronized Unix time.","name":"","type":"number"}}}},
{"function":{"name":"IsWindows","parent":"system","type":"libraryfunc","description":"Returns whether the current OS is Windows.","realm":"Shared and Menu","rets":{"ret":{"text":"Whether the system the game runs on is Windows or not.","name":"","type":"boolean"}}}},
{"function":{"name":"IsWindowed","parent":"system","type":"libraryfunc","description":{"text":"Returns whether the game is being run in a window or in fullscreen (you can change this by opening the menu, clicking 'Options', then clicking the 'Video' tab, and changing the Display Mode using the dropdown menu):","image":{"src":"DisplayModeDropdown.jpeg"}},"realm":"Client and Menu","info":"Returns true if the game is currently running windowed, false if it is fullscreen.","rets":{"ret":{"text":"Is the game running in a window?","name":"","type":"boolean"}}},"example":{"description":"If the game is windowed, then the game window will flash","code":"if system.IsWindowed() then\n\tsystem.FlashWindow()\nend"}},
{"function":{"name":"IsOSX","parent":"system","type":"libraryfunc","description":"Returns whether the current OS is OSX.","realm":"Shared and Menu","rets":{"ret":{"text":"Whether or not the game is running on OSX.","name":"","type":"boolean"}}}},
{"function":{"name":"IsLinux","parent":"system","type":"libraryfunc","description":"Returns whether the current OS is Linux.","realm":"Shared and Menu","rets":{"ret":{"text":"Whether or not the game is running on Linux.","name":"","type":"boolean"}}}},
{"function":{"name":"HasFocus","parent":"system","type":"libraryfunc","description":{"text":"Returns whether or not the game window has focus.\n\nReturns true 100% of the time on OS X.","note":"This function does not work on dedicated servers and will instead return no value.","bug":{"text":"This will return true when minimized in windowed-mode.","issue":"2424"}},"realm":"Shared and Menu","rets":{"ret":{"text":"Whether or not the game window has focus.","name":"","type":"boolean"}}}},
{"function":{"name":"FlashWindow","parent":"system","type":"libraryfunc","description":"Flashes the window, turning the border to white briefly","realm":"Client and Menu"},"warning":"Currently works only on Windows."},
{"function":{"name":"GetCountry","parent":"system","type":"libraryfunc","description":{"text":"Returns the country code of this computer, determined by the localisation settings of the OS.","note":"This function does not work on Dedicated Servers and will instead return no value."},"realm":"Shared and Menu","rets":{"ret":{"text":"Two-letter country code, using [ISO 3166-1](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) standard.","name":"","type":"string"}}}},
{"function":{"name":"BatteryPower","parent":"system","type":"libraryfunc","description":"Returns the current battery power.","realm":"Shared and Menu","rets":{"ret":{"text":"0-100 if on battery power. \n\nIf plugged in, the value will be 255 regardless of charging state.","name":"","type":"number"}}}},
{"function":{"name":"AppTime","parent":"system","type":"libraryfunc","description":{"text":"Returns the total uptime of the current application as reported by Steam.\n\nThis will return a similar value to .","page":"Global.SysTime","note":"This function does not work on Dedicated Servers and will instead return no value."},"realm":"Shared and Menu","rets":{"ret":{"text":"Seconds of game uptime as an integer.","name":"","type":"number"}}}},
{"function":{"name":"SetTextPos","parent":"surface","type":"libraryfunc","description":"Set the top-left position to draw any future text at.","realm":"Client and Menu","args":{"arg":[{"text":"The X integer co-ordinate.","name":"x","type":"number"},{"text":"The Y integer co-ordinate.","name":"y","type":"number"}]}},"example":{"description":"Draws 'Hello World' on the screen, around top-left of the screen.","code":"hook.Add( \"HUDPaint\", \"HUDPaint_DrawABox\", function()\n\tsurface.SetDrawColor( 0, 0, 0, 128 ) -- Set color for background\n\tsurface.DrawRect( 100, 100, 128, 20 ) -- Draw background\n\n\tsurface.SetTextColor( 255, 255, 255 ) -- Set text color\n\tsurface.SetTextPos( 136, 104 ) -- Set text position, top left corner\n\tsurface.SetFont( \"Default\" ) -- Set the font\n\tsurface.DrawText( \"Hello World\" ) -- Draw the text\nend )"}},
{"function":{"name":"SetTexture","parent":"surface","type":"libraryfunc","description":{"text":"Sets the texture to be used in all upcoming draw operations using the surface library.\n\nSee also  for an  alternative.","page":["surface.SetMaterial","IMaterial"]},"realm":"Client and Menu","args":{"arg":{"text":"The ID of the texture to draw with returned by .","name":"textureID","type":"number","page":"surface.GetTextureID"}}}},
{"function":{"name":"SetTextColor","parent":"surface","type":"libraryfunc","description":{"text":"Set the color of any future text to be drawn, can be set by either using r, g, b, a as separate values or by a . Using a color structure is not recommended to be created procedurally.","page":"Color"},"realm":"Client and Menu","args":{"arg":[{"text":"The red value of color, or a .","name":"r","type":"number","page":"Color"},{"text":"The green value of color","name":"g","type":"number"},{"text":"The blue value of color","name":"b","type":"number"},{"text":"The alpha value of color","name":"a","type":"number","default":"255"}]}},"example":{"description":"Draws 'Hello World', in white, near the top left of the screen.","code":"hook.Add( \"HUDPaint\", \"HUDPaint_DrawABox\", function()\n\tsurface.SetDrawColor( 0, 0, 0, 128 ) -- Set color for background\n\tsurface.DrawRect( 100, 100, 128, 20 ) -- Draw background\n\n\tsurface.SetTextColor( 255, 255, 255 ) -- Set text color\n\tsurface.SetTextPos( 136, 104 ) -- Set text position, top left corner\n\tsurface.SetFont( \"Default\" ) -- Set the font\n\tsurface.DrawText( \"Hello World\" ) -- Draw the text\nend )"}},
{"function":{"name":"SetMaterial","parent":"surface","type":"libraryfunc","description":{"text":"Sets the material to be used in all upcoming draw operations using the surface library.\n\nNot to be confused with .\n\nSee also .","page":["render.SetMaterial","surface.SetTexture"],"warning":{"text":"function calls are expensive to be done inside this function or inside rendering context, you should be caching the results of  calls","page":["Global.Material","Global.Material"]}},"realm":"Client and Menu","args":{"arg":{"text":"The material to be used.","name":"material","type":"IMaterial"}}}},
{"function":{"name":"SetFont","parent":"surface","type":"libraryfunc","description":{"text":"Set the current font to be used for text operations later.\n\nThe fonts must first be created with  or be one of the .","page":["surface.CreateFont","Default Fonts"]},"realm":"Client and Menu","args":{"arg":{"text":"The name of the font to use.","name":"fontName","type":"string"}}},"example":{"description":"Draws 'Hello World' on the screen, with the 'Default' font.","code":"hook.Add( \"HUDPaint\", \"HUDPaint_DrawABox\", function()\n\tsurface.SetDrawColor( 0, 0, 0, 128 ) -- Set color for background\n\tsurface.DrawRect( 100, 100, 128, 20 ) -- Draw background\n\n\tsurface.SetTextColor( 255, 255, 255 ) -- Set text color\n\tsurface.SetTextPos( 136, 104 ) -- Set text position, top left corner\n\tsurface.SetFont( \"Default\" ) -- Set the font\n\tsurface.DrawText( \"Hello World\" ) -- Draw the text\nend )"}},
{"function":{"name":"SetAlphaMultiplier","parent":"surface","type":"libraryfunc","description":"Sets the alpha multiplier that will influence all upcoming drawing operations.","realm":"Client and Menu","args":{"arg":{"text":"The multiplier ranging from 0 to 1.","name":"multiplier","type":"number"}}}},
{"function":{"name":"SetDrawColor","parent":"surface","type":"libraryfunc","description":{"text":"Set the color of any future shapes to be drawn, can be set by either using r, g, b, a as separate values or by a . Using a color structure is not recommended to be created procedurally.","page":"Color"},"realm":"Client and Menu","args":{"arg":[{"text":"The red value of color, or a .","name":"r","type":"number","page":"Color"},{"text":"The green value of color. Unused if a  was given.","name":"g","type":"number","page":"Color"},{"text":"The blue value of color. Unused if a  was given.","name":"b","type":"number","page":"Color"},{"text":"The alpha value of color. Unused if a  was given.","name":"a","type":"number","default":"255","page":"Color"}]}},"example":{"description":"Draws a 512x512 textured rectangle with the wireframe material","code":"local ourMat = Material( \"models/wireframe\" ) -- Calling Material() every frame is quite expensive\n\nhook.Add( \"HUDPaint\", \"example_hook\", function()\n\tsurface.SetDrawColor( 255, 0, 0, 255 ) -- Set the color to red\n\tsurface.SetMaterial( ourMat ) -- If you use Material, cache it!\n\tsurface.DrawTexturedRect( 0, 0, 512, 512 )\nend )"}},
{"function":{"name":"ScreenWidth","parent":"surface","type":"libraryfunc","description":{"text":"Returns the width of the current client's screen.","deprecated":{"text":"You should use  instead.","page":"Global.ScrW"}},"realm":"Client and Menu","rets":{"ret":{"text":"screenWidth","name":"","type":"number"}}},"example":{"description":"Prints out the current width of the screen.","code":"MsgN(\"Screen width: \" .. surface.ScreenWidth())","output":"Screen width: 1920"}},
{"function":{"name":"PlaySound","parent":"surface","type":"libraryfunc","description":"Play a sound file directly on the client (such as UI sounds, etc).","realm":"Client and Menu","args":{"arg":{"text":"The path to the sound file, which must be relative to the sound/ folder.","name":"soundfile","type":"string"}}},"example":{"description":"Plays a sound with a given name. The game will look for the file in following places in that order:\n* garrysmod/addons/myaddon/sound/mysound.wav\n* garrysmod/gamemodes/mygamemode/content/sound/mysound.wav\n* garrysmod/sound/mysound.wav","code":"surface.PlaySound( \"mysound.wav\" )"}},
{"function":{"name":"ScreenHeight","parent":"surface","type":"libraryfunc","description":{"text":"Returns the height of the current client's screen.","deprecated":{"text":"You should use  instead.","page":"Global.ScrH"}},"realm":"Client and Menu","rets":{"ret":{"text":"screenHeight","name":"","type":"number"}}},"example":{"description":"Prints out the current height of the screen.","code":"MsgN(\"Screen height: \" .. surface.ScreenHeight())","output":"Screen height: 1080"}},
{"function":{"name":"GetTextureSize","parent":"surface","type":"libraryfunc","description":"Returns the size of the texture with the associated texture ID.","realm":"Client and Menu","args":{"arg":{"text":"The texture ID, returned by .","name":"textureID","type":"number","page":"surface.GetTextureID"}},"rets":{"ret":[{"text":"The texture width.","name":"","type":"number"},{"text":"The texture height.","name":"","type":"number"}]}}},
{"function":{"name":"GetTextureSize","parent":"surface","type":"libraryfunc","description":"Returns the size of the texture with the associated texture ID.","realm":"Client and Menu","args":{"arg":{"text":"The texture ID, returned by .","name":"textureID","type":"number","page":"surface.GetTextureID"}},"rets":{"ret":[{"text":"The texture width.","name":"","type":"number"},{"text":"The texture height.","name":"","type":"number"}]}}},
{"function":{"name":"GetTextColor","parent":"surface","type":"libraryfunc","description":{"text":"Returns the current color affecting text draw operations.","bug":{"text":"The returned color will not have the color metatable.","issue":"2407"}},"realm":"Client and Menu","rets":{"ret":{"text":"The color that text drawing operations will use as a .","name":"","type":"table","page":"Color"}}}},
{"function":{"name":"GetTextSize","parent":"surface","type":"libraryfunc","description":{"text":"Returns the width and height (in pixels) of the given text, but only if the font has been set with .","page":"surface.SetFont"},"realm":"Client and Menu","args":{"arg":{"text":"The string to check the size of.","name":"text","type":"string"}},"rets":{"ret":[{"text":"Width of the provided text","name":"","type":"number"},{"text":"Height of the provided text","name":"","type":"number"}]}},"example":[{"description":"Prints out the size of \"Hello World\" in the Trebuchet24 font.","code":"surface.SetFont(\"Trebuchet24\")\n\nlocal message = \"Hello World\"\nlocal width, height = surface.GetTextSize(message)\n\nprint(\"Text width: \" .. width .. \", text height: \" .. height)","output":"Text width: 100, text height: 24"},{"description":"Get text height very quickly. No tables or spare variables used.","code":"local message = \"Hello World\"\n\nsurface.SetFont(\"Trebuchet24\")\nlocal height = select(2, surface.GetTextSize(message))\n\nprint(height)","output":"24"}]},
{"function":{"name":"GetHUDTexture","parent":"surface","type":"libraryfunc","description":"Gets the [HUD icon](https://github.com/Facepunch/garrysmod/blob/master/garrysmod/scripts/hud_textures.txt) TextureID with the specified name.","realm":"Client","args":{"arg":{"text":"The name of the texture.","name":"name","type":"string"}},"rets":{"ret":{"name":"TextureID","type":"number"}}}},
{"function":{"name":"GetDrawColor","parent":"surface","type":"libraryfunc","description":{"text":"Returns the current color affecting draw operations.","bug":{"text":"The returned color will not have the color metatable.","issue":"2407"}},"realm":"Client and Menu","rets":{"ret":{"text":"The color that drawing operations will use as a .","name":"","type":"table","page":"Color"}}}},
{"function":{"name":"GetAlphaMultiplier","parent":"surface","type":"libraryfunc","description":"Returns the current alpha multiplier affecting drawing operations.","realm":"Client and Menu","rets":{"ret":{"text":"The multiplier ranging from 0 to 1.","name":"","type":"number"}}}},
{"function":{"name":"DrawTexturedRectUV","parent":"surface","type":"libraryfunc","description":{"text":"Draws a textured rectangle with a repeated or partial texture.\n\nu and v refer to texture coordinates.\n* (u, v) = (0, 0) is the top left\n* (u, v) = (1, 0) is the top right\n* (u, v) = (1, 1) is the bottom right\n* (u, v) = (0, 1) is the bottom left\n\nUsing a start point of (1, 0) and an end point to (0, 1), you can draw an image flipped horizontally, same goes with other directions. Going above 1 will tile the texture. Negative values are allowed as well.\n\nHere's a helper image:","upload":{"src":"70c/8d7bba248dc08bd.png","size":"183359","name":"image.png"},"note":[{"text":"If you are using a .png image, you need supply the \"noclamp\" flag as second parameter for  if you intend to use tiling.","page":"Global.Material"},{"text":"If you find that surface.DrawTexturedRectUV is getting your texture coordinates (u0, v0), (u1, v1) wrong and you're rendering with a material created with , try adjusting them with the following code:\n\n```\nlocal du = 0.5 / 32 -- half pixel anticorrection\nlocal dv = 0.5 / 32 -- half pixel anticorrection\nlocal u0, v0 = (u0 - du) / (1 - 2 * du), (v0 - dv) / (1 - 2 * dv)\nlocal u1, v1 = (u1 - du) / (1 - 2 * du), (v1 - dv) / (1 - 2 * dv)\n```\n\n\n**Explanation:**\nsurface.DrawTexturedRectUV tries to correct the texture coordinates by half a pixel (something to do with sampling) and computes the correction using IMaterial::GetMappingWidth()/GetMappingHeight(). If the material was created without a $basetexture, then GetMappingWidth()/GetMappingHeight() uses the width and height of the error material (which is 32x32).","page":"Global.CreateMaterial"}],"rendercontext":{"hook":"false","type":"2D"},"bug":{"text":"The UV offsets might require (sub-)pixel correction for accurate tiling results.","issue":"3173"}},"realm":"Client and Menu","args":{"arg":[{"text":"The X integer coordinate.","name":"x","type":"number"},{"text":"The Y integer coordinate.","name":"y","type":"number"},{"text":"The integer width of the rectangle.","name":"width","type":"number"},{"text":"The integer height of the rectangle.","name":"height","type":"number"},{"text":"The U texture mapping of the rectangle origin.","name":"startU","type":"number"},{"text":"The V texture mapping of the rectangle origin.","name":"startV","type":"number"},{"text":"The U texture mapping of the rectangle end.","name":"endU","type":"number"},{"text":"The V texture mapping of the rectangle end.","name":"endV","type":"number"}]}},"example":[{"description":"Demonstrates the function usage.","code":"local mat = Material( \"gui/tool.png\" )\nhook.Add( \"HUDPaint\", \"DrawTexturedRectUV_example1\", function()\n\tsurface.SetDrawColor( color_white )\n\tsurface.SetMaterial( mat )\n\n\tsurface.DrawTexturedRect( 25, 25, 100, 100 )\n\tsurface.DrawTexturedRectUV( 25, 130, 100, 100, 0, 0, 1, 1 ) -- Exactly same as above line\n\n\t-- Draws right half of the texture\n\t-- Note that we also change the width of the rectangle to avoid stetcing of the texture\n\t-- This is for demonstration purposes, you can do whatever it is you need\n\tsurface.DrawTexturedRectUV( 130, 130, 50, 100, 0.5, 0, 1, 1 )\nend )"},{"description":"Paints repeated texture over a panel","code":"function PANEL:Paint( w, h )\n\t-- Size of your texture, texW - width, texH - height\n\tlocal texW = 16\n\tlocal texH = 16\n\n\tsurface.SetMaterial( Material( \"icon16/box.png\", \"noclamp\" ) )\n\tsurface.SetDrawColor( color_white )\n\tsurface.DrawTexturedRectUV( 0, 0, w, h, 0, 0, w / texW, h / texH )\nend"}]},
{"function":{"name":"DrawTexturedRect","parent":"surface","type":"libraryfunc","description":{"text":"Draw a textured rectangle with the given position and dimensions on the screen, using the current active texture set with . It is also affected by .\n\nSee also  and .\n\nSee also .","page":["surface.SetMaterial","surface.SetDrawColor","render.SetMaterial","render.DrawScreenQuadEx","surface.DrawTexturedRectUV"],"br":"","rendercontext":{"hook":"false","type":"2D"}},"realm":"Client and Menu","args":{"arg":[{"text":"The X integer co-ordinate.","name":"x","type":"number"},{"text":"The Y integer co-ordinate.","name":"y","type":"number"},{"text":"The integer width of the rectangle.","name":"width","type":"number"},{"text":"The integer height of the rectangle.","name":"height","type":"number"}]}},"example":{"description":"Draws a 512x512 textured rectangle with the wireframe texture.","code":"local ourMat = Material( \"models/wireframe\" ) -- Calling Material() every frame is quite expensive\n\nhook.Add( \"HUDPaint\", \"example_hook\", function()\n\tsurface.SetDrawColor( 255, 255, 255, 255 )\n\tsurface.SetMaterial( ourMat  ) -- If you use Material, cache it!\n\tsurface.DrawTexturedRect( 0, 0, 512, 512 )\nend )"}},
{"function":{"name":"DrawTexturedRectRotated","parent":"surface","type":"libraryfunc","description":{"text":"Draw a textured rotated rectangle with the given position and dimensions and angle on the screen, using the current active texture.","rendercontext":{"hook":"false","type":"2D"}},"realm":"Client and Menu","args":{"arg":[{"text":"The X integer co-ordinate, representing the center of the rectangle.","name":"x","type":"number"},{"text":"The Y integer co-ordinate, representing the center of the rectangle.","name":"y","type":"number"},{"text":"The integer width of the rectangle.","name":"width","type":"number"},{"text":"The integer height of the rectangle.","name":"height","type":"number"},{"text":"The rotation of the rectangle, in degrees.","name":"rotation","type":"number"}]}},"example":[{"description":"A function that allows you to override the origin of rotation.\n\nx0 and y0 are relative to the center of the rectangle.","code":"function surface.DrawTexturedRectRotatedPoint( x, y, w, h, rot, x0, y0 )\n\t\n\tlocal c = math.cos( math.rad( rot ) )\n\tlocal s = math.sin( math.rad( rot ) )\n\t\n\tlocal newx = y0 * s - x0 * c\n\tlocal newy = y0 * c + x0 * s\n\t\n\tsurface.DrawTexturedRectRotated( x + newx, y + newy, w, h, rot )\n\t\nend"},{"description":"Draws a simple red forever rotating box.","code":"function draw.RotatedBox( x, y, w, h, ang, color )\n\tdraw.NoTexture()\n\tsurface.SetDrawColor( color or color_white )\n\tsurface.DrawTexturedRectRotated( x, y, w, h, ang )\nend\n\nhook.Add( \"HUDPaint\", \"my_rotated_box\", function()\n\tdraw.RotatedBox( 100, 100, 100, 100, CurTime() % 360, Color( 255, 0, 0) )\nend )"}]},
{"function":{"name":"DrawText","parent":"surface","type":"libraryfunc","description":{"text":"Draw the specified text on the screen, using the previously set position, font and color.","note":"This function does not handle newlines properly","rendercontext":{"hook":"false","type":"2D"}},"realm":"Client and Menu","args":{"arg":{"text":"The text to be rendered.","name":"text","type":"string"}}},"example":{"description":"Draws 'Hello World' on the screen. All functions in this example must be called for the draw to work flawlessly.","code":"hook.Add( \"HUDPaint\", \"drawsometext\", function()\n\tsurface.SetFont( \"Default\" )\n\tsurface.SetTextColor( 255, 255, 255 )\n\tsurface.SetTextPos( 128, 128 ) \n\tsurface.DrawText( \"Hello World\" )\nend )"}},
{"function":{"name":"DrawRect","parent":"surface","type":"libraryfunc","description":{"text":"Draws a solid rectangle on the screen.","rendercontext":{"hook":"false","type":"2D"}},"realm":"Client and Menu","args":{"arg":[{"text":"The X integer co-ordinate.","name":"x","type":"number"},{"text":"The Y integer co-ordinate.","name":"y","type":"number"},{"text":"The integer width of the rectangle.","name":"width","type":"number"},{"text":"The integer height of the rectangle.","name":"height","type":"number"}]}},"example":{"description":"Draws a white 100 by 100 rectangle, 25 pixels from the top left of the screen.","code":"hook.Add(\"HUDPaint\", \"MyRect\", function()\n    surface.SetDrawColor(255,255,255,255)\n    surface.DrawRect(25, 25, 100, 100)\nend)","output":{"image":{"src":"surface_drawrect.png"}}}},
{"function":{"name":"DrawPoly","parent":"surface","type":"libraryfunc","description":{"text":"Draws a textured polygon (secretly a triangle fan) with a maximum of 256 vertices.\nOnly works properly with convex polygons. You may try to render concave polygons, but there is no guarantee that things wont get messed up.\n\nUnlike most surface library functions, non-integer coordinates are not rounded.","warning":"You must reset the drawing color and texture before calling the function to ensure consistent results. See examples below.","rendercontext":{"hook":"false","type":"2D"}},"realm":"Client and Menu","args":{"arg":{"text":"A table containing integer vertices. See the .\n\n**The vertices must be in clockwise order.**","name":"vertices","type":"table","page":"Structures/PolygonVertex"}}},"example":[{"description":"Draws a red triangle in the top left corner of the screen.","code":"local triangle = {\n\t{ x = 100, y = 200 },\n\t{ x = 150, y = 100 },\n\t{ x = 200, y = 200 }\n}\n\nhook.Add(\"HUDPaint\", \"PolygonTest\", function()\n\t\n\tsurface.SetDrawColor( 255, 0, 0, 255 )\n\tdraw.NoTexture()\n\tsurface.DrawPoly( triangle )\n\nend )","output":{"image":{"src":"draw_poly.png"}}},{"description":"A helper function to draw a circle using surface.DrawPoly.","code":"function draw.Circle( x, y, radius, seg )\n\tlocal cir = {}\n\n\ttable.insert( cir, { x = x, y = y, u = 0.5, v = 0.5 } )\n\tfor i = 0, seg do\n\t\tlocal a = math.rad( ( i / seg ) * -360 )\n\t\ttable.insert( cir, { x = x + math.sin( a ) * radius, y = y + math.cos( a ) * radius, u = math.sin( a ) / 2 + 0.5, v = math.cos( a ) / 2 + 0.5 } )\n\tend\n\n\tlocal a = math.rad( 0 ) -- This is needed for non absolute segment counts\n\ttable.insert( cir, { x = x + math.sin( a ) * radius, y = y + math.cos( a ) * radius, u = math.sin( a ) / 2 + 0.5, v = math.cos( a ) / 2 + 0.5 } )\n\n\tsurface.DrawPoly( cir )\nend\n\nhook.Add(\"HUDPaint\", \"PolygonCircleTest\", function()\n\t\n\tsurface.SetDrawColor( 0, 0, 0, 200)\n\tdraw.NoTexture()\n\tdraw.Circle( ScrW() / 2, ScrH() / 2, 200, math.sin( CurTime() ) * 20 + 25 )\n\n\t--Usage:\n\t--draw.Circle( x, y, radius, segments )\n\nend )"}]},
{"function":{"name":"DrawOutlinedRect","parent":"surface","type":"libraryfunc","description":{"text":"Draws a hollow box with a border width of 1 px.","rendercontext":{"hook":"false","type":"2D"}},"realm":"Client and Menu","args":{"arg":[{"text":"The start x integer coordinate.","name":"x","type":"number"},{"text":"The start y integer coordinate.","name":"y","type":"number"},{"text":"The integer width.","name":"w","type":"number"},{"text":"The integer height.","name":"h","type":"number"}]}},"example":[{"description":"Draws a 100x100 outlined rectangle in top left corner.","code":"surface.SetDrawColor( Color( 255, 255, 255, 255 ) )\nsurface.DrawOutlinedRect( 0, 0, 100, 100 )"},{"description":"A convenience function to draw an outlined rect with given color and thickness","code":"function draw.OutlinedBox( x, y, w, h, thickness, clr )\n\tsurface.SetDrawColor( clr )\n\tfor i=0, thickness - 1 do\n\t\tsurface.DrawOutlinedRect( x + i, y + i, w - i * 2, h - i * 2 )\n\tend\nend\n\n// Usage\nhook.Add( \"HUDPaint\", \"OutlinedRectExample\", function()\n\tdraw.OutlinedBox( 0, 0, 100, 100, 2, Color( 255, 255, 255 ) )\nend )"}]},
{"function":{"name":"DrawLine","parent":"surface","type":"libraryfunc","description":{"text":"Draws a line from one point to another.","rendercontext":{"hook":"false","type":"2D"}},"realm":"Client and Menu","args":{"arg":[{"text":"The start x integer coordinate.","name":"startX","type":"number"},{"text":"The start y integer coordinate.","name":"startY","type":"number"},{"text":"The end x integer coordinate.","name":"endX","type":"number"},{"text":"The end y integer coordinate.","name":"endY","type":"number"}]}},"example":{"description":"This example will draw a pixel perfect circle in the middle of your screen.","code":"hook.Add( \"HUDPaint\", \"Circle\", function()\n\tlocal center = Vector( ScrW() / 2, ScrH() / 2, 0 )\n\tlocal scale = Vector( 100, 100, 0 )\n\tlocal segmentdist = 360 / ( 2 * math.pi * math.max( scale.x, scale.y ) / 2 )\n\tsurface.SetDrawColor( 255, 0, 0, 255 )\n \n\tfor a = 0, 360 - segmentdist, segmentdist do\n\t\tsurface.DrawLine( center.x + math.cos( math.rad( a ) ) * scale.x, center.y - math.sin( math.rad( a ) ) * scale.y, center.x + math.cos( math.rad( a + segmentdist ) ) * scale.x, center.y - math.sin( math.rad( a + segmentdist ) ) * scale.y )\n\tend\nend )"}},
{"function":{"name":"DisableClipping","parent":"surface","type":"libraryfunc","description":{"text":"Enables or disables the clipping used by the VGUI that limits the drawing operations to a panels bounds.\n\nIdentical to . See also .","deprecated":{"text":"Alias of  so use that instead.","br":"","page":"Global.DisableClipping"},"page":["Global.DisableClipping","Panel:NoClipping"]},"realm":"Client and Menu","args":{"arg":{"text":"True to disable, false to enable the clipping","name":"disable","type":"boolean"}}}},
{"function":{"name":"DrawCircle","parent":"surface","type":"libraryfunc","description":{"text":"Draws a hollow circle, made of dots. For a filled circle, see examples for .","page":"surface.DrawPoly","rendercontext":{"hook":"false","type":"2D"}},"realm":"Client and Menu","args":{"arg":[{"text":"The center x integer coordinate.","name":"originX","type":"number"},{"text":"The center y integer coordinate.","name":"originY","type":"number"},{"text":"The radius of the circle.","name":"radius","type":"number"},{"text":"The red value of the color to draw the circle with, or a .","name":"r","type":"number","page":"Color"},{"text":"The green value of the color to draw the circle with. Unused if a  was given.","name":"g","type":"number","page":"Color"},{"text":"The blue value of the color to draw the circle with. Unused if a  was given.","name":"b","type":"number","page":"Color"},{"text":"The alpha value of the color to draw the circle with. Unused if a  was given.","name":"a","type":"number","default":"255","page":"Color"}]}},"example":{"description":"Example usage. Draws an orange circle at position 500, 500 with a varying/animated radius of 50 to 150.","code":"hook.Add( \"HUDPaint\", \"DrawCircleExample\", function()\n\n\tsurface.DrawCircle( 500, 500, 100 + math.sin( CurTime() ) * 50, Color( 255, 120, 0 ) )\n\nend )"}},
{"function":{"name":"CreateFont","parent":"surface","type":"libraryfunc","description":{"text":"Creates a new font.\n\nTo prevent the font from displaying incorrectly when using the \"outline\" setting, set \"antialias\" to false. This will ensure the text properly fills out the entire outline.\n\nBe sure to check the  first! Those fonts can be used without using this function.\n\nSee Also: .","page":[",List of Default FontsDefault_Fonts","Finding the Font Name"],"warning":{"text":"Due to the static nature of fonts, do **NOT** create the font more than once. You should only be creating them once, it is recommended to create them at the top of your script. Do not use this function within !","page":"GM:HUDPaint"}},"realm":"Client and Menu","args":{"arg":[{"text":"The new font name.","name":"fontName","type":"string"},{"text":"The font properties. See the .","name":"fontData","type":"table","page":"Structures/FontData"}]}},"example":{"description":"Creates a font with all the defaults showing (any of the fields could be left out for an equivalent font)","code":"surface.CreateFont( \"TheDefaultSettings\", {\n\tfont = \"Arial\", --  Use the font-name which is shown to you by your operating system Font Viewer, not the file name\n\textended = false,\n\tsize = 13,\n\tweight = 500,\n\tblursize = 0,\n\tscanlines = 0,\n\tantialias = true,\n\tunderline = false,\n\titalic = false,\n\tstrikeout = false,\n\tsymbol = false,\n\trotary = false,\n\tshadow = false,\n\tadditive = false,\n\toutline = false,\n})\n\nhook.Add( \"HUDPaint\", \"HelloThere\", function()\n\tdraw.SimpleText( \"Hello there!\", \"TheDefaultSettings\", ScrW() * 0.5, ScrH() * 0.25, color_white, TEXT_ALIGN_CENTER )\nend )"}},
{"function":{"name":"TrimRight","parent":"string","type":"libraryfunc","description":"Removes trailing spaces/passed character from a string.","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/string.lua","line":"255"},"args":{"arg":[{"text":"String to remove from","name":"str","type":"string"},{"text":"Custom character to remove, default is a space","name":"char","type":"string","default":""}]},"rets":{"ret":{"text":"Trimmed string","name":"","type":"string"}}}},
{"function":{"name":"upper","parent":"string","type":"libraryfunc","description":"Changes any lower-case letters in a string to upper-case letters.","realm":"Shared and Menu","args":{"arg":{"text":"The string to convert.","name":"str","type":"string"}},"rets":{"ret":{"text":"A string representing the value of a string converted to upper-case.","name":"","type":"string"}}},"example":{"description":"Demonstrates the use of this function.","code":"print( string.upper( \"ABCDEFG\" ) )\nprint( string.upper( \"AbCdefG\" ) )\nprint( string.upper( \"abcdefg\" ) )\nprint( string.upper( \"1234567890\" ) )","output":"ABCDEFG\n\nABCDEFG\n\nABCDEFG\n\n1234567890"}},
{"function":{"name":"TrimLeft","parent":"string","type":"libraryfunc","description":"Removes leading spaces/characters from a string.","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/string.lua","line":"265"},"args":{"arg":[{"text":"String to trim","name":"str","type":"string"},{"text":"Custom character to remove","name":"char","type":"string","default":""}]},"rets":{"ret":{"text":"Trimmed string","name":"","type":"string"}}}},
{"function":{"name":"Trim","parent":"string","type":"libraryfunc","description":"Removes leading and trailing matches of a string.","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/string.lua","line":"245"},"args":{"arg":[{"text":"The string to trim.","name":"Inputstring","type":"string"},{"text":"String to match.","name":"Char","type":"string","default":""}]},"rets":{"ret":{"text":"Modified string","name":"","type":"string"}}},"example":{"description":"Demonstrates the use of string.Trim without second argument.","code":"MsgN(string.Trim(\" hi whatsup \"))","output":"\"hi whatsup\""}},
{"function":{"name":"ToTable","parent":"string","type":"libraryfunc","description":{"text":"Splits the string into characters and creates a sequential table of characters.","warning":"As a result of the  encoding, non-ASCII characters will be split into more than one character in the output table. Each character value in the output table will always be 1 byte."},"realm":"Shared and Menu","file":{"text":"lua/includes/extensions/string.lua","line":"7"},"args":{"arg":{"text":"The string you'll turn into a table.","name":"str","type":"string"}},"rets":{"ret":{"text":"A sequential table where each value is a character from the given string","name":"","type":"table"}}},"example":[{"description":"Demonstrates the use of this function.","code":"local mystring = \"text\"\nPrintTable(string.ToTable(mystring))","outputfixedwidth":"Fixed width","output":"1 = t\n\n2 = e\n\n3 = x\n\n4 = t"},{"description":"Demonstrates how this function behaves with non-ASCII characters - in this case, Greek letters.","code":"for k,v in ipairs(string.ToTable(\"abcd αβγδ\")) do\n\tprint(k, bit.tohex(string.byte(v)), v)\nend","outputfixedwidth":"Fixed width","output":"1\t00000061\ta\n2\t00000062\tb\n3\t00000063\tc\n4\t00000064\td\n5\t00000020\t \n6\t000000ce\t?\n7\t000000b1\t?\n8\t000000ce\t?\n9\t000000b2\t?\n10\t000000ce\t?\n11\t000000b3\t?\n12\t000000ce\t?\n13\t000000b4\t?"}]},
{"function":{"name":"ToMinutesSecondsMilliseconds","parent":"string","type":"libraryfunc","description":"Returns given time in \"MM:SS:MS\" format.","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/string.lua","line":"184"},"args":{"arg":{"text":"Time in seconds","name":"time","type":"number"}},"rets":{"ret":{"text":"Formatted time","name":"","type":"string"}}},"example":{"description":"Example of using this function","code":"print( string.ToMinutesSecondsMilliseconds( 61.128 ) )","output":"01:01:13"}},
{"function":{"name":"ToMinutesSeconds","parent":"string","type":"libraryfunc","description":"Returns given time in \"MM:SS\" format.","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/string.lua","line":"185"},"args":{"arg":{"text":"Time in seconds","name":"time","type":"number"}},"rets":{"ret":{"text":"Formatted time","name":"","type":"string"}}},"example":{"description":"Example of using this function","code":"print( string.ToMinutesSeconds( 61 ) )","output":"01:01"}},
{"function":{"name":"ToColor","parent":"string","type":"libraryfunc","description":"Fetches a Color type from a string.","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/string.lua","line":"332"},"args":{"arg":{"text":"The string to convert from.","name":"Inputstring","type":"string"}},"rets":{"ret":{"text":"The output","name":"","type":"table","page":"Color"}}},"example":{"description":"Demonstrates the use of string.ToColor","code":"PrintTable( string.ToColor( \"255 0 255 125\" ) )","outputfixedwidth":"Fixed width","output":"r = 255\ng = 0\nb = 255\na = 125"}},
{"function":{"name":"StripExtension","parent":"string","type":"libraryfunc","description":"Removes the extension of a path.","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/string.lua","line":"129"},"args":{"arg":{"text":"The path to change.","name":"Inputstring","type":"string"}},"rets":{"ret":{"text":"Modifiedstring","name":"","type":"string"}}},"example":{"description":"Demonstrates the use of string.StripExtension","code":"MsgN(string.StripExtension(\"garrysmod/lua/modules/string.lua\"))","output":"\"garrysmod/lua/modules/string\""}},
{"function":{"name":"sub","parent":"string","type":"libraryfunc","description":"Returns a sub-string, starting from the character at position `StartPos` of the string (inclusive), and optionally ending at the character at position `EndPos` of the string (also inclusive). If EndPos is not given, the rest of the string is returned.","realm":"Shared and Menu","args":{"arg":[{"text":"The string you'll take a sub-string out of.","name":"string","type":"string"},{"text":"The position of the first character that will be included in the sub-string.","name":"StartPos","type":"number"},{"text":"The position of the last character to be included in the sub-string. It can be negative to count from the end.","name":"EndPos","type":"number","default":"nil"}]},"rets":{"ret":{"text":"The substring.","name":"","type":"string"}}},"example":{"description":"Demonstrates the use of this function.","code":"local mystring = \"Some random text\"\nprint(string.sub(mystring, 1, 4))","output":"Some"}},
{"function":{"name":"StartWith","parent":"string","type":"libraryfunc","description":"Returns whether or not the first string starts with the second.","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/string.lua","line":"301"},"args":{"arg":[{"text":"String to check.","name":"inputStr","type":"string"},{"text":"String to check with.","name":"start","type":"string"}]},"rets":{"ret":{"text":"Whether the first string starts with the second.","name":"","type":"boolean"}}},"example":{"description":"Demonstrates the use of string.StartWith","output":"true","code":"print(string.StartWith(\"hello there\", \"hell\"))"}},
{"function":{"name":"Split","parent":"string","type":"libraryfunc","description":"Splits the string into a table of strings, separated by the second argument.","realm":"Shared and Menu","args":{"arg":[{"text":"String to split","name":"Inputstring","type":"string"},{"text":"Character(s) to split with.","name":"Separator","type":"string"}]},"rets":{"ret":{"text":"Split table","name":"","type":"table"}}},"example":{"description":"Demonstrates the use of this function.","code":"local mystring = \"This is some text\"\nPrintTable( string.Split( mystring, \" \" ) )","outputfixedwidth":"Fixed width","output":"1 = This\n2 = is\n3 = some\n4 = text"}},
{"function":{"name":"SetChar","parent":"string","type":"libraryfunc","description":"Sets the character at the specific index of the string.","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/string.lua","line":"286"},"args":{"arg":[{"text":"The input string","name":"InputString","type":"string"},{"text":"The character index, 1 is the first from left.","name":"Index","type":"number"},{"text":"String to replace with.","name":"ReplacementChar","type":"string"}]},"rets":{"ret":{"text":"ModifiedString","name":"","type":"string"}}},"example":{"description":"Demonstrates the use of SetChar","output":"\"Apgles\"","code":"local str = \"Apples\"\nMsgN(string.SetChar(str, 3, \"g\"))"}},
{"function":{"name":"Right","parent":"string","type":"libraryfunc","description":"Returns the last n-th characters of the string.","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/string.lua","line":"230"},"args":{"arg":[{"text":"The string to extract from.","name":"str","type":"string"},{"text":"Amount of chars relative to the end (starting from 1).","name":"num","type":"number"}]},"rets":{"ret":{"text":"Returns a string containing a specified number of characters from the right side of a string.","name":"","type":"string"}}},"example":{"description":"Extracts \"mod\" from \"garrys mod\" string.","code":"local text = \"garrys mod\"\nprint( string.Right( text, 3 ) )","output":"mod"}},
{"function":{"name":"reverse","parent":"string","type":"libraryfunc","description":"Reverses a string.","realm":"Shared and Menu","args":{"arg":{"text":"The string to be reversed.","name":"str","type":"string"}},"rets":{"ret":{"text":"reversed string","name":"","type":"string"}}},"example":{"description":"Reverse \"abcdef\".","code":"print( string.reverse( \"abcdef\" ) )","output":"fedcba"}},
{"function":{"name":"Replace","parent":"string","type":"libraryfunc","description":"Replaces all occurrences of the supplied second string.","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/string.lua","line":"234"},"args":{"arg":[{"text":"The string we are seeking to replace an occurrence(s).","name":"str","type":"string"},{"text":"What we are seeking to replace.","name":"find","type":"string"},{"text":"What to replace find with.","name":"replace","type":"string"}]},"rets":{"ret":{"text":"string","name":"","type":"string"}}},"example":{"description":"Replaces the word \"Garrys\" by \"Hers\".","code":"local text = \"Garrys Mod\"\nprint(string.Replace(text, \"Garrys\", \"Hers\"))","output":"Hers Mod"}},
{"function":{"name":"rep","parent":"string","type":"libraryfunc","description":"Repeats a string by the provided number, with an optional separator.","realm":"Shared and Menu","args":{"arg":[{"text":"The string to convert.","name":"str","type":"string"},{"text":"Timer to repeat, this values gets rounded internally.","name":"repetitions","type":"number"},{"text":"String that will separate the repeated piece. Notice that it doesn't add this string to the start or the end of the result, only between the repeated parts.","name":"separator","type":"string","default":""}]},"rets":{"ret":{"text":"Repeated string.","name":"","type":"string"}}},"example":[{"description":"Repeating \"abc\" 5 times.","code":"print(string.rep(\"abc\", 5))","output":"abcabcabcabcabc"},{"description":"Repeating \"hello world\" 3 times, with the separator \" \" (space).","code":"print(string.rep(\"hello world\", 3, \" \"))","output":"hello world hello world hello world"}]},
{"function":{"name":"PatternSafe","parent":"string","type":"libraryfunc","description":"Escapes all special characters within a string, making the string safe for inclusion in a Lua pattern.","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/string.lua","line":"66"},"args":{"arg":{"text":"The string to be sanitized","name":"str","type":"string"}},"rets":{"ret":{"text":"The string that has been sanitized for inclusion in Lua patterns","name":"","type":"string"}}},"example":{"description":{"text":"Replaces all occurrences of \"100%\" in a string with \"0%\" and prints it.\n\nWe call  here as '%' is a special character when used in Lua patterns.","page":"string.PatternSafe"},"code":"local result = string.gsub( \"You scored 100%!\", \n\t\t\t\t\t\t\tstring.PatternSafe( \"100%\" ), \n\t\t\t\t\t\t\tstring.PatternSafe( \"0%\" ) )\n\nprint( result )","output":"You scored 0%!"}},
{"function":{"name":"NiceTime","parent":"string","type":"libraryfunc","description":"Formats the supplied number (in seconds) to the highest possible time unit.","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/string.lua","line":"191"},"args":{"arg":{"text":"The number to format, in seconds.","name":"num","type":"number"}},"rets":{"ret":{"text":"A nicely formatted time string.","name":"","type":"string"}}},"example":{"code":"print(string.NiceTime(600))\nprint(string.NiceTime(630))\nprint(string.NiceTime(660))\nprint(string.NiceTime(4356))\nprint(string.NiceTime(43545456))","outputfixedwidth":"Fixed width","output":"10 minutes  \n10 minutes  \n11 minutes  \n1 hour\n1 year"}},
{"function":{"name":"NiceSize","parent":"string","type":"libraryfunc","description":"Converts a digital filesize to human-readable text.","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/string.lua","line":"270"},"args":{"arg":{"text":"The filesize in bytes.","name":"bytes","type":"number"}},"rets":{"ret":{"text":"The human-readable filesize, in Bytes/KB/MB/GB (whichever is appropriate).","name":"","type":"string"}}},"example":{"description":"Example output of this function.","code":"print(string.NiceSize(64512))","output":"63 KB"}},
{"function":{"name":"lower","parent":"string","type":"libraryfunc","description":"Changes any upper-case letters in a string to lower-case letters.","realm":"Shared and Menu","args":{"arg":{"text":"The string to convert.","name":"str","type":"string"}},"rets":{"ret":{"text":"The original string, with all uppercase letters replaced with their lowercase variants.","name":"","type":"string"}}},"example":[{"description":"Demonstrates the use of this function.","code":"print( string.lower( \"ABCDEFG\" ) )\nprint( string.lower( \"AbCdefG\" ) )\nprint( string.lower( \"abcdefg\" ) )\nprint( string.lower( \"1234567890\" ) )","output":"abcdefg\n\nabcdefg\n\nabcdefg\n\n1234567890"},{"description":"Demonstrates a common use for string.lower - case-insensitive user input.","code":"-- All keys in this table must be lowercase:\nlocal products = {}\nproducts.apple = \"Buy an apple!\"\nproducts.banana = \"Buy a bunch of bananas!\"\nproducts.tomato = \"There's also tomatoes.\"\n\n-- This function is case-insensitive, meaning \"APPLE\", \"apple\", and \"APPle\" are all the same.\nfunction GetProduct(userinput)\n\treturn userinput, products[string.lower(userinput)]\nend\n\n-- Demonstration:\nprint(GetProduct(\"apple\"))\nprint(GetProduct(\"Apple\"))\nprint(GetProduct(\"APPLE\"))\nprint()\nprint(GetProduct(\"banana\"))\nprint(GetProduct(\"BaNaNa\"))","outputfixedwidth":"Fixed width","output":{"text":"apple\tBuy an apple!\nApple\tBuy an apple!\nAPPLE\tBuy an apple!\n\nbanana\tBuy a bunch of bananas!\nBaNaNa\tBuy a bunch of bananas!","br":["","","","",""]}}]},
{"function":{"name":"len","parent":"string","type":"libraryfunc","description":"Counts the number of characters in the string (length). This is equivalent to using the length operator (#).","realm":"Shared and Menu","args":{"arg":{"text":"The string to find the length of.","name":"str","type":"string"}},"rets":{"ret":{"text":"Length of the string","name":"","type":"number"}}},"example":{"description":"Demonstrates the use of this function.","code":"print( string.len( \"hi\" ) )\nprint( string.len( \"drakehawke\" ) )\nprint( string.len( \"\" ) )\nprint( string.len( \"test\" ) == #\"test\" )","output":"2\n\n10\n\n0\n\ntrue"}},
{"function":{"name":"match","parent":"string","type":"libraryfunc","description":{"text":"Finds a  in a string.","page":",PatternPatterns"},"realm":"Shared and Menu","args":{"arg":[{"text":"String which should be searched in for matches.","name":"string","type":"string"},{"text":"The pattern that defines what should be matched.","name":"pattern","type":"string"},{"text":"The start index to start the matching from, can be negative to start the match from a position relative to the end.","name":"startPosition","type":"number","default":"1"}]},"rets":{"ret":{"text":"Matched text(s)","name":"","type":"vararg"}}},"example":{"code":"local toMatch = \"this is a sample text\"\nprint( string.match( toMatch, \"sample\" ) )\n-- regex works\nprint( string.match( toMatch, \"^[a-z]\" ) )\nprint( string.match( toMatch, \"^this\" ) )\nprint( string.match( toMatch, \"^..is\" ) )\nprint( string.match( toMatch, \"text$\" ) )\n-- entire string\nprint( string.match( toMatch, \"^.*$\" ) )\n-- nil\nprint( string.match( toMatch, \"this$\" ) )\nprint( string.match( toMatch, \"nil\" ) )","outputfixedwidth":"Fixed width","output":"sample  \nt  \nthis  \nthis  \ntext  \nthis is a sample text  \nnil  \nnil"}},
{"function":{"name":"Left","parent":"string","type":"libraryfunc","description":"Returns everything left of supplied place of that string.","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/string.lua","line":"225"},"args":{"arg":[{"text":"The string to extract from.","name":"str","type":"string"},{"text":"Amount of chars relative to the beginning (starting from 1).","name":"num","type":"number"}]},"rets":{"ret":{"text":"Returns a string containing a specified number of characters from the left side of a string.","name":"","type":"string"}}},"example":{"description":"Extracts \"garry\" from \"garrys mod\" string.","code":"local text = \"garrys mod\"\nprint(string.Left(text, 5))","output":"garry"}},
{"function":{"name":"JavascriptSafe","parent":"string","type":"libraryfunc","description":"Escapes special characters for JavaScript in a string, making the string safe for inclusion in to JavaScript strings.","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/string.lua","line":"34"},"args":{"arg":{"text":"The string that should be escaped.","name":"str","type":"string"}},"rets":{"ret":{"text":"The escaped string.","name":"","type":"string"}}},"example":{"description":"Executes JavaScript on a panel using user input safely.","code":"local user_input = \"The user's input lives in this variable\"\n\nlocal Panel = vgui.Create( \"DHTML\" )\nPanel:SetURL( \"example.com/something.html\" )\nPanel:Center()\nPanel:SetSize( 100, 100 )\nPanel:RunJavascript( \"MyJavaScriptFunction('\" .. string.JavascriptSafe( user_input ) .. \"')\" )"}},
{"function":{"name":"Implode","parent":"string","type":"libraryfunc","description":{"text":"Joins the values of a table together to form a string.\n\nThis is the reverse of  and is functionally identical to , but with less features.","deprecated":{"text":"You really should just use .","page":"table.concat"},"page":["string.Explode","table.concat"]},"realm":"Shared and Menu","file":{"text":"lua/includes/extensions/string.lua","line":"113"},"args":{"arg":[{"text":"The separator to insert between each piece.","name":"separator","type":"string","default":""},{"text":"The table of pieces to concatenate. The keys for these must be numeric and sequential.","name":"pieces","type":"table"}]},"rets":{"ret":{"text":"Imploded pieces","name":"","type":"string"}}},"example":{"description":"Joins all values of a table with a space","code":"local tab = { \"one\", \"two\", \"three\" }\n\nprint( string.Implode( \" \", tab ) )","output":"```\none two three\n```"}},
{"function":{"name":"gsub","parent":"string","type":"libraryfunc","description":{"text":"This functions main purpose is to replace certain character sequences in a string using .","page":"Patterns"},"realm":"Shared and Menu","args":{"arg":[{"text":"String which should be modified.","name":"string","type":"string"},{"text":"The pattern that defines what should be matched and eventually be replaced.","name":"pattern","type":"string"},{"text":"In case of a string the matches sequence will be replaced with it.\n\nIn case of a table, the matched sequence will be used as key and the table will tested for the key, if a value exists it will be used as replacement.\n\nIn case of a function all matches will be passed as parameters to the function, the return value(s) of the function will then be used as replacement.","name":"replacement","type":"string"},{"text":"Maximum number of replacements to be made.","name":"maxReplaces","type":"number","default":"nil"}]},"rets":{"ret":[{"text":"replaceResult","name":"","type":"string"},{"text":"replaceCount","name":"","type":"number"}]}},"example":{"description":"Replaces \"hello\" with \"hi\" in the string \"hello there!\"","code":"string.gsub(\"hello there!\", \"hello\", \"hi\")","output":"hi there!"}},
{"function":{"name":"gmatch","parent":"string","type":"libraryfunc","description":{"text":"Using , returns an iterator which will return either one value if no capture groups are defined, or any capture group matches.","page":"Patterns"},"realm":"Shared and Menu","args":{"arg":[{"text":"The string to search in","name":"data","type":"string"},{"text":"The pattern to search for","name":"pattern","type":"string"}]},"rets":{"ret":{"text":"The iterator function that can be used in a for-in loop","name":"","type":"function"}}},"example":{"description":"Explodes the string for each space and comma in the string","code":"str = \"qwe,a cde\"\nfor s in string.gmatch(str, \"[^%s,]+\") do\n    print(s)\nend","outputfixedwidth":"Fixed width","output":"qwe\na\ncde"}},
{"function":{"name":"gfind","parent":"string","type":"libraryfunc","description":{"text":"Returns an iterator function that is called for every complete match of the pattern, all sub matches will be passed as to the loop.","deprecated":{"text":"This function is removed in Lua versions later than what GMod is currently using. Use  instead.","page":"string.gmatch"}},"realm":"Shared and Menu","args":{"arg":[{"text":"The string to search in","name":"data","type":"string"},{"text":"The pattern to search for","name":"pattern","type":"string"}]},"rets":{"ret":{"text":"The iterator function that can be used in a for-in loop","name":"","type":"function"}}},"example":{"description":"Example usage of the function","code":"local s = \"my awesome stuff 12\"\nfor w in string.gfind(s, \"(%a)\") do\n    Msg(w)\nend","output":"In your console:\nmyawesomestuff"}},
{"function":{"name":"GetPathFromFilename","parent":"string","type":"libraryfunc","description":"Returns the path only from a file's path.","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/string.lua","line":"142"},"args":{"arg":{"text":"String to get path from.","name":"Inputstring","type":"string"}},"rets":{"ret":{"text":"Path","name":"","type":"string"}}},"example":{"description":"Demonstrates the use of string.GetPathFromFilename","code":"MsgN(string.GetPathFromFilename(\"garrysmod/lua/modules/string.lua\"))","output":"\"garrysmod/lua/modules/\""}},
{"function":{"name":"GetFileFromFilename","parent":"string","type":"libraryfunc","description":"Returns file name and extension.","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/string.lua","line":"150"},"args":{"arg":{"text":"The string eg. file-path to get the file-name from.","name":"pathString","type":"string"}},"rets":{"ret":{"text":"The file name","name":"","type":"string"}}},"example":{"description":"Returns the file name.","code":"print( string.GetFileFromFilename( \"garrysmod/lua/modules/string.lua\" ) )","output":"string.lua"}},
{"function":{"name":"GetExtensionFromFilename","parent":"string","type":"libraryfunc","description":"Returns extension of the file.","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/string.lua","line":"122"},"args":{"arg":{"text":"String eg. file-path to get the file extensions from.","name":"file","type":"string"}},"rets":{"ret":{"text":"fileExtension","name":"","type":"string"}}},"example":{"description":"Prints the extension of the file.","code":"print(string.GetExtensionFromFilename(\"garrysmod/lua/modules/string.lua\"))","output":"lua"}},
{"function":{"name":"GetChar","parent":"string","type":"libraryfunc","description":{"text":"Returns char value from the specified index in the supplied string.","deprecated":"Use either string.sub(str, index, index) or str[index]."},"realm":"Shared and Menu","file":{"text":"lua/includes/extensions/string.lua","line":"295"},"args":{"arg":[{"text":"The string that you will be searching with the supplied index.","name":"str","type":"string"},{"text":"The index's value of the string to be returned.","name":"index","type":"number"}]},"rets":{"ret":{"text":"str","name":"","type":"string"}}},"example":{"description":"Looks index in the supplied string and returns value of that index.","code":"local char = \"ABC\"\nprint(string.GetChar(char, 2))","output":"B"}},
{"function":{"name":"FromColor","parent":"string","type":"libraryfunc","description":"Creates a string from a Color variable.","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/string.lua","line":"326"},"args":{"arg":{"text":"The color to put in the string.","name":"color","type":"table"}},"rets":{"ret":{"text":"Output","name":"","type":"string"}}},"example":{"description":"Demonstrates the use of string.FromColor","code":"MsgN(string.FromColor(Color(255, 0, 255, 125)))","output":"\"255 0 255 125\""}},
{"function":{"name":"FormattedTime","parent":"string","type":"libraryfunc","description":"Returns the time as a formatted string or as a table if no format is given.","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/string.lua","line":"166"},"args":{"arg":[{"text":"The time in seconds to format.","name":"float","type":"number"},{"text":"An optional formatting to use. If no format it specified, a table will be returned instead.","name":"format","type":"string","default":"nil"}]},"rets":{"ret":{"text":"Returns the time as a formatted string only if a format was specified.\n\nReturns a table only if no format was specified. The table will contain these fields:\n*  ms - milliseconds\n*  s - seconds\n*  m - minutes\n*  h - hours","name":"","type":"string","page":["number","number","number","number"]}}},"example":[{"description":"Formats the time in seconds","code":"local time = string.FormattedTime( 90, \"%02i:%02i:%02i\" )\nprint( time )","output":"01:30:00"},{"description":"Returns a table with the time separated by units.","code":"local time = string.FormattedTime( 90 )\nPrintTable( time )","output":"```\nms = 0\nm = 1\ns = 30\nh = 0\n```"}]},
{"function":{"name":"format","parent":"string","type":"libraryfunc","description":"Formats the specified values into the string given.","realm":"Shared and Menu","args":{"arg":[{"text":"The string to be formatted.\nFollows this format: http://www.cplusplus.com/reference/cstdio/printf/","name":"format","type":"string","br":""},{"text":"Values to be formatted into the string.","name":"formatParameters","type":"vararg"}]},"rets":{"ret":{"text":"The formatted string","name":"","type":"string"}}},"example":{"description":"Example showing the different types of format codes.","code":"local s = \"Hello, world!\"\n \n// string\nprint(string.format(\"here's a string: %s\", s))\n \n// string with quotes\nprint(string.format(\"here's a quoted string: %q\", s))\n \n// characters from numeric values\nprint(string.format(\"%c%c%c\", 65, 66, 67))\n \n// number with an exponent\nprint(string.format(\"%e, %E\", math.pi, math.pi))\n \n// float and compact float\nprint(string.format(\"%f, %G\", math.pi, math.pi))\n \n// signed, signed, and unsigned int\nprint(string.format(\"%d, %i, %u\", -100, -100, -100))\n \n// octal, hex, and uppercase hex\nprint(string.format(\"%o, %x, %X\", -100, -100, -100))","outputfixedwidth":"Fixed width","output":"here's a string: Hello, world!\n\nhere's a quoted string: \"Hello, world!\"\n\nABC\n\n3.141593e+000, 3.141593E+000\n\n3.141593, 3.14159\n\n-100, -100, 4294967196\n\n37777777634, ffffff9c, FFFFFF9C"}},
{"function":{"name":"Explode","parent":"string","type":"libraryfunc","description":{"text":"Splits a string up wherever it finds the given separator.\n\nThis is the reverse of .","page":"string.Implode"},"realm":"Shared and Menu","file":{"text":"lua/includes/extensions/string.lua","line":"81"},"args":{"arg":[{"text":"The string will be separated wherever this sequence is found.","name":"separator","type":"string"},{"text":"The string to split up.","name":"str","type":"string"},{"text":"Set this to true if your separator is a .","name":"use_patterns","type":"boolean","page":",patternPatterns"}]},"rets":{"ret":{"text":"Exploded string as a numerical sequential table.","name":"","type":"table"}}},"example":[{"description":"Splits a sentence into a table of the words in it.","code":"local sentence = \"hello there my name is Player1\"\nlocal words = string.Explode( \" \", sentence )\nPrintTable( words )","outputfixedwidth":"Fixed width","output":"1 = hello\n2 = there\n3 = my\n4 = name\n5 = is\n6 = Player1"},{"description":"Uses Explode to sort through words that a player says.","code":"hook.Add( \"PlayerSay\", \"GiveHealth\", function( ply, text )\n\tlocal playerInput = string.Explode( \" \", text )\n\n\tif ( playerInput[1] == \"!givehealth\" ) then \n\n\t\tif ( tonumber( playerInput[2] ) ) then\n\n\t\t\tply:SetHealth( tonumber( playerInput[2] ) )\n\n\t\t\tprint( ply:Nick() .. \" set their health to \" .. playerInput[2] )\n\n\t\tend\n\n\tend\n\nend)","outputfixedwidth":"Fixed width","output":"Player1 set their health to 100."}]},
{"function":{"name":"find","parent":"string","type":"libraryfunc","description":{"text":"Attempts to find the specified substring in a string, uses  by default.","page":"Patterns"},"realm":"Shared and Menu","args":{"arg":[{"text":"The string to search in.","name":"haystack","type":"string"},{"text":"The string to find, can contain patterns if enabled.","name":"needle","type":"string"},{"text":"The position to start the search from, can be negative start position will be relative to the end position.","name":"startPos","type":"number","default":"1"},{"text":"Disable patterns.","name":"noPatterns","type":"boolean","default":"false"}]},"rets":{"ret":[{"text":"Starting position of the found text, or nil if the text wasn't found","name":"","type":"number"},{"text":"Ending position of found text, or nil if the text wasn't found","name":"","type":"number"},{"text":"Matched text for each group if patterns are enabled and used, or nil if the text wasn't found","name":"","type":"string"}]}},"example":{"description":"Change the word \"heck\" to \"****\" in chat messages","code":"hook.Add( \"PlayerSay\", \"NoHeckHere\", function( ply, text )\n\tlocal heckStart, heckEnd = string.find( text:lower(), \"heck\" )\n\tif heckStart then\n\t\tlocal civilText = string.sub( text, 1, heckStart - 1 ) .. \"****\" .. string.sub( text, heckEnd + 1 )\n\t\treturn civilText\n\tend\nend )"}},
{"function":{"name":"EndsWith","parent":"string","type":"libraryfunc","description":"Returns whether or not the second passed string matches the end of the first.","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/string.lua","line":"320"},"args":{"arg":[{"text":"The string whose end is to be checked.","name":"str","type":"string"},{"text":"The string to be matched with the end of the first.","name":"end","type":"string"}]},"rets":{"ret":{"text":"`true` if the first string ends with the second, or the second is empty, otherwise `false`.","name":"","type":"boolean"}}},"example":{"description":"Looks for arguments at the end of a string.","code":"local endswith = string.EndsWith(\"Supercalifragilisticexpialidocious\", \"docious\")\nif endswith then\n\tprint(\"Marry Poppins\")\nend","output":"```\nMarry Poppins\n```"}},
{"function":{"name":"dump","parent":"string","type":"libraryfunc","description":{"text":"Returns the binary bytecode of the given function.","note":"This does not work with functions created in C/C++. An error will be thrown if it is"},"realm":"Shared and Menu","args":{"arg":[{"text":"The function to get the bytecode of","name":"func","type":"function"},{"text":"True to strip the debug data, false to keep it","name":"stripDebugInfo","type":"boolean","default":"false"}]},"rets":{"ret":{"text":"Bytecode","name":"","type":"string"}}}},
{"function":{"name":"Comma","parent":"string","type":"libraryfunc","description":"Inserts commas for every third digit.","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/string.lua","line":"347"},"args":{"arg":{"text":"The input number to commafy","name":"InputNumber","type":"number"}},"rets":{"ret":{"text":"Prettystring","name":"","type":"string"}}},"example":{"description":"Demonstrates the use of string.Comma","output":"123,456,789","code":"MsgN(string.Comma(123456789))"}},
{"function":{"name":"char","parent":"string","type":"libraryfunc","description":"Takes the given numerical bytes and converts them to a string.","realm":"Shared and Menu","args":{"arg":{"text":"The bytes to create the string from.","name":"bytes","type":"vararg"}},"rets":{"ret":{"text":"String built from given bytes","name":"","type":"string"}}},"example":[{"description":"Prints a string consisting of the bytes 72, 101, 108, 108, 111","code":"print( string.char( 72, 101, 108, 108, 111 ) )","outputfixedwidth":"Fixed width","output":"Hello"},{"description":"Helper function to create a random string.","code":"function string.Random( length )\n\n\tlocal length = tonumber( length )\n\n    if length < 1 then return end\n\n    local result = \"\" -- The empty string we start with\n\n    for i = 1, length do\n\n        result = result .. string.char( math.random(32, 126) )\n\n    end\n\n    return result\n\nend\n\nprint( string.Random( 10 ) )","outputfixedwidth":"Fixed width","output":"oEjkv2?h:T"}]},
{"function":{"name":"VoteInfo","parent":"steamworks","type":"libraryfunc","description":{"text":"Retrieves vote info of supplied addon.","deprecated":{"text":"Use data  instead.","page":"steamworks.FileInfo"}},"realm":"Client and Menu","args":{"arg":[{"text":"The ID of workshop item.","name":"workshopItemID","type":"string"},{"text":"The function to process retrieved data. The first and only argument is a table, containing all the info.","name":"resultCallback","type":"function"}]}},"example":{"description":"Retrieves vote info of Gm_construct_Beta Steam Workshop addon.","code":"steamworks.VoteInfo( 21197, function( result ) PrintTable( result ) end)","outputfixedwidth":"Fixed width","output":"score = 0.97182178497314\ntotal = 2952\ndown = 36\nup = 2916"}},
{"function":{"name":"byte","parent":"string","type":"libraryfunc","description":"Returns the given string's characters in their numeric ASCII representation.","realm":"Shared and Menu","args":{"arg":[{"text":"The string to get the chars from.","name":"string","type":"string"},{"text":"The first character of the string to get the byte of.","name":"startPos","type":"number","default":"1"},{"text":"The last character of the string to get the byte of.","name":"endPos","type":"number","default":"startPos"}]},"rets":{"ret":{"text":"Numerical bytes","name":"","type":"vararg"}}},"example":{"description":"Prints the first 4 numerical bytes from the string \"Hello, World!\"","code":"print(string.byte(\"Hello, World!\", 1, 4))","output":"72\n101\n108\n108"}},
{"function":{"name":"Vote","parent":"steamworks","type":"libraryfunc","description":{"text":"Makes the user vote for the specified addon","internal":""},"realm":"Menu","args":{"arg":[{"text":"The ID of workshop item.","name":"workshopItemID","type":"string"},{"text":"Sets if the user should vote up/down. True makes them upvote, false down","name":"upOrDown","type":"boolean"}]}},"example":{"description":"Give the Gm_construct_Beta Steam Workshop item a thumbs up.","code":"steamworks.Vote( 21197, true )"}},
{"function":{"name":"ViewFile","parent":"steamworks","type":"libraryfunc","description":"Opens the workshop website for specified Steam Workshop item in the Steam overlay browser.","realm":"Client and Menu","args":{"arg":{"text":"The ID of workshop item.","name":"workshopItemID","type":"string"}}},"example":{"description":"Opens web page of Gm_construct_Beta Steam Workshop addon in Steam overlay browser.","code":"steamworks.ViewFile( 21197 )"}},
{"function":{"name":"Unsubscribe","parent":"steamworks","type":"libraryfunc","description":{"text":"Unsubscribes to the specified workshop addon. Call  afterwards to update.\n\nThis function should `never` be called without a user's consent and should not be called if the addon is currently in use (aka: the user is not in the main menu) as it may result in unexpected behaviour.","internal":"","page":"steamworks.ApplyAddons"},"realm":"Menu","args":{"arg":{"text":"The ID of the Steam Workshop item we should unsubscribe from.","name":"workshopItemID","type":"string"}}},"example":{"description":"Unsubscribes from the Gm_construct_Beta Steam Workshop addon, if subscribed, and reloads addons afterwards","code":"steamworks.Unsubscribe( 21197 )\nsteamworks.ApplyAddons()","output":"Unsubscribes from the gm_construct_beta addon, if subscribed."}},
{"function":{"name":"Subscribe","parent":"steamworks","type":"libraryfunc","description":{"text":"Subscribes to the specified workshop addon. Call  afterwards to update.","internal":"","page":"steamworks.ApplyAddons"},"realm":"Menu","args":{"arg":{"text":"The ID of the Steam Workshop item we should subscribe to","name":"workshopItemID","type":"string"}}},"example":{"description":"Subscribes to the Gm_construct_Beta Steam Workshop addon and reloads addons afterwards","code":"steamworks.Subscribe( \"21197\" )\nsteamworks.ApplyAddons()","output":"Subscribes to gm_construct_beta addon, if not already."}},
{"function":{"name":"SetShouldMountAddon","parent":"steamworks","type":"libraryfunc","description":{"text":"Sets if an addon should be enabled or disabled. Call  afterwards to update.","page":"steamworks.ApplyAddons"},"realm":"Menu","args":{"arg":[{"text":"The ID of the Steam Workshop item we should enable/disable","name":"workshopItemID","type":"string"},{"text":"true to enable the item, false to disable.","name":"shouldMount","type":"boolean"}]}},"example":{"description":"Enables the Gm_construct_Beta Steam Workshop addon and reloads addons afterwards","code":"steamworks.SetShouldMountAddon( 21197, true )\nsteamworks.ApplyAddons()","output":"Enabled the gm_construct_beta addon, if installed."}},
{"function":{"name":"ShouldMountAddon","parent":"steamworks","type":"libraryfunc","description":"Returns whenever the specified Steam Workshop addon will be mounted or not.","realm":"Client and Menu","args":{"arg":{"text":"The ID of the Steam Workshop","name":"workshopItemID","type":"string"}},"rets":{"ret":{"text":"Will the workshop item be mounted or not","name":"","type":"boolean"}}},"example":{"description":"Checks if the client has enabled Gm_construct_Beta Steam Workshop addon.","code":"print( steamworks.ShouldMountAddon( 21197 ) )","output":"If client has enabled the addon true is printed into console, false otherwise."}},
{"function":{"name":"SetFileCompleted","parent":"steamworks","type":"libraryfunc","description":"","realm":"Menu","args":{"arg":{"text":"The Steam Workshop item id","name":"workshopid","type":"string"}},"rets":{"ret":{"text":"Whatever you have put in as first argument","name":"","type":"string"}}}},
{"function":{"name":"SetFilePlayed","parent":"steamworks","type":"libraryfunc","description":{"text":"Sets whether you have played this addon or not. This will be shown to the user in the Steam Workshop itself:","image":{"src":"steamworksSetFilePlayedExample.png"}},"realm":"Menu","args":{"arg":{"text":"The Steam Workshop item ID","name":"workshopid","type":"string"}},"rets":{"ret":{"text":"Whatever you have put in as first argument","name":"","type":"string"}}}},
{"function":{"name":"Publish","parent":"steamworks","type":"libraryfunc","description":{"text":"Publishes dupes, saves or demos to workshop.","internal":""},"realm":"Menu","args":{"arg":[{"text":"The workshop tags to apply","name":"tags","type":"table"},{"text":"Path to the file to upload","name":"filename","type":"string"},{"text":"Path to the image to use as icon","name":"image","type":"string"},{"text":"Name of the Workshop submission","name":"name","type":"string"},{"text":"Description of the Workshop submission","name":"desc","type":"string"}]}}},
{"function":{"name":"RequestPlayerInfo","parent":"steamworks","type":"libraryfunc","description":{"text":"Requests information of the player with SteamID64 for later use with .","page":"steamworks.GetPlayerName"},"realm":"Client and Menu","args":{"arg":[{"text":"The 64bit Steam ID of player.","name":"steamID64","type":"string"},{"text":"A callback function with only 1 argument -  name.","name":"callback","type":"function","page":"string"}]}},"example":{"description":"Gets and prints the steam name of the local player","code":"steamworks.RequestPlayerInfo( LocalPlayer():SteamID64(), function(steamName)\n\t\tprint( steamName )\nend )","output":"The local player's name"}},
{"function":{"name":"RequestPlayerInfo","parent":"steamworks","type":"libraryfunc","description":{"text":"Requests information of the player with SteamID64 for later use with .","page":"steamworks.GetPlayerName"},"realm":"Client and Menu","args":{"arg":[{"text":"The 64bit Steam ID of player.","name":"steamID64","type":"string"},{"text":"A callback function with only 1 argument -  name.","name":"callback","type":"function","page":"string"}]}},"example":{"description":"Gets and prints the steam name of the local player","code":"steamworks.RequestPlayerInfo( LocalPlayer():SteamID64(), function(steamName)\n\t\tprint( steamName )\nend )","output":"The local player's name"}},
{"function":{"name":"IsSubscribed","parent":"steamworks","type":"libraryfunc","description":"Returns whenever the client is subscribed to the specified Steam Workshop item.","realm":"Client and Menu","args":{"arg":{"text":"The ID of the Steam Workshop item.","name":"workshopItemID","type":"string"}},"rets":{"ret":{"text":"Is the client subscribed to the addon or not.","name":"","type":"boolean"}}},"example":{"description":"Checks if client is subscribed to Gm_construct_Beta Steam Workshop addon.","code":"print( steamworks.IsSubscribed( 21197 ) )","output":"If client is subscribed true is printed into console, false otherwise."}},
{"function":{"name":"GetPlayerName","parent":"steamworks","type":"libraryfunc","description":{"text":"Retrieves players name by his 64bit SteamID.\n\nYou must call  a decent amount of time before calling this function.","deprecated":{"text":"You should use the callback of  instead.","page":"steamworks.RequestPlayerInfo"},"page":"steamworks.RequestPlayerInfo"},"realm":"Client and Menu","args":{"arg":{"text":"The 64bit Steam ID ( aka Community ID ) of the player","name":"steamID64","type":"string"}},"rets":{"ret":{"text":"The name of that player","name":"","type":"string"}}},"example":{"description":"Retrieves name of local player.","code":"steamworks.RequestPlayerInfo( LocalPlayer():SteamID64() )\ntimer.Simple( 1, function() -- this is not instant!\n\tprint( steamworks.GetPlayerName( LocalPlayer():SteamID64() ) )\nend )","output":"A name of local player is printed into console."}},
{"function":{"name":"FileInfo","parent":"steamworks","type":"libraryfunc","description":"Retrieves info about supplied Steam Workshop addon.","realm":"Client and Menu","args":{"arg":[{"text":"The ID of Steam Workshop item.","name":"workshopItemID","type":"string"},{"text":"The function to process retrieved data, with the following arguments:\n*  data - The data about the item, if the request succeeded, nil otherwise. See .","name":"resultCallback","type":"function","page":["table","Structures/UGCFileInfo"]}]}},"example":{"description":"Retrieves all info of the \"Wiremod\" Steam Workshop addon.","code":"steamworks.FileInfo( 160250458, function( result ) PrintTable( result ) end)","outputfixedwidth":"Fixed width","output":"banned\t=\tfalse\nchildren = {}\ncreated\t=\t1373845248\ndescription\t=\t\"too long, removed\"\ndisabled\t=\tfalse\nfileid\t=\t763849701485673437\nid\t=\t160250458\ninstalled\t=\tfalse\nowner\t=\t76561198096613988\nownername\t=\tWireTeam\npreviewid\t=\t597008945885476119\npreviewsize\t=\t36221\nsize\t=\t7375691\ntags\t=\tAddon,tool,Build,Fun\ntitle\t=\tWiremod\nupdated\t=\t1571560576\n\nscore\t=\t0.92941749095917\ntotal\t=\t49119\nup\t=\t45695\ndown\t=\t3424"}},
{"function":{"name":"GetList","parent":"steamworks","type":"libraryfunc","description":"Retrieves a customized list of Steam Workshop addons.","realm":"Client and Menu","args":{"arg":[{"text":"The type of items to retrieve. Possible values include:\n* popular (All invalid options will equal to this)\n* trending\n* latest\n* friends","name":"type","type":"string"},{"text":"A table of tags to match.","name":"tags","type":"table"},{"text":"How much of results to skip from first one. Mainly used for pages.","name":"offset","type":"number"},{"text":"How much items to retrieve, up to 50 at a time.","name":"numRetrieve","type":"number"},{"text":"When getting Most Popular content from Steam, this determines a time period. ( 7 = most popular addons in last 7 days, 1 = most popular addons today, etc )","name":"days","type":"number"},{"text":"\"0\" to retrieve all addons, \"1\" to retrieve addons only published by you, or a valid SteamID64 of a user to get workshop items of.","name":"userID","type":"string"},{"text":"The function to process retrieved data. The first and only argument is a table, containing all the info, or nil in case of error","name":"resultCallback","type":"function"}]}},"example":{"description":"Retrieves top 10 of Steam Workshop addons.","code":"steamworks.GetList( \"popular\", nil, 0, 10, 7, 0, function( data ) PrintTable( data ) end )","outputfixedwidth":"Fixed width","output":"totalresults = 1748\n```\n\n numresults = 10\n results:\n 1 = 21197\n 2 = 72122655\n 3 = 68207248\n 4 = 71921341\n 5 = 79927494\n 6 = 12692\n 7 = 21174\n 8 = 72145362\n 9 = 16221\n 10 = 22104\n```"}},
{"function":{"name":"DownloadUGC","parent":"steamworks","type":"libraryfunc","description":"Downloads a Steam Workshop file by its ID and returns a path to it.","realm":"Client and Menu","args":{"arg":[{"text":"The ID of workshop item to download. **NOT** a file ID.","name":"workshopID","type":"string"},{"text":"The function to process retrieved data. The first argument is a string, containing path to the saved file, or nil if the download failed to any reason. The second argument is a  object pointing to the downloaded .gma file. The file handle will be closed after the function exits.","name":"resultCallback","type":"function","page":"File"}]}},"example":{"description":{"text":"Downloads the Fire Extinguisher addon from Steam Workshop prints path to its .gma file to be used with .","page":"game.MountGMA"},"code":"steamworks.DownloadUGC( 104607228, function( name, file )\n\tprint( name, file )\nend)"}},
{"function":{"name":"ApplyAddons","parent":"steamworks","type":"libraryfunc","description":"Refreshes clients addons.","realm":"Menu"},"example":{"description":"Subscribes to gm_construct_beta and reloads addons.","code":"steamworks.Subscribe( 21197 )\nsteamworks.ApplyAddons()"}},
{"function":{"name":"Download","parent":"steamworks","type":"libraryfunc","description":{"text":"Downloads a file from the supplied addon and saves it as a .cache file in garrysmod/cache folder.\n\nThis is mostly used to download the preview image of the addon, but the game seems to also use it to download replays and saves.\n\nIn case the retrieved file is an image and you need the , use  with the path supplied from the callback.","page":["IMaterial","Global.AddonMaterial"]},"realm":"Client and Menu","args":{"arg":[{"text":"The Preview ID of workshop item.","name":"workshopPreviewID","type":"string"},{"text":"Whether to uncompress the file or not, assuming it was compressed with LZMA.\nYou will usually want to set this to true.","name":"uncompress","type":"boolean","br":""},{"text":"The function to process retrieved data. The first and only argument is a string, containing path to the saved file.","name":"resultCallback","type":"function"}]}},"example":{"description":"Downloads and saves icon of Gm_construct_Beta Steam Workshop addon.","code":"steamworks.FileInfo( 21197, function( result )\n\tsteamworks.Download( result.previewid, true, function( name )\n\t\tprint( name )\n\tend) \nend)","output":"Something like this will be printed into console: cache/559813303754221947.cache"}},
{"function":{"name":"TableExists","parent":"sql","type":"libraryfunc","description":"Returns true if the table with the specified name exists.","realm":"Shared and Menu","args":{"arg":{"text":"The name of the table to check.","name":"tableName","type":"string"}},"rets":{"ret":{"text":"exists","name":"","type":"boolean"}}}},
{"function":{"name":"SQLStr","parent":"sql","type":"libraryfunc","description":{"text":"Escapes dangerous characters and symbols from user input used in an SQLite SQL Query.","note":"this function is not meant to be used with external database engines such as `MySQL`. Escaping strings with inadequate functions is dangerous!"},"realm":"Shared and Menu","args":{"arg":[{"text":"The string to be escaped.","name":"string","type":"string"},{"text":"Set this as true, and the function will not wrap the input string in apostrophes.","name":"bNoQuotes","type":"boolean","default":"false"}]},"rets":{"ret":{"text":"The escaped input.","name":"","type":"string"}}}},
{"function":{"name":"QueryValue","parent":"sql","type":"libraryfunc","description":{"text":"Performs the query like , but returns the first value found.","page":"sql.QueryRow"},"realm":"Shared and Menu","args":{"arg":{"text":"The input query.","name":"query","type":"string"}},"rets":{"ret":{"text":"The returned value; the engine automatically converts numerical output to Lua numbers.","name":"","type":"any"}}}},
{"function":{"name":"Query","parent":"sql","type":"libraryfunc","description":"Performs a query on the local SQLite database, returns a table as result set, nil if result is empty and false on error.","realm":"Shared and Menu","args":{"arg":{"text":"The query to execute.","name":"query","type":"string"}},"rets":{"ret":{"text":"false is returned if there is an error, nil if the query returned no data.","name":"","type":"table"}}},"example":{"description":"Functions that are examples of saving and creating information into the database.","code":"function CreateTable()\n     sql.Query(\"CREATE TABLE player_data(SteamID TEXT, Money INTEGER)\")\nend\n\nfunction NewPlayerToDataBase(ply)\n     sql.Query(\"INSERT INTO player_data(SteamID, Money) VALUES('\"..ply:SteamID()..\"', 0)\")\nend\n\nfunction SavePlayerToDatabase(ply, Money)\n     sql.Query(\"UPDATE player_data SET Money=\"..Money..\" WHERE SteamID='\"..ply:SteamID()..\"'\")\nend"}},
{"function":{"name":"LastError","parent":"sql","type":"libraryfunc","description":"Returns the last error from a SQLite query.","realm":"Shared and Menu","rets":{"ret":{"text":"error","name":"","type":"string"}}},"example":{"description":"Reports all SQL errors into console automatically. Can help on debugging or testing","code":"sql.m_strError = nil -- This is required to invoke __newindex\nsetmetatable(sql,{__newindex = function(t,k,v) if k == \"m_strError\" and v then print(\"[SQL Error] \"..v) end end})","output":"After running `sql.Query(\"SELECT\")` will print `[SQL Error] incomplete input` in the console."}},
{"function":{"name":"QueryRow","parent":"sql","type":"libraryfunc","description":{"text":"Performs the query like , but returns the first row found.\n\nBasically equivalent to\n```\nsql.Query(\"*query* LIMIT 1\")\n```","page":"sql.Query"},"realm":"Shared and Menu","args":{"arg":[{"text":"The input query","name":"query","type":"string"},{"text":"The row number. Say we receive back 5 rows, putting 3 as this argument will give us row #3.","name":"row","type":"number","default":"1"}]},"rets":{"ret":{"text":"The returned row.","name":"","type":"table"}}}},
{"function":{"name":"Commit","parent":"sql","type":"libraryfunc","description":{"text":"Tells the engine to execute a series of queries queued for execution, must be preceded by \n\nThis is equivalent to `sql.Query(\"COMMIT\")`.","page":"sql.Begin"},"realm":"Shared and Menu"}},
{"function":{"name":"IndexExists","parent":"sql","type":"libraryfunc","description":"Returns true if the index with the specified name exists.","realm":"Shared and Menu","args":{"arg":{"text":"The name of the index to check.","name":"indexName","type":"string"}},"rets":{"ret":{"text":"exists","name":"","type":"boolean"}}}},
{"function":{"name":"SwitchToolTab","parent":"spawnmenu","type":"libraryfunc","description":{"text":"Supposed to open specified tool tab in spawnmenu, in reality does nothing.","deprecated":""},"realm":"Client","args":{"arg":{"text":"The tab ID to open","name":"id","type":"number"}}}},
{"function":{"name":"Begin","parent":"sql","type":"libraryfunc","description":{"text":"Tells the engine a set of queries is coming. Will wait until  is called to run them.\nThis is most useful when you run more than 100+ queries.\nThis is equivalent to \n```\nsql.Query(\"BEGIN\")\n```","page":"sql.Commit","br":["",""]},"realm":"Shared and Menu"}},
{"function":{"name":"SetActiveControlPanel","parent":"spawnmenu","type":"libraryfunc","description":{"text":"Sets currently active control panel to be returned by .","page":"spawnmenu.ActiveControlPanel"},"realm":"Client","args":{"arg":{"text":"The panel to set.","name":"pnl","type":"Panel"}}}},
{"function":{"name":"PopulateFromTextFiles","parent":"spawnmenu","type":"libraryfunc","description":"Loads spawnlists from text files.","realm":"Client","args":{"arg":{"text":"The function to call. Arguments are ( strFilename, strName, tabContents, icon, id, parentid, needsapp )","name":"callback","type":"function"}}}},
{"function":{"name":"SaveToTextFiles","parent":"spawnmenu","type":"libraryfunc","description":{"text":"Saves a table of spawnlists to files.","internal":""},"realm":"Client","args":{"arg":{"text":"A table containing spawnlists.","name":"spawnlists","type":"table"}}}},
{"function":{"name":"PopulateFromEngineTextFiles","parent":"spawnmenu","type":"libraryfunc","description":{"text":"Calls .","internal":"","page":"spawnmenu.PopulateFromTextFiles"},"realm":"Client"}},
{"function":{"name":"GetPropTable","parent":"spawnmenu","type":"libraryfunc","description":{"text":"Returns a table of all prop categories and their props in the spawnmenu.\n\nNote that if the spawnmenu has not been populated, this will return an empty table.\n\nThis will not return spawnlists created by addons, see   for that.","page":"spawnmenu.GetCustomPropTable"},"realm":"Client","rets":{"ret":{"text":"Table of all the prop categories and props in the following format:\n\n```\n{\n\t[\"settings/spawnlist/001-construction props.txt\"] = {\n\t\tname = \"Construction Props\",\n\t\ticon = \"icon16/page.png\",\n\t\tid = 1,\n\t\tparentid = 0,\n\t\tneedsapp = \"\",\n\t\tcontents = {\n\t\t\t{\n\t\t\t\tmodel = \"models/Cranes/crane_frame.mdl\",\n\t\t\t\ttype = \"model\"\n\t\t\t}\n\t\t\t-- etc.\n\t\t},\n\t}\n\t-- etc.\n}\n```","name":"","type":"table"}}}},
{"function":{"name":"GetToolMenu","parent":"spawnmenu","type":"libraryfunc","description":{"text":"Adds a new tool tab (or returns an existing one by name) to the right side of the spawnmenu via the  hook.","page":"SANDBOX:AddToolMenuTabs"},"realm":"Client","args":{"arg":[{"text":"The internal name of the tab. This is used for sorting.","name":"name","type":"string"},{"text":"The 'nice' name of the tab","name":"label","type":"string","default":"name"},{"text":"The filepath to the icon of the tab. Should be a .png","name":"icon","type":"string","default":"icon16/wrench.png"}]},"rets":{"ret":{"text":"A table of tables representing categories and items in the left part of the tab. See example below to example structure.","name":"","type":"table"}}},"example":{"description":"Prints out the contents of the default Tool Tab.","code":"PrintTable( spawnmenu.GetToolMenu( \"Main\" ) )","outputfixedwidth":"Fixed width","output":"1:\n\t\t1:\n\t\t\t\tCPanelFunction\t=\tfunction: 0x48a60408\n\t\t\t\tCommand\t=\tgmod_tool axis\n\t\t\t\tControls\t=\taxis\n\t\t\t\tItemName\t=\taxis\n\t\t\t\tText\t=\t#tool.axis.name\n\t\t2:\n\t\t\t\tCPanelFunction\t=\tfunction: 0x48a6b218\n\t\t\t\tCommand\t=\tgmod_tool ballsocket\n\t\t\t\tControls\t=\tballsocket\n\t\t\t\tItemName\t=\tballsocket\n\t\t\t\tText\t=\t#tool.ballsocket.name\n\t\t3:\n\t\t\t\tCPanelFunction\t=\tfunction: 0x48a8be48\n\t\t\t\tCommand\t=\tgmod_tool elastic\n\t\t\t\tControls\t=\telastic\n\t\t\t\tItemName\t=\telastic\n\t\t\t\tText\t=\t#tool.elastic.name\n\t\t4:\n\t\t\t\tCPanelFunction\t=\tfunction: 0x48ab5998\n\t\t\t\tCommand\t=\tgmod_tool hydraulic\n\t\t\t\tControls\t=\thydraulic\n\t\t\t\tItemName\t=\thydraulic\n\t\t\t\tText\t=\t#tool.hydraulic.name\n...\n\t\tItemName\t=\tConstraints\n\t\tText\t=\t#spawnmenu.tools.constraints\n2:\n\t\t1:\n\t\t\t\tCPanelFunction\t=\tfunction: 0x3a4235c8\n\t\t\t\tCommand\t=\tgmod_tool balloon\n\t\t\t\tControls\t=\tballoon\n\t\t\t\tItemName\t=\tballoon\n\t\t\t\tText\t=\t#tool.balloon.name\n...\n\t\tItemName\t=\tConstruction\n\t\tText\t=\t#spawnmenu.tools.construction\n..."}},
{"function":{"name":"GetCustomPropTable","parent":"spawnmenu","type":"libraryfunc","description":{"text":"Similar to , but only returns spawnlists created by addons via .\n\nThese spawnlists are shown in a separate menu in-game.","page":["spawnmenu.GetPropTable","spawnmenu.AddPropCategory"]},"realm":"Client","rets":{"ret":{"text":"See  for table format.","name":"","type":"table","page":"spawnmenu.GetPropTable"}}}},
{"function":{"name":"GetTools","parent":"spawnmenu","type":"libraryfunc","description":"Gets a table of tools on the client.","realm":"Client","rets":{"ret":{"text":"A table with groups of tools, along with information on each tool.","name":"","type":"table"}}},"example":{"description":"Prints the output","code":"PrintTable( spawnmenu.GetTools() )","outputfixedwidth":"Fixed width","output":"1:\n```\n\n        Icon    =   icon16/wrench.png\n        Items:\n                1:\n                        1:\n                                CPanelFunction  =   function: 0x341391a8\n                                Command =   gmod_tool axis\n                                Controls    =   axis\n                                ItemName    =   axis\n                                Text    =   #tool.axis.name\n                        2:\n                                CPanelFunction  =   function: 0x341c7368\n                                Command =   gmod_tool ballsocket\n                                Controls    =   ballsocket\n                                ItemName    =   ballsocket\n                                Text    =   #tool.ballsocket.name\n                        3:\n                                CPanelFunction  =   function: 0x343826e8\n                                Command =   gmod_tool elastic\n                                Controls    =   elastic\n                                ItemName    =   elastic\n                                Text    =   #tool.elastic.name\n                        ...\n                        ItemName    =   Constraints\n                        Text    =   #spawnmenu.tools.constraints\n                2:\n                        1:\n                                CPanelFunction  =   function: 0x342138f0\n                                Command =   gmod_tool balloon\n                                Controls    =   balloon\n                                ItemName    =   balloon\n                                Text    =   #tool.balloon.name\n                        2:\n                                CPanelFunction  =   function: 0x340d7628\n                                Command =   gmod_tool button\n                                Controls    =   button\n                                ItemName    =   button\n                                Text    =   #tool.button.name\n                        3:\n                                CPanelFunction  =   function: 0x34302670\n                                Command =   gmod_tool duplicator\n                                Controls    =   duplicator\n                                ItemName    =   duplicator\n                                Text    =   #tool.duplicator.name\n                        ...\n                        ItemName    =   Construction\n                        Text    =   #spawnmenu.tools.construction\n               ...\n        Label   =   #spawnmenu.tools_tab\n        Name    =   AAAAAAA_Main\n```\n\n2:\n```\n\n        Icon    =   icon16/page_white_wrench.png\n        Items:\n                1:\n                        1:\n                                CPanelFunction  =   function: 0x34236090\n                                Command =   \n                                Controls    =   \n                                ItemName    =   User_Cleanup\n                                Text    =   #spawnmenu.utilities.cleanup\n                        2:\n                                CPanelFunction  =   function: 0x34236418\n                                Command =   \n                                Controls    =   \n                                ItemName    =   PhysgunSettings\n                                Text    =   #spawnmenu.utilities.physgunsettings\n                        3:\n                                CPanelFunction  =   function: 0x34232640\n                                Command =   \n                                Controls    =   \n                                ItemName    =   Undo\n                                Text    =   #spawnmenu.utilities.undo\n                        ItemName    =   User\n                        Text    =   #spawnmenu.utilities.user\n               ...\n        Label   =   #spawnmenu.utilities_tab\n        Name    =   Utilities\n```"}},
{"function":{"name":"GetContentType","parent":"spawnmenu","type":"libraryfunc","description":"Returns the function to create an vgui element for a specified content type","realm":"Client","args":{"arg":{"name":"contentType","type":"string"}},"rets":{"ret":{"text":"The panel creation function","name":"","type":"function"}}}},
{"function":{"name":"GetContentType","parent":"spawnmenu","type":"libraryfunc","description":"Returns the function to create an vgui element for a specified content type","realm":"Client","args":{"arg":{"name":"contentType","type":"string"}},"rets":{"ret":{"text":"The panel creation function","name":"","type":"function"}}}},
{"function":{"name":"DoSaveToTextFiles","parent":"spawnmenu","type":"libraryfunc","description":{"text":"Calls .","internal":"","page":"spawnmenu.SaveToTextFiles"},"realm":"Client","args":{"arg":{"text":"A table containing spawnlists.","name":"spawnlists","type":"table"}}}},
{"function":{"name":"CreateContentIcon","parent":"spawnmenu","type":"libraryfunc","description":"Creates a new content icon.","realm":"Client","args":{"arg":[{"text":"The type of the content icon.","name":"type","type":"string"},{"text":"The parent to add the content icon to.","name":"parent","type":"Panel"},{"text":"The data to send to the content icon in","name":"data","type":"table","page":"spawnmenu.AddContentType"}]},"rets":{"ret":{"text":"The created content icon, if it was returned by","name":"","type":"Panel","page":"spawnmenu.AddContentType"}}}},
{"function":{"name":"ClearToolMenus","parent":"spawnmenu","type":"libraryfunc","description":"Clears all the tools from the different tool categories and the categories itself, if ran at the correct place.\n\nSeems to only work when ran at initialization.","realm":"Client"},"example":{"description":"Clear the tool menu completely, after populating it:","code":"hook.Run( \"PopulateToolMenu\" )\n\nspawnmenu.ClearToolMenus()"}},
{"function":{"name":"AddToolTab","parent":"spawnmenu","type":"libraryfunc","description":{"text":"Adds a new tool tab to the right side of the spawnmenu via the  hook.\n\nThis function is a inferior duplicate of , just without its return value.","page":["SANDBOX:AddToolMenuTabs","spawnmenu.GetToolMenu"]},"realm":"Client","args":{"arg":[{"text":"The internal name of the tab. This is used for sorting.","name":"name","type":"string"},{"text":"The 'nice' name of the tab (Tip: )","name":"label","type":"string","default":"name","page":"language.Add"},{"text":"The filepath to the icon of the tab. Should be a .png","name":"icon","type":"string","default":"icon16/wrench.png"}]}},"example":{"description":"Creates a new tab named, \"Tab name!\" with a unique name and a wrench icon.","code":"hook.Add( \"AddToolMenuTabs\", \"myHookClass\", function()\n\tspawnmenu.AddToolTab( \"Tab name!\", \"#Unique_Name\", \"icon16/wrench.png\" )\nend )"}},
{"function":{"name":"AddToolCategory","parent":"spawnmenu","type":"libraryfunc","description":{"text":"Used to create a new category in the list inside of a spawnmenu ToolTab.\n\nYou must call this function from  for it to work properly.","page":"SANDBOX:AddToolMenuCategories"},"realm":"Client","args":{"arg":[{"text":"The ToolTab name, as created with .\n\nYou can also use the default ToolTab names \"Main\" and \"Utilities\".","name":"tab","type":"string","page":"spawnmenu.AddToolTab"},{"text":"The identifier name","name":"RealName","type":"string"},{"text":"The displayed name","name":"PrintName","type":"string"}]}},"example":[{"description":"Adds the Constraints category to the Main ToolTab. See `lua\\includes\\modules\\spawnmenu.lua`.","code":"spawnmenu.AddToolCategory( \"Main\", \"Constraints\", \"#spawnmenu.tools.constraints\" )"},{"description":"Adds the User category to the Utilities ToolTab. See `lua\\autorun\\utilities_menu.lua`.","code":"spawnmenu.AddToolCategory( \"Utilities\", \"User\", \"#spawnmenu.utilities.user\" )"}]},
{"function":{"name":"AddToolMenuOption","parent":"spawnmenu","type":"libraryfunc","description":"Adds an option to the right side of the spawnmenu","realm":"Client","args":{"arg":[{"text":"The spawnmenu tab to add into (for example \"Utilities\")","name":"tab","type":"string"},{"text":"The category to add into (for example \"Admin\")","name":"category","type":"string"},{"text":"Unique identifier of option to add","name":"class","type":"string"},{"text":"The nice name of item","name":"name","type":"string"},{"text":"Command to execute when the item is selected","name":"cmd","type":"string"},{"text":"Config name, used in older versions to load tool settings UI from a file. No longer works.","name":"config","type":"string","deprecated":"Category=No"},{"text":"A function to build the context panel. The function has one argument:\n*  pnl - A","name":"cpanel","type":"function","page":["Panel","DForm that will be shown in the context menu"]},{"text":"Allows to override the table that will be added to the tool list. Some of the fields will be overwritten by this function.","name":"table","type":"table","default":"{}"}]}},"example":{"description":"Adds a new option to the menu with a slider to change the gravity","code":"hook.Add( \"AddToolMenuCategories\", \"CustomCategory\", function()\n\tspawnmenu.AddToolCategory( \"Utilities\", \"Stuff\", \"#Stuff\" )\nend )\n\nhook.Add( \"PopulateToolMenu\", \"CustomMenuSettings\", function()\n\tspawnmenu.AddToolMenuOption( \"Utilities\", \"Stuff\", \"Custom_Menu\", \"#My Custom Menu\", \"\", \"\", function( panel )\n\t\tpanel:ClearControls()\n\t\tpanel:NumSlider( \"Gravity\", \"sv_gravity\", 0, 600 )\n\t\t-- Add stuff here\n\tend )\nend )","output":{"image":{"src":"addtoolmenuoption.png","alt":"400px"}}}},
{"function":{"name":"AddCreationTab","parent":"spawnmenu","type":"libraryfunc","description":"Inserts a new tab into the CreationMenus table, which will be used by the creation menu to generate its tabs (Spawnlists, Weapons, Entities, etc.)","realm":"Client","args":{"arg":[{"text":"What text will appear on the tab (I.E Spawnlists).","name":"name","type":"string"},{"text":"The function called to generate the content of the tab.","name":"function","type":"function"},{"text":"Path to the material that will be used as an icon on the tab.","name":"material","type":"string","default":"icon16/exclamation.png"},{"text":"The order in which this tab should be shown relative to the other tabs on the creation menu.","name":"order","type":"number","default":"1000"},{"text":"The tooltip to be shown for this tab.","name":"tooltip","type":"string","default":"nil"}]}},"example":{"description":"An excerpt from the Dupe creation menu tab.","code":"spawnmenu.AddCreationTab( \"#spawnmenu.category.dupes\", function()\n\n    HTML = vgui.Create( \"DHTML\" );\n        JS_Language( HTML )\n        HTML:SetAllowLua( true );\n        HTML:OpenURL( \"asset://garrysmod/html/dupes.html\" );\n        HTML:Call( \"SetDupeSaveState( \" .. tostring( DupeInClipboard ).. \" );\" );        \n\n    return HTML\n\nend, \"icon16/control_repeat_blue.png\", 200 )","output":"A new tab named \"Dupes\" will be placed in the creation menu."}},
{"function":{"name":"ActiveControlPanel","parent":"spawnmenu","type":"libraryfunc","description":"Returns currently opened control panel of a tool, post process effect or some other menu in spawnmenu.","realm":"Client","rets":{"ret":{"text":"The currently opened control panel, if any.","name":"","type":"Panel"}}}},
{"function":{"name":"AddContentType","parent":"spawnmenu","type":"libraryfunc","description":{"text":"Registers a new content type that is saveable into spawnlists.\nCreated/called by .","page":"spawnmenu.CreateContentIcon"},"realm":"Client","args":{"arg":[{"text":"An unique name of the content type.","name":"name","type":"string"},{"text":"A function that is called whenever we need create a new panel for this content type.\n\nIt has two arguments:\n\n\n container - The container/parent of the new panel\n\n\n data - Data for the content type passed from","name":"constructor","type":"function","page":["Panel","table","spawnmenu.CreateContentIcon"]}]}},"example":{"description":"A simple header content type.","code":"spawnmenu.AddContentType( \"header\", function( container, obj )\n\n\tif ( !obj.text or type(obj.text) != \"string\" ) then return end\n\n\tlocal label = vgui.Create( \"ContentHeader\", container )\n\tlabel:SetText( obj.text )\n\t\n\tcontainer:Add( label )\n\t\nend )"}},
{"function":{"name":"AddPropCategory","parent":"spawnmenu","type":"libraryfunc","description":{"text":"Used to add addon spawnlists to the spawnmenu tree. This function should be called within .\n\nAddon spawnlists will not save to disk if edited.","page":"SANDBOX:PopulatePropMenu","warning":"You should never try to modify player customized spawnlists!"},"realm":"Client","args":{"arg":[{"text":"A unique classname of the list.","name":"classname","type":"string"},{"text":"The name of the category displayed to the player, e.g. `Comic Props`.","name":"name","type":"string"},{"text":"A table of entries for the spawn menu. It must be numerically indexed.\n\nEach member of the table is a sub-table containing a type member, and other members depending on the type.\n\n|  type | Description | Other members |\n| ------------- | ---------- | ----------------- |\n| \"header\" | a simple header for organization |  text - The text that the header will display |\n| \"model\" | spawns a model where the player is looking |  model - The path to the model file \t  skin - The skin for the model to use (optional)   body - The bodygroups for the model (optional)   wide - The width of the spawnicon (optional)   tall - The height of the spawnicon (optional) |\n| \"entity\" | spawns an entity where the player is looking(appears in the Entities tab by default) |  spawnname - The filename of the entity, for example \"sent_ball\"   nicename - The name of the entity to display   material - The icon to display, this should be set to \"entities/","name":"contents","type":"table","page":["string","string","string","number","string","number","number","string","string","string"],"br":["","","","","","",""],"sent_name":{"text":".png\" \t admin - Whether the entity is only spawnable by admins (optional) |\n| \"vehicle\" | spawns a vehicle where the player is looking  (appears in the Vehicles tab by default) |  spawnname - The filename of the vehicle   nicename - The name of the vehicle to display   material - The icon to display   admin - Whether the vehicle is only spawnable by admins (optional) |\n| \"npc\" | spawns an NPC where the player is looking  (appears in the NPCs tab by default) |  spawnname - The spawn name of the NPC \t nicename - The name to display   material - The icon to display   weapon - A table of potential weapons (each a string) to give to the NPC. When spawned, one of these will be chosen randomly each time.   admin - Whether the NPC is only spawnable by admins (optional) |\n| \"weapon\" | When clicked, gives the player a weapon;  When middle-clicked, spawns a weapon where the player is looking  (appears in the Weapons tab by default) | spawnname - The spawn name of the weapon   nicename - The name to display   material - The icon to display   admin - Whether the weapon is only spawnable by admins (optional) |","br":["","","","","","","","","","","","","","","",""],"page":["boolean","string","string","string","boolean","string","string","string","table","boolean","string","string","string","boolean"]}},{"text":"The icon to use in the tree.","name":"icon","type":"string"},{"text":"The unique ID number for the spawnlist category. Used to make sub categories. See \"parentID\" parameter below. If not set, it will be automatically set to ever increasing number, starting with 1000.","name":"id","type":"number","default":"1000"},{"text":"The unique ID of the parent category. This will make the created category a subcategory of category with given unique ID. `0` makes this a base category (such as `Builder`).","name":"parentID","type":"number","default":"0"},{"text":"The needed game for this prop category, if one is needed. If the specified game is not mounted, the category isn't shown. This uses the shortcut name, e.g. `cstrike`, and not the Steam AppID.","name":"needsApp","type":"string","default":""}]}},"example":{"description":"Create a spawn menu with two icons for each type","code":"hook.Add(\"PopulatePropMenu\", \"Add Two Of Each\", function()\n\t\n\tlocal contents = {}\n\t\n\t-- Props\n\ttable.insert( contents, {\n\t\ttype = \"header\",\n\t\ttext = \"Props\"\n\t} )\n\ttable.insert( contents, {\n\t\ttype = \"model\",\n\t\tmodel = \"models/props_c17/oildrum001.mdl\"\n\t} )\n\ttable.insert( contents, {\n\t\ttype = \"model\",\n\t\tmodel = \"models/props_wasteland/cargo_container01.mdl\",\n\t\tskin = 1,\n\t\twide = 128,\n\t\ttall = 64\n\t} )\n\n\t-- Entities\n\ttable.insert( contents, {\n\t\ttype = \"header\",\n\t\ttext = \"Entities\"\n\t} )\n\ttable.insert( contents, {\n\t\ttype = \"entity\",\n\t\tspawnname = \"sent_ball\",\n\t\tnicename = \"Bouncy Ball\",\n\t\tmaterial = \"entities/sent_ball.png\"\n\t} )\n\ttable.insert( contents, {\n\t\ttype = \"entity\",\n\t\tspawnname = \"combine_mine\",\n\t\tnicename = \"Hopper Mine\",\n\t\tmaterial = \"entities/combine_mine.png\"\n\t} )\n\n\t-- Vehicles\n\ttable.insert( contents, {\n\t\ttype = \"header\",\n\t\ttext = \"Vehicles\"\n\t} )\n\ttable.insert( contents, {\n\t\ttype = \"vehicle\",\n\t\tspawnname = \"Airboat\",\n\t\tnicename = \"Half-Life 2 Airboat\",\n\t\tmaterial = \"entities/Airboat.png\"\n\t} )\n\ttable.insert( contents, {\n\t\ttype = \"vehicle\",\n\t\tspawnname = \"Chair_Office2\",\n\t\tnicename = \"Executive's Chair\",\n\t\tmaterial = \"entities/Chair_Office2.png\"\n\t} )\n\n\t-- NPCs\n\ttable.insert( contents, {\n\t\ttype = \"header\",\n\t\ttext = \"NPCs\"\n\t} )\n\ttable.insert( contents, {\n\t\ttype = \"npc\",\n\t\tspawnname = \"npc_citizen\",\n\t\tnicename = \"A random citizen\",\n\t\tmaterial = \"entities/npc_citizen.png\",\n\t\tweapon = { \"weapon_smg1\", \"weapon_crowbar\" }\n\t} )\n\ttable.insert( contents, {\n\t\ttype = \"npc\",\n\t\tspawnname = \"npc_headcrab\",\n\t\tnicename = \"Headhumper\",\n\t\tmaterial = \"entities/npc_headcrab.png\"\n\t} )\n\n\t-- Weapons\n\ttable.insert( contents, {\n\t\ttype = \"header\",\n\t\ttext = \"Weapons\"\n\t} )\n\ttable.insert( contents, {\n\t\ttype = \"weapon\",\n\t\tspawnname = \"weapon_crowbar\",\n\t\tnicename = \"Crowbar\",\n\t\tmaterial = \"entities/weapon_crowbar.png\",\n\t} )\n\ttable.insert( contents, {\n\t\ttype = \"weapon\",\n\t\tspawnname = \"weapon_smg1\",\n\t\tnicename = \"SMG\",\n\t\tmaterial = \"entities/weapon_smg1.png\",\n\t} )\n\n\tspawnmenu.AddPropCategory( \"TwoOfEach\", \"Two of each type\", contents, \"icon16/box.png\" )\nend )","output":{"image":{"src":"AddPropCategory_Two_of_each.jpeg"}}}},
{"function":{"name":"ActivateToolPanel","parent":"spawnmenu","type":"libraryfunc","description":"Activates tools context menu in specified tool tab.","realm":"Client","args":{"arg":[{"text":"The tabID of the tab to open the context menu in","name":"tab","type":"number"},{"text":"The control panel to open","name":"cp","type":"Panel"}]}}},
{"function":{"name":"ActivateTool","parent":"spawnmenu","type":"libraryfunc","description":"Activates a tool, opens context menu and brings up the tool gun.","realm":"Client","args":{"arg":{"text":"Tool class/file name","name":"tool","type":"string"}}}},
{"function":{"name":"PlayURL","parent":"sound","type":"libraryfunc","description":{"text":"Allows you to play external sound files, as well as online radio streams.\nYou can find a list of all error codes [here](http://www.un4seen.com/doc/#bass/BASS_ErrorGetCode.html)\n\nFor offline file playback, see .","page":"sound.PlayFile","bug":{"text":"Due to a bug with [BASS](http://www.un4seen.com/), AAC codec streams cannot be played in 3D mode.","issue":"2296"}},"realm":"Client","args":{"arg":[{"text":"The URL of the sound to play","name":"url","type":"string"},{"text":"Flags for the sound. Can be one or more of following, separated by a space (\" \"):\n* 3d - Makes the sound 3D, so you can set its position\n* mono - Forces the sound to have only one channel\n* noplay - Forces the sound not to play as soon as this function is called\n* noblock - Disables streaming in blocks. It is more resource-intensive, but it is required for .\n\n\n\n\nIf you don't want to use any of the above, you can just leave it as \"\".","name":"flags","type":"string","page":"IGModAudioChannel:SetTime"},{"text":"Callback function that is called as soon as the the stream is loaded. It has next arguments:\n\n\n soundchannel - The sound channel\n\n\n errorID - ID of an error, if an error has occured\n\n\n errorName - Name of an error, if an error has occured","name":"callback","type":"function","page":["IGModAudioChannel","number","string"]}]}},"example":{"description":"Example usage of the function.","code":"sound.PlayURL ( \"URL\", \"3d\", function( station )\n\tif ( IsValid( station ) ) then\n\n\t\tstation:SetPos( LocalPlayer():GetPos() )\n\t\n\t\tstation:Play()\n\n\telse\n\n\t\tLocalPlayer():ChatPrint( \"Invalid URL!\" )\n\n\tend\nend )"}},
{"function":{"name":"PlayFile","parent":"sound","type":"libraryfunc","description":{"text":"Plays a file from GMod directory. You can find a list of all error codes [here](http://www.un4seen.com/doc/#bass/BASS_ErrorGetCode.html)\n\nFor external file/stream playback, see .","page":"sound.PlayURL","bug":[{"text":"This fails for looping .wav files in 3D mode.","issue":"1752"},{"text":"This fails with unicode file names.","issue":"2304"}]},"realm":"Client","args":{"arg":[{"text":"The path to the file to play.\n\nUnlike other sound functions and structures, the path is relative to `garrysmod/` instead of `garrysmod/sound/`","name":"path","type":"string"},{"text":"Flags for the sound. Can be one or more of following, separated by a space (\" \"):\n* 3d - Makes the sound 3D, so you can set its position\n* mono - Forces the sound to have only one channel\n* noplay - Forces the sound not to play as soon as this function is called\n* noblock - Disables streaming in blocks. It is more resource-intensive, but it is required for .\n\n\n\n\nIf you don't want to use any of the above, you can just leave it as \"\".","name":"flags","type":"string","page":"IGModAudioChannel:SetTime"},{"text":"Callback function that is called as soon as the the stream is loaded. It has next arguments:\n*  soundchannel - The sound channel. Will be nil if an error occured.\n*  errorID - ID of an error if an error has occured. Will be nil, otherwise.\n*  errorName - Name of an error if an error has occured. Will be nil, otherwise.","name":"callback","type":"function","page":["IGModAudioChannel","number","string"]}]}},"example":{"description":"Plays a piece of music from Half-Life 2.","code":"sound.PlayFile( \"sound/music/hl2_song12_long.mp3\", \"noplay\", function( station, errCode, errStr )\n\tif ( IsValid( station ) ) then\n\t\tstation:Play()\n\telse\n\t\tprint( \"Error playing sound!\", errCode, errStr )\n\tend\nend )"}},
{"function":{"name":"PlayFile","parent":"sound","type":"libraryfunc","description":{"text":"Plays a file from GMod directory. You can find a list of all error codes [here](http://www.un4seen.com/doc/#bass/BASS_ErrorGetCode.html)\n\nFor external file/stream playback, see .","page":"sound.PlayURL","bug":[{"text":"This fails for looping .wav files in 3D mode.","issue":"1752"},{"text":"This fails with unicode file names.","issue":"2304"}]},"realm":"Client","args":{"arg":[{"text":"The path to the file to play.\n\nUnlike other sound functions and structures, the path is relative to `garrysmod/` instead of `garrysmod/sound/`","name":"path","type":"string"},{"text":"Flags for the sound. Can be one or more of following, separated by a space (\" \"):\n* 3d - Makes the sound 3D, so you can set its position\n* mono - Forces the sound to have only one channel\n* noplay - Forces the sound not to play as soon as this function is called\n* noblock - Disables streaming in blocks. It is more resource-intensive, but it is required for .\n\n\n\n\nIf you don't want to use any of the above, you can just leave it as \"\".","name":"flags","type":"string","page":"IGModAudioChannel:SetTime"},{"text":"Callback function that is called as soon as the the stream is loaded. It has next arguments:\n*  soundchannel - The sound channel. Will be nil if an error occured.\n*  errorID - ID of an error if an error has occured. Will be nil, otherwise.\n*  errorName - Name of an error if an error has occured. Will be nil, otherwise.","name":"callback","type":"function","page":["IGModAudioChannel","number","string"]}]}},"example":{"description":"Plays a piece of music from Half-Life 2.","code":"sound.PlayFile( \"sound/music/hl2_song12_long.mp3\", \"noplay\", function( station, errCode, errStr )\n\tif ( IsValid( station ) ) then\n\t\tstation:Play()\n\telse\n\t\tprint( \"Error playing sound!\", errCode, errStr )\n\tend\nend )"}},
{"function":{"name":"Play","parent":"sound","type":"libraryfunc","description":{"text":"Plays a sound from the specified position in the world.\nIf you want to play a sound without a position, such as a UI sound, use  instead.","page":"surface.PlaySound"},"realm":"Shared","args":{"arg":[{"text":"A string path to the sound.","name":"Name","type":"string"},{"text":"A vector describing where the sound should play.","name":"Pos","type":"Vector"},{"text":"Sound level in decibels. 75 is normal. Ranges from 20 to 180, where 180 is super loud. This affects how far away the sound will be heard.","name":"Level","type":"number"},{"text":"An integer describing the sound pitch. Range is from 0 to 255. 100 is normal pitch.","name":"Pitch","type":"number"},{"text":"A float ranging from 0-1 describing the output volume of the sound.","name":"Volume","type":"number"}]}},"example":{"description":"Plays an explosion sound at the (0, 0, 0) map coordinates.","code":"sound.Play( \"ambient/explosions/exp1.wav\", Vector(0, 0, 0) )"}},
{"function":{"name":"GetProperties","parent":"sound","type":"libraryfunc","description":"Returns properties of the soundscript.","realm":"Shared","args":{"arg":{"text":"The name of the sound script","name":"name","type":"string"}},"rets":{"ret":{"text":"The properties of the soundscript. See","name":"","type":"table","page":"Structures/SoundData"}}}},
{"function":{"name":"AddSoundOverrides","parent":"sound","type":"libraryfunc","description":"Overrides sounds defined inside of a txt file; typically used for adding map-specific sounds.","realm":"Shared","args":{"arg":{"text":"Path to the script file to load.","name":"filepath","type":"string"}}},"example":{"description":"Adds and overrides all sounds defined in scripts/override_test.txt","code":"sound.AddSoundOverrides(\"scripts/override_test.txt\")","output":"SoundEmitter:  adding map sound overrides from scripts/override_test.txt [1 total, 1 replacements, 0 duplicated replacements]\n\n(Displayed in the console)"}},
{"function":{"name":"Add","parent":"sound","type":"libraryfunc","description":"Creates a sound script. It can also override sounds, which seems to only work when set on the server.","realm":"Shared","args":{"arg":{"text":"The sounds properties. See","name":"soundData","type":"table","page":"Structures/SoundData"}}},"example":{"description":"Creates a sound script. It will automatically vary in pitch and be played in a given audio channel to better control which sounds mix with which sounds and how.\n\nIn this example, the file location could be: ( Choose one )\n* garrysmod/sound/vehicles/enzo/idle.wav\n* garrysmod/gamemodes/MyCoolGameMode/content/sound/vehicles/enzo/idle.wav\n* garrysmod/addons/myCoolAddon/sound/vehicles/enzo/idle.wav\n* garrysmod/addons/myCoolAddon/gamemodes/MyCoolGameMode/content/sound/vehicles/enzo/idle.wav","code":"sound.Add( {\n\tname = \"enzo_engine_idle\",\n\tchannel = CHAN_STATIC,\n\tvolume = 1.0,\n\tlevel = 80,\n\tpitch = {95, 110},\n\tsound = \"vehicles/enzo/idle.wav\"\n} )","output":{"text":"You can now play your custom **sound script** with  like so:\n\n```\nEntity( 1 ):EmitSound( \"enzo_engine_idle\" )\n```","page":"Entity:EmitSound"}}},
{"function":{"name":"Query","parent":"serverlist","type":"libraryfunc","description":"Queries the master server for server list.","realm":"Menu","args":{"arg":{"text":"The information about what kind of servers we want. See .","name":"data","type":"table","page":"Structures/ServerQueryData"}}}},
{"function":{"name":"Generate","parent":"sound","type":"libraryfunc","description":{"text":"Creates a sound from a function.","bug":[{"text":"This function cannot generate sounds that have a duration of less than 1 second.","issue":"3360"},{"text":"Sounds persist between disconnects.","issue":"4082"}]},"realm":"Client","args":{"arg":[{"text":"An unique identified for the sound.","name":"indentifier","type":"string","warning":"You cannot override already existing ones."},{"text":"The sample rate of the sound. Must be 11025, 22050 or 44100.","name":"samplerate","type":"number"},{"text":"The length in seconds of the sound to generate.","name":"length","type":"number"},{"text":"A function which will be called to generate every sample on the sound. This function gets the current sample number passed as the first argument. The return value must be between -1.0 and 1.0. Other values will wrap back to the -1 to 1 range and basically clip. There are 65535 possible quantifiable values between -1 and 1.","name":"callback","type":"function"}]}},"example":{"description":"Plays a 2000 Hz sine wave at maximum volume","code":"local frequency = 2000 -- Hz\nlocal samplerate = 44100\n\nlocal function data(t)\n    return math.sin( t * math.pi * 2 / samplerate * frequency )\nend\n\ntest_sound_id = test_sound_id and test_sound_id + 1 or 10\n\nsound.Generate   (\"testgen\" .. test_sound_id, samplerate, 2, data)\nsurface.PlaySound(\"testgen\" .. test_sound_id)"}},
{"function":{"name":"AddCurrentServerToFavorites","parent":"serverlist","type":"libraryfunc","description":{"text":"Adds current server the player is on to their favorites.","internal":""},"realm":"Menu"}},
{"function":{"name":"PlayerList","parent":"serverlist","type":"libraryfunc","description":"Queries a server for its player list.","realm":"Menu","args":{"arg":[{"text":"The IP address of the server, including the port.","name":"ip","type":"string"},{"text":"The function to be called if and when the request finishes. Function has one argument, a table containing tables with player info. \n\nEach table with player info has next fields:\n\n\n time - The amount of time the player is playing on the server, in seconds\n\n\n name - The player name\n\n\n score - The players score","name":"callback","type":"function","page":["number","string","number"]}]}}},
{"function":{"name":"GetResults","parent":"search","type":"libraryfunc","description":"Retrieves search results.","realm":"Client","args":{"arg":{"text":"Search query","name":"query","type":"string"}},"rets":{"ret":{"text":"A table of results ( Maximum 1024 items )","name":"","type":"table"}}}},
{"function":{"name":"AddProvider","parent":"search","type":"libraryfunc","description":"Adds a search result provider. For examples, see gamemodes/sandbox/gamemode/cl_search_models.lua","realm":"Client","args":{"arg":[{"text":"Provider function. It has one argument:  searchQuery\nYou must return a list of tables structured like this:\n*  text - Text to \"Copy to clipboard\"\n*  func - Function to use/spawn the item\n*  icon - A panel to add to spawnmenu\n*  words - A table of words?","name":"provider","type":"function","page":["string","string","function","Panel","table"]},{"text":"If provided, ensures that only one provider exists with the given ID at a time.","name":"id","type":"string","default":"nil"}]}}},
{"function":{"name":"Register","parent":"scripted_ents","type":"libraryfunc","description":{"text":"Registers an ENT table with a classname. Reregistering an existing classname will automatically update the functions of all existing entities of that class.","bug":{"text":"Sub-tables provided in the first argument will not carry over their metatable, and will receive a BaseClass key if the table was merged with the base's. Userdata references, which includes Vectors, Angles, Entities, etc. will not be copied.","pull":"1300"}},"realm":"Shared","args":{"arg":[{"text":"The ENT table to register","name":"ENT","type":"table"},{"text":"The classname to register","name":"classname","type":"string"}]}},"example":{"code":"local ENT = scripted_ents.Get(\"gmod_button\")\nlocal oldUse = ENT.Use\nfunction ENT:Use( activator, caller, type, value )\n print( tostring( self.Entity )..\" just got pressed!\" )\n oldUse( self,activator, caller, type, value )\nend\nscripted_ents.Register(ENT,\"gmod_button\")"}},
{"function":{"name":"OnLoaded","parent":"scripted_ents","type":"libraryfunc","description":{"text":"Called after all ENTS have been loaded and runs  on each one.\n\nYou can retrieve all the currently registered ENTS with .","internal":"","page":["baseclass.Set","scripted_ents.GetList"],"note":{"text":"This is not called after an ENT auto refresh, and thus the inherited baseclass functions retrieved with  will not be updated","page":"baseclass.Get"}},"realm":"Shared"}},
{"function":{"name":"IsBasedOn","parent":"scripted_ents","type":"libraryfunc","description":"Checks if name is based on base","realm":"Shared","args":{"arg":[{"text":"Entity's class name to be checked","name":"name","type":"string"},{"text":"Base class name to be checked","name":"base","type":"string"}]},"rets":{"ret":{"text":"Returns true if class name is based on base, else false.","name":"","type":"boolean"}}},"example":{"description":"See if gmod_hands is based on base_anim.","code":"print(scripted_ents.IsBasedOn(\"gmod_hands\", \"base_anim\"))","output":"true"}},
{"function":{"name":"GetStored","parent":"scripted_ents","type":"libraryfunc","description":"Returns the actual ENT table for a class. Modifying functions/variables in this table will change newly spawned entities","realm":"Shared","args":{"arg":{"text":"The classname of the ENT table to return","name":"classname","type":"string"}},"rets":{"ret":{"text":"entTable","name":"","type":"table"}}},"example":{"description":"Modifies all newly spawned gmod_button's to print a message on use","code":"local ENT = scripted_ents.GetStored(\"gmod_button\").t\nlocal oldUse = ENT.Use\nfunction ENT:Use(activator, caller, type, value)\n print(tostring(self.Entity)..\" just got pressed!\")\n oldUse(self,activator, caller, type, value)\nend"}},
{"function":{"name":"GetSpawnable","parent":"scripted_ents","type":"libraryfunc","description":"Returns a list of all ENT tables which contain either ENT.Spawnable or ENT.AdminSpawnable","realm":"Shared","rets":{"ret":{"text":"A table of s","name":"","type":"table","page":"Structures/ENT"}}}},
{"function":{"name":"GetType","parent":"scripted_ents","type":"libraryfunc","description":"Returns the 'type' of a class, this will one of the following: 'anim', 'ai', 'brush', 'point'.","realm":"Shared","args":{"arg":{"text":"The classname to check","name":"classname","type":"string"}},"rets":{"ret":{"text":"type","name":"","type":"string"}}}},
{"function":{"name":"GetMember","parent":"scripted_ents","type":"libraryfunc","description":"Retrieves a member of entity's table.","realm":"Shared","args":{"arg":[{"text":"Entity's class name","name":"class","type":"string"},{"text":"Name of member to retrieve","name":"name","type":"string"}]},"rets":{"ret":{"text":"The member or nil if failed","name":"","type":"any"}}}},
{"function":{"name":"Alias","parent":"scripted_ents","type":"libraryfunc","description":"Defines an alias string that can be used to refer to another classname","realm":"Shared","args":{"arg":[{"text":"A new string which can be used to refer to another classname","name":"alias","type":"string"},{"text":"The classname the alias should refer to","name":"classname","type":"string"}]}}},
{"function":{"name":"Get","parent":"scripted_ents","type":"libraryfunc","description":"Returns a copy of the ENT table for a class, including functions defined by the base class","realm":"Shared","args":{"arg":{"text":"The classname of the ENT table to return, can be an alias","name":"classname","type":"string"}},"rets":{"ret":{"text":"entTable","name":"","type":"table"}}},"example":{"description":"Use of PrintTable function to print the contents of base_entity SENT table.","code":"PrintTable(scripted_ents.Get(\"base_entity\"))","outputfixedwidth":"Fixed width","output":"AdminOnly\t=\tfalse\nBase\t=\tbase_entity\nClassName\t=\tbase_entity\nFolder\t=\tentities/base_entity\nInitialize\t=\tfunction: 0x2a205b50\nOnRestore\t=\tfunction: 0x2a6d4b90\nSpawnable\t=\tfalse\nThink\t=\tfunction: 0x2a153780\nType\t=\tanim"}},
{"function":{"name":"WriteVar","parent":"saverestore","type":"libraryfunc","description":"Writes a variable to the save game file that is being saved.","realm":"Shared","args":{"arg":[{"text":"The value to save.\n\nIt can be one of the following types: , , , , ,  or .","name":"value","type":"any","page":["number","boolean","string","Entity","Angle","Vector","table"]},{"text":"The save object to write the variable to.","name":"save","type":"ISave"}]}}},
{"function":{"name":"GetList","parent":"scripted_ents","type":"libraryfunc","description":"Returns a copy of the list of all ENT tables registered","realm":"Shared","rets":{"ret":{"text":"A table of all entities in the following format: (table keys are the classnames)\n*  t - The \n*  isBaseType - Always true\n*  Base - The entity base (note capital B in the key name)\n*  type - The entity type","name":"","type":"table","page":["table","ENT associated with the entity","boolean","string","string"]}}}},
{"function":{"name":"WritableKeysInTable","parent":"saverestore","type":"libraryfunc","description":"Returns how many writable keys are in the given table.","realm":"Shared","args":{"arg":{"text":"The table to test.","name":"table","type":"table"}},"rets":{"ret":{"text":"The number of keys that can be written with .","name":"","type":"number","page":"saverestore.WriteTable"}}}},
{"function":{"name":"WriteTable","parent":"saverestore","type":"libraryfunc","description":"Write a table to a save game file that is being saved.","realm":"Shared","args":{"arg":[{"text":"The table to write","name":"table","type":"table"},{"text":"The save object to write the table to.","name":"save","type":"ISave"}]}}},
{"function":{"name":"SaveGlobal","parent":"saverestore","type":"libraryfunc","description":{"text":"Called by engine when a save is being saved.\n\nThis handles saving gamemode and calls all of the hooks added with .","internal":"","page":"saverestore.AddSaveHook"},"realm":"Shared","args":{"arg":{"text":"The save object to write data into the save file.","name":"save","type":"ISave"}}}},
{"function":{"name":"SaveEntity","parent":"saverestore","type":"libraryfunc","description":{"text":"Saves entitys  to the save game file that is being saved.","page":"Entity:GetTable"},"realm":"Shared","args":{"arg":[{"text":"The entity to save  of.","name":"ent","type":"Entity","page":"Entity:GetTable"},{"text":"The save object to save  to.","name":"save","type":"ISave","page":"Entity:GetTable"}]}}},
{"function":{"name":"ReadVar","parent":"saverestore","type":"libraryfunc","description":"Loads a variable from the save game file that is being loaded.\n\nVariables will be read in the save order you have saved them.","realm":"Shared","args":{"arg":{"text":"The restore object to read variables from.","name":"save","type":"IRestore"}},"rets":{"ret":{"text":"The variable that was read, if any.","name":"","type":"any"}}}},
{"function":{"name":"ReadTable","parent":"saverestore","type":"libraryfunc","description":"Reads a table from the save game file that is being loaded.","realm":"Shared","args":{"arg":{"text":"The restore object to read the table from.","name":"save","type":"IRestore"}},"rets":{"ret":{"text":"The table that has been read, if any","name":"","type":"table"}}}},
{"function":{"name":"PreRestore","parent":"saverestore","type":"libraryfunc","description":{"text":"Called by the engine just before  is.","internal":"","page":"saverestore.LoadGlobal"},"realm":"Shared"}},
{"function":{"name":"PreSave","parent":"saverestore","type":"libraryfunc","description":{"text":"Called by the engine just before  is.","internal":"","page":"saverestore.SaveGlobal"},"realm":"Shared"}},
{"function":{"name":"LoadGlobal","parent":"saverestore","type":"libraryfunc","description":{"text":"Called by engine when a save is being loaded.\n\nThis handles loading gamemode and calls all of the hooks added with .","internal":"","page":"saverestore.AddRestoreHook"},"realm":"Shared","args":{"arg":{"text":"The restore object to read data from the save file with.","name":"save","type":"IRestore"}}}},
{"function":{"name":"LoadEntity","parent":"saverestore","type":"libraryfunc","description":{"text":"Loads  from the save game file that is being loaded and merges it with the given entitys .","page":["Entity:GetTable","Entity:GetTable"]},"realm":"Shared","args":{"arg":[{"text":"The entity which will receive the loaded values from the save.","name":"ent","type":"Entity"},{"text":"The restore object to read the  from.","name":"save","type":"IRestore","page":"Entity:GetTable"}]}}},
{"function":{"name":"AddSaveHook","parent":"saverestore","type":"libraryfunc","description":"Adds a save hook for the Half-Life 2 save system. You can this to carry data through level transitions in Half-Life 2.","realm":"Shared","args":{"arg":[{"text":"The unique identifier for this hook.","name":"identifier","type":"string"},{"text":"The function to be called when an engine save is being saved. It has one argument:\n\n\n save - The save object to be used to write data to the save file that is being saved\n\n\n\n\n\nYou can also use those functions to save data:","name":"callback","type":"function","page":["ISave","saverestore.WriteVar","saverestore.WriteTable","saverestore.SaveEntity"]}]}},"example":{"description":"Example usage.","code":"saverestore.AddSaveHook( \"HookNameHere\", function( save )\n\tsaverestore.WriteTable( { \"test\" }, save )\nend )"}},
{"function":{"name":"AddRestoreHook","parent":"saverestore","type":"libraryfunc","description":"Adds a restore/load hook for the Half-Life 2 save system.","realm":"Shared","args":{"arg":[{"text":"The unique identifier for this hook.","name":"identifier","type":"string"},{"text":"The function to be called when an engine save is being loaded. It has one argument:\n\n\n save - The restore object to be used to read data from save file that is being loaded\n\n\n\n\n\nYou can also use those functions to read data:","name":"callback","type":"function","page":["IRestore","saverestore.ReadVar","saverestore.ReadTable","saverestore.LoadEntity"]}]}},"example":{"description":"Example usage.","code":"saverestore.AddRestoreHook( \"HookNameHere\", function( save )\n\tPrintTable( saverestore.ReadTable( save ) )\nend )","output":{"text":"If you used example from \n\n```\n1 = Test\n```","page":"saverestore.AddSaveHook"}}},
{"function":{"name":"AddWorkshop","parent":"resource","type":"libraryfunc","description":{"text":"Adds a workshop addon for the client to download before entering the server.\n\nHaving the raw files from a workshop item does not count as having already downloaded it.\nSo players who previously downloaded a map through Fast Download will have to re-download it if you use the workshop.\n\nYou should try to only add addons that have custom content ( models, sounds, etc ).\n\nGamemodes that are  are automatically added to this list - so there's no need to add them.\n\n\nThe server's current map is also automatically added, if it is loaded from a workshop addon.","br":"","page":",workshop enabledGamemode_Creation#Gamemode_Text_File","warning":{"text":"This will not \"install\" the addon on your server, see  for installing Steam Workshop addons onto your servers","page":"Workshop for Dedicated Servers"}},"realm":"Server","file_name":"src/garrysmod/Library/gl_resource.cpp","file_line":"107","args":{"arg":{"text":"The workshop id of the file. This cannot be a collection.","name":"workshopid","type":"string"}}},"example":{"description":"Adds the Achievement Viewer addon (workshop id 104606562).\n\n\nAny clients that join will download this addon if they haven't previously downloaded it from the workshop or from the server (via the workshop).\n\nYou get the ID from the URL of the workshop addon.\n\n\nFor example, here's the URL of the Achievement Viewer addon's page:\n\n\nhttp://steamcommunity.com/sharedfiles/filedetails/?id=104606562\n\n\nThe ID is 104606562.","code":"resource.AddWorkshop( \"104606562\" )","output":"Players joining the server will now be forced to download the Achievement Viewer addon."}},
{"function":{"name":"AddSingleFile","parent":"resource","type":"libraryfunc","description":{"text":"Adds the specified file to the files the client should download.","warning":"There's a 8192 downloadable file limit.","note":{"text":"If you need more than 8192, consider using Workshop addons - . You should also consider the fact that you have way too many downloads. This limit is shared among all resource.Add functions.","page":"resource.AddWorkshop"}},"realm":"Server","args":{"arg":{"text":"Path of the file to be added, relative to garrysmod/","name":"path","type":"string"}}}},
{"function":{"name":"UpdateScreenEffectTexture","parent":"render","type":"libraryfunc","description":{"text":"Copies the entire screen to the screen effect texture, which can be acquired via . This function is mainly intended to be used in","page":["render.GetScreenEffectTexture","GM:RenderScreenspaceEffects"]},"realm":"Client"}},
{"function":{"name":"UpdateScreenEffectTexture","parent":"render","type":"libraryfunc","description":{"text":"Copies the entire screen to the screen effect texture, which can be acquired via . This function is mainly intended to be used in","page":["render.GetScreenEffectTexture","GM:RenderScreenspaceEffects"]},"realm":"Client"}},
{"function":{"name":"UpdateRefractTexture","parent":"render","type":"libraryfunc","description":{"text":"Pretty much alias of  but does not return the texture.","page":"render.UpdatePowerOfTwoTexture"},"realm":"Client"}},
{"function":{"name":"UpdateFullScreenDepthTexture","parent":"render","type":"libraryfunc","description":{"text":"Updates the texture returned by .\n\nSilently fails if  returns false.","page":["render.GetFullScreenDepthTexture","render.SupportsPixelShaders_2_0"]},"realm":"Client"}},
{"function":{"name":"UpdateFullScreenDepthTexture","parent":"render","type":"libraryfunc","description":{"text":"Updates the texture returned by .\n\nSilently fails if  returns false.","page":["render.GetFullScreenDepthTexture","render.SupportsPixelShaders_2_0"]},"realm":"Client"}},
{"function":{"name":"TurnOnToneMapping","parent":"render","type":"libraryfunc","description":"Enables HDR tone mapping which influences the brightness.","realm":"Client"}},
{"function":{"name":"SuppressEngineLighting","parent":"render","type":"libraryfunc","description":{"text":"Suppresses or enables any engine lighting for any upcoming render operation.","bug":{"text":"This does not affect es.","issue":"4070","page":"IMesh"}},"realm":"Client","args":{"arg":{"text":"True to suppress false to enable.","name":"suppressLighting","type":"boolean"}}}},
{"function":{"name":"SupportsPixelShaders_2_0","parent":"render","type":"libraryfunc","description":"Returns if the current settings and the system allow the usage of pixel shaders 2.0.","realm":"Client","rets":{"ret":{"text":"Whether Pixel Shaders 2.0 are supported or not.","name":"","type":"boolean"}}}},
{"function":{"name":"SupportsVertexShaders_2_0","parent":"render","type":"libraryfunc","description":"Returns if the current settings and the system allow the usage of vertex shaders 2.0.","realm":"Client","rets":{"ret":{"text":"Whether Vertex Shaders 2.0 are supported or not.","name":"","type":"boolean"}}}},
{"function":{"name":"SupportsPixelShaders_1_4","parent":"render","type":"libraryfunc","description":"Returns if the current settings and the system allow the usage of pixel shaders 1.4.","realm":"Client","rets":{"ret":{"text":"Whether Pixel Shaders 1.4 are supported or not.","name":"","type":"boolean"}}}},
{"function":{"name":"SupportsHDR","parent":"render","type":"libraryfunc","description":"Returns whether the game supports HDR, i.e. if the DirectX level is higher than or equal to 8.","realm":"Client","rets":{"ret":{"text":"supportsHDR","name":"","type":"boolean"}}}},
{"function":{"name":"StartBeam","parent":"render","type":"libraryfunc","description":{"text":"Start a new beam draw operation.","rendercontext":{"hook":"false","type":"3D"}},"realm":"Client","args":{"arg":{"text":"Amount of beam segments that are about to be drawn.","name":"segmentCount","type":"number"}}}},
{"function":{"name":"Spin","parent":"render","type":"libraryfunc","description":"Swaps the frame buffers/cycles the frame. In other words, this updates the screen.\n\nIf you take a really long time during a single frame render, it is a good idea to use this and let the user know that the game isn't stuck.","realm":"Client"},"example":{"description":"Code from [Super DOF](https://github.com/garrynewman/garrysmod/blob/master/garrysmod/lua/postprocess/super_dof.lua#L219-L236); Push the current progress of rendering onto the screen and display a percentage of completion near the bottom right.","code":"-- Restore RT\nrender.SetRenderTarget( OldRT )\n\n-- Render our result buffer to the screen\nmatFSB:SetFloat( \"$alpha\", 1 )\nmatFSB:SetTexture( \"$basetexture\", texFSB )\n\nrender.SetMaterial( matFSB )\nrender.DrawScreenQuad()\n\ncam.Start2D()\n\tlocal add = ( i / ( math.pi*2 ) ) * ( 1 / passes )\n\tlocal percent = string.format( \"%.1f\", ( mul - ( 1 / passes ) + add ) * 100 )\n\tdraw.DrawText( percent .. \"%\", \"GModWorldtip\", view.w - 100, view.h - 100, Color( 0, 0, 0, 255 ), TEXT_ALIGN_CENTER )\n\tdraw.DrawText( percent .. \"%\", \"GModWorldtip\", view.w - 101, view.h - 101, Color( 255, 255, 255, 255 ), TEXT_ALIGN_CENTER )\ncam.End2D()\n\nrender.Spin()","output":{"image":{"src":"Super_DoF_Render_Spin.gif"}}}},
{"function":{"name":"SetWriteDepthToDestAlpha","parent":"render","type":"libraryfunc","description":"Sets the internal parameter **INT_RENDERPARM_WRITE_DEPTH_TO_DESTALPHA**","realm":"Client","args":{"arg":{"name":"enable","type":"boolean"}}},"example":{"description":"Draws a \"masked\" texture.","code":"-- Give the RT a size\nlocal TEX_SIZE = 512\n\n-- Create the RT\nlocal tex = GetRenderTargetEx( \"ExampleMaskRT\", TEX_SIZE, TEX_SIZE, RT_SIZE_OFFSCREEN,\n\t\t MATERIAL_RT_DEPTH_SHARED --[[IMPORTANT]], 0, 0, IMAGE_FORMAT_RGBA8888 )\n\n-- Create a translucent render-able material for our render target\nlocal myMat = CreateMaterial( \"ExampleMaskRTMat\", \"UnlitGeneric\", {\n\t[\"$basetexture\"] = tex:GetName(), -- Make the material use our render target texture\n\t[\"$translucent\"] = \"1\" -- make the drawn material transparent\n} )\n\nlocal txBackground = Material( \"models/weapons/v_toolgun/screen_bg\" )\nlocal mask = Material( \"gui/gradient_down\" )\n\n--[[\nA few words on the mask image. When creating a custom mask image, it must have an alpha channel which dictates\nwhat pixels to draw and which not to. The visual color should be all white for this example to work.\nHaving lets say a red color mask would tint the final image red.\n]]\n\nfunction RenderMaskedRT()\n-- Draw the \"background\" image\n\tsurface.SetDrawColor( color_white )\n\tsurface.SetMaterial( txBackground )\n\tsurface.DrawTexturedRect( 0, 0, TEX_SIZE, TEX_SIZE )\n\t-- Animate the background for fun\n\tsurface.DrawTexturedRectRotated( TEX_SIZE / 2, TEX_SIZE / 2, TEX_SIZE, TEX_SIZE, CurTime() * 20 )\n\n-- Draw the actual mask\nrender.SetWriteDepthToDestAlpha( false )\n\trender.OverrideBlend( true, BLEND_SRC_COLOR, BLEND_SRC_ALPHA, 3 )\n\t\tsurface.SetMaterial( mask )\n\t\tsurface.DrawTexturedRect( 0, 0, TEX_SIZE, TEX_SIZE )\n\trender.OverrideBlend( false )\nrender.SetWriteDepthToDestAlpha( true )\nend\n\n-- Draw it on screen\nhook.Add( \"HUDPaint\", \"DrawExampleMaskMat\", function()\n\t-- Render animated stuff to the render target\n\trender.PushRenderTarget( tex )\n\tcam.Start2D()\n\t\trender.Clear( 0, 0, 0, 0 )\n\t\tRenderMaskedRT()\n\tcam.End2D()\n\trender.PopRenderTarget()\n\n\t-- This is just for debugging, to see what it looks like without the mask\n\t-- RenderMaskedRT()\n\n\t-- Actually draw the Render Target to see the final result.\n\tsurface.SetDrawColor( color_white )\n\tsurface.SetMaterial( myMat )\n\tsurface.DrawTexturedRect( 520, 0, TEX_SIZE, TEX_SIZE )\nend )","output":{"upload":{"src":"70c/8d7ba1c1119faa7.png","size":"226575","name":"image.png"}}}},
{"function":{"name":"SetViewPort","parent":"render","type":"libraryfunc","description":{"text":"Changes the view port position and size. The values will be clamped to the game's screen resolution.\n\nIf you are looking to render something to a texture (render target), you should use .","page":"render.PushRenderTarget","note":{"text":"This function will override values of  and  with the ones you set.","page":["Global.ScrW","Global.ScrH"]}},"realm":"Client","args":{"arg":[{"text":"X origin of the view port.","name":"x","type":"number"},{"text":"Y origin of the view port.","name":"y","type":"number"},{"text":"Width of the view port.","name":"w","type":"number"},{"text":"Height of the view port.","name":"h","type":"number"}]}},"example":{"description":"Renders a screen with a dimension of 32 X 32 and resets the render system to normal.","code":"local oldW, oldH = ScrW(), ScrH()\nlocal oldRT = render.GetRenderTarget()\n\nrender.SetRenderTarget(RTName)\nrender.Clear(0,0,0,255)\nrender.SetViewPort(0,0,32,32)\n\trender.RenderView(CamData)\nrender.SetRenderTarget(oldRT)\nrender.SetViewPort(0,0,oldW,oldH)"}},
{"function":{"name":"SetToneMappingScaleLinear","parent":"render","type":"libraryfunc","realm":"Client","args":{"arg":{"name":"vec","type":"Vector"}}}},
{"function":{"name":"SetStencilZFailOperation","parent":"render","type":"libraryfunc","description":"Sets the operation to be performed on the stencil buffer values if the stencil test is passed but the depth buffer test fails.","realm":"Client","args":{"arg":{"text":"Z fail operation function, see","name":"zFailOperation","type":"number","page":"Enums/STENCILOPERATION"}}},"example":{"description":"This shows how to reveal hidden sections of entities, wallhack style","code":"hook.Add( \"PostDrawOpaqueRenderables\", \"Stencil Tutorial Example\", function()\n\n\t-- Reset everything to known good\n\trender.SetStencilWriteMask( 0xFF )\n\trender.SetStencilTestMask( 0xFF )\n\trender.SetStencilReferenceValue( 0 )\n\t-- render.SetStencilCompareFunction( STENCIL_ALWAYS )\n\trender.SetStencilPassOperation( STENCIL_KEEP )\n\trender.SetStencilFailOperation( STENCIL_KEEP )\n\t-- render.SetStencilZFailOperation( STENCIL_KEEP )\n\trender.ClearStencil()\n\n\t-- Enable stencils\n\trender.SetStencilEnable( true )\n\t-- Set the reference value to 1. This is what the compare function tests against\n\trender.SetStencilReferenceValue( 1 )\n\t-- Always draw everything\n\trender.SetStencilCompareFunction( STENCIL_ALWAYS )\n\t-- If something would draw to the screen but is behind something, set the pixels it draws to 1\n\trender.SetStencilZFailOperation( STENCIL_REPLACE )\n\n\t-- Draw our entities. They will draw as normal\n\tfor _, ent in pairs( ents.FindByClass( \"sent_stencil_test\" ) ) do\n\t\tent:DrawModel()\n\tend\n\n\t-- Now, only draw things that have their pixels set to 1. This is the hidden parts of the stencil tests.\n\trender.SetStencilCompareFunction( STENCIL_EQUAL )\n\t-- Flush the screen. This will draw teal over all hidden sections of the stencil tests\n\trender.ClearBuffersObeyStencil(0, 148, 133, 255, false);\n\n\t-- Let everything render normally again\n\trender.SetStencilEnable( false )\nend )","output":{"image":{"src":"basic_zfail_operation.jpg","alt":"800px"}}}},
{"function":{"name":"SetStencilWriteMask","parent":"render","type":"libraryfunc","description":"Sets the unsigned 8-bit write bitflag mask to be used for any writes to the stencil buffer.","realm":"Client","args":{"arg":{"text":"The mask bitflag.","name":"mask","type":"number"}}},"example":[{"description":"A brief demonstration of masks","code":"hook.Add( \"PostDrawOpaqueRenderables\", \"Stencil Tutorial Example\", function()\n\t--[[\n        To understand this tutorial you need to already understand the basics\n         of binary and bitwise operations.\n\n        It would also help to understand hexadecimal notation, since Lua\n         doesn't have a bitmask input, but I will include binary notation in\n         comments to help.\n\t--]]\n\n\t-- Reset everything to known good\n\t-- render.SetStencilWriteMask( 0xFF )\n\t-- render.SetStencilTestMask( 0xFF )\n\trender.SetStencilReferenceValue( 0 )\n\t-- render.SetStencilCompareFunction( STENCIL_ALWAYS )\n\trender.SetStencilPassOperation( STENCIL_KEEP )\n\t-- render.SetStencilFailOperation( STENCIL_KEEP )\n\trender.SetStencilZFailOperation( STENCIL_KEEP )\n\trender.ClearStencil()\n\n\t-- Enable stencils\n\trender.SetStencilEnable( true )\n\t-- Force everything to fail\n\trender.SetStencilCompareFunction( STENCIL_NEVER )\n\t-- Save all the things we don't draw\n\trender.SetStencilFailOperation( STENCIL_REPLACE )\n\n\t-- Set the reference value to 00011100\n\trender.SetStencilReferenceValue( 0x1C )\n\t-- Set the write mask to 01010101\n\t-- Any writes to the stencil buffer will be bitwise ANDed with this mask.\n\t-- With our current reference value, the result will be 00010100.\n\trender.SetStencilWriteMask( 0x55 )\n\n\t-- Fail to draw our entities.\n\tfor _, ent in ipairs( ents.FindByClass( \"sent_stencil_test\" ) ) do\n\t\tent:DrawModel()\n\tend\n\n\t-- Set the test mask to 11110011.\n\t-- Any time a pixel is read out of the stencil buffer it will be bitwise ANDed with this mask.\n\trender.SetStencilTestMask( 0xF3 )\n\t-- Set the reference value to 00011100 & 01010101 & 11110011\n\trender.SetStencilReferenceValue( 0x10 )\n\t-- Pass if the masked buffer value matches the unmasked reference value\n\trender.SetStencilCompareFunction( STENCIL_EQUAL )\n\n\t-- Draw our entities\n\trender.ClearBuffersObeyStencil( 0, 148, 133, 255, false );\n\n\t-- Let everything render normally again\n\trender.SetStencilEnable( false )\nend )"},{"description":"A somewhat more complicated mask example","code":"hook.Add( \"PostDrawOpaqueRenderables\", \"Stencil Tutorial Example\", function()\n\t--[[\n        To understand this tutorial you need to already understand the basics\n         of binary and bitwise operations.\n\n        It would also help to understand hexadecimal notation, since Lua\n         doesn't have a bitmask input, but I will include binary notation in\n         comments to help.\n\t--]]\n\n\t-- Reset everything to known good\n\t-- render.SetStencilWriteMask( 0xFF )\n\t-- render.SetStencilTestMask( 0xFF )\n\trender.SetStencilReferenceValue( 0 )\n\t-- render.SetStencilCompareFunction( STENCIL_ALWAYS )\n\trender.SetStencilPassOperation( STENCIL_KEEP )\n\t-- render.SetStencilFailOperation( STENCIL_KEEP )\n\trender.SetStencilZFailOperation( STENCIL_KEEP )\n\trender.ClearStencil()\n\n\t-- Enable stencils\n\trender.SetStencilEnable( true )\n\n\t-- Only write to the upper 4 bits of the stencil buffer\n\trender.SetStencilWriteMask( 0xF0 )\n\t-- Wipe the stencil buffer to be 0001111. This is not affected by the write mask.\n\trender.ClearStencilBufferRectangle( 0, 0, ScrW(), ScrH(), 0x0F )\n\n\t-- Always fail\n\trender.SetStencilCompareFunction( STENCIL_NEVER )\n\t-- Don't read any bits from the stencil buffer\n\trender.SetStencilTestMask( 0x00 )\n\t-- When an operation fails, read the current value from the stencil buffer, add\n\t--  one to it and then write it back to the buffer\n\t-- This is not affected by the test mask, but it is affected by the write mask\n\t-- This means we will read 00001111, then write 00010000.\n\t-- However, due to the write mask, this won't affect the last four bits already\n\t--  in the buffer, resulting in 00011111.\n\trender.SetStencilFailOperation( STENCIL_INCR )\n\n\t-- Add something interesting to the stencil buffer\n\tfor _, ent in ipairs( ents.FindByClass( \"sent_stencil_test\" ) ) do\n\t\tent:DrawModel()\n\tend\n\n\n\t-- Go back to reading the full value from the stencil buffer\n\trender.SetStencilTestMask( 0xFF )\n\t-- Set the reference value to 00011111\n\trender.SetStencilReferenceValue( 0x1F )\n\t-- Render the result\n\trender.SetStencilCompareFunction( STENCIL_EQUAL )\n\trender.ClearBuffersObeyStencil( 0, 148, 133, 255, false );\n\n\t-- Let everything render normally again\n\trender.SetStencilEnable( false )\nend )"}]},
{"function":{"name":"SetStencilTestMask","parent":"render","type":"libraryfunc","description":"Sets the unsigned 8-bit test bitflag mask to be used for any stencil testing.","realm":"Client","args":{"arg":{"text":"The mask bitflag.","name":"mask","type":"number"}}},"example":[{"description":"A brief demonstration of masks","code":"hook.Add( \"PostDrawOpaqueRenderables\", \"Stencil Tutorial Example\", function()\n\t--[[\n        To understand this tutorial you need to already understand the basics\n         of binary and bitwise operations.\n\n        It would also help to understand hexadecimal notation, since Lua\n         doesn't have a bitmask input, but I will include binary notation in\n         comments to help.\n\t--]]\n\n\t-- Reset everything to known good\n\t-- render.SetStencilWriteMask( 0xFF )\n\t-- render.SetStencilTestMask( 0xFF )\n\trender.SetStencilReferenceValue( 0 )\n\t-- render.SetStencilCompareFunction( STENCIL_ALWAYS )\n\trender.SetStencilPassOperation( STENCIL_KEEP )\n\t-- render.SetStencilFailOperation( STENCIL_KEEP )\n\trender.SetStencilZFailOperation( STENCIL_KEEP )\n\trender.ClearStencil()\n\n\t-- Enable stencils\n\trender.SetStencilEnable( true )\n\t-- Force everything to fail\n\trender.SetStencilCompareFunction( STENCIL_NEVER )\n\t-- Save all the things we don't draw\n\trender.SetStencilFailOperation( STENCIL_REPLACE )\n\n\t-- Set the reference value to 00011100\n\trender.SetStencilReferenceValue( 0x1C )\n\t-- Set the write mask to 01010101\n\t-- Any writes to the stencil buffer will be bitwise ANDed with this mask.\n\t-- With our current reference value, the result will be 00010100.\n\trender.SetStencilWriteMask( 0x55 )\n\n\t-- Fail to draw our entities.\n\tfor _, ent in pairs( ents.FindByClass( \"sent_stencil_test\" ) ) do\n\t\tent:DrawModel()\n\tend\n\n\t-- Set the test mask to 11110011.\n\t-- Any time a pixel is read out of the stencil buffer it will be bitwise ANDed with this mask.\n\trender.SetStencilTestMask( 0xF3 )\n\t-- Set the reference value to 00011100 & 01010101 & 11110011\n\trender.SetStencilReferenceValue( 0x10 )\n\t-- Pass if the masked buffer value matches the unmasked reference value\n\trender.SetStencilCompareFunction( STENCIL_EQUAL )\n\n\t-- Draw our entities\n\trender.ClearBuffersObeyStencil( 0, 148, 133, 255, false );\n\n\t-- Let everything render normally again\n\trender.SetStencilEnable( false )\nend )"},{"description":"A somewhat more complicated mask example","code":"hook.Add( \"PostDrawOpaqueRenderables\", \"Stencil Tutorial Example\", function()\n\t--[[\n        To understand this tutorial you need to already understand the basics\n         of binary and bitwise operations.\n\n        It would also help to understand hexadecimal notation, since Lua\n         doesn't have a bitmask input, but I will include binary notation in\n         comments to help.\n\t--]]\n\n\t-- Reset everything to known good\n\t-- render.SetStencilWriteMask( 0xFF )\n\t-- render.SetStencilTestMask( 0xFF )\n\trender.SetStencilReferenceValue( 0 )\n\t-- render.SetStencilCompareFunction( STENCIL_ALWAYS )\n\trender.SetStencilPassOperation( STENCIL_KEEP )\n\t-- render.SetStencilFailOperation( STENCIL_KEEP )\n\trender.SetStencilZFailOperation( STENCIL_KEEP )\n\trender.ClearStencil()\n\n\t-- Enable stencils\n\trender.SetStencilEnable( true )\n\n\t-- Only write to the upper 4 bits of the stencil buffer\n\trender.SetStencilWriteMask( 0xF0 )\n\t-- Wipe the stencil buffer to be 0001111. This is not affected by the write mask.\n\trender.ClearStencilBufferRectangle( 0, 0, ScrW(), ScrH(), 0x0F )\n\n\t-- Always fail\n\trender.SetStencilCompareFunction( STENCIL_NEVER )\n\t-- Don't read any bits from the stencil buffer\n\trender.SetStencilTestMask( 0x00 )\n\t-- When an operation fails, read the current value from the stencil buffer, add\n\t--  one to it and then write it back to the buffer\n\t-- This is not affected by the test mask, but it is affected by the write mask\n\t-- This means we will read 00001111, then write 00010000.\n\t-- However, due to the write mask, this won't affect the last four bits already\n\t--  in the buffer, resulting in 00011111.\n\trender.SetStencilFailOperation( STENCIL_INCR )\n\n\t-- Add something interesting to the stencil buffer\n\tfor _, ent in pairs( ents.FindByClass( \"sent_stencil_test\" ) ) do\n\t\tent:DrawModel()\n\tend\n\n\n\t-- Go back to reading the full value from the stencil buffer\n\trender.SetStencilTestMask( 0xFF )\n\t-- Set the reference value to 00011111\n\trender.SetStencilReferenceValue( 0x1F )\n\t-- Render the result\n\trender.SetStencilCompareFunction( STENCIL_EQUAL )\n\trender.ClearBuffersObeyStencil( 0, 148, 133, 255, false );\n\n\t-- Let everything render normally again\n\trender.SetStencilEnable( false )\nend )"}]},
{"function":{"name":"SetStencilTestMask","parent":"render","type":"libraryfunc","description":"Sets the unsigned 8-bit test bitflag mask to be used for any stencil testing.","realm":"Client","args":{"arg":{"text":"The mask bitflag.","name":"mask","type":"number"}}},"example":[{"description":"A brief demonstration of masks","code":"hook.Add( \"PostDrawOpaqueRenderables\", \"Stencil Tutorial Example\", function()\n\t--[[\n        To understand this tutorial you need to already understand the basics\n         of binary and bitwise operations.\n\n        It would also help to understand hexadecimal notation, since Lua\n         doesn't have a bitmask input, but I will include binary notation in\n         comments to help.\n\t--]]\n\n\t-- Reset everything to known good\n\t-- render.SetStencilWriteMask( 0xFF )\n\t-- render.SetStencilTestMask( 0xFF )\n\trender.SetStencilReferenceValue( 0 )\n\t-- render.SetStencilCompareFunction( STENCIL_ALWAYS )\n\trender.SetStencilPassOperation( STENCIL_KEEP )\n\t-- render.SetStencilFailOperation( STENCIL_KEEP )\n\trender.SetStencilZFailOperation( STENCIL_KEEP )\n\trender.ClearStencil()\n\n\t-- Enable stencils\n\trender.SetStencilEnable( true )\n\t-- Force everything to fail\n\trender.SetStencilCompareFunction( STENCIL_NEVER )\n\t-- Save all the things we don't draw\n\trender.SetStencilFailOperation( STENCIL_REPLACE )\n\n\t-- Set the reference value to 00011100\n\trender.SetStencilReferenceValue( 0x1C )\n\t-- Set the write mask to 01010101\n\t-- Any writes to the stencil buffer will be bitwise ANDed with this mask.\n\t-- With our current reference value, the result will be 00010100.\n\trender.SetStencilWriteMask( 0x55 )\n\n\t-- Fail to draw our entities.\n\tfor _, ent in pairs( ents.FindByClass( \"sent_stencil_test\" ) ) do\n\t\tent:DrawModel()\n\tend\n\n\t-- Set the test mask to 11110011.\n\t-- Any time a pixel is read out of the stencil buffer it will be bitwise ANDed with this mask.\n\trender.SetStencilTestMask( 0xF3 )\n\t-- Set the reference value to 00011100 & 01010101 & 11110011\n\trender.SetStencilReferenceValue( 0x10 )\n\t-- Pass if the masked buffer value matches the unmasked reference value\n\trender.SetStencilCompareFunction( STENCIL_EQUAL )\n\n\t-- Draw our entities\n\trender.ClearBuffersObeyStencil( 0, 148, 133, 255, false );\n\n\t-- Let everything render normally again\n\trender.SetStencilEnable( false )\nend )"},{"description":"A somewhat more complicated mask example","code":"hook.Add( \"PostDrawOpaqueRenderables\", \"Stencil Tutorial Example\", function()\n\t--[[\n        To understand this tutorial you need to already understand the basics\n         of binary and bitwise operations.\n\n        It would also help to understand hexadecimal notation, since Lua\n         doesn't have a bitmask input, but I will include binary notation in\n         comments to help.\n\t--]]\n\n\t-- Reset everything to known good\n\t-- render.SetStencilWriteMask( 0xFF )\n\t-- render.SetStencilTestMask( 0xFF )\n\trender.SetStencilReferenceValue( 0 )\n\t-- render.SetStencilCompareFunction( STENCIL_ALWAYS )\n\trender.SetStencilPassOperation( STENCIL_KEEP )\n\t-- render.SetStencilFailOperation( STENCIL_KEEP )\n\trender.SetStencilZFailOperation( STENCIL_KEEP )\n\trender.ClearStencil()\n\n\t-- Enable stencils\n\trender.SetStencilEnable( true )\n\n\t-- Only write to the upper 4 bits of the stencil buffer\n\trender.SetStencilWriteMask( 0xF0 )\n\t-- Wipe the stencil buffer to be 0001111. This is not affected by the write mask.\n\trender.ClearStencilBufferRectangle( 0, 0, ScrW(), ScrH(), 0x0F )\n\n\t-- Always fail\n\trender.SetStencilCompareFunction( STENCIL_NEVER )\n\t-- Don't read any bits from the stencil buffer\n\trender.SetStencilTestMask( 0x00 )\n\t-- When an operation fails, read the current value from the stencil buffer, add\n\t--  one to it and then write it back to the buffer\n\t-- This is not affected by the test mask, but it is affected by the write mask\n\t-- This means we will read 00001111, then write 00010000.\n\t-- However, due to the write mask, this won't affect the last four bits already\n\t--  in the buffer, resulting in 00011111.\n\trender.SetStencilFailOperation( STENCIL_INCR )\n\n\t-- Add something interesting to the stencil buffer\n\tfor _, ent in pairs( ents.FindByClass( \"sent_stencil_test\" ) ) do\n\t\tent:DrawModel()\n\tend\n\n\n\t-- Go back to reading the full value from the stencil buffer\n\trender.SetStencilTestMask( 0xFF )\n\t-- Set the reference value to 00011111\n\trender.SetStencilReferenceValue( 0x1F )\n\t-- Render the result\n\trender.SetStencilCompareFunction( STENCIL_EQUAL )\n\trender.ClearBuffersObeyStencil( 0, 148, 133, 255, false );\n\n\t-- Let everything render normally again\n\trender.SetStencilEnable( false )\nend )"}]},
{"function":{"name":"SetStencilPassOperation","parent":"render","type":"libraryfunc","description":"Sets the operation to be performed on the stencil buffer values if the compare function was successful.","realm":"Client","args":{"arg":{"text":"Pass operation function, see","name":"passOperation","type":"number","page":"Enums/STENCILOPERATION"}}},"example":{"description":"This uses the pass operation to blank out everything but what we just drew","code":"hook.Add( \"PostDrawOpaqueRenderables\", \"Stencil Tutorial Example\", function()\n\n\t-- Reset everything to known good\n\trender.SetStencilWriteMask( 0xFF )\n\trender.SetStencilTestMask( 0xFF )\n\trender.SetStencilReferenceValue( 0 )\n\t-- render.SetStencilCompareFunction( STENCIL_ALWAYS )\n\t-- render.SetStencilPassOperation( STENCIL_KEEP )\n\trender.SetStencilFailOperation( STENCIL_KEEP )\n\trender.SetStencilZFailOperation( STENCIL_KEEP )\n\trender.ClearStencil()\n\n\t-- Enable stencils\n\trender.SetStencilEnable( true )\n\t-- Set the reference value to 1. This is what the compare function tests against\n\trender.SetStencilReferenceValue( 1 )\n\t-- Only draw things if their pixels are NOT 1. Currently this is everything.\n\trender.SetStencilCompareFunction( STENCIL_NOTEQUAL )\n\t-- If something draws to the screen, set the pixels it draws to 1\n\trender.SetStencilPassOperation( STENCIL_REPLACE )\n\n\t-- Draw our entities. They will draw as normal\n\tfor _, ent in pairs( ents.FindByClass( \"sent_stencil_test\" ) ) do\n\t\tent:DrawModel()\n\tend\n\n\t-- At this point, we cannot draw on top of anything that we have already drawn.\n\t-- So, if we flush the screen, our entities will still be there.\n\trender.ClearBuffersObeyStencil(0, 148, 133, 255, false);\n\n\t-- Let everything render normally again\n\trender.SetStencilEnable( false )\nend )","output":{"image":{"src":"basic_pass_operation.jpg","alt":"800px"}}}},
{"function":{"name":"SetStencilFailOperation","parent":"render","type":"libraryfunc","description":"Sets the operation to be performed on the stencil buffer values if the compare function was not successful.\nNote that this takes place **before** depth testing.","realm":"Client","args":{"arg":{"text":"Fail operation function, see","name":"failOperation","type":"number","page":"Enums/STENCILOPERATION"}}},"example":{"description":"This is one of the most useful things stencils can do - not render something to the screen and then allow you to draw with the shape it would have been if it `had` rendered.\n\nYou can see in the output screenshot that a partially obscured entity will still write its entire shape to the stencil buffer.","code":"hook.Add( \"PostDrawOpaqueRenderables\", \"Stencil Tutorial Example\", function()\n\n\t-- Reset everything to known good\n\trender.SetStencilWriteMask( 0xFF )\n\trender.SetStencilTestMask( 0xFF )\n\trender.SetStencilReferenceValue( 0 )\n\t-- render.SetStencilCompareFunction( STENCIL_ALWAYS )\n\trender.SetStencilPassOperation( STENCIL_KEEP )\n\t-- render.SetStencilFailOperation( STENCIL_KEEP )\n\trender.SetStencilZFailOperation( STENCIL_KEEP )\n\trender.ClearStencil()\n\n\t-- Enable stencils\n\trender.SetStencilEnable( true )\n\t-- Set the reference value to 1. This is what the compare function tests against\n\trender.SetStencilReferenceValue( 1 )\n\t-- Only draw things if their pixels are currently 1. Currently this is nothing.\n\trender.SetStencilCompareFunction( STENCIL_EQUAL )\n\t-- If something fails to draw to the screen, set the pixels it would have drawn to 1\n\t-- This includes if it's behind something.\n\trender.SetStencilFailOperation( STENCIL_REPLACE )\n\n\t-- Draw our entities. They will not draw, because everything is 0\n\tfor _, ent in pairs( ents.FindByClass( \"sent_stencil_test\" ) ) do\n\t\tent:DrawModel()\n\tend\n\n\t-- If we were to re-draw our entities, we'd see them, but otherwise they're invisible.\n\t-- If we flush the screen, we can show the \"holes\" they've left in the stencil buffer\n\trender.ClearBuffersObeyStencil(0, 148, 133, 255, false);\n\n\t-- Let everything render normally again\n\trender.SetStencilEnable( false )\nend )","output":{"image":{"src":"basic_fail_operation.jpg","alt":"800px"}}}},
{"function":{"name":"SetStencilCompareFunction","parent":"render","type":"libraryfunc","description":{"text":"Sets the compare function of the stencil.\n\nPixels which fail the stencil comparison function are not written to the render target. The operation to be performed on the stencil buffer values for these pixels can be set using .\n\nPixels which pass the stencil comparison function are written to the render target unless they fail the depth buffer test (where applicable). The operation to perform on the stencil buffer values for these pixels can be set using  and .","page":["render.SetStencilFailOperation","render.SetStencilPassOperation","render.SetStencilZFailOperation"]},"realm":"Client","args":{"arg":{"text":"Compare function, see , and  for short.","name":"compareFunction","type":"number","page":["Enums/STENCILCOMPARISONFUNCTION","Enums/STENCIL"]}}}},
{"function":{"name":"SetStencilEnable","parent":"render","type":"libraryfunc","description":"Sets whether stencil tests are carried out for each rendered pixel.\n\nOnly pixels passing the stencil test are written to the render target.","realm":"Client","args":{"arg":{"text":"The new state.","name":"newState","type":"boolean"}}},"example":{"description":"A basic stencil operation that limits rendering to the centre of the screen","code":"hook.Add( \"PostDrawOpaqueRenderables\", \"Stencil Tutorial Example\", function()\n\n\t-- Reset everything to known good\n\trender.SetStencilWriteMask( 0xFF )\n\trender.SetStencilTestMask( 0xFF )\n\trender.SetStencilReferenceValue( 0 )\n\trender.SetStencilCompareFunction( STENCIL_ALWAYS )\n\trender.SetStencilPassOperation( STENCIL_KEEP )\n\trender.SetStencilFailOperation( STENCIL_KEEP )\n\trender.SetStencilZFailOperation( STENCIL_KEEP )\n\trender.ClearStencil()\n\n\t-- Enable stencils\n\trender.SetStencilEnable( true )\n\t-- Set the reference value to 1. This is what the compare function tests against\n\trender.SetStencilReferenceValue( 1 )\n\t-- Refuse to write things to the screen unless that pixel's value is 1\n\trender.SetStencilCompareFunction( STENCIL_EQUAL )\n\t-- Write a 1 to the centre third of the screen. Because we cleared it earlier, everything is currently 0\n\tlocal w, h = ScrW() / 3, ScrH() / 3\n\tlocal x_start, y_start = w, h\n\tlocal x_end, y_end = x_start + w, y_start + h\n\trender.ClearStencilBufferRectangle( x_start, y_start, x_end, y_end, 1 )\n\n\t-- Draw our entities. They will only draw in the area cleared above\n\tfor _, ent in pairs( ents.FindByClass( \"sent_stencil_test\" ) ) do\n\t\tent:DrawModel()\n\tend\n\n\t-- Let everything render normally again\n\trender.SetStencilEnable( false )\nend )","output":{"image":{"src":"stencil_basic_clipping_result.jpg","alt":"left|400px"}}}},
{"function":{"name":"SetShadowsDisabled","parent":"render","type":"libraryfunc","description":"Sets whether any future render operations will ignore shadow drawing.","realm":"Client","args":{"arg":{"name":"newState","type":"boolean"}}}},
{"function":{"name":"SetShadowDistance","parent":"render","type":"libraryfunc","description":"Sets the maximum shadow projection range.","realm":"Client","args":{"arg":{"text":"The new maximum shadow distance.","name":"shadowDistance","type":"number"}}}},
{"function":{"name":"SetShadowDirection","parent":"render","type":"libraryfunc","description":"Sets the shadow projection direction.","realm":"Client","args":{"arg":{"text":"The new shadow direction.","name":"shadowDirections","type":"Vector"}}}},
{"function":{"name":"SetShadowColor","parent":"render","type":"libraryfunc","description":"Sets the shadow color.","realm":"Client","args":{"arg":[{"text":"The red channel of the shadow color.","name":"red","type":"number"},{"text":"The green channel of the shadow color.","name":"green","type":"number"},{"text":"The blue channel of the shadow color.","name":"blue","type":"number"}]}}},
{"function":{"name":"SetRenderTargetEx","parent":"render","type":"libraryfunc","description":"Sets the render target with the specified index to the specified rt.","realm":"Client","args":{"arg":[{"text":"The index of the rt to set.","name":"rtIndex","type":"number"},{"text":"The new render target to be used.","name":"texture","type":"ITexture"}]}}},
{"function":{"name":"SetScissorRect","parent":"render","type":"libraryfunc","description":"Sets a scissoring rect which limits the drawing area.","realm":"Client","args":{"arg":[{"text":"X start coordinate of the scissor rect.","name":"startX","type":"number"},{"text":"Y start coordinate of the scissor rect.","name":"startY","type":"number"},{"text":"X end coordinate of the scissor rect.","name":"endX","type":"number"},{"text":"Y end coordinate of the scissor rect.","name":"endY","type":"number"},{"text":"Enable or disable the scissor rect.","name":"enable","type":"boolean"}]}},"example":{"description":"Shows how to use this function. This will cut the white rectangle from full screen to 512x512 box in top left corner","code":"render.SetScissorRect( 0, 0, 512, 512, true ) -- Enable the rect\n\tdraw.RoundedBox( 4, 0, 0, ScrW(), ScrH(), color_white ) -- Draw a white rectangle over the whole screen\nrender.SetScissorRect( 0, 0, 0, 0, false ) -- Disable after you are done"}},
{"function":{"name":"SetRenderTarget","parent":"render","type":"libraryfunc","description":"Sets the render target to the specified rt.","realm":"Client","args":{"arg":{"text":"The new render target to be used.","name":"texture","type":"ITexture"}}}},
{"function":{"name":"SetModelLighting","parent":"render","type":"libraryfunc","description":"Sets up the ambient lighting for any upcoming render operation. Ambient lighting can be seen as a cube enclosing the object to be drawn, each of its faces representing a directional light source that shines towards the object. Thus, there is a total of six different light sources that can be configured separately.\n\nLight color components are not restricted to a specific range (i.e. 0-255), instead, higher values will result in a brighter light.","realm":"Client","args":{"arg":[{"text":"The light source to edit, see .","name":"lightDirection","type":"number","page":"Enums/BOX"},{"text":"The red component of the light color.","name":"red","type":"number"},{"text":"The green component of the light color.","name":"green","type":"number"},{"text":"The blue component of the light color.","name":"blue","type":"number"}]}}},
{"function":{"name":"SetMaterial","parent":"render","type":"libraryfunc","description":{"text":"Sets the material to be used in any upcoming render operation using the .\n\nNot to be confused with .","page":["render","surface.SetMaterial"],"rendercontext":[{"hook":"false","type":"3D"},{"hook":"false","type":"2D"}]},"realm":"Client","args":{"arg":{"text":"The material to be used.","name":"mat","type":"IMaterial"}}}},
{"function":{"name":"SetLocalModelLights","parent":"render","type":"libraryfunc","description":"Sets up the local lighting for any upcoming render operation. Up to 4 local lights can be defined, with one of three different types (point, directional, spot).\n\nDisables all local lights if called with no arguments.","realm":"Client","args":{"arg":{"text":"A table containing up to 4 tables for each light source that should be set up. Each of these tables should contain the properties of its associated light source, see .","name":"lights","type":"table","default":"{}","page":"Structures/LocalLight"}}}},
{"function":{"name":"SetLightingOrigin","parent":"render","type":"libraryfunc","description":{"text":"Sets the lighting origin.","bug":{"text":"This does not work for prop_physics.","issue":"2804"}},"realm":"Client","args":{"arg":{"text":"The position from which the light should be \"emitted\".","name":"lightingOrigin","type":"Vector"}}}},
{"function":{"name":"SetLightmapTexture","parent":"render","type":"libraryfunc","description":{"text":"Sets the texture to be used as the lightmap in upcoming rendering operations. This is required when rendering meshes using a material with a lightmapped shader such as LightmappedGeneric.","rendercontext":[{"hook":"false","type":"3D"},{"hook":"false","type":"2D"}]},"realm":"Client","args":{"arg":{"text":"The texture to be used as the lightmap.","name":"tex","type":"ITexture"}}},"example":{"description":"Creates a mesh with LightmappedGeneric material on it","code":"-- LightmappedGeneric material that we'll use for our mesh\nlocal meshMat = Material( \"concrete/concretefloor001a\" )\n\n-- Mesh vertices (notice that it's not MeshVertex structure format, just something similar)\n-- Notice that we have 2 UV coordinates channels, one for texture, one for lightmap\nlocal meshVertices = {\n\n\t{ pos = Vector( 0, 0, 0 ), u0 = 0, v0 = 0, u1 = 0, v1 = 0, n = Vector( 1, 0, 0 ) },\n\t{ pos = Vector( 0, 100, 0 ), u0 = 1, v0 = 0, u1 = 3, v1 = 0, n = Vector( 1, 0, 0 ) },\n\t{ pos = Vector( 0, 100, -100 ), u0 = 1, v0 = 1, u1 = 3, v1 = 3, n = Vector( 1, 0, 0 ) },\n\t{ pos = Vector( 0, 0, -100 ), u0 = 0, v0 = 1, u1 = 0, v1 = 3, n = Vector( 1, 0, 0 ) },\n}\n\n-- Run this command while ingame to create the mesh at map origin\nconcommand.Add( \"meshtest\", function()\n\n\t-- Creating a render target to be used as lightmap texture\n\tmeshLightmap = GetRenderTarget( \"test_mesh_lightmap\", 128, 128, false )\n\n\t-- Filling the lightmap texture with some stuff for visualization\n\trender.PushRenderTarget( meshLightmap )\n\n\t\tcam.Start2D()\n\n\t\t\t-- Resetting lightmap to be monotone gray\n\t\t\trender.Clear( 128, 128, 128, 255 )\n\n\t\t\t-- Drawing a dark rectangle\n\t\t\trender.SetColorMaterial()\n\t\t\tsurface.SetDrawColor( 80, 80, 80, 255 )\n\t\t\tsurface.DrawRect( 32, 32, 64, 64 )\n\n\t\t\t-- And some color text, why not! Lightmaps support RGB color\n\t\t\tdraw.SimpleText( \"This is lightmap\", \"DermaDefault\", 64, 64, Color( 255, 0, 0, 255 ), TEXT_ALIGN_CENTER, TEXT_ALIGN_CENTER )\n\n\t\tcam.End2D()\n\n\trender.PopRenderTarget()\n\n\t-- Creating the mesh. Don't forget to pass the material you're gonna use with it!\n\t-- Shader of the material defines some features of the mesh, vertex structure\n\t-- specifically (LightmappedGeneric requires each vertex to store 2 UV channels,\n\t-- for instance. This is important in this case)\n\tmyTestMesh = Mesh( meshMat )\n\n\t-- Creating the mesh\n\tmesh.Begin( myTestMesh, MATERIAL_QUADS, 1 )\n\n\t\tfor i, vertex in pairs( meshVertices ) do\n\n\t\t\tmesh.Position( vertex.pos )\n\n\t\t\t-- Texture coordinates go to channel 0\n\t\t\tmesh.TexCoord( 0, vertex.u0, vertex.v0 )\n\n\t\t\t-- Lightmap texture coordinates go to channel 1\n\t\t\tmesh.TexCoord( 1, vertex.u1, vertex.v1 )\n\n\t\t\tmesh.Normal( vertex.n )\n\t\t\tmesh.AdvanceVertex()\n\t\tend\n\n\tmesh.End()\nend )\n\nhook.Add( \"PostDrawOpaqueRenderables\", \"LightmappedMeshTest\", function()\n\n\tif myTestMesh and myTestMesh ~= NULL then\n\n\t\trender.SetMaterial( meshMat )\n\t\trender.SetLightmapTexture( meshLightmap )\n\n\t\tmyTestMesh:Draw()\n\tend\nend )","output":{"image":{"src":"LightmappedGenericMeshPreview.jpeg","alt":"512px|thumb"}}}},
{"function":{"name":"SetLightingMode","parent":"render","type":"libraryfunc","description":{"text":"Sets lighting mode when rendering something.","note":"**Do not forget to restore the default value** to avoid unexpected behavior, like the world and the HUD/UI being affected"},"realm":"Client","args":{"arg":{"text":"Lighting render mode\n\nPossible values are:\n* 0 - Default\n* 1 - Total fullbright, similar to `mat_fullbright 1` but excluding some weapon view models\n* 2 - Increased brightness(?), models look fullbright","name":"Mode","type":"number"}}},"example":[{"description":"Draws a fullbright quad on 2D skybox","code":"local MATERIAL = Material(\"skybox/trainup\")\n\nhook.Add(\"PostDraw2DSkyBox\", \"Quaddrawer\", function()\n\trender.OverrideDepthEnable( true, false )\n\trender.SetLightingMode(2)\n\n\tcam.Start3D(Vector(0, 0, 0), EyeAngles())\n\t\trender.SetMaterial(MATERIAL)\n\t\trender.DrawQuadEasy(Vector(200,0,0), Vector(-1,0,0), 64, 64, Color(255,255,255), 180)\n\tcam.End3D()\n\n\trender.OverrideDepthEnable( false, false )\n\trender.SetLightingMode(0)\nend)"},{"description":"Display everything the same way as when you set `mat_fullbright` to 1.","code":"local LightingModeChanged = false\nhook.Add( \"PreRender\", \"fullbright\", function()\n\trender.SetLightingMode( 1 )\n\tLightingModeChanged = true\nend )\n\nlocal function EndOfLightingMod()\n\tif LightingModeChanged then\n\t\trender.SetLightingMode( 0 )\n\t\tLightingModeChanged = false\n\tend\nend\nhook.Add( \"PostRender\", \"fullbright\", EndOfLightingMod )\nhook.Add( \"PreDrawHUD\", \"fullbright\", EndOfLightingMod )"}]},
{"function":{"name":"SetGoalToneMappingScale","parent":"render","type":"libraryfunc","description":"Sets the goal HDR tone mapping scale.\n\nUse this in a rendering/think hook as it is reset every frame.","realm":"Client","args":{"arg":{"text":"The target scale.","name":"scale","type":"number"}}}},
{"function":{"name":"SetFogZ","parent":"render","type":"libraryfunc","description":{"text":"If the fog mode is set to , the fog will only be rendered below the specified height.","page":",MATERIAL_FOG_LINEAR_BELOW_FOG_ZEnums/MATERIAL_FOG"},"realm":"Client","args":{"arg":{"text":"The fog Z.","name":"fogZ","type":"number"}}}},
{"function":{"name":"SetColorModulation","parent":"render","type":"libraryfunc","description":"Sets the color modulation.","realm":"Client","args":{"arg":[{"text":"The red channel multiplier normal ranging from 0-1.","name":"r","type":"number"},{"text":"The green channel multiplier normal ranging from 0-1.","name":"g","type":"number"},{"text":"The blue channel multiplier normal ranging from 0-1.","name":"b","type":"number"}]}}},
{"function":{"name":"SetColorMaterial","parent":"render","type":"libraryfunc","description":"Sets the current drawing material to \"color\".\n\nThe material is defined as:\n```\n\n \"UnlitGeneric\"\n {\n \t\"$basetexture\" \"color/white\"\n \t\"$model\" \t\t1\n \t\"$translucent\" \t1\n \t\"$vertexalpha\" \t1\n \t\"$vertexcolor\" \t1\n }\n```","realm":"Client","file":{"text":"lua/includes/extensions/client/render.lua","line":"89-93"}},"example":{"description":"Equivalent of this function","code":"render.SetMaterial( Material( \"color\" ) )"}},
{"function":{"name":"SetColorMaterialIgnoreZ","parent":"render","type":"libraryfunc","description":"Sets the current drawing material to \"color_ignorez\".\n\nThe material is defined as:\n```\n\n \"UnlitGeneric\"\n {\n \t\"$basetexture\" \"color/white\"\n  \t\"$model\" \t\t1\n \t\"$translucent\" \t1\n \t\"$vertexalpha\" \t1\n \t\"$vertexcolor\" \t1\n \t\"$ignorez\"\t\t1\n }\n```","realm":"Client","file":{"text":"lua/includes/extensions/client/render.lua","line":"95-99"}},"example":{"description":"Equivalent of this function","code":"render.SetMaterial( Material( \"color_ignorez\" ) )"}},
{"function":{"name":"SetBlend","parent":"render","type":"libraryfunc","description":{"text":"Sets the alpha blending for every upcoming render operation.","bug":{"text":"This does not affect non-model render.Draw* functions.","issue":"3166"}},"realm":"Client","args":{"arg":{"text":"Blending value from 0-1.","name":"blending","type":"number"}}}},
{"function":{"name":"SetAmbientLight","parent":"render","type":"libraryfunc","description":"Sets the ambient lighting for any upcoming render operation.","realm":"Client","args":{"arg":[{"text":"The red part of the color, 0-1.","name":"r","type":"number"},{"text":"The green part of the color, 0-1.","name":"g","type":"number"},{"text":"The blue part of the color, 0-1.","name":"b","type":"number"}]}}},
{"function":{"name":"ResetToneMappingScale","parent":"render","type":"libraryfunc","description":{"text":"Resets the HDR tone multiplier to the specified value.\n\nThis will only work on HDR maps, and the value will automatically fade to what it was ( or whatever  is ) if called only once.","page":"render.SetGoalToneMappingScale"},"realm":"Client","args":{"arg":{"text":"The value which should be used as multiplier.","name":"scale","type":"number"}}}},
{"function":{"name":"ResetModelLighting","parent":"render","type":"libraryfunc","description":{"text":"Resets the model lighting to the specified color.\n\nCalls  for every direction with given color.","page":"render.SetModelLighting"},"realm":"Client","args":{"arg":[{"text":"The red part of the color, 0-1","name":"r","type":"number"},{"text":"The green part of the color, 0-1","name":"g","type":"number"},{"text":"The blue part of the color, 0-1","name":"b","type":"number"}]}}},
{"function":{"name":"RenderView","parent":"render","type":"libraryfunc","description":{"text":"Renders the scene with the specified viewData to the current active render target.","bug":{"text":"Static props and LODs are rendered improperly due to incorrectly perceived distance.","issue":"1330"}},"realm":"Client","args":{"arg":{"text":"The view data to be used in the rendering. See . Any missing value is assumed to be that of the current view. Similarly, you can make a normal render by simply not passing this table at all.","name":"view","type":"table","default":"nil","page":"Structures/ViewData"}}},"example":{"description":"How you could use this to draw the view on a derma panel.","code":"local frame = vgui.Create( \"DFrame\" )\nframe:SetSize( ScrW() - 100, ScrH() - 100 )\nframe:Center()\nframe:MakePopup()\n\nfunction frame:Paint( w, h )\n\n\tlocal x, y = self:GetPos()\n\n\trender.RenderView( {\n\t\torigin = Vector( 0, 0, 0 ),\n\t\tangles = Angle( 0, 0, 0 ),\n\t\tx = x, y = y,\n\t\tw = w, h = h\n\t} )\n\nend","output":{"image":{"src":"RenderViewResult.jpg","alt":"300px"}}}},
{"function":{"name":"RenderHUD","parent":"render","type":"libraryfunc","description":"Renders the HUD on the screen.","realm":"Client","args":{"arg":[{"text":"X position for the HUD draw origin.","name":"x","type":"number"},{"text":"Y position for the HUD draw origin.","name":"y","type":"number"},{"text":"Width of the HUD draw.","name":"w","type":"number"},{"text":"Height of the HUD draw.","name":"h","type":"number"}]}}},
{"function":{"name":"RedownloadAllLightmaps","parent":"render","type":"libraryfunc","description":{"text":"This applies the changes made to map lighting using .","page":"engine.LightStyle"},"realm":"Client","args":{"arg":{"text":"When true, this will also apply lighting changes to static props. This is really slow on large maps.","name":"DoStaticProps","type":"boolean","default":"false"}}}},
{"function":{"name":"RedownloadAllLightmaps","parent":"render","type":"libraryfunc","description":{"text":"This applies the changes made to map lighting using .","page":"engine.LightStyle"},"realm":"Client","args":{"arg":{"text":"When true, this will also apply lighting changes to static props. This is really slow on large maps.","name":"DoStaticProps","type":"boolean","default":"false"}}}},
{"function":{"name":"PushFlashlightMode","parent":"render","type":"libraryfunc","description":{"text":"Enables the flashlight projection for the upcoming rendering.","bug":{"text":"This will leave models lit under specific conditions.","issue":"3029"}},"realm":"Client","args":{"arg":{"text":"Whether the flashlight mode should be enabled or disabled.","name":"enable","type":"boolean","default":"false"}}}},
{"function":{"name":"PushRenderTarget","parent":"render","type":"libraryfunc","description":{"text":"Pushes the current render target and viewport to the RT stack then sets a new current render target and viewport. If the viewport is not specified, the dimensions of the render target are used instead.\n\nThis is similar to a call to  and  where the current render target and viewport have been saved beforehand, except the viewport isn't clipped to screen bounds.\n\nSee also .","page":["render.SetRenderTarget","render.SetViewPort","render.PopRenderTarget"],"note":[{"text":"If you want to render to the render target in 2d mode and it is not the same size as the screen, use  and .","page":["cam.Start2D","cam.End2D"]},{"text":"If the render target is bigger than the screen, rendering done with the surface library will be clipped to the screen bounds unless you call","page":"surface.DisableClipping"}]},"realm":"Client","args":{"arg":[{"text":"The new render target to be used.","name":"texture","type":"ITexture"},{"text":"X origin of the viewport.","name":"x","type":"number","default":"0"},{"text":"Y origin of the viewport.","name":"y","type":"number","default":"0"},{"text":"Width of the viewport.","name":"w","type":"number","default":"texture:Width()"},{"text":"Height of the viewport","name":"h","type":"number","default":"texture:Height()"}]}},"example":[{"description":"Shows how to create a material which uses a custom created Render Target texture.","code":"-- Create render target\nlocal exampleRT = GetRenderTarget( \"example_rt\", 1024, 1024 )\n\n-- Draw to the render target\nrender.PushRenderTarget( exampleRT )\n\tcam.Start2D()\n\t\t-- Draw background\n\t\tsurface.SetDrawColor( 0, 0, 0, 255 )\n\t\tsurface.DrawRect( 0, 0, 1024, 1024 )\n\n\t\t-- Draw some foreground stuff\n\t\tsurface.SetDrawColor( 255, 0, 0, 255 )\n\t\tsurface.DrawRect( 0, 0, 256, 256 )\n\tcam.End2D()\nrender.PopRenderTarget()\n\nlocal customMaterial = CreateMaterial( \"example_rt_mat\", \"UnlitGeneric\", {\n\t[\"$basetexture\"] = exampleRT:GetName(), -- You can use \"example_rt\" as well\n\t[\"$translucent\"] = 1,\n\t[\"$vertexcolor\"] = 1\n} )\n\nhook.Add( \"HUDPaint\", \"ExampleDraw\", function()\n\tsurface.SetDrawColor( 255, 255, 255, 255 )\n\tsurface.SetMaterial( customMaterial )\n\tsurface.DrawTexturedRect( 0, 0, customMaterial:GetTexture( \"$basetexture\" ):Width(), customMaterial:GetTexture( \"$basetexture\" ):Height() )\nend )","output":"A black 1024x1024 render target with a 256x256 red square in top left corner drawn in your top left corner."},{"description":"Shows how you can use alpha channel with render targets.","code":"render.PushRenderTarget( texture )\nrender.OverrideAlphaWriteEnable( true, true )\n\nrender.ClearDepth()\nrender.Clear( 0, 0, 0, 0 )\n\n-- Draw stuff here\n\nrender.OverrideAlphaWriteEnable( false )\nrender.PopRenderTarget()"}]},
{"function":{"name":"PushFilterMag","parent":"render","type":"libraryfunc","description":"Pushes a texture filter onto the magnification texture filter stack.","realm":"Client","args":{"arg":{"text":"The texture filter type, see","name":"texFilterType","type":"number","page":"Enums/TEXFILTER"}}}},
{"function":{"name":"PushFilterMin","parent":"render","type":"libraryfunc","description":"Pushes a texture filter onto the minification texture filter stack.","realm":"Client","args":{"arg":{"text":"The texture filter type, see","name":"texFilterType","type":"number","page":"Enums/TEXFILTER"}}},"example":{"description":"Anisotropic Filtering (This is not antialiasing)","code":"render.PushFilterMag( TEXFILTER.ANISOTROPIC )\nrender.PushFilterMin( TEXFILTER.ANISOTROPIC )\n\n-- Render stuff here\n\nrender.PopFilterMag()\nrender.PopFilterMin()"}},
{"function":{"name":"PopRenderTarget","parent":"render","type":"libraryfunc","description":{"text":"Pops the last render target and viewport from the RT stack and sets them as the current render target and viewport.\n\nThis is should be called to restore the previous render target and viewport after a call to .","page":"render.PushRenderTarget"},"realm":"Client"}},
{"function":{"name":"PopRenderTarget","parent":"render","type":"libraryfunc","description":{"text":"Pops the last render target and viewport from the RT stack and sets them as the current render target and viewport.\n\nThis is should be called to restore the previous render target and viewport after a call to .","page":"render.PushRenderTarget"},"realm":"Client"}},
{"function":{"name":"PopFilterMin","parent":"render","type":"libraryfunc","description":{"text":"Pops the current texture minification filter from the filter stack.\n\nSee","page":"render.PushFilterMin"},"realm":"Client"}},
{"function":{"name":"PopFlashlightMode","parent":"render","type":"libraryfunc","description":"Pops the current flashlight mode from the flashlight mode stack.","realm":"Client"}},
{"function":{"name":"PopFilterMag","parent":"render","type":"libraryfunc","description":{"text":"Pops the current texture magnification filter from the filter stack.\n\nSee","page":"render.PushFilterMag"},"realm":"Client"}},
{"function":{"name":"PopCustomClipPlane","parent":"render","type":"libraryfunc","description":"Removes the current active clipping plane from the clip plane stack.","realm":"Client"}},
{"function":{"name":"PerformFullScreenStencilOperation","parent":"render","type":"libraryfunc","description":"","realm":"Client"}},
{"function":{"name":"OverrideDepthEnable","parent":"render","type":"libraryfunc","description":"Overrides the write behaviour of all next rendering operations towards the depth buffer.","realm":"Client","args":{"arg":[{"text":"Enable or disable the override.","name":"enable","type":"boolean"},{"text":"If the previous argument is true, sets whether the next rendering operations should write to the depth buffer or not. Has no effect if the previous argument is false.","name":"shouldWrite","type":"boolean"}]}}},
{"function":{"name":"OverrideColorWriteEnable","parent":"render","type":"libraryfunc","description":"Overrides the write behaviour of all next rendering operations towards the color channel of the current render target.","realm":"Client","args":{"arg":[{"text":"Enable or disable the override.","name":"enable","type":"boolean"},{"text":"If the previous argument is true, sets whether the next rendering operations should write to the color channel or not. Has no effect if the previous argument is false.","name":"shouldWrite","type":"boolean"}]}}},
{"function":{"name":"OverrideBlendFunc","parent":"render","type":"libraryfunc","description":{"text":"Overrides the internal graphical functions used to determine the final color and alpha of a rendered texture.\n\nSee also .","deprecated":{"text":"Use  instead.","page":"render.OverrideBlend"},"page":"render.OverrideAlphaWriteEnable","note":{"text":"Doing  draw calls with alpha set to 0 is a no-op and will never have any effect.","page":"surface"}},"realm":"Client","args":{"arg":[{"text":"true to enable, false to disable. No other arguments are required when disabling.","name":"enabled","type":"boolean"},{"text":"The source color blend function . Determines how a rendered texture's final color should be calculated.","name":"srcBlend","type":"number","page":"Enums/BLEND"},{"name":"destBlend","type":"number"},{"text":"The source alpha blend function . Determines how a rendered texture's final alpha should be calculated.","name":"srcBlendAlpha","type":"number","default":"nil","page":"Enums/BLEND"},{"name":"destBlendAlpha","type":"number","default":"nil"}]}}},
{"function":{"name":"OverrideAlphaWriteEnable","parent":"render","type":"libraryfunc","description":{"text":"Overrides the write behaviour of all next rendering operations towards the alpha channel of the current render target.\n\nSee also .","page":"render.OverrideBlend","note":{"text":"Doing  draw calls with alpha set to 0 is a no-op and will never have any effect.","page":"surface"}},"realm":"Client","args":{"arg":[{"text":"Enable or disable the override.","name":"enable","type":"boolean"},{"text":"If the previous argument is true, sets whether the next rendering operations should write to the alpha channel or not. Has no effect if the previous argument is false.","name":"shouldWrite","type":"boolean"}]}},"example":{"description":"Shows how you can use alpha channel with render targets.","code":"render.PushRenderTarget( texture )\nrender.OverrideAlphaWriteEnable( true, true )\n\nrender.ClearDepth()\nrender.Clear( 0, 0, 0, 0 )\n\nrender.OverrideAlphaWriteEnable( false )\nrender.PopRenderTarget()"}},
{"function":{"name":"OverrideBlend","parent":"render","type":"libraryfunc","description":{"text":"Overrides the internal graphical functions used to determine the final color and alpha of a rendered texture.\n\nSee also .","page":"render.OverrideAlphaWriteEnable","note":{"text":"Doing  draw calls with alpha set to 0 is a no-op and won't have an effect.","page":"surface"}},"realm":"Client","args":{"arg":[{"text":"true to enable, false to disable. No other arguments are required when disabling.","name":"enabled","type":"boolean"},{"text":"The source color blend function . Determines how a rendered texture's final color should be calculated.","name":"srcBlend","type":"number","page":"Enums/BLEND"},{"text":"The destination color blend function .","name":"destBlend","type":"number","page":"Enums/BLEND"},{"text":"The blend mode used for drawing the color layer .","name":"blendFunc","type":"number","page":"Enums/BLENDFUNC"},{"text":"The source alpha blend function . Determines how a rendered texture's final alpha should be calculated.","name":"srcBlendAlpha","type":"number","default":"none","page":"Enums/BLEND"},{"text":"The destination alpha blend function .","name":"destBlendAlpha","type":"number","default":"none","page":"Enums/BLEND"},{"text":"The blend mode used for drawing the alpha layer .","name":"blendFuncAlpha","type":"number","default":"none","page":"Enums/BLENDFUNC"}]}},"example":{"description":{"text":"In this example we draw a lightning bolt over our player's head.\n\nWe shouldn't really draw the lightning in the PreDrawTranslucentRenderables hook as this causes issues rendering transparent objects behind the lightning, but it's a quick example of how the function works. Normally it should be drawn in a custom lua effect's .","page":"EFFECT:Render"},"code":"-- Our sprite texture to render. Rendering this texture without\n-- render.OverrideBlendFunc will result in black borders around the lightning beam.\nlocal lightningMaterial = Material(\"sprites/lgtning\")\n\nhook.Add( \"PreDrawTranslucentRenderables\", \"LightningExample\", function(isDrawingDepth, isDrawingSkybox)\n\n\tif isDrawingDepth or isDrawSkybox then return end\n\n\tlocal ply = Entity(1)\n\n\tif !IsValid(ply) then return end\n\n\t-- Calculate a random UV to use for the lightning to give it some movement\n\tlocal uv = math.Rand(0, 1)\n\n\t-- Enable blend override to interpret the color and alpha from the texture.\n\trender.OverrideBlend( true, BLEND_SRC_COLOR, BLEND_SRC_ALPHA, BLENDFUNC_ADD, BLEND_ONE, BLEND_ZERO, BLENDFUNC_ADD )\n\n\trender.SetMaterial(lightningMaterial)\n\n\t-- Render a lightning beam along points randomly offset from a line above the player.\n\trender.StartBeam(5)\n\trender.AddBeam(ply:GetPos() + Vector(0,0,035), 20, uv, Color(255,255,255,255))\n\trender.AddBeam(ply:GetPos() + Vector(0,0,135) + Vector(math.Rand(-20,20),math.Rand(-20,20),0), 20, uv*2, Color(255,255,255,255))\n\trender.AddBeam(ply:GetPos() + Vector(0,0,235) + Vector(math.Rand(-20,20),math.Rand(-20,20),0), 20, uv*3, Color(255,255,255,255))\n\trender.AddBeam(ply:GetPos() + Vector(0,0,335) + Vector(math.Rand(-20,20),math.Rand(-20,20),0), 20, uv*4, Color(255,255,255,255))\n\trender.AddBeam(ply:GetPos() + Vector(0,0,435) + Vector(math.Rand(-20,20),math.Rand(-20,20),0), 20, uv*5, Color(255,255,255,255))\n\trender.EndBeam()\n\n\t -- Disable blend override\n\trender.OverrideBlend( false )\n\nend )","output":{"image":{"src":"overrideblendfunc_example.png","alt":"_overrideblendfunc_example.png"}}}},
{"function":{"name":"ModelMaterialOverride","parent":"render","type":"libraryfunc","description":{"text":"Sets a material to override a model's default material. Similar to  except it uses an  argument and it can be used to change materials on models which are part of the world geometry.","page":["Entity:SetMaterial","IMaterial"]},"realm":"Client","args":{"arg":{"text":"The material override.","name":"material","type":"IMaterial"}}},"example":{"description":"Sets the material of all opaque models to the red flashing \"ERROR\" texture.","code":"local error_mat = Material(\"models/error/new light1\")\n\nfunction GM:PreDrawOpaqueRenderables(bDrawingDepth, bDrawingSkybox)\n\n\trender.ModelMaterialOverride(error_mat)\n\t\nend"}},
{"function":{"name":"MaxTextureWidth","parent":"render","type":"libraryfunc","description":"Returns the maximum texture width the renderer can handle.","realm":"Client","rets":{"ret":{"text":"maxTextureWidth","name":"","type":"number"}}}},
{"function":{"name":"Model","parent":"render","type":"libraryfunc","description":{"text":"Creates a new , renders it at the specified pos/ang, and removes it. Can also be given an existing  to reuse instead.","page":["Global.ClientsideModel","CSEnt"],"note":{"text":"This function is only meant to be used in a single render pass kind of scenario, if you need to render a model continuously, use a cached  and provide it as a second argument.","page":"Global.ClientsideModel"},"bug":{"text":"Using this with a map model (():()) crashes the game.","issue":"3307","page":["game.GetWorld",",GetModelEntity:GetModel"]}},"realm":"Client","file":{"text":"lua/includes/extensions/client/render.lua","line":"192-L216"},"args":{"arg":[{"text":"Requires:\n*  model - The model to draw\n*  pos - The position to draw the model at\n*  angle - The angles to draw the model at","name":"settings","type":"table","page":["string","Vector","Angle"]},{"text":"If provided, this entity will be reused instead of creating a new one with . Note that the ent's model, position and angles will be changed, and  will be set to true.","name":"ent","type":"CSEnt","default":"nil","page":["Global.ClientsideModel","Entity:SetNoDraw"]}]}}},
{"function":{"name":"MaxTextureHeight","parent":"render","type":"libraryfunc","description":"Returns the maximum texture height the renderer can handle.","realm":"Client","rets":{"ret":{"text":"maxTextureHeight","name":"","type":"number"}}}},
{"function":{"name":"MaterialOverrideByIndex","parent":"render","type":"libraryfunc","description":{"text":"Similar to , but overrides the materials per index.\n\n overrides effects of this function.","page":["render.MaterialOverride","render.MaterialOverride"]},"realm":"Client","args":{"arg":[{"text":"Starts with 0, the index of the material to override","name":"index","type":"number"},{"text":"The material to override with","name":"material","type":"IMaterial"}]}}},
{"function":{"name":"MaterialOverride","parent":"render","type":"libraryfunc","description":{"text":"Sets the render material override for all next calls of . Also overrides .","page":["Entity:DrawModel","render.MaterialOverrideByIndex"]},"realm":"Client","args":{"arg":{"text":"The material to use as override, use nil to disable.","name":"material","type":"IMaterial"}}}},
{"function":{"name":"GetToneMappingScaleLinear","parent":"render","type":"libraryfunc","description":"Returns a vector representing linear tone mapping scale.","realm":"Client","rets":{"ret":{"text":"The vector representing linear tone mapping scale.","name":"","type":"Vector"}}}},
{"function":{"name":"GetSuperFPTex2","parent":"render","type":"libraryfunc","description":{"text":"See","page":"render.GetSuperFPTex"},"realm":"Client","rets":{"ret":{"text":"Render target named \"__rt_supertexture2\"","name":"","type":"ITexture"}}}},
{"function":{"name":"GetSurfaceColor","parent":"render","type":"libraryfunc","description":"Performs a render trace and returns the color of the surface hit, this uses a low res version of the texture.","realm":"Client","args":{"arg":[{"text":"The start position to trace from.","name":"startPos","type":"Vector"},{"text":"The end position of the trace.","name":"endPos","type":"Vector"}]},"rets":{"ret":{"text":"color","name":"","type":"Vector"}}}},
{"function":{"name":"GetSuperFPTex","parent":"render","type":"libraryfunc","description":{"text":"Returns a floating point texture the same resolution as the screen.","note":{"text":"The  doesn't behave as expected when drawing a floating-point texture to an integer texture (e.g. the default render target). Use an UnlitGeneric material instead","page":"gmodscreenspace"}},"realm":"Client","rets":{"ret":{"text":"Render target named \"__rt_supertexture1\"","name":"","type":"ITexture"}}}},
{"function":{"name":"GetSmallTex1","parent":"render","type":"libraryfunc","realm":"Client","rets":{"ret":{"name":"","type":"ITexture"}}}},
{"function":{"name":"GetSmallTex0","parent":"render","type":"libraryfunc","realm":"Client","rets":{"ret":{"name":"","type":"ITexture"}}}},
{"function":{"name":"GetScreenEffectTexture","parent":"render","type":"libraryfunc","description":{"text":"Obtain an  of the screen. You must call  in order to update this texture with the currently rendered scene.\n\nThis texture is mainly used within","page":["ITexture","render.UpdateScreenEffectTexture","GM:RenderScreenspaceEffects"]},"realm":"Client","args":{"arg":{"text":"Max index is 3, but engine only creates the first two for you.","name":"textureIndex","type":"number","default":"0"}},"rets":{"ret":{"name":"","type":"ITexture"}}},"example":{"description":"Print the texture name of the returned textures.","code":"print(render.GetScreenEffectTexture(0):GetName())\nprint(render.GetScreenEffectTexture(1):GetName())","output":"```\n_rt_fullframefb\n_rt_fullframefb1\n```"}},
{"function":{"name":"GetResolvedFullFrameDepth","parent":"render","type":"libraryfunc","description":"Returns the _rt_ResolvedFullFrameDepth texture for SSAO depth.","realm":"Client","rets":{"ret":{"name":"","type":"ITexture"}}}},
{"function":{"name":"GetRenderTarget","parent":"render","type":"libraryfunc","description":{"text":"Returns the currently active render target.\n\nInstead of saving the current render target using this function and restoring to it later, it is generally better practice to use  and .","page":["render.PushRenderTarget","render.PopRenderTarget"]},"realm":"Client","rets":{"ret":{"text":"The currently active Render Target","name":"","type":"ITexture"}}},"example":{"description":"Render something to a different render target, then restore the old render target","code":"local w, h = ScrW(), ScrH()\nlocal customRt = GetRenderTarget( \"some_unique_render_target_nameeeee\", w, h, true )\n\nrender.PushRenderTarget( customRt )\n    render.Clear( 0, 0, 255, 255, true ) -- fill the background with blue!\n\n    -- draw all props on the blue background!\n    for key, prop in pairs(ents.FindByClass( \"prop_physics\" )) do\n        prop:DrawModel()\n    end\n\n    -- save the picture to the garrysmod/data folder.  ~format=\"jpg\" will not work.\n    local data = render.Capture({ format = \"jpeg\", quality = 70, x = 0, y = 0, h = h, w = w })\t\n    local pictureFile = file.Open( \"RenderTargetsAreAwesome.jpg\", \"wb\", \"DATA\" )\t\n    pictureFile:Write( data )\n    pictureFile:Close()\nrender.PopRenderTarget()"}},
{"function":{"name":"GetRefractTexture","parent":"render","type":"libraryfunc","description":{"text":"Alias of .","page":"render.GetPowerOfTwoTexture"},"realm":"Client","rets":{"ret":{"name":"","type":"ITexture"}}}},
{"function":{"name":"GetPowerOfTwoTexture","parent":"render","type":"libraryfunc","description":"Returns the render target's power of two texture.","realm":"Client","rets":{"ret":{"text":"The power of two texture, which is **_rt_poweroftwofb** by default.","name":"","type":"ITexture"}}}},
{"function":{"name":"GetMorphTex1","parent":"render","type":"libraryfunc","realm":"Client","rets":{"ret":{"name":"","type":"ITexture"}}}},
{"function":{"name":"GetMorphTex0","parent":"render","type":"libraryfunc","realm":"Client","rets":{"ret":{"name":"","type":"ITexture"}}}},
{"function":{"name":"GetMoBlurTex1","parent":"render","type":"libraryfunc","realm":"Client","rets":{"ret":{"name":"","type":"ITexture"}}}},
{"function":{"name":"GetMoBlurTex0","parent":"render","type":"libraryfunc","realm":"Client","rets":{"ret":{"name":"","type":"ITexture"}}}},
{"function":{"name":"GetLightColor","parent":"render","type":"libraryfunc","description":"Gets the light exposure on the specified position.","realm":"Client","args":{"arg":{"text":"The position of the surface to get the light from.","name":"position","type":"Vector"}},"rets":{"ret":{"text":"lightColor","name":"","type":"Vector"}}}},
{"function":{"name":"GetFullScreenDepthTexture","parent":"render","type":"libraryfunc","description":"Returns the _rt_FullFrameDepth texture. Alias of _rt_PowerOfTwoFB","realm":"Client","rets":{"ret":{"name":"","type":"ITexture"}}}},
{"function":{"name":"GetFogMode","parent":"render","type":"libraryfunc","description":"Returns the fog mode.","realm":"Client","rets":{"ret":{"text":"Fog mode, see","name":"","type":"number","page":"Enums/MATERIAL_FOG"}}}},
{"function":{"name":"GetFogDistances","parent":"render","type":"libraryfunc","description":"Returns the fog start and end distance.","realm":"Client","rets":{"ret":[{"text":"Fog start distance set by","name":"","type":"number","page":"render.FogStart"},{"text":"For end distance set by","name":"","type":"number","page":"render.FogEnd"},{"text":"Fog Z distance set by","name":"","type":"number","page":"render.SetFogZ"}]}}},
{"function":{"name":"GetFogColor","parent":"render","type":"libraryfunc","description":"Returns the current fog color.","realm":"Client","rets":{"ret":[{"text":"Red part of the color.","name":"","type":"number"},{"text":"Green part of the color","name":"","type":"number"},{"text":"Blue part of the color","name":"","type":"number"}]}}},
{"function":{"name":"GetDXLevel","parent":"render","type":"libraryfunc","description":"Returns the maximum available directX version.","realm":"Client","rets":{"ret":{"text":"dxLevel","name":"","type":"number"}}}},
{"function":{"name":"GetColorModulation","parent":"render","type":"libraryfunc","description":"Returns the current color modulation values as normals.","realm":"Client","rets":{"ret":{"text":"r","name":"","type":"number"}}}},
{"function":{"name":"GetBloomTex1","parent":"render","type":"libraryfunc","realm":"Client","rets":{"ret":{"name":"","type":"ITexture"}}}},
{"function":{"name":"GetBloomTex0","parent":"render","type":"libraryfunc","realm":"Client","rets":{"ret":{"text":"The bloom texture","name":"","type":"ITexture"}}}},
{"function":{"name":"GetBlend","parent":"render","type":"libraryfunc","description":"Returns the current alpha blending.","realm":"Client","rets":{"ret":{"text":"blend","name":"","type":"number"}}}},
{"function":{"name":"GetAmbientLightColor","parent":"render","type":"libraryfunc","description":"Returns the ambient color of the map.","realm":"Client","rets":{"ret":{"text":"color","name":"","type":"Vector"}}}},
{"function":{"name":"FogStart","parent":"render","type":"libraryfunc","description":"Sets the distance at which the fog starts showing up.","realm":"Client","args":{"arg":{"text":"The distance at which the fog starts showing up.","name":"fogStart","type":"number","note":{"text":"If used in , this value **must** be scaled by the first argument of the hook","page":"GM:SetupSkyboxFog"}}}}},
{"function":{"name":"FogMode","parent":"render","type":"libraryfunc","description":"Sets the mode of fog.","realm":"Client","args":{"arg":{"text":"Fog mode, see .","name":"fogMode","type":"number","page":"Enums/MATERIAL_FOG"}}}},
{"function":{"name":"FogMaxDensity","parent":"render","type":"libraryfunc","description":"Sets the maximum density of the fog.","realm":"Client","args":{"arg":{"text":"The maximum density of the fog, 0-1.","name":"maxDensity","type":"number"}}}},
{"function":{"name":"FogEnd","parent":"render","type":"libraryfunc","description":"Sets the at which the fog reaches its max density.","realm":"Client","args":{"arg":{"text":"The distance at which the fog reaches its max density.","name":"distance","type":"number","note":{"text":"If used in , this value **must** be scaled by the first argument of the hook","page":"GM:SetupSkyboxFog"}}}}},
{"function":{"name":"EndBeam","parent":"render","type":"libraryfunc","description":{"text":"Ends the beam mesh of a beam started with .","page":"render.StartBeam"},"realm":"Client"}},
{"function":{"name":"FogColor","parent":"render","type":"libraryfunc","description":"Sets the color of the fog.","realm":"Client","args":{"arg":[{"text":"Red channel of the fog color, 0 - 255.","name":"red","type":"number"},{"text":"Green channel of the fog color, 0 - 255.","name":"green","type":"number"},{"text":"Blue channel of the fog color, 0 - 255.","name":"blue","type":"number"}]}}},
{"function":{"name":"EnableClipping","parent":"render","type":"libraryfunc","description":{"text":"Sets the status of the clip renderer, returning previous state.","warning":"To prevent unintended rendering behavior of other mods/the game, you must reset the clipping state to its previous value.","bug":{"text":"Reloading the map does not reset the previous value of this function.","issue":"3105"}},"realm":"Client","args":{"arg":{"text":"New clipping state.","name":"state","type":"boolean"}},"rets":{"ret":{"text":"Previous clipping state.","name":"","type":"boolean"}}},"example":[{"description":"Properly using the function.","code":"-- Inside some rendering hook\n\nlocal oldclip = render.EnableClipping( true )\n\n-- Your code here\n\nrender.EnableClipping( oldclip )"},{"description":"Clips the lower half of your custom entity","code":"function ENT:Draw()\n    local normal = self:GetUp() -- Everything \"behind\" this normal will be clipped\n    local position = normal:Dot( self:GetPos() ) -- self:GetPos() is the origin of the clipping plane\n\n    local oldEC = render.EnableClipping( true )\n    render.PushCustomClipPlane( normal, position )\n\n    self:DrawModel()\n\n    render.PopCustomClipPlane()\n    render.EnableClipping( oldEC )\nend"}]},
{"function":{"name":"DrawWireframeSphere","parent":"render","type":"libraryfunc","description":{"text":"Draws a wireframe sphere in 3d space.","rendercontext":{"hook":"false","type":"3D"}},"realm":"Client","args":{"arg":[{"text":"Position of the sphere.","name":"position","type":"Vector"},{"text":"The size of the sphere.","name":"radius","type":"number"},{"text":"The amount of longitude steps. \nThe larger this number is, the smoother the sphere is.","name":"longitudeSteps","type":"number"},{"text":"The amount of latitude steps. \nThe larger this number is, the smoother the sphere is.","name":"latitudeSteps","type":"number"},{"text":"The color of the wireframe. Uses the .","name":"color","type":"table","default":"<page>Global.Color</page>( 255, 255, 255 )","page":"Color"},{"text":"Whether or not to consider the Z buffer. If false, the wireframe will be drawn over everything currently drawn. If true, it will be drawn with depth considered, as if it were a regular object in 3D space.","name":"writeZ","type":"boolean","default":"false"}]}},"example":{"description":"Draws a wireframe sphere over a normal sphere for an artistic effect.","code":"hook.Add( \"PostDrawTranslucentRenderables\", \"test\", function()\n\n\t-- Set the draw material to solid white\n\trender.SetColorMaterial()\n\n\t-- The position to render the sphere at, in this case, the looking position of the local player\n\tlocal pos = LocalPlayer():GetEyeTrace().HitPos\n\n\tlocal radius = 50\n\tlocal wideSteps = 10\n\tlocal tallSteps = 10\n\n\t-- Draw the sphere!\n\trender.DrawSphere( pos, radius, wideSteps, tallSteps, Color( 0, 175, 175, 100 ) )\n\n\t-- Draw the wireframe sphere!\n\trender.DrawWireframeSphere( pos, radius, wideSteps, tallSteps, Color( 255, 255, 255, 255 ) )\n\nend )"}},
{"function":{"name":"DrawTextureToScreen","parent":"render","type":"libraryfunc","description":{"text":"Draws a texture over the whole screen.","rendercontext":{"hook":"false","type":"2D"}},"realm":"Client","file":{"text":"lua/includes/extensions/client/render.lua","line":"165"},"args":{"arg":{"text":"The texture to draw","name":"tex","type":"ITexture"}}}},
{"function":{"name":"DrawTextureToScreenRect","parent":"render","type":"libraryfunc","description":{"text":"Draws a textured rectangle.","rendercontext":{"hook":"false","type":"2D"}},"realm":"Client","file":{"text":"lua/includes/extensions/client/render.lua","line":"175"},"args":{"arg":[{"text":"The texture to draw","name":"tex","type":"ITexture"},{"text":"The x coordinate of the rectangle to draw.","name":"x","type":"number"},{"text":"The y coordinate of the rectangle to draw.","name":"y","type":"number"},{"text":"The width of the rectangle to draw.","name":"width","type":"number"},{"text":"The height of the rectangle to draw.","name":"height","type":"number"}]}}},
{"function":{"name":"DrawWireframeBox","parent":"render","type":"libraryfunc","description":{"text":"Draws a wireframe box in 3D space.","rendercontext":{"hook":"false","type":"3D"}},"realm":"Client","args":{"arg":[{"text":"Position of the box.","name":"position","type":"Vector"},{"text":"Angles of the box.","name":"angle","type":"Angle"},{"text":"The lowest corner of the box.","name":"mins","type":"Vector"},{"text":"The highest corner of the box.","name":"maxs","type":"Vector"},{"text":"The color of the box. Uses the .","name":"color","type":"table","default":"Color( 255, 255, 255 )","page":"Color"},{"text":"Sets whenever to write to the zBuffer.","name":"writeZ","type":"boolean","default":"false"}]}}},
{"function":{"name":"DrawSprite","parent":"render","type":"libraryfunc","description":{"text":"Draws a sprite in 3D space.","rendercontext":{"hook":"false","type":"3D"}},"realm":"Client","args":{"arg":[{"text":"Position of the sprite.","name":"position","type":"Vector"},{"text":"Width of the sprite.","name":"width","type":"number"},{"text":"Height of the sprite.","name":"height","type":"number"},{"text":"Color of the sprite. Uses the .","name":"color","type":"table","default":"Color( 255, 255, 255 )","page":"Color"}]}},"example":[{"description":"Draw a sprite at the center of the map","code":"local pos,material,white = Vector(0,0,0), Material( \"sprites/splodesprite\" ),Color(255,255,255,255) --Define this sort of stuff outside of loops to make more efficient code.\nhook.Add( \"HUDPaint\", \"paintsprites\", function()\n\tcam.Start3D() -- Start the 3D function so we can draw onto the screen.\n\t\trender.SetMaterial( material ) -- Tell render what material we want, in this case the flash from the gravgun\n\t\trender.DrawSprite( pos, 16, 16, white) -- Draw the sprite in the middle of the map, at 16x16 in it's original colour with full alpha.\n\tcam.End3D()\nend )","output":"An orange star appears at 0,0,0 on the map."},{"description":{"text":"Function that displays a sprite at the given position, without the need of a specific rendering context\n\ndraw.VectorSprite( position,  size,  color,  constantSize)","page":["Vector","number","Color","boolean"]},"code":"local toDraw3d = {}\nlocal sprites3d = 0\n\nlocal toDraw2d = {}\nlocal sprites2d = 0\n\nlocal material = Material(\"sprites/light_ignorez\")\n\nfunction draw.VectorSprite(position, size, color, constantSize)\n\tif (not isvector(position)) then\n\t\terror(\"bad argument #1 to draw.DrawVectorSprite (Vector expected, got \" .. type(position) .. \")\")\n\tend\n\n\tif (not isnumber(size)) then\n\t\terror(\"bad argument #2 to draw.DrawVectorSprite (number expected, got \" .. type(size) .. \")\")\n\tend\n\n\tif (not IsColor(color)) then\n\t\terror(\"bad argument #3 to draw.DrawVectorSprite (Color expected, got \" .. type(color) .. \")\")\n\tend\n\n\tlocal tbl = {position, size, color}\n\n\tif (constantSize) then\n\t\tsprites2d = sprites2d + 1\n\t\ttoDraw2d[sprites2d] = tbl\n\telse\n\t\tsprites3d = sprites3d + 1\n\t\ttoDraw3d[sprites3d] = tbl\n\tend\nend\n\nlocal render_SetMaterial = render.SetMaterial\nlocal render_DrawSprite = render.DrawSprite\nhook.Add(\"PreDrawEffects\", \"draw.VectorSprite\", function()\n\tif (sprites3d ~= 0) then\n\t\trender_SetMaterial(material)\n\n\t\tfor i = 1, sprites3d do\n\t\t\tlocal info = toDraw3d[i]\n\t\t\ttoDraw3d[i] = nil -- Clear the table every frame\n\n\t\t\trender_DrawSprite(info[1], info[2], info[2], info[3])\n\t\tend\n\n\t\tsprites3d = 0\n\tend\nend)\n\nlocal surface_SetMaterial = surface.SetMaterial\nlocal surface_SetDrawColor = surface.SetDrawColor\nlocal surface_DrawTexturedRect = surface.DrawTexturedRect\nhook.Add(\"DrawOverlay\", \"draw.VectorSprite\", function()\n\tif (sprites2d ~= 0) then\n\t\tsurface_SetMaterial(material)\n\n\t\tfor i = 1, sprites2d do\n\t\t\tlocal info = toDraw2d[i]\n\t\t\ttoDraw2d[i] = nil\n\n\t\t\tlocal pos2d = info[1]:ToScreen()\n\n\t\t\tif pos2d.visible then\n\t\t\t\tsurface_SetDrawColor(info[3])\n\t\t\t\tsurface_DrawTexturedRect(pos2d.x, pos2d.y, info[2], info[2])\n\t\t\tend\n\t\tend\n\n\t\tsprites2d = 0\n\tend\nend)"}]},
{"function":{"name":"DrawScreenQuad","parent":"render","type":"libraryfunc","description":{"text":"Draws the current material set by  to the whole screen. The color cannot be customized.\n\nSee also .","page":["render.SetMaterial","render.DrawScreenQuadEx"],"rendercontext":{"hook":"false","type":"2D"}},"realm":"Client"},"example":{"description":"Example usage, draws a wireframe texture onto the entire screen.","code":"local ourMat = Material( \"models/wireframe\" )\n\nhook.Add( \"HUDPaint\", \"example_hook\", function()\n\trender.SetMaterial( ourMat )\n\trender.DrawScreenQuad()\nend )"}},
{"function":{"name":"DrawScreenQuadEx","parent":"render","type":"libraryfunc","description":{"text":"Draws the the current material set by  to the area specified. Color cannot be customized.\n\nSee also .","page":["render.SetMaterial","render.DrawScreenQuad"],"rendercontext":{"hook":"false","type":"2D"}},"realm":"Client","args":{"arg":[{"text":"X start position of the rect.","name":"startX","type":"number"},{"text":"Y start position of the rect.","name":"startY","type":"number"},{"text":"Width of the rect.","name":"width","type":"number"},{"text":"Height of the rect.","name":"height","type":"number"}]}},"example":{"description":"Example usage, draws a 256x256 rectangle with the wireframe material.","code":"local ourMat = Material( \"models/wireframe\" )\nhook.Add( \"HUDPaint\", \"example_hook\", function()\n\trender.SetMaterial( ourMat )\n\trender.DrawScreenQuadEx( 100, 100, 256, 256 )\nend )"}},
{"function":{"name":"DrawSphere","parent":"render","type":"libraryfunc","description":{"text":"Draws a sphere in 3D space. The material previously set with  will be applied the sphere's surface.\n\nSee also  for a wireframe equivalent.","page":["render.SetMaterial","render.DrawWireframeSphere"],"rendercontext":{"hook":"false","type":"3D"}},"realm":"Client","args":{"arg":[{"text":"Position of the sphere.","name":"position","type":"Vector"},{"text":"Radius of the sphere. Negative radius will make the sphere render inwards rather than outwards.","name":"radius","type":"number"},{"text":"The number of longitude steps. This controls the quality of the sphere. Higher quality will lower performance significantly. 50 is a good number to start with.","name":"longitudeSteps","type":"number"},{"text":"The number of latitude steps. This controls the quality of the sphere. Higher quality will lower performance significantly. 50 is a good number to start with.","name":"latitudeSteps","type":"number"},{"text":"The color of the sphere. Uses the .","name":"color","type":"table","default":"Color( 255, 255, 255 )","page":"Color"}]}},"example":{"description":"This will draw a blue, half-translucent sphere (force field) at the position local player is looking.","code":"hook.Add( \"PostDrawTranslucentRenderables\", \"test\", function()\n\n\t--[[\n\t\twhen you draw a sphere, you have to specify what material the sphere is\n\t\tgoing to have before rendering it, render.SetColorMaterial()\n\t\tjust sets it to a white material so we can recolor it easily.\n\t--]]\n\trender.SetColorMaterial()\n\n\t-- The position to render the sphere at, in this case, the looking position of the local player\n\tlocal pos = LocalPlayer():GetEyeTrace().HitPos\n\n\t-- Draw the sphere!\n\trender.DrawSphere( pos, 50, 30, 30, Color( 0, 175, 175, 100 ) )\n\nend )"}},
{"function":{"name":"DrawQuad","parent":"render","type":"libraryfunc","description":{"text":"Draws 2 connected triangles. Expects material to be set by .","page":"render.SetMaterial","rendercontext":{"hook":"false","type":"3D"}},"realm":"Client","args":{"arg":[{"text":"First vertex.","name":"vert1","type":"Vector"},{"text":"The second vertex.","name":"vert2","type":"Vector"},{"text":"The third vertex.","name":"vert3","type":"Vector"},{"text":"The fourth vertex.","name":"vert4","type":"Vector"},{"text":"The color of the quad. See","name":"color","type":"table","default":"Color( 255, 255, 255 )","page":"Global.Color"}]}},"example":{"description":"Draw a red half transparent quad facing upwards 150 units below the 0,0,0 of gm_construct.","code":"local ourMat = Material( \"vgui/white\" ) -- Calling Material() every frame is quite expensive\nhook.Add( \"PostDrawTranslucentRenderables\", \"DrawQuad_Example\", function()\n\n\trender.SetMaterial( ourMat ) -- If you use Material, cache it!\n\trender.DrawQuad( Vector( 0, 0, -150 ), Vector( 0, 100, -150 ),Vector( 100, 100, -150 ), Vector( 100, 0, -150 ), Color( 255, 0, 0, 128 ) )\n\nend)"}},
{"function":{"name":"DrawLine","parent":"render","type":"libraryfunc","description":{"text":"Draws a line in 3D space.","rendercontext":{"hook":"false","type":"3D"}},"realm":"Client","args":{"arg":[{"text":"Line start position in world coordinates.","name":"startPos","type":"Vector"},{"text":"Line end position in world coordinates.","name":"endPos","type":"Vector"},{"text":"The color to be used. Uses the .","name":"color","type":"table","default":"Color( 255, 255, 255 )","page":"Color"},{"text":"Whether or not to consider the Z buffer. If false, the line will be drawn over everything currently drawn, if true, the line will be drawn with depth considered, as if it were a regular object in 3D space.","name":"writeZ","type":"boolean","default":"false","bug":{"text":"Enabling this option will cause the line to ignore the color's alpha.","issue":"1086"}}]}}},
{"function":{"name":"DrawQuadEasy","parent":"render","type":"libraryfunc","description":{"text":"Draws a quad.","rendercontext":{"hook":"false","type":"3D"}},"realm":"Client","args":{"arg":[{"text":"Origin of the sprite.","name":"position","type":"Vector"},{"text":"The face direction of the quad.","name":"normal","type":"Vector"},{"text":"The width of the quad.","name":"width","type":"number"},{"text":"The height of the quad.","name":"height","type":"number"},{"text":"The color of the quad. Uses the .","name":"color","type":"table","page":"Color"},{"text":"The rotation of the quad counter-clockwise in degrees around the normal axis. In other words, the quad will always face the same way but this will rotate its corners.","name":"rotation","type":"number","default":"0"}]}},"example":{"description":"Example usage of this function.","code":"local mat = Material( \"sprites/sent_ball\" )\nlocal mat2 = Material( \"models/wireframe\" )\nhook.Add(\"PostDrawTranslucentRenderables\", \"DrawQuadEasyExample\", function()\n\n\t-- Draw a rotating circle under local player\n\trender.SetMaterial( mat )\n\tlocal pos = LocalPlayer():GetPos()\n\trender.DrawQuadEasy( pos + Vector( 0, 0, 1 ), Vector( 0, 0, 1 ), 64, 64, Color( 255, 255, 255, 200 ), ( CurTime() * 50 ) % 360 )\n\n\t-- Draw 3 rotating wireframe quads where local player is looking at\n\trender.SetMaterial( mat2 )\n\tlocal tr = LocalPlayer():GetEyeTrace()\n\trender.DrawQuadEasy( tr.HitPos + tr.HitNormal, tr.HitNormal, 64, 64, Color( 255, 255, 255 ), ( CurTime() * 50 ) % 360 )\n\n\tlocal dir = tr.HitNormal:Angle()\n\tdir:RotateAroundAxis( tr.HitNormal, ( CurTime() * 50 ) % 360 )\n\tdir = dir:Up()\n\n\t-- We need to call this function twice, once for each side\n\trender.DrawQuadEasy( tr.HitPos + tr.HitNormal * 32, dir, 64, 64, Color( 255, 255, 255 ), 0 )\n\trender.DrawQuadEasy( tr.HitPos + tr.HitNormal * 32, -dir, 64, 64, Color( 255, 255, 255 ), 0 )\nend )"}},
{"function":{"name":"DrawBox","parent":"render","type":"libraryfunc","description":{"text":"Draws a box in 3D space.","rendercontext":{"hook":"false","type":"3D"}},"realm":"Client","args":{"arg":[{"text":"Origin of the box.","name":"position","type":"Vector"},{"text":"Orientation of the box.","name":"angles","type":"Angle"},{"text":"Start position of the box, relative to origin.","name":"mins","type":"Vector"},{"text":"End position of the box, relative to origin.","name":"maxs","type":"Vector"},{"text":"The color of the box. Uses the .","name":"color","type":"table","default":"Color( 255, 255, 255 )","page":"Color"}]}}},
{"function":{"name":"DrawBeam","parent":"render","type":"libraryfunc","description":{"text":"Draws textured beam.","rendercontext":{"hook":"false","type":"3D"}},"realm":"Client","args":{"arg":[{"text":"Beam start position.","name":"startPos","type":"Vector"},{"text":"Beam end position.","name":"endPos","type":"Vector"},{"text":"The width of the beam.","name":"width","type":"number"},{"text":"The start coordinate of the texture used.","name":"textureStart","type":"number"},{"text":"The end coordinate of the texture used.","name":"textureEnd","type":"number"},{"text":"The color to be used. Uses the .","name":"color","type":"table","default":"Color( 255, 255, 255 )","page":"Color"}]}}},
{"function":{"name":"CopyTexture","parent":"render","type":"libraryfunc","description":"Copies the contents of one texture to another. Only works with rendertargets.","realm":"Client","args":{"arg":[{"name":"texture_from","type":"ITexture"},{"name":"texture_to","type":"ITexture"}]}}},
{"function":{"name":"CullMode","parent":"render","type":"libraryfunc","description":"Changes the cull mode.","realm":"Client","args":{"arg":{"text":"Cullmode, see","name":"cullMode","type":"number","page":"Enums/MATERIAL_CULLMODE"}}}},
{"function":{"name":"DepthRange","parent":"render","type":"libraryfunc","description":"Set's the depth range of the upcoming render.","realm":"Client","args":{"arg":[{"text":"The minimum depth of the upcoming render. 0.0 = render normally; 1.0 = render nothing","name":"depthmin","type":"number"},{"text":"The maximum depth of the upcoming render. 0.0 = render everything (through walls); 1.0 = render normally","name":"depthmax","type":"number"}]}},"example":[{"description":"Perform a downward screen wipe effect on all opaque objects once the client connects.","code":"local depthmin = 1.0\n\nfunction GM:PreDrawOpaqueRenderables(bDrawingDepth, bDrawingSkybox)\n\n\trender.DepthRange(depthmin, 1.0)\n\t\n\tif(depthmin > 0.0) then\n\t\tdepthmin = depthmin - 0.001\n\tend\n\t\nend"},{"description":"Same effect as above but with a dark shadow skin present where the model is being drawn.","code":"local depthmin = 1.0\nlocal spawn_copies = {}\t-- The shadow copies\n\nfunction GM:PreDrawOpaqueRenderables(bDrawingDepth, bDrawingSkybox)\n\n\trender.DepthRange(depthmin, 1.0)\n\t\n\tif(!spawn_copies) then return false end\n\t\n\tif(depthmin > 0.0) then\n\t\tdepthmin = depthmin - 0.001\n\telse\n\t\n\t\tlocal alpha = 0\n\t\tlocal valid_copies = 0\n\t\t\n\t\t-- Fade out the shadow copies and remove them\n\t\tfor _, spawncopy in pairs(spawn_copies) do\n\t\t\tif(IsValid(spawncopy)) then\n\t\t\t\talpha = spawncopy:GetColor().a\n\t\t\t\tif(alpha > 0) then\n\t\t\t\t\tspawncopy:SetColor(Color(255, 255, 255, alpha-1))\n\t\t\t\telse\n\t\t\t\t\tspawncopy:Remove()\n\t\t\t\tend\n\t\t\t\tvalid_copies = valid_copies + 1\n\t\t\tend\n\t\tend\n\t\t\n\t\t-- Nullify table since we aren't using it any more\n\t\tif(valid_copies == 0) then\n\t\t\tspawn_copies = nil\n\t\tend\n\t\t\t\n\tend\n\t\nend\n\nfunction GM:OnEntityCreated(ent)\n\n\tif(!spawn_copies) then return end\n\t\n\t-- Prevents infinite loop and other errors\n\tif(ent:GetClass() != \"class C_BaseFlex\" &&\n\t\tent:GetRenderGroup() == RENDERGROUP_OPAQUE &&\n\t\tent:GetClass() != \"gmod_hands\") then\n\t\n\t\tlocal mdl = ent:GetModel()\n\t\t\n\t\t-- Check that the entity is a model and not a brush\n\t\tif(mdl && string.find(mdl, \".mdl\")) then\n\t\t\n\t\t\tlocal spawncopy = ClientsideModel(mdl)\n\t\t\t\n\t\t\t-- A material with $ignorez set to 1 works best here\n\t\t\tspawncopy:SetMaterial(\"models/overlay_rendertarget\")\n\t\t\tspawncopy:AddEffects(EF_BONEMERGE)\n\t\t\tspawncopy:SetParent(ent)\n\t\t\tspawncopy:SetRenderMode(RENDERMODE_TRANSALPHA)\n\t\t\tspawncopy:SetColor(Color(255, 255, 255, 92))\n\t\t\ttable.insert(spawn_copies, spawncopy)\n\t\t\t\n\t\tend\n\t\t\n\tend\n\t\nend","output":{"image":{"src":"DepthRange_example.webm"}}}]},
{"function":{"name":"CopyRenderTargetToTexture","parent":"render","type":"libraryfunc","description":"Copies the currently active Render Target to the specified texture.","realm":"Client","args":{"arg":{"text":"The texture to copy to","name":"Target","type":"ITexture"}}},"example":{"description":{"text":"This is how it's used in","page":"render.CopyTexture"},"code":"function render.CopyTexture( from, to )\n\n\tlocal OldRT = render.GetRenderTarget()\n\n\t\trender.SetRenderTarget( from )\n\t\trender.CopyRenderTargetToTexture( to )\n\n\trender.SetRenderTarget( OldRT )\n\nend"}},
{"function":{"name":"ComputeLighting","parent":"render","type":"libraryfunc","description":"Calculates the light color of a certain surface.","realm":"Client","args":{"arg":[{"text":"The position of the surface to get the light from.","name":"position","type":"Vector"},{"text":"The normal of the surface to get the light from.","name":"normal","type":"Vector"}]},"rets":{"ret":{"text":"A vector representing the light at that point.","name":"","type":"Vector"}}}},
{"function":{"name":"ComputeDynamicLighting","parent":"render","type":"libraryfunc","description":"Calculates the lighting caused by dynamic lights for the specified surface.","realm":"Client","args":{"arg":[{"text":"The position to sample from.","name":"position","type":"Vector"},{"text":"The normal of the surface.","name":"normal","type":"Vector"}]},"rets":{"ret":{"text":"A vector representing the light at that point.","name":"","type":"Vector"}}}},
{"function":{"name":"ClearStencilBufferRectangle","parent":"render","type":"libraryfunc","description":{"text":"Sets the stencil value in a specified rect.\n\nThis is **not** affected by","page":"render.SetStencilWriteMask"},"realm":"Client","args":{"arg":[{"text":"X origin of the rectangle.","name":"originX","type":"number"},{"text":"Y origin of the rectangle.","name":"originY","type":"number"},{"text":"The end X coordinate of the rectangle.","name":"endX","type":"number"},{"text":"The end Y coordinate of the rectangle.","name":"endY","type":"number"},{"text":"Value to set cleared stencil buffer to.","name":"stencilValue","type":"number"}]}},"example":{"description":"A basic stencil operation that limits rendering to the centre of the screen","code":"hook.Add( \"PostDrawOpaqueRenderables\", \"Stencil Tutorial Example\", function()\n\n\t-- Reset everything to known good\n\trender.SetStencilWriteMask( 0xFF )\n\trender.SetStencilTestMask( 0xFF )\n\trender.SetStencilReferenceValue( 0 )\n\trender.SetStencilCompareFunction( STENCIL_ALWAYS )\n\trender.SetStencilPassOperation( STENCIL_KEEP )\n\trender.SetStencilFailOperation( STENCIL_KEEP )\n\trender.SetStencilZFailOperation( STENCIL_KEEP )\n\trender.ClearStencil()\n\n\t-- Enable stencils\n\trender.SetStencilEnable( true )\n\t-- Set the reference value to 1. This is what the compare function tests against\n\trender.SetStencilReferenceValue( 1 )\n\t-- Refuse to write things to the screen unless that pixel's value is 1\n\trender.SetStencilCompareFunction( STENCIL_EQUAL )\n\t-- Write a 1 to the centre third of the screen. Because we cleared it earlier, everything is currently 0\n\tlocal w, h = ScrW() / 3, ScrH() / 3\n\tlocal x_start, y_start = w, h\n\tlocal x_end, y_end = x_start + w, y_start + h\n\trender.ClearStencilBufferRectangle( x_start, y_start, x_end, y_end, 1 )\n\n\t-- Draw our entities. They will only draw in the area cleared above\n\tfor _, ent in pairs( ents.FindByClass( \"sent_stencil_test\" ) ) do\n\t\tent:DrawModel()\n\tend\n\n\t-- Let everything render normally again\n\trender.SetStencilEnable( false )\nend )","output":{"image":{"src":"stencil_basic_clipping_result.jpg","alt":"left|400px"}}}},
{"function":{"name":"ClearStencil","parent":"render","type":"libraryfunc","description":"Resets all values in the stencil buffer to zero.","realm":"Client"},"example":{"description":"A silly example that shows that nothing will render if you clear the stencil buffer. (From \n[Lex's Stencil Tutorial](https://github.com/Lexicality/stencil-tutorial))","code":"hook.Add( \"PostDrawOpaqueRenderables\", \"Stencil Tutorial Example\", function()\n\n\t-- Reset everything to known good\n\trender.SetStencilWriteMask( 0xFF )\n\trender.SetStencilTestMask( 0xFF )\n\trender.SetStencilReferenceValue( 0 )\n\trender.SetStencilCompareFunction( STENCIL_ALWAYS )\n\trender.SetStencilPassOperation( STENCIL_KEEP )\n\trender.SetStencilFailOperation( STENCIL_KEEP )\n\trender.SetStencilZFailOperation( STENCIL_KEEP )\n\n\t-- Enable stencils\n\trender.SetStencilEnable( true )\n\t-- Set the reference value to 1. This is what the compare function tests against\n\trender.SetStencilReferenceValue( 1 )\n\t-- Refuse to write things to the screen unless that pixel's value is 1\n\trender.SetStencilCompareFunction( STENCIL_EQUAL )\n\t-- Set the entire screen to 0\n\trender.ClearStencil()\n\n\t-- Attempt to draw our entities. Nothing will draw, because nothing in the buffer is 1.\n\tfor _, ent in pairs( ents.FindByClass( \"sent_stencil_test\" ) ) do\n\t\tent:DrawModel()\n\tend\n\n\t-- Let everything render normally again\n\trender.SetStencilEnable( false )\nend )","output":{"image":{"src":"stencil_clearbuffer_result.jpg","alt":"left|400px"}}}},
{"function":{"name":"ClearDepth","parent":"render","type":"libraryfunc","description":{"text":"Resets the depth buffer.","bug":{"text":"This function also clears the stencil buffer. Use  in the meantime.","issue":"3317","page":"render.Clear"}},"realm":"Client"}},
{"function":{"name":"ClearRenderTarget","parent":"render","type":"libraryfunc","description":{"text":"Clears a render target\n\nIt uses  then  on the modified render target.","page":["render.Clear","render.SetRenderTarget"]},"realm":"Client","args":{"arg":[{"name":"texture","type":"ITexture"},{"text":"The color, see","name":"color","type":"table","page":"Color"}]}}},
{"function":{"name":"ClearBuffersObeyStencil","parent":"render","type":"libraryfunc","description":"Clears the current rendertarget for obeying the current stencil buffer conditions.","realm":"Client","args":{"arg":[{"text":"Value of the red channel to clear the current rt with.","name":"r","type":"number"},{"text":"Value of the green channel to clear the current rt with.","name":"g","type":"number"},{"text":"Value of the blue channel to clear the current rt with.","name":"b","type":"number"},{"text":"Value of the alpha channel to clear the current rt with.","name":"a","type":"number"},{"text":"Clear the depth buffer.","name":"depth","type":"boolean"}]}},"example":{"description":"Clearing a section of the screen via the stencil buffer","code":"hook.Add( \"PostDrawOpaqueRenderables\", \"Stencil Tutorial Example\", function()\n\n\t-- Reset everything to known good\n\trender.SetStencilWriteMask( 0xFF )\n\trender.SetStencilTestMask( 0xFF )\n\trender.SetStencilReferenceValue( 0 )\n\trender.SetStencilCompareFunction( STENCIL_ALWAYS )\n\trender.SetStencilPassOperation( STENCIL_KEEP )\n\trender.SetStencilFailOperation( STENCIL_KEEP )\n\trender.SetStencilZFailOperation( STENCIL_KEEP )\n\trender.ClearStencil()\n\n\t-- Enable stencils\n\trender.SetStencilEnable( true )\n\t-- Set the reference value to 1. This is what the compare function tests against\n\trender.SetStencilReferenceValue( 1 )\n\t-- Refuse to write things to the screen unless that pixel's value is 1\n\trender.SetStencilCompareFunction( STENCIL_EQUAL )\n\t-- Write a 1 to the centre third of the screen. Because we cleared it earlier, everything is currently 0\n\tlocal w, h = ScrW() / 3, ScrH() / 3\n\tlocal x_start, y_start = w, h\n\tlocal x_end, y_end = x_start + w, y_start + h\n\trender.ClearStencilBufferRectangle( x_start, y_start, x_end, y_end, 1 )\n\n\t-- Tell the render library to clear the screen, but obeying the stencil test function.\n\t-- This means it will only clear the centre third.\n\trender.ClearBuffersObeyStencil(0, 148, 133, 255, false);\n\n\t-- Let everything render normally again\n\trender.SetStencilEnable( false )\nend )","output":{"image":{"src":"clearbuffersobeystencil.jpg","alt":"800px"}}}},
{"function":{"name":"CapturePixels","parent":"render","type":"libraryfunc","description":{"text":"Dumps the current render target and allows the pixels to be accessed by .","page":"render.ReadPixel"},"realm":"Client"}},
{"function":{"name":"Capture","parent":"render","type":"libraryfunc","description":{"text":"Captures a part of the current render target and returns the data as a binary string in the given format.\n\nSince the pixel buffer clears itself every frame, this will return a black screen outside of . To capture the user's final view, use . This will not capture the Steam overlay or third-party injections (such as the Discord overlay, Overwolf, and advanced cheats) on the user's screen.","page":"GM:PostRender","bug":{"text":"This sets the alpha channel incorrectly in PNG mode, causing the foreground to be rendered almost completely transparent.","issue":"2571"}},"realm":"Client","args":{"arg":{"text":"Parameters of the capture. See .","name":"captureData","type":"table","page":"Structures/RenderCaptureData"}},"rets":{"ret":{"text":"binaryData","name":"","type":"string"}}},"example":{"description":"How you could use this to save a picture of your screen.","code":"local ScreenshotRequested = false\nfunction RequestAScreenshot()\n\tScreenshotRequested = true\nend\n\n-- For the sake of this example, we use a console command to request a screenshot\nconcommand.Add( \"make_screenshot\", RequestAScreenshot )\n\nhook.Add( \"PostRender\", \"example_screenshot\", function()\n\tif ( !ScreenshotRequested ) then return end\n\tScreenshotRequested = false\n\n\tlocal data = render.Capture( {\n\t\tformat = \"jpeg\",\n\t\tquality = 70, //100 is max quality, but 70 is good enough.\n\t\tx = 0,\n\t\ty = 0,\n\t\tw = ScrW(),\n\t\th = ScrH()\n\t} )\n\tlocal f = file.Open( \"Image.jpg\", \"wb\", \"DATA\" )\n\tf:Write( data )\n\tf:Close()\nend )","output":"You should now have Image.jpg in your garrysmod/garrysmod/data folder, containing a screenshot."}},
{"function":{"name":"Clear","parent":"render","type":"libraryfunc","description":{"text":"Clears the current render target and the specified buffers.","bug":{"text":"This sets the alpha incorrectly for  draw calls for render targets.","issue":"2085","page":"surface"}},"realm":"Client","args":{"arg":[{"text":"Red component to clear to.","name":"r","type":"number"},{"text":"Green component to clear to.","name":"g","type":"number"},{"text":"Blue component to clear to.","name":"b","type":"number"},{"text":"Alpha component to clear to.","name":"a","type":"number"},{"text":"Clear the depth.","name":"clearDepth","type":"boolean","default":"false"},{"text":"Clear the stencil.","name":"clearStencil","type":"boolean","default":"false"}]}}},
{"function":{"name":"BrushMaterialOverride","parent":"render","type":"libraryfunc","description":{"warning":"This function is broken and does absolutely nothing"},"realm":"Client","args":{"arg":{"name":"mat","type":"IMaterial","default":"nil"}}}},
{"function":{"name":"OpenEntityMenu","parent":"properties","type":"libraryfunc","description":"Opens properties menu for given entity.","realm":"Shared","args":{"arg":[{"text":"The entity to open menu for","name":"ent","type":"Entity"},{"text":"The trace that is passed as second argument to Action callback of a property","name":"tr","type":"table"}]}}},
{"function":{"name":"BlurRenderTarget","parent":"render","type":"libraryfunc","description":"Blurs the render target ( or a given texture )","realm":"Client","file":{"text":"lua/includes/extensions/client/render.lua","line":"105-L124"},"args":{"arg":[{"text":"The texture to blur","name":"rendertarget","type":"ITexture"},{"text":"Horizontal amount of blur","name":"blurx","type":"number"},{"text":"Vertical amount of blur","name":"blury","type":"number"},{"text":"Amount of passes to go through","name":"passes","type":"number"}]}}},
{"function":{"name":"AddBeam","parent":"render","type":"libraryfunc","description":{"text":"Adds a beam segment to the beam started by .","page":"render.StartBeam"},"realm":"Client","args":{"arg":[{"text":"Beam start position.","name":"startPos","type":"Vector"},{"text":"The width of the beam.","name":"width","type":"number"},{"text":"The end coordinate of the texture used.","name":"textureEnd","type":"number"},{"text":"The color to be used. Uses the .","name":"color","type":"table","page":"Color"}]}}},
{"function":{"name":"OnScreenClick","parent":"properties","type":"libraryfunc","description":"Checks if player hovers over any entities and open a properties menu for it.","realm":"Shared","args":{"arg":[{"text":"The eye pos of a player","name":"eyepos","type":"Vector"},{"text":"The aim vector of a player","name":"eyevec","type":"Vector"}]}}},
{"function":{"name":"GetHovered","parent":"properties","type":"libraryfunc","description":"Returns an entity player is hovering over with his cursor.","realm":"Client","args":{"arg":[{"text":"Eye position of local player,","name":"pos","type":"Vector","page":"Entity:EyePos"},{"text":"Aim vector of local player,","name":"aimVec","type":"Vector","page":"Player:GetAimVector"}]},"rets":{"ret":{"text":"The hovered entity","name":"","type":"Entity"}}}},
{"function":{"name":"CanBeTargeted","parent":"properties","type":"libraryfunc","description":"Returns true if given entity can be targeted by the player via the properties system.\n\nThis should be used serverside in your properties to prevent abuse by clientside scripting.","realm":"Shared","args":{"arg":[{"text":"The entity to test","name":"ent","type":"Entity"},{"text":"If given, will also perform a distance check based on the entity's Orientated Bounding Box.","name":"ply","type":"Player"}]},"rets":{"ret":{"text":"True if entity can be targeted, false otherwise","name":"","type":"boolean"}}}},
{"function":{"name":"Add","parent":"properties","type":"libraryfunc","description":"Add properties to the properties module","realm":"Shared","args":{"arg":[{"text":"A unique name used to identify the property","name":"name","type":"string"},{"text":"A table that defines the property. Uses the .","name":"propertyData","type":"table","page":"Structures/PropertyAdd"}]}},"example":{"description":"Defines a property that can be used to ignite entities (from Sandbox)","code":"properties.Add( \"ignite\", {\n\tMenuLabel = \"#ignite\", -- Name to display on the context menu\n\tOrder = 999, -- The order to display this property relative to other properties\n\tMenuIcon = \"icon16/fire.png\", -- The icon to display next to the property\n\n\tFilter = function( self, ent, ply ) -- A function that determines whether an entity is valid for this property\n\t\tif ( !IsValid( ent ) ) then return false end\n\t\tif ( ent:IsPlayer() ) then return false end\n\t\tif ( !CanEntityBeSetOnFire( ent ) ) then return false end\n\t\tif ( !gamemode.Call( \"CanProperty\", ply, \"ignite\", ent ) ) then return false end\n\n\t\treturn !ent:IsOnFire() \n\tend,\n\tAction = function( self, ent ) -- The action to perform upon using the property ( Clientside )\n\n\t\tself:MsgStart()\n\t\t\tnet.WriteEntity( ent )\n\t\tself:MsgEnd()\n\n\tend,\n\tReceive = function( self, length, player ) -- The action to perform upon using the property ( Serverside )\n\t\tlocal ent = net.ReadEntity()\n\t\tif ( !self:Filter( ent, player ) ) then return end\n\t\t\n\t\tent:Ignite( 360 )\n\tend \n} )"}},
{"function":{"name":"Rename","parent":"presets","type":"libraryfunc","description":"Renames preset.","realm":"Client","args":{"arg":[{"text":"Preset group name","name":"groupname","type":"string"},{"text":"Old preset name","name":"oldname","type":"string"},{"text":"New preset name","name":"newname","type":"string"}]}}},
{"function":{"name":"Remove","parent":"presets","type":"libraryfunc","description":"Removes a preset entry from a preset group.","realm":"Client","args":{"arg":[{"text":"Preset group to remove from","name":"groupname","type":"string"},{"text":"Name of preset to remove","name":"name","type":"string"}]}}},
{"function":{"name":"OverwritePresetPrompt","parent":"presets","type":"libraryfunc","description":{"text":"Used internally to ask the player if they want to override an already existing preset.","internal":""},"realm":"Client","args":{"arg":{"name":"callback","type":"function"}}}},
{"function":{"name":"GetTable","parent":"presets","type":"libraryfunc","description":"Returns a table with preset names and values from a single preset group.","realm":"Client","args":{"arg":{"text":"Preset group name.","name":"groupname","type":"string"}},"rets":{"ret":{"text":"All presets in specified group.","name":"","type":"table"}}}},
{"function":{"name":"Exists","parent":"presets","type":"libraryfunc","description":"Returns whether a preset with given name exists or not","realm":"Client","args":{"arg":[{"text":"The preset group name, usually it's tool class name.","name":"type","type":"string"},{"text":"Name of the preset to test","name":"name","type":"string"}]},"rets":{"ret":{"text":"true if the preset does exist","name":"","type":"boolean"}}}},
{"function":{"name":"BadNameAlert","parent":"presets","type":"libraryfunc","description":{"text":"Used internally to tell the player that the name they tried to use in their preset is not acceptable.","internal":""},"realm":"Client"}},
{"function":{"name":"Add","parent":"presets","type":"libraryfunc","description":"Adds preset to a preset group.","realm":"Client","args":{"arg":[{"text":"The preset group name, usually it's tool class name.","name":"groupname","type":"string"},{"text":"Preset name, must be unique.","name":"name","type":"string"},{"text":"A table of preset console commands.","name":"values","type":"table"}]}},"example":{"description":"A simple faceposer preset.","code":"presets.Add( \"face\", \"Open Eyes\", {\n\tfaceposer_flex0\t= \"1\",\n\tfaceposer_flex1\t= \"1\",\n\tfaceposer_flex2\t= \"0\",\n\tfaceposer_flex3\t= \"0\",\n\tfaceposer_flex4\t= \"0\",\n\tfaceposer_flex5\t= \"0\",\n\tfaceposer_flex6\t= \"0\",\n\tfaceposer_flex7\t= \"0\",\n\tfaceposer_flex8\t= \"0\",\n\tfaceposer_flex9\t= \"0\"\n} )"}},
{"function":{"name":"TranslateToPlayerModelName","parent":"player_manager","type":"libraryfunc","description":{"text":"Returns the simplified name for a valid model path of a player model.\n\nOpposite of .","page":"player_manager.TranslatePlayerModel"},"realm":"Shared","args":{"arg":{"text":"The model path to a player model","name":"model","type":"string"}},"rets":{"ret":{"text":"The simplified name for that model","name":"","type":"string"}}}},
{"function":{"name":"TranslatePlayerModel","parent":"player_manager","type":"libraryfunc","description":"Returns the valid model path for a simplified name.","realm":"Shared","args":{"arg":{"text":"The short name of the model.","name":"shortName","type":"string"}},"rets":{"ret":{"text":"The valid model path for the short name.","name":"","type":"string"}}},"example":{"description":"Print the valid model path for \"Alyx\".","code":"print(player_manager.TranslatePlayerModel(\"alyx\"))","output":"Console outputs: \"models/player/alyx.mdl\""}},
{"function":{"name":"TranslatePlayerHands","parent":"player_manager","type":"libraryfunc","description":"Retrieves correct hands for given player model. By default returns citizen hands.","realm":"Shared","args":{"arg":{"text":"Player model name","name":"name","type":"string"}},"rets":{"ret":{"text":"A table with following contents:\n*  model - Model of hands\n*  skin - Skin of hands\n*  body - Bodygroups of hands","name":"","type":"table","page":["string","number","string"]}}}},
{"function":{"name":"SetPlayerClass","parent":"player_manager","type":"libraryfunc","description":"Sets a player's class","realm":"Shared","args":{"arg":[{"text":"Player to set class","name":"ply","type":"Player"},{"text":"Name of class to set","name":"classname","type":"string"}]}},"example":{"description":"Sets the player's class to 'player_default' every time they spawn","code":"function GM:PlayerSpawn( ply )\n player_manager.SetPlayerClass(ply, \"player_default\")\nend","output":""}},
{"function":{"name":"RunClass","parent":"player_manager","type":"libraryfunc","description":"Execute a named function within the player's set class","realm":"Shared","file":{"text":"lua/includes/modules/player_manager.lua","line":"395-L405"},"args":{"arg":[{"text":"Player to execute function on.","name":"ply","type":"Player"},{"text":"Name of function.","name":"funcName","type":"string"},{"text":"Optional arguments. Can be of any type.","name":"arguments","type":"vararg"}]},"rets":{"ret":{"text":"The values returned by the called function.","name":"","type":"vararg"}}},"example":[{"description":"Run the player's class 'Loadout' function when PlayerLoadout is called","code":"function GM:PlayerLoadout( ply )\n\n\tplayer_manager.RunClass( ply, \"Loadout\" )\n \nend","output":"The player's class 'Loadout' function is executed"},{"description":"Call a greeting function within the playerclass system.","code":"local PLAYER = {}\nPLAYER.DisplayName = \"Hooman\"\nPLAYER.WalkSpeed = 200\nPLAYER.greet = function( tbl ) // create a function named 'greet'\n// the first argument passed is the source table\n// which includes the classID, the player entity, and the function itself\n\tlocal ply = tbl.Player // here we extract the player entity from the table\n    ply:ChatPrint(\"Hello \"..ply:Nick()..\" !\") // tell the player\nend\n\n// link it to the spawn hook, so each time a player (re-)spawns, he will be greeted with a hello\nhook.Add(\"PlayerSpawn\",\"greet\",function(ply)\n\tplayer_manager.RunClass( ply, \"greet\" )\nend)","output":"Hello Flowx !"}]},
{"function":{"name":"RegisterClass","parent":"player_manager","type":"libraryfunc","description":"Register a class metatable to be assigned to players later","realm":"Shared","args":{"arg":[{"text":"Class name","name":"name","type":"string"},{"text":"Class metatable","name":"table","type":"table"},{"text":"Base class name","name":"base","type":"string"}]}},"example":[{"description":"A quick look at registering a class table","code":"local PLAYER = {}\n\nPLAYER.DisplayName = \"Default Class\"\n\n-- ...\n\nplayer_manager.RegisterClass( \"player_default\", PLAYER, nil )"},{"description":"You can retrieve the data you've set when registering the table using baseclass.Get( \"<classname>\" )","code":"PrintTable( baseclass.Get( \"player_default\" ) )","output":"```\nWalkspeed = 300\nRunSpeed = 500\nCalcView = function: 0x00665988\nUseVMHands = true\n--- etc...\n```"}]},
{"function":{"name":"OnPlayerSpawn","parent":"player_manager","type":"libraryfunc","description":{"text":"Applies basic class variables when the player spawns.\n\nCalled from  in the base gamemode.","page":"GM:PlayerSpawn"},"realm":"Shared","file":{"text":"lua/includes/modules/player_manager.lua","line":"411-L430"},"args":{"arg":{"text":"Player to setup","name":"ply","type":"Player"}}}},
{"function":{"name":"GetPlayerClass","parent":"player_manager","type":"libraryfunc","description":"Gets a players class","realm":"Shared","args":{"arg":{"text":"Player to get class","name":"ply","type":"Player"}},"rets":{"ret":{"text":"The players class","name":"","type":"string"}}}},
{"function":{"name":"ClearPlayerClass","parent":"player_manager","type":"libraryfunc","description":"Clears a player's class association by setting their ClassID to 0","realm":"Shared","args":{"arg":{"text":"Player to clear class from","name":"ply","type":"Player"}}},"example":{"description":"Source for player_manager.ClearPlayerClass (from lua/includes/modules/player_manager.lua)","code":"function ClearPlayerClass( ply )\n\n\tply:SetClassID( 0 )\n\nend","output":""}},
{"function":{"name":"AllValidModels","parent":"player_manager","type":"libraryfunc","description":"Returns the entire list of valid player models.","realm":"Shared"},"example":{"description":"Store the list of valid player models in a local variable, and print the valid model path for \"Alyx\"","code":"local models = player_manager.AllValidModels()\nprint(models[\"alyx\"])","output":"Console outputs: \"models/player/alyx.mdl\""}},
{"function":{"name":"AddValidModel","parent":"player_manager","type":"libraryfunc","description":"Associates a simplified name with a path to a valid player model.\n\n\nOnly used internally.","realm":"Shared","args":{"arg":[{"text":"Simplified name","name":"name","type":"string"},{"text":"Valid PlayerModel path","name":"model","type":"string"}]}}},
{"function":{"name":"AddValidHands","parent":"player_manager","type":"libraryfunc","description":"Assigns view model hands to player model.","realm":"Shared","args":{"arg":[{"text":"Player model name","name":"name","type":"string"},{"text":"Hands model","name":"model","type":"string"},{"text":"Skin to apply to the hands","name":"skin","type":"number"},{"text":"Bodygroups to apply to the hands","name":"bodygroups","type":"string"}]}},"example":{"description":"Adds CS:S hands for hostage playermodels","code":"player_manager.AddValidHands( \"hostage01\", \"models/weapons/c_arms_cstrike.mdl\", 0, \"10000000\" )\nplayer_manager.AddValidHands( \"hostage02\", \"models/weapons/c_arms_cstrike.mdl\", 0, \"10000000\" )\nplayer_manager.AddValidHands( \"hostage03\", \"models/weapons/c_arms_cstrike.mdl\", 0, \"10000000\" )\nplayer_manager.AddValidHands( \"hostage04\", \"models/weapons/c_arms_cstrike.mdl\", 0, \"10000000\" )"}},
{"function":{"name":"GetHumans","parent":"player","type":"libraryfunc","description":{"text":"Returns a table of all human ( non bot/AI ) players.\n\nUnlike , this does not include bots.","page":"player.GetAll"},"realm":"Shared","rets":{"ret":{"text":"A table of all human ( non bot/AI ) players.","name":"","type":"table"}}}},
{"function":{"name":"GetCount","parent":"player","type":"libraryfunc","description":{"text":"Gives you the player count. Similar to **#** but with much better performance.","page":"player.GetAll"},"realm":"Shared","rets":{"ret":{"text":"Number of players","name":"","type":"number"}}}},
{"function":{"name":"GetByUniqueID","parent":"player","type":"libraryfunc","description":{"text":"Gets the player with the specified uniqueID (not recommended way to identify players).","warning":{"text":"It is highly recommended to use ,  or  instead as this function can have collisions ( be same for different people ) while SteamID is guaranteed to unique to each player.","page":["player.GetByAccountID","player.GetBySteamID","player.GetBySteamID64"]}},"realm":"Shared","file":{"text":"lua/includes/extensions/player.lua","line":"59-L71"},"args":{"arg":{"text":"The  to find the player by.","name":"uniqueID","type":"string","page":"Player:UniqueID"}},"rets":{"ret":{"text":"Player if one is found, false otherwise.","name":"","type":"Player"}}}},
{"function":{"name":"GetBySteamID64","parent":"player","type":"libraryfunc","description":"Gets the player with the specified SteamID64.","realm":"Shared","file":{"text":"lua/includes/extensions/player.lua","line":"89-L103"},"args":{"arg":{"text":"The  to find the player by. Also accepts numbers.","name":"steamID64","type":"string","page":"Player:SteamID64"}},"rets":{"ret":{"text":"Player if one is found, false otherwise.","name":"","type":"Player"}}}},
{"function":{"name":"GetBySteamID","parent":"player","type":"libraryfunc","description":"Gets the player with the specified SteamID.","realm":"Shared","file":{"text":"lua/includes/extensions/player.lua","line":"73-L87"},"args":{"arg":{"text":"The  to find the player by.","name":"steamID","type":"string","page":"Player:SteamID"}},"rets":{"ret":{"text":"Player if one is found, false otherwise.","name":"","type":"Player"}}}},
{"function":{"name":"GetByID","parent":"player","type":"libraryfunc","description":{"text":"Gets the player with the specified connection ID.\n\nConnection ID can be retrieved via  events.\n\nFor a function that returns a player based on their , see .\n\n\nFor a function that returns a player based on their , see .","page":["gameevent.Listen","Entity:EntIndex","Global.Entity","Player:UserID","Global.Player"]},"realm":"Shared","args":{"arg":{"text":"The connection ID to find the player by.","name":"connectionID","type":"number"}},"rets":{"ret":{"text":"Player if one is found, nil otherwise","name":"","type":"Player"}}}},
{"function":{"name":"GetByAccountID","parent":"player","type":"libraryfunc","description":"Gets the player with the specified AccountID.","realm":"Shared","file":{"text":"lua/includes/extensions/player.lua","line":"45-L57"},"args":{"arg":{"text":"The  to find the player by.","name":"accountID","type":"string","page":"Player:AccountID"}},"rets":{"ret":{"text":"Player if one is found, false otherwise.","name":"","type":"Player"}}}},
{"function":{"name":"GetBots","parent":"player","type":"libraryfunc","description":"Returns a table of all bots on the server.","realm":"Shared","rets":{"ret":{"text":"A table only containing bots ( AI / non human players )","name":"","type":"table"}}}},
{"function":{"name":"GetAll","parent":"player","type":"libraryfunc","description":{"text":"Gets all the current players in the server (not including connecting clients).","note":{"text":"This function returns bots as well as human players. See  and  .","page":["player.GetBots","player.GetHumans"]}},"realm":"Shared","rets":{"ret":{"text":"All s currently in the server.","name":"","type":"table","page":"Player"}}},"example":[{"description":"Prints all the players currently in the server.","code":"PrintTable( player.GetAll() )","outputfixedwidth":"Fixed width","output":"1 = [Player][1][Player1]\n2 = [Player][2][Bot01]\n3 = [Player][3][Bot02]"},{"description":{"text":"Prints the number of players in the server. The same output can be achieved more efficiently with .","page":"player.GetCount"},"code":"print(#player.GetAll())","outputfixedwidth":"Fixed width","output":"3"}]},
{"function":{"name":"CreateNextBot","parent":"player","type":"libraryfunc","description":{"text":"Similar to the serverside command \"bot\", this function creates a new Player bot with the given name. This bot will not obey to the usual \"bot_*\" commands, and it's the same bot base used in TF2 and CS:S.\n\nThe best way to control the behaviour of a Player bot right now is to use the  hook and modify its input serverside.","page":"GM:StartCommand","note":[{"text":"Despite this Player being fake, it has to be removed from the server by using  and **NOT** .\nAlso keep in mind that these bots still use player slots, so you won't be able to spawn them in singleplayer!","page":["Player:Kick","Entity:Remove"]},"Any Bot created using this method will be considered UnAuthed by Garry's Mod"]},"realm":"Server","args":{"arg":{"text":"The name of the bot, using an already existing name will append brackets at the end of it with a number pertaining it.\n\nExample: \"Bot name test\", \"Bot name test(1)\".","name":"botName","type":"string"}},"rets":{"ret":{"text":"The newly created Player bot. Returns NULL if there's no Player slots available to host it.","name":"","type":"Player"}}},"example":{"description":"Create a bot if that is possible.","code":{"text":"local listBots = {}\n\nfunction CreateBot()\n\n    if ( !game.SinglePlayer() && player.GetCount()","game.maxplayers":{"then":"","local":"","num":["#listBots",""],"listbots":"","player.createnextbotbot_":"","return":"","else":"","print":"","cant":"","create":"","bot":"","end":"","ode":"ode"}}}},
{"function":{"name":"SetGravity","parent":"physenv","type":"libraryfunc","description":"Sets the directional gravity, does not work on players.","realm":"Shared","args":{"arg":{"text":"The new gravity.","name":"gravity","type":"Vector"}}}},
{"function":{"name":"SetGravity","parent":"physenv","type":"libraryfunc","description":"Sets the directional gravity, does not work on players.","realm":"Shared","args":{"arg":{"text":"The new gravity.","name":"gravity","type":"Vector"}}}},
{"function":{"name":"SetAirDensity","parent":"physenv","type":"libraryfunc","description":"Sets the air density.","realm":"Shared","args":{"arg":{"text":"The new air density.","name":"airDensity","type":"number"}}}},
{"function":{"name":"GetGravity","parent":"physenv","type":"libraryfunc","description":"Gets the global gravity.","realm":"Shared","rets":{"ret":{"text":"gravity","name":"","type":"Vector"}}}},
{"function":{"name":"GetGravity","parent":"physenv","type":"libraryfunc","description":"Gets the global gravity.","realm":"Shared","rets":{"ret":{"text":"gravity","name":"","type":"Vector"}}}},
{"function":{"name":"GetPerformanceSettings","parent":"physenv","type":"libraryfunc","description":"Gets the current performance settings in table form.","realm":"Shared","rets":{"ret":{"text":"Performance settings. See","name":"","type":"table","page":"Structures/PhysEnvPerformanceSettings"}}}},
{"function":{"name":"AddSurfaceData","parent":"physenv","type":"libraryfunc","description":{"text":"Adds surface properties to the game's physics environment.","bug":{"text":"The game has a limit of 128 surface properties - this includes properties loaded automatically from [surfaceproperties.txt](https://github.com/Facepunch/garrysmod/blob/master/garrysmod/scripts/surfaceproperties.txt). Due to this, there's only a small amount of open slots that can be registered with GMod's provided surfaceproperties.txt.","issue":"2604"}},"realm":"Shared","args":{"arg":{"text":"The properties to add. Each one should include \"base\" or the game will crash due to some values being missing.","name":"properties","type":"string"}}},"example":{"description":"Adds the \"\" surface property from TF2.","code":{"text":"physenv.AddSurfaceData()","page":"\"scout_baseball\"\n{\n\t\"base\"\t\t\"rubber\"\n\n\t\"bulletimpact\"\t\"Weapon_Baseball.HitWorld\"\n\t\"scraperough\"\t\"Grenade.ScrapeRough\"\n\t\"scrapesmooth\"\t\"Grenade.ScrapeSmooth\"\n\t\"impacthard\"\t\"Weapon_Baseball.HitWorld\"\n\t\"impactsoft\"\t\"Weapon_Baseball.HitWorld\"\n\t\"rolling\"\t\"Grenade.Roll\"\n}"},"outputfixedwidth":"Fixed width"}},
{"function":{"name":"time","parent":"os","type":"libraryfunc","description":"Returns the system time in seconds past the unix epoch. If a table is supplied, the function attempts to build a system time with the specified table members.","realm":"Shared and Menu","args":{"arg":{"text":"Table to generate the time from. This table's data is interpreted as being in the local timezone. See","name":"dateData","type":"table","default":"nil","page":"Structures/DateData"}},"rets":{"ret":{"text":"Seconds passed since Unix epoch","name":"","type":"number"}}},"example":{"description":"Prints out the current time, in seconds past the unix epoch.","code":"print( os.time() )","output":"1581691801"}},
{"function":{"name":"seeall","parent":"package","type":"libraryfunc","description":{"text":"Sets a metatable for module with its __index field referring to the global environment, so that this module inherits values from the global environment. To be used as an option to .","page":"Global.module"},"realm":"Shared and Menu","args":{"arg":{"text":"The module table to be given a metatable","name":"module","type":"table"}}}},
{"function":{"name":"difftime","parent":"os","type":"libraryfunc","description":"Subtracts the second from the first value and rounds the result.","realm":"Shared and Menu","args":{"arg":[{"text":"The first value.","name":"timeA","type":"number"},{"text":"The value to subtract.","name":"timeB","type":"number"}]},"rets":{"ret":{"text":"diffTime","name":"","type":"number"}}}},
{"function":{"name":"date","parent":"os","type":"libraryfunc","description":"Returns the date/time as a formatted string or in a table.","realm":"Shared and Menu","args":{"arg":[{"text":"The format string.\n\nIf this is equal to '*t' or '!*t' then this function will return a , otherwise it will return a string.\n\nIf this starts with an '!', the returned data will use the UTC timezone rather than the local timezone.\n\nSee http://www.mkssoftware.com/docs/man3/strftime.3.asp for available format flags.","name":"format","type":"string","page":"Structures/DateData","bug":{"text":"**Not all flags are available on all operating systems** and the result of using an invalid flag is undefined. This currently crashes the game on Windows. Most or all flags are available on OS X and Linux but considerably fewer are available on Windows. See http://msdn.microsoft.com/en-us/library/fe06s4ak.aspx for a list of available flags on Windows. Note that the **#** flags also crashes the game on Windows.","issue":"329"}},{"text":"Time to use for the format.","name":"time","type":"number"}]},"rets":{"ret":{"text":"Formatted date","name":"","type":"string","note":{"text":"This will be a  if the first argument equals to '*t' or '!*t'","page":"Structures/DateData"}}}},"example":{"description":"This will use the os.time() function, and return it in a friendly way.\nos.time() is useful for storing as a date stamp but needs this to make it readable.","code":"local Timestamp = os.time()\nlocal TimeString = os.date( \"%H:%M:%S - %d/%m/%Y\" , Timestamp )\nprint( \"Timestamp:\", Timestamp )\nprint( \"TimeString:\", TimeString )","outputfixedwidth":"Fixed width","output":{"text":"Timestamp:\t1584402168 \nTimeString:\t23:42:48 - 16/03/2020","br":""}}},
{"function":{"name":"clock","parent":"os","type":"libraryfunc","description":{"text":"Returns the approximate cpu time the application ran.\nSee also","page":"Global.SysTime","note":"This function has different precision on Linux (1/100)."},"realm":"Shared and Menu","rets":{"ret":{"text":"runtime","name":"","type":"number"}}},"example":{"description":"Prints the amount of time since Garry's Mod has been open to the console.","code":"print(os.clock())"}},
{"function":{"name":"Remove","parent":"numpad","type":"libraryfunc","description":{"text":"Removes a function added by either  or","page":["numpad.OnUp","numpad.OnDown"]},"realm":"Server","args":{"arg":{"text":"The impulse ID returned by  or","name":"ID","type":"number","page":["numpad.OnUp","numpad.OnDown"]}}}},
{"function":{"name":"Toggle","parent":"numpad","type":"libraryfunc","description":{"text":"Either runs  or  depending on the key's current state","page":["numpad.Activate","numpad.Deactivate"]},"realm":"Server","args":{"arg":[{"text":"The player whose numpad should be simulated","name":"ply","type":"Player"},{"text":"The key to press, corresponding to","name":"key","type":"number","page":"Enums/KEY"}]}}},
{"function":{"name":"Register","parent":"numpad","type":"libraryfunc","description":{"text":"Registers a numpad library action for use with  and","page":["numpad.OnDown","numpad.OnUp"]},"realm":"Server","args":{"arg":[{"text":"The unique id of your action.","name":"id","type":"string"},{"text":"The function to be executed.\n\nArguments are:\n\n ply - The player who pressed the button\n\n ... - The 4th and all subsequent arguments passed from  and/or \n\nReturning **false** in this function will remove the listener which triggered this function (example: return false if one of your varargs is an entity which is no longer valid)","name":"func","type":"function","page":["Player","vararg","numpad.OnDown","numpad.OnUp"]}]}}},
{"function":{"name":"OnUp","parent":"numpad","type":"libraryfunc","description":{"text":"Calls a function registered with  when a player releases specified key.\n\nSee for key pressed action:","page":["numpad.Register","numpad.OnDown"]},"realm":"Server","args":{"arg":[{"text":"The player whose numpad should be watched","name":"ply","type":"Player"},{"text":"The key, corresponding to","name":"key","type":"number","page":"Enums/KEY"},{"text":"The name of the function to run, corresponding with the one used in","name":"name","type":"string","page":"numpad.Register"},{"text":"Arguments to pass to the function passed to .","name":"...","type":"vararg","page":"numpad.Register"}]},"rets":{"ret":{"text":"The impulse ID","name":"","type":"number"}}}},
{"function":{"name":"FromButton","parent":"numpad","type":"libraryfunc","description":{"text":"Returns true during a function added with  when the third argument to  is true.\n\nThis is caused when a numpad function is triggered by a button SENT being used.","page":["numpad.Register","numpad.Activate"]},"realm":"Server","rets":{"ret":{"text":"wasButton","name":"","type":"boolean"}}}},
{"function":{"name":"OnDown","parent":"numpad","type":"libraryfunc","description":{"text":"Calls a function registered with  when a player presses specified key.\n\nSee for key released action:","page":["numpad.Register","numpad.OnUp"]},"realm":"Server","args":{"arg":[{"text":"The player whose numpad should be watched","name":"ply","type":"Player"},{"text":"The key, corresponding to","name":"key","type":"number","page":"Enums/KEY"},{"text":"The name of the function to run, corresponding with the one used in","name":"name","type":"string","page":"numpad.Register"},{"text":"Arguments to pass to the function passed to .","name":"...","type":"vararg","page":"numpad.Register"}]},"rets":{"ret":{"text":"The impulse ID","name":"","type":"number"}}}},
{"function":{"name":"Deactivate","parent":"numpad","type":"libraryfunc","description":"Deactivates numpad key owned by the player","realm":"Server","args":{"arg":[{"text":"The player whose numpad should be simulated","name":"ply","type":"Player"},{"text":"The key to press, corresponding to","name":"key","type":"number","page":"Enums/KEY"},{"text":"Should this keypress pretend to be a from a gmod_button? (causes  to return true)","name":"isButton","type":"boolean","page":"numpad.FromButton"}]}}},
{"function":{"name":"Activate","parent":"numpad","type":"libraryfunc","description":"Activates numpad key owned by the player","realm":"Server","args":{"arg":[{"text":"The player whose numpad should be simulated","name":"ply","type":"Player"},{"text":"The key to press, see","name":"key","type":"number","page":"Enums/KEY"},{"text":"Should this keypress pretend to be a from a gmod_button? (causes  to return true)","name":"isButton","type":"boolean","page":"numpad.FromButton"}]}}},
{"function":{"name":"Kill","parent":"notification","type":"libraryfunc","description":"Removes the notification after 0.8 seconds.","realm":"Client and Menu","args":{"arg":{"text":"The unique ID of the notification","name":"uid","type":"any"}}}},
{"function":{"name":"AddProgress","parent":"notification","type":"libraryfunc","description":"Adds a notification with an animated progress bar.","realm":"Client and Menu","args":{"arg":[{"text":"Can be any type. It's used as an index.","name":"id","type":"any"},{"text":"The text to show","name":"strText","type":"string"}]}},"example":{"description":"Add a notification that says \"Downloading file...\", and remove after three seconds.","code":"notification.AddProgress(\"FileDownload\", \"Downloading file...\")\ntimer.Simple(3, function()\n\tnotification.Kill(\"FileDownload\")\nend)"}},
{"function":{"name":"AddLegacy","parent":"notification","type":"libraryfunc","description":"Adds a standard notification to your screen.","realm":"Client and Menu","args":{"arg":[{"text":"The text to display.","name":"text","type":"string"},{"text":"Determines the notification method (e.g. icon) for displaying the notification. See the .","name":"type","type":"number","page":"Enums/NOTIFY"},{"text":"The number of seconds to display the notification for.","name":"length","type":"number"}]}},"example":{"description":"Adds a prop undo notification to the screen, like in Sandbox.","code":"notification.AddLegacy( \"Undone Prop\", NOTIFY_UNDO, 2 )\nsurface.PlaySound( \"buttons/button15.wav\" )\nMsg( \"Prop undone\\n\" )","output":"Adds a notice that says \"Undone Prop\", plays the undo sound, and adds a message to the console."}},
{"function":{"name":"WriteVector","parent":"net","type":"libraryfunc","description":"Appends a vector to the current net message.\nVectors sent by this function are compressed, which may result in precision loss.  XYZ components greater than 16384 or less than -16384 are irrecoverably altered (most significant bits are trimmed) and precision after the decimal point is low.","realm":"Shared","args":{"arg":{"text":"The vector to be sent.","name":"vector","type":"Vector"}}},"example":{"description":"Create a serverside command to send a vector to all clients, and a function to receive the vector on the clientside.  This example displays the vector compression discussed above.","code":"if SERVER then\n\n    util.AddNetworkString(\"testingvecs\")\n    function testvecs_sv()\n        net.Start(\"testingvecs\")\n        net.WriteVector(Vector(10000, 20000, -20000.123456789))\n        net.Broadcast()\n    end\n    concommand.Add(\"dovectest\", testvecs_sv)\n\nelseif CLIENT then\n\n    function testvecs_cl(len)\n        print(\"RECV: vec = \" .. tostring(net.ReadVector()) .. \"\\n\")\n    end\n    net.Receive(\"testingvecs\", testvecs_cl)\n\nend","output":"RECV: vec = 10000.000000 3616.000000 -3616.093750"}},
{"function":{"name":"WriteUInt","parent":"net","type":"libraryfunc","description":{"text":"Appends an unsigned integer with the specified number of bits to the current net message.\nUse  if you want to send negative and positive numbers. Use  for a non-whole number (e.g. 2.25).","page":["net.WriteInt","net.WriteFloat"],"note":"Unsigned numbers does not support negative numbers."},"realm":"Shared","args":{"arg":[{"text":"The unsigned integer to be sent.","name":"unsignedInteger","type":"number"},{"text":"The size of the integer to be sent, in bits. Acceptable values range from any number 1 to 32 inclusive. For reference, 1 = bit, 4 = nibble, 8 = byte, 16 = short, 32 = long.\n\nConsult the table below to determine the bit count you need. The minimum value for all bit counts are 0.\n\n| Bit Count |  Maximum value |\n|-----------|:--------------:|\n| 1 | 1  |\n| 2 | 3  |\n| 3 | 7  |\n| 4 | 15 |\n| 5 | 31 |\n| 6 | 63 |\n| 7 | 127 |\n| 8 | 255 |\n| 9 | 511 |\n| 10 | 1023 |\n| 11 | 2047 |\n| 12 | 4095 |\n| 13 | 8191 |\n| 14 | 16383 |\n| 15 | 32767 |\n| 16 | 65535 |\n| 17 | 131071 |\n| 18 | 262143 |\n| 19 | 524287  |\n| 20 | 1048575  |\n| 21 | 2097151  |\n| 22 | 4194303  |\n| 23 | 8388607  |\n| 24 | 16777215  |\n| 25 | 33554431  |\n| 26 | 67108863  |\n| 27 | 134217727  |\n| 28 | 268435455  |\n| 29 | 536870911  |\n| 30 | 1073741823 |\n| 31 | 2147483647 |\n| 32 | 4294967295 |","name":"numberOfBits","type":"number"}]}}},
{"function":{"name":"WriteType","parent":"net","type":"libraryfunc","description":{"text":"Appends any type of value to the current net message.","internal":{"text":"Used internally by .","page":"net.WriteTable"},"note":{"text":"An additional 8-bit unsigned integer indicating the type will automatically be written to the packet before the value, in order to facilitate reading with . If you know the data type you are writing, use a function meant for that specific data type to reduce amount of data sent.","page":"net.ReadType"}},"realm":"Shared","file":{"text":"lua/includes/extensions/net.lua","line":"144"},"args":{"arg":{"text":"The data to be sent","name":"Data","type":"any"}}}},
{"function":{"name":"WriteTable","parent":"net","type":"libraryfunc","description":{"text":"Appends a table to the current net message. Adds 16 extra bits per key/value pair so you're better off writing each individual key/value as the exact type if possible.","warning":{"text":"All net messages have a 64kb buffer. This function will not check or error when that buffer is overflown. You might want to consider using  and  and send the resulting string in 60kb chunks, doing the opposite on the receiving end.","page":["util.TableToJSON","util.Compress"]}},"realm":"Shared","file":{"text":"lua/includes/extensions/net.lua","line":"101"},"args":{"arg":{"text":"The table to be sent.","name":"table","type":"table","warning":{"text":"If the table contains a nil key the table may not be read correctly.\n\nNot all objects can be sent over the network. Things like functions, s, etc will cause errors when reading the table from a net message.","page":"IMaterial"}}}}},
{"function":{"name":"WriteString","parent":"net","type":"libraryfunc","description":"Appends a string to the current net message. The size of the string is 8 bits plus 8 bits for every ASCII character in the string. The maximum allowed length of a single written string is 65533 characters.","realm":"Shared","args":{"arg":{"text":"The string to be sent.","name":"string","type":"string"}}}},
{"function":{"name":"WriteNormal","parent":"net","type":"libraryfunc","description":{"text":"Writes a normalized/direction vector ( Vector with length of 1 ) to the net message.\n\nThis function uses less bandwidth compared to  and will not send vectors with length of > 1 properly.","page":"net.WriteVector"},"realm":"Shared","args":{"arg":{"text":"The normalized/direction vector to be send.","name":"normal","type":"Vector"}}},"example":{"description":{"text":"Showcases the difference between this function and .","page":"net.WriteVector"},"code":"if ( SERVER ) then\n\tutil.AddNetworkString( \"test1\" )\n\tutil.AddNetworkString( \"test2\" )\n\t\n\ttimer.Simple( 1, function()\n\t\tnet.Start( \"test1\" )\n\t\t\tnet.WriteVector( Vector( 1.23456789, 2.3456789, 3.456789 ) )\n\t\tnet.Broadcast()\n\t\n\t\tnet.Start( \"test2\" )\n\t\t\tnet.WriteNormal( Vector( 1.23456789, 2.3456789, 3.456789 ) )\n\t\tnet.Broadcast()\n\n\t\tnet.Start( \"test2\" )\n\t\t\tnet.WriteNormal( Vector( 1.23456789, 2.3456789, 3.456789 ):GetNormalized() )\n\t\tnet.Broadcast()\n\t\n\t\tnet.Start( \"test2\" )\n\t\t\tnet.WriteNormal( Vector( 0.5, -0.5, 0.23 ) )\n\t\tnet.Broadcast()\n\tend )\nelse\n\tnet.Receive( \"test1\", function( ... )\n\t\tprint( ... ) \n\t\tprint( net.ReadVector() ) \n\tend )\n\t\n\tnet.Receive( \"test2\", function( ... )\n\t\tprint( ... ) \n\t\tprint( net.ReadNormal() ) \n\tend )\nend","output":"```\n69\tnil\n1.218750 2.343750 3.437500\n27\tnil\n1.000000 1.000000 0.000000\n27\tnil\n0.283341 0.538349 0.793661\n27\tnil\n0.499756 -0.499756 0.707452\n```"}},
{"function":{"name":"WriteMatrix","parent":"net","type":"libraryfunc","description":{"text":"Writes a  to the current net message.","page":"VMatrix"},"realm":"Shared","args":{"arg":{"text":"The matrix to be sent.","name":"matrix","type":"VMatrix"}}}},
{"function":{"name":"WriteInt","parent":"net","type":"libraryfunc","description":{"text":"Appends an integer - a whole number - to the current net message. Can be read back with  on the receiving end.\n\nUse  to send an unsigned number (that you know will never be negative). Use  for a non-whole number (e.g. 2.25).","page":["net.ReadInt","net.WriteUInt","net.WriteFloat"]},"realm":"Shared","args":{"arg":[{"text":"The integer to be sent.","name":"integer","type":"number"},{"text":"The amount of bits the number consists of. This must be 32 or less.\n\nIf you are unsure what to set, just set it to 32.\n\n\n\nConsult the table below to determine the bit count you need:\n\n| Bit Count |  Minimum value |  Maximum value |\n|-----------|:--------------:|:--------------:|\n| 3 | -4 | 3 |\n| 4 | -8 | 7 |\n| 5 | -16 | 15 |\n| 6 | -32 | 31 |\n| 7 | -64 | 63 |\n| 8 | -128 | 127 |\n| 9 | -256 | 255 |\n| 10 | -512 | 511 |\n| 11 | -1024 | 1023 |\n| 12 | -2048 | 2047 |\n| 13 | -4096 | 4095 |\n| 14 | -8192 | 8191 |\n| 15 | -16384 | 16383 |\n| 16 | -32768 | 32767 |\n| 17 | -65536 | 65535 |\n| 18 | -131072 | 131071 |\n| 19 | -262144 | 262143 |\n| 20 | -524288 | 524287 |\n| 21 | -1048576 | 1048575 |\n| 22 | -2097152 | 2097151 |\n| 23 | -4194304 | 4194303 |\n| 24 | -8388608 | 8388607 |\n| 25 | -16777216 | 16777215 |\n| 26 | -33554432 | 33554431 |\n| 27 | -67108864 | 67108863 |\n| 28 | -134217728 | 134217727 |\n| 29 | -268435456 | 268435455 |\n| 30 | -536870912 | 536870911 |\n| 31 | -1073741824 | 1073741823 |\n| 32 | -2147483648 | 2147483647 |","name":"bitCount","type":"number"}]}},"example":{"description":"Sends the server the client's age.","code":"--Client\nfunction SendAge()\n     net.Start(\"SendAge\")\n     net.WriteInt(3, 3)  -- Only 2 bits are needed to store the number '3', but we add one because of the rule.\n     net.SendToServer()\nend\n\n--Server\nutil.AddNetworkString(\"SendAge\")\n\nlocal function GetAge(len, ply)\n     local age = net.ReadInt(3) -- use the same number of bits that were written\n     print(\"Player \" .. ply:Nick() .. \" is \" .. age .. \" years old.\"\nend\nnet.Receive(\"SendAge\", GetAge)","output":"Player <name> is 3 years old."}},
{"function":{"name":"WriteFloat","parent":"net","type":"libraryfunc","description":"Appends a float (number with decimals) to the current net message.","realm":"Shared","args":{"arg":{"text":"The float to be sent.","name":"float","type":"number"}}}},
{"function":{"name":"WriteDouble","parent":"net","type":"libraryfunc","description":"Appends a double-precision number to the current net message.","realm":"Shared","args":{"arg":{"text":"The double to be sent","name":"double","type":"number"}}}},
{"function":{"name":"WriteEntity","parent":"net","type":"libraryfunc","description":"Appends an entity to the current net message.","realm":"Shared","file":{"text":"lua/includes/extensions/net.lua","line":"47-L58"},"args":{"arg":{"text":"The entity to be sent.","name":"entity","type":"Entity"}}}},
{"function":{"name":"WriteData","parent":"net","type":"libraryfunc","description":"Writes a chunk of binary data to the message.","realm":"Shared","args":{"arg":[{"text":"The binary data to be sent.","name":"binaryData","type":"string"},{"text":"The length of the binary data to be sent, in bytes.","name":"length","type":"number"}]}}},
{"function":{"name":"WriteColor","parent":"net","type":"libraryfunc","description":{"text":"Appends a  to the current net message.","page":"Color"},"realm":"Shared","file":{"text":"lua/includes/extensions/net.lua","line":"72"},"args":{"arg":{"text":"The  you want to append to the net message.","name":"Color","type":"table","page":"Color"}}}},
{"function":{"name":"WriteBool","parent":"net","type":"libraryfunc","description":{"text":"Appends a boolean to the current net message. Alias of","page":"net.WriteBit"},"realm":"Shared","file":{"text":"lua/includes/extensions/net.lua","line":"39"},"args":{"arg":{"text":"Boolean value to write","name":"boolean","type":"boolean"}}}},
{"function":{"name":"WriteBit","parent":"net","type":"libraryfunc","description":{"text":"Appends a boolean (as 1 or 0) to the current net message.\n\nPlease note that the bit is written here from a  (true/false) but  returns a number.","page":["boolean","net.ReadBit"]},"realm":"Shared","args":{"arg":{"text":"Bit status (false = 0, true = 1)","name":"boolean","type":"boolean"}}}},
{"function":{"name":"WriteAngle","parent":"net","type":"libraryfunc","description":"Writes an angle to the current net message.","realm":"Shared","args":{"arg":{"text":"The angle to be sent.","name":"angle","type":"Angle"}}}},
{"function":{"name":"Start","parent":"net","type":"libraryfunc","description":{"text":"Begins a new net message. If another net message is already started and hasn't been sent yet, it will be discarded.","warning":["Each net message has a length limit of 64KB!",{"text":"The message name must be pooled with  beforehand!","page":"util.AddNetworkString"}]},"realm":"Shared","args":{"arg":[{"text":"The name of the message to send","name":"messageName","type":"string"},{"text":"If set to true, the message is not guaranteed to reach its destination","name":"unreliable","type":"boolean","default":"false"}]},"rets":{"ret":{"text":"True if the message has been started.","name":"","type":"boolean"}}}},
{"function":{"name":"SendToServer","parent":"net","type":"libraryfunc","description":"Sends the current message to the server.","realm":"Client"},"example":{"description":"Sends a simple \"hello_world\" message with the string \"Hi\" to the server","code":"net.Start( \"hello_world\" )\n\tnet.WriteString( \"Hi\" )\nnet.SendToServer()","output":{"text":"The netmessage \"hello_world\" is sent to the server. The server can handle this with .\n\nRemember that any client has the potential to send any net message at any time. On your server-side , make sure to verify the message sender's permissions whenever you can and prevent expensive functions from being run too often.","page":["net.Receive","net.Receive"]}}},
{"function":{"name":"SendPVS","parent":"net","type":"libraryfunc","description":"Sends the message to all players the position is in the PVS of or, more simply said, sends the message to players that can potentially see this position.","realm":"Server","args":{"arg":{"text":"Position that must be in players' visibility set.","name":"position","type":"Vector"}}}},
{"function":{"name":"SendPAS","parent":"net","type":"libraryfunc","description":"Sends the message to all players that are in the same potentially audible set(PAS) as the position, or simply said, it adds all players that can potentially hear sounds from this position.","realm":"Server","args":{"arg":{"text":"PAS position.","name":"position","type":"Vector"}}}},
{"function":{"name":"SendOmit","parent":"net","type":"libraryfunc","description":"Sends the current message to all except the specified, or to all except all players in the table.","realm":"Server","args":{"arg":{"text":"The player(s) to NOT send the message to. Can be a table of players","name":"ply","type":"Player"}}}},
{"function":{"name":"Send","parent":"net","type":"libraryfunc","description":"Sends the current message to the specified player, or to all players listed in the table.","realm":"Server","args":{"arg":{"text":"The player(s) to send the message to. Can be a table of players or a .","name":"ply","type":"Player","page":"CRecipientFilter"}}}},
{"function":{"name":"Receive","parent":"net","type":"libraryfunc","description":{"text":"Adds a net message handler. Only one receiver can be used to receive the net message.","note":"The message-name is converted to lower-case so the message-names \"`BigBlue`\" and \"`bigblue`\" would be equal.","warning":["You **must** put this function **outside** of any other function or hook for it to work properly unless you know what you are doing!","You **must** read information in the same order as you write it.","Each net message has a length limit of 64KB!"]},"realm":"Shared","file":{"text":"lua/includes/extensions/net.lua","line":"8"},"args":{"arg":[{"text":"The message name to hook to.","name":"messageName","type":"string"},{"text":"The function to be called if the specified message was received. Arguments are:\n\n len - Length of the message, in bits\n ply - The player that sent the message, works only serverside","name":"callback","type":"function","page":["number","Player"],"br":""}]}},"example":{"description":"A simple callback","code":"net.Receive( \"my_message\", function( len, pl )\n\tif ( IsValid( pl ) and pl:IsPlayer() ) then\n\t\tprint( \"Message from \" .. pl:Nick() .. \" received. Its length is \" .. len .. \".\" )\n\telse\n\t\tprint( \"Message from server received. Its length is \" .. len .. \".\" )\n\tend\nend )","output":"When run server-side:\n\n\n```\nMessage from John received. Its length is 4.\n```\n\n\nAnd client-side:\n\n\n```\nMessage from server received. Its length is 4.\n```"}},
{"function":{"name":"ReadVector","parent":"net","type":"libraryfunc","description":{"text":"Reads a vector from the received net message.  Vectors sent by this function are compressed, which may result in precision loss. See  for more information.","page":"net.WriteVector","warning":"You **must** read information in same order as you write it."},"realm":"Shared","rets":{"ret":{"text":"The read vector, or Vector(0,0,0) if no vector could be read.","name":"","type":"Vector"}}}},
{"function":{"name":"ReadUInt","parent":"net","type":"libraryfunc","description":{"text":"Reads an unsigned integer with the specified number of bits from the received net message.","warning":"You **must** read information in same order as you write it."},"realm":"Shared","args":{"arg":{"text":"The size of the integer to be read, in bits.","name":"numberOfBits","type":"number"}},"rets":{"ret":{"text":"The unsigned integer read, or 0 if the integer could not be read.","name":"","type":"number"}}}},
{"function":{"name":"ReadType","parent":"net","type":"libraryfunc","description":{"text":"Reads a value from the net message with the specified type, written by .","internal":{"text":"Used internally by .","page":"net.ReadTable"},"page":"net.WriteType","warning":"You **must** read information in same order as you write it."},"realm":"Shared","file":{"text":"lua/includes/extensions/net.lua","line":"175"},"args":{"arg":{"text":"The type of value to be read, using .","name":"typeID","type":"number","default":"net.ReadUInt(8)","page":"Enums/TYPE"}},"rets":{"ret":{"text":"The value, or the respective blank value based on the type you're reading if the value could not be read.","name":"","type":"any"}}}},
{"function":{"name":"ReadTable","parent":"net","type":"libraryfunc","description":{"text":"Reads a table from the received net message.\n\n\n\n\nSee  for extra info.\nYou may get `net.ReadType: Couldn't read type X` during the execution of the function, the problem is that you are sending objects that cannot be serialized/sent over the network.","note":"Sometimes when sending a table through the net library, the order of the keys may be switched. So be cautious when comparing (See Example 1).","warning":"You **must** read information in same order as you write it.","page":"net.WriteTable"},"realm":"Shared","file":{"text":"lua/includes/extensions/net.lua","line":"115"},"rets":{"ret":{"text":"Table recieved via the net message, or a blank table if no table could be read.","name":"","type":"table"}}},"example":{"description":"This is an example of how the keys order may be switched:","code":"--Client:\nfunction SendTable()\n     local Table = {}\n     Table.Type = \"Dining\"\n     Table.Legs = 4\n     Table.Material = \"Wood\"\n     net.Start(\"TableSend\")\n      net.WriteTable(Table)\n     net.SendToServer()\n     PrintTable(Table) -- Prints the order client side\nend\n\n--Server:\nfunction GotTable(len, Player)\n     PrintTable(net.ReadTable()) -- Prints the order server side\nend\nnet.Receive(\"TableSend\", GotTable)","output":"Client:\n\n```\nType     = \"Dining\"\nLegs     = 4\nMaterial = \"Wood\"\n```\n\n\nServer:\n\n```\nLegs     = 4\nMaterial = \"Wood\"\nType     = \"Dining\"\n```"}},
{"function":{"name":"ReadString","parent":"net","type":"libraryfunc","description":{"text":"Reads a null terminated string from the net stream. The size of the string is 8 bits plus 8 bits for every ASCII character in the string.","warning":"You **must** read information in same order as you write it."},"realm":"Shared","rets":{"ret":{"text":"The read string, or a string with 0 length if no string could be read.","name":"","type":"string"}}}},
{"function":{"name":"ReadNormal","parent":"net","type":"libraryfunc","description":{"text":"Reads a normal vector from the net message.","warning":"You **must** read information in same order as you write it."},"realm":"Shared","rets":{"ret":{"text":"The normalized vector ( length = 1 ), or Vector(0,0,1) if no normal could be read.","name":"","type":"Vector"}}}},
{"function":{"name":"ReadInt","parent":"net","type":"libraryfunc","description":{"text":"Reads an integer from the received net message.","warning":"You **must** read information in same order as you write it."},"realm":"Shared","args":{"arg":{"text":"The amount of bits to be read.\n\nThis must be set to what you set to . Read more information at .","name":"bitCount","type":"number","page":["net.WriteInt","net.WriteInt"]}},"rets":{"ret":{"text":"The read integer number, or 0 if no integer could be read.","name":"","type":"number"}}}},
{"function":{"name":"ReadMatrix","parent":"net","type":"libraryfunc","description":{"text":"Reads a  from the received net message.","page":"VMatrix","warning":"You **must** read information in same order as you write it."},"realm":"Shared","rets":{"ret":{"text":"The matrix, or an empty matrix if no matrix could be read.","name":"","type":"VMatrix"}}}},
{"function":{"name":"ReadHeader","parent":"net","type":"libraryfunc","description":{"text":"Reads a word, basically unsigned short. This is used internally to read the \"header\" of the message which is an unsigned short which can be converted to the corresponding message name via .","internal":"","page":"util.NetworkIDToString"},"realm":"Shared","rets":{"ret":{"text":"The header number","name":"","type":"number"}}}},
{"function":{"name":"ReadFloat","parent":"net","type":"libraryfunc","description":{"text":"Reads a floating point number from the received net message.","warning":"You **must** read information in same order as you write it."},"realm":"Shared","rets":{"ret":{"text":"The floating point number, or 0 if no number could be read.","name":"","type":"number"}}}},
{"function":{"name":"ReadDouble","parent":"net","type":"libraryfunc","description":{"text":"Reads a double-precision number from the received net message.","warning":"You **must** read information in same order as you write it."},"realm":"Shared","rets":{"ret":{"text":"The double-precision number, or 0 if no number could be read.","name":"","type":"number"}}}},
{"function":{"name":"ReadColor","parent":"net","type":"libraryfunc","description":{"text":"Reads a  from the current net message.","page":"Color","warning":"You **must** read information in same order as you write it."},"realm":"Shared","file":{"text":"lua/includes/extensions/net.lua","line":"83"},"rets":{"ret":{"text":"The  read from the current net message, or Color(0,0,0,0) if the color could not be read.","name":"","type":"table","page":"Color"}}}},
{"function":{"name":"ReadData","parent":"net","type":"libraryfunc","description":{"text":"Reads pure binary data from the message.","warning":"You **must** read information in same order as you write it."},"realm":"Shared","args":{"arg":{"text":"The length of the data to be read, in bytes.","name":"length","type":"number"}},"rets":{"ret":{"text":"The binary data read, or a string containing one character with a byte of 0 if no data could be read.","name":"","type":"string"}}}},
{"function":{"name":"ReadBool","parent":"net","type":"libraryfunc","description":{"text":"Reads a boolean from the received net message.","warning":"You **must** read information in same order as you write it."},"realm":"Shared","file":{"text":"lua/includes/extensions/net.lua","line":"41"},"rets":{"ret":{"text":"true or false, or false if the bool could not be read.","name":"","type":"boolean"}}}},
{"function":{"name":"ReadEntity","parent":"net","type":"libraryfunc","description":{"text":"Reads an entity from the received net message. You should always check if the specified entity exists as it may have been removed and therefor NULL if it is outside of the players PVS or was already removed.","warning":"You **must** read information in same order as you write it."},"realm":"Shared","file":{"text":"lua/includes/extensions/net.lua","line":"60-L67"},"rets":{"ret":{"text":"The entity, or Entity(0) if no entity could be read.","name":"","type":"Entity"}}}},
{"function":{"name":"ReadBit","parent":"net","type":"libraryfunc","description":{"text":"Reads a bit from the received net message.","warning":"You **must** read information in same order as you write it."},"realm":"Shared","rets":{"ret":{"text":"0 or 1, or 0 if the bit could not be read.","name":"","type":"number"}}}},
{"function":{"name":"ReadAngle","parent":"net","type":"libraryfunc","description":{"text":"Reads an angle from the received net message.","warning":"You **must** read information in same order as you write it."},"realm":"Shared","rets":{"ret":{"text":"The read angle, or Angle(0,0,0) if no angle could be read","name":"","type":"Angle"}}}},
{"function":{"name":"Incoming","parent":"net","type":"libraryfunc","description":{"text":"Function called by the engine to tell the lua state a message arrived.","internal":{"text":"You may be looking for .","page":"net.Receive"}},"realm":"Shared","file":{"text":"lua/includes/extensions/net.lua","line":"17"},"args":{"arg":[{"text":"The message length, in bits.","name":"length","type":"number"},{"text":"The player that sent the message. This will be nil in the client state.","name":"client","type":"Player"}]}}},
{"function":{"name":"BytesWritten","parent":"net","type":"libraryfunc","description":{"text":"Returns the size of the current message in bytes.","note":"This will include 3 extra bytes used by the engine internally to send the data over the network."},"realm":"Shared","rets":{"ret":[{"text":"The amount of bytes written to the current net message.\nReturns nil if no net message has been started.","name":"","type":"number"},{"text":"The amount of bits written to the current net message.\nReturns nil if no net message has been started.","name":"","type":"number"}]}}},
{"function":{"name":"BytesLeft","parent":"net","type":"libraryfunc","description":"Returns the amount of data left to read in the current message in bytes. Does nothing when sending data.","realm":"Shared","rets":{"ret":[{"text":"The amount of data left to read in the current net message in bytes.\nReturns nil if no net message has been started.","name":"","type":"number"},{"text":"The amount of data left to read in the current net message in bits.\nReturns nil if no net message has been started.","name":"","type":"number"}]}}},
{"function":{"name":"Broadcast","parent":"net","type":"libraryfunc","description":{"text":"Sends the currently built net message to all connected players.\nMore information can be found in .","page":"Net Library Usage"},"realm":"Server"},"example":{"description":"Sends a packet to all players.","code":"net.Start(\"NETHOOK\")\n    net.WriteString(\"some text\")\nnet.Broadcast()"}},
{"function":{"name":"SetPlayerSpawnName","parent":"navmesh","type":"libraryfunc","description":{"text":"Sets the classname of the default spawn point entity, used before generating a new navmesh with .","page":"navmesh.BeginGeneration"},"realm":"Server","args":{"arg":{"text":"The classname of what the player uses to spawn, automatically adds it to the walkable positions during map generation.","name":"spawnPointClass","type":"string"}}}},
{"function":{"name":"SetMarkedLadder","parent":"navmesh","type":"libraryfunc","description":{"text":"Sets the  as marked, so it can be used with editing console commands.","page":"CNavLadder"},"realm":"Server","args":{"arg":{"text":"The  to set as the marked ladder.","name":"area","type":"CNavLadder","page":"CNavLadder"}}}},
{"function":{"name":"Save","parent":"navmesh","type":"libraryfunc","description":"Saves any changes made to navmesh to the .nav file.","realm":"Server"}},
{"function":{"name":"SetMarkedArea","parent":"navmesh","type":"libraryfunc","description":{"text":"Sets the  as marked, so it can be used with editing console commands.","page":"CNavArea"},"realm":"Server","args":{"arg":{"text":"The  to set as the marked area.","name":"area","type":"CNavArea","page":"CNavArea"}}}},
{"function":{"name":"Reset","parent":"navmesh","type":"libraryfunc","description":{"text":"Deletes every  and  on the map **without saving the changes**.","page":["CNavArea","CNavLadder"]},"realm":"Server"}},
{"function":{"name":"Load","parent":"navmesh","type":"libraryfunc","description":"Loads a new navmesh from the .nav file for current map discarding any changes made to the navmesh previously.","realm":"Server"}},
{"function":{"name":"IsLoaded","parent":"navmesh","type":"libraryfunc","description":"Returns true if a navmesh has been loaded when loading the map.","realm":"Server","rets":{"ret":{"text":"Whether a navmesh has been loaded when loading the map.","name":"","type":"boolean"}}}},
{"function":{"name":"IsGenerating","parent":"navmesh","type":"libraryfunc","description":{"text":"Whether we're currently generating a new navmesh with .","page":"navmesh.BeginGeneration"},"realm":"Server","rets":{"ret":{"text":"Whether we're generating a nav mesh or not.","name":"","type":"boolean"}}}},
{"function":{"name":"GetPlayerSpawnName","parent":"navmesh","type":"libraryfunc","description":"Returns the classname of the player spawn entity.","realm":"Server","rets":{"ret":{"text":"The classname of the spawn point entity. By default returns \"info_player_start\"","name":"","type":"string"}}}},
{"function":{"name":"GetNavAreaCount","parent":"navmesh","type":"libraryfunc","description":"Returns the highest ID of all nav areas on the map. While this can be used to get all nav areas, this number may not actually be the actual number of nav areas on the map.","realm":"Server","rets":{"ret":{"text":"The highest ID of all nav areas on the map.","name":"","type":"number"}}}},
{"function":{"name":"GetNavAreaCount","parent":"navmesh","type":"libraryfunc","description":"Returns the highest ID of all nav areas on the map. While this can be used to get all nav areas, this number may not actually be the actual number of nav areas on the map.","realm":"Server","rets":{"ret":{"text":"The highest ID of all nav areas on the map.","name":"","type":"number"}}}},
{"function":{"name":"GetNavLadderByID","parent":"navmesh","type":"libraryfunc","description":{"text":"Returns a  by the given ID.","page":"CNavLadder"},"realm":"Server","args":{"arg":{"text":"ID of the  to get. Starts with 1.","name":"id","type":"number","page":"CNavLadder"}},"rets":{"ret":{"text":"The  with given ID.","name":"","type":"CNavLadder","page":"CNavLadder"}}}},
{"function":{"name":"GetNavAreaByID","parent":"navmesh","type":"libraryfunc","description":{"text":"Returns a  by the given ID.","page":"CNavArea","note":{"text":"Avoid calling this function every frame, as internally it does a lookup trough all the s, call this once and store the result","page":"CNavArea"}},"realm":"Server","args":{"arg":{"text":"ID of the  to get. Starts with 1.","name":"id","type":"number","page":"CNavArea"}},"rets":{"ret":{"text":"The  with given ID.","name":"","type":"CNavArea","page":"CNavArea"}}}},
{"function":{"name":"GetMarkedLadder","parent":"navmesh","type":"libraryfunc","description":{"text":"Returns the currently marked , for use with editing console commands.","page":"CNavLadder"},"realm":"Server","rets":{"ret":{"text":"The currently marked .","name":"","type":"CNavLadder","page":"CNavLadder"}}}},
{"function":{"name":"GetNavArea","parent":"navmesh","type":"libraryfunc","description":{"text":"Returns the Nav Area contained in this position that also satisfies the elevation limit.\n\nThis function will properly see blocked s. See .","page":["CNavArea","navmesh.GetNearestNavArea"]},"realm":"Server","args":{"arg":[{"text":"The position to search for.","name":"pos","type":"Vector"},{"text":"The elevation limit at which the Nav Area will be searched.","name":"beneathLimit","type":"number"}]},"rets":{"ret":{"text":"The nav area.","name":"","type":"CNavArea"}}}},
{"function":{"name":"GetMarkedArea","parent":"navmesh","type":"libraryfunc","description":{"text":"Returns the currently marked , for use with editing console commands.","page":"CNavArea"},"realm":"Server","rets":{"ret":{"text":"The currently marked .","name":"","type":"CNavArea","page":"CNavArea"}}}},
{"function":{"name":"GetGroundHeight","parent":"navmesh","type":"libraryfunc","description":{"text":"Finds the closest standable ground at, above, or below the provided position.","note":"The ground must have at least 32 units of empty space above it to be considered by this function, unless 16 layers are tested without finding valid ground."},"realm":"Server","args":{"arg":{"text":"Position to find the closest ground for.","name":"pos","type":"Vector"}},"rets":{"ret":[{"text":"The height of the ground layer.","name":"","type":"number"},{"text":"The normal of the ground layer.","name":"","type":"Vector"}]}}},
{"function":{"name":"GetEditCursorPosition","parent":"navmesh","type":"libraryfunc","description":"Returns the position of the edit cursor when nav_edit is set to 1.","realm":"Server","rets":{"ret":{"text":"The position of the edit cursor.","name":"","type":"Vector"}}}},
{"function":{"name":"GetAllNavAreas","parent":"navmesh","type":"libraryfunc","description":{"text":"Returns an integer indexed table of all s on the current map. If the map doesn't have a navmesh generated then this will return an empty table.","page":"CNavArea"},"realm":"Server","rets":{"ret":{"text":"A table of all the s on the current map.","name":"","type":"table","page":"CNavArea"}}}},
{"function":{"name":"CreateNavArea","parent":"navmesh","type":"libraryfunc","description":{"text":"Creates a new .","page":"CNavArea"},"realm":"Server","args":{"arg":[{"text":"The first corner of the new","name":"corner","type":"Vector","page":"CNavArea"},{"text":"The opposite (diagonally) corner of the new","name":"opposite_corner","type":"Vector","page":"CNavArea"}]},"rets":{"ret":{"text":"The new  or  if we failed for some reason.","name":"","type":"CNavArea","page":["CNavArea","nil"]}}}},
{"function":{"name":"CreateNavArea","parent":"navmesh","type":"libraryfunc","description":{"text":"Creates a new .","page":"CNavArea"},"realm":"Server","args":{"arg":[{"text":"The first corner of the new","name":"corner","type":"Vector","page":"CNavArea"},{"text":"The opposite (diagonally) corner of the new","name":"opposite_corner","type":"Vector","page":"CNavArea"}]},"rets":{"ret":{"text":"The new  or  if we failed for some reason.","name":"","type":"CNavArea","page":["CNavArea","nil"]}}}},
{"function":{"name":"BeginGeneration","parent":"navmesh","type":"libraryfunc","description":{"text":"Starts the generation of a new navmesh.","note":"This process is highly resource intensive and it's not wise to use during normal gameplay"},"realm":"Server"}},
{"function":{"name":"ClearWalkableSeeds","parent":"navmesh","type":"libraryfunc","description":{"text":"Clears all the walkable positions, used before calling .","page":"navmesh.BeginGeneration"},"realm":"Server"}},
{"function":{"name":"Stop","parent":"motionsensor","type":"libraryfunc","description":"Stops the motion capture.","realm":"Client"}},
{"function":{"name":"AddWalkableSeed","parent":"navmesh","type":"libraryfunc","description":{"text":"Add this position and normal to the list of walkable positions, used before map generation with","page":"navmesh.BeginGeneration"},"realm":"Server","args":{"arg":[{"text":"The terrain position.","name":"pos","type":"Vector"},{"text":"The normal of this terrain position.","name":"dir","type":"Vector"}]}}},
{"function":{"name":"Start","parent":"motionsensor","type":"libraryfunc","description":"This starts access to the kinect sensor. Note that this usually freezes the game for a couple of seconds.","realm":"Client and Menu"}},
{"function":{"name":"ProcessAnglesTable","parent":"motionsensor","type":"libraryfunc","description":"","realm":"Shared","file":{"text":"lua/includes/extensions/motionsensor.lua","line":"126"},"args":{"arg":[{"name":"translator","type":"table"},{"name":"sensor","type":"table"},{"name":"pos","type":"Vector"},{"name":"rotation","type":"Angle"}]},"rets":{"ret":{"text":"Ang. If !translator.AnglesTable then return - {}","name":"","type":"Angle"}}}},
{"function":{"name":"ProcessPositionTable","parent":"motionsensor","type":"libraryfunc","description":"","realm":"Shared","file":{"text":"lua/includes/extensions/motionsensor.lua","line":"195"},"args":{"arg":[{"name":"translator","type":"table"},{"name":"sensor","type":"table"}]},"rets":{"ret":{"text":"Pos. if !translator.PositionTable then return - {}","name":"","type":"Vector"}}}},
{"function":{"name":"ProcessAngle","parent":"motionsensor","type":"libraryfunc","description":"","realm":"Shared","file":{"text":"lua/includes/extensions/motionsensor.lua","line":"60"},"args":{"arg":[{"name":"translator","type":"table"},{"name":"sensor","type":"table"},{"name":"pos","type":"Vector"},{"name":"ang","type":"Angle"},{"name":"special_vectors","type":"table"},{"name":"boneid","type":"number"},{"name":"v","type":"table"}]},"rets":{"ret":{"text":"Return nil on failure","name":"","type":"boolean"}}}},
{"function":{"name":"IsAvailable","parent":"motionsensor","type":"libraryfunc","description":"Returns true if we have detected that there's a kinect connected to the PC","realm":"Client and Menu","rets":{"ret":{"text":"Connected or not","name":"","type":"boolean"}}}},
{"function":{"name":"IsActive","parent":"motionsensor","type":"libraryfunc","description":"Return whether a kinect is connected - and active (ie - Start has been called).","realm":"Client","rets":{"ret":{"text":"Connected and active or not","name":"","type":"boolean"}}}},
{"function":{"name":"GetSkeleton","parent":"motionsensor","type":"libraryfunc","description":"","realm":"Client"}},
{"function":{"name":"GetColourMaterial","parent":"motionsensor","type":"libraryfunc","description":"Returns the depth map material.","realm":"Client and Menu","rets":{"ret":{"text":"The material","name":"","type":"IMaterial"}}}},
{"function":{"name":"ChooseBuilderFromEntity","parent":"motionsensor","type":"libraryfunc","description":"","realm":"Shared","file":{"text":"lua/includes/extensions/motionsensor.lua","line":"46"},"args":{"arg":{"text":"Entity to choose builder for","name":"ent","type":"Entity"}},"rets":{"ret":{"text":"Chosen builder","name":"","type":"string"}}}},
{"function":{"name":"VertexCount","parent":"mesh","type":"libraryfunc","description":"Returns the amount of vertex that have yet been pushed.","realm":"Client","rets":{"ret":{"text":"vertexCount","name":"","type":"number"}}}},
{"function":{"name":"BuildSkeleton","parent":"motionsensor","type":"libraryfunc","description":"","realm":"Shared","file":{"text":"lua/includes/extensions/motionsensor.lua","line":"221"},"args":{"arg":[{"name":"translator","type":"table"},{"name":"player","type":"Player"},{"name":"rotation","type":"Angle"}]},"rets":{"ret":[{"text":"Pos","name":"","type":"Vector"},{"text":"ang","name":"","type":"Angle"},{"text":"sensor","name":"","type":"sensor"}]}}},
{"function":{"name":"UserData","parent":"mesh","type":"libraryfunc","description":{"text":"A table of four numbers. This is used by most shaders in Source to hold tangent information of the vertex ( tangentX, tangentY, tangentZ, tangentHandedness ).","note":{"text":"It is recommended to use  instead of the mesh library.","page":"IMesh:BuildFromTriangles"}},"realm":"Client","args":{"arg":[{"name":"tangentX","type":"number"},{"name":"tangentY","type":"number"},{"name":"tangentZ","type":"number"},{"name":"tangentHandedness","type":"number"}]}}},
{"function":{"name":"TexCoord","parent":"mesh","type":"libraryfunc","description":"Sets the texture coordinates for the next vertex.\n\nNon-zero values of stage require the currently bound material to support it. For example, any LightmappedGeneric material supports stages 1 and 2 (lightmap texture coordinates).","realm":"Client","args":{"arg":[{"text":"The stage of the texture coordinate.","name":"stage","type":"number"},{"text":"U coordinate.","name":"u","type":"number"},{"text":"V coordinate.","name":"v","type":"number"}]}}},
{"function":{"name":"TangentT","parent":"mesh","type":"libraryfunc","description":"Sets the T tangent to be used.\n\nThis function actually does nothing.","realm":"Client","args":{"arg":{"text":"The t tangent.","name":"tTanger","type":"Vector"}}}},
{"function":{"name":"Specular","parent":"mesh","type":"libraryfunc","description":"Sets the specular map values.\n\nThis function actually does nothing.","realm":"Client","args":{"arg":[{"text":"The red channel multiplier of the specular map.","name":"r","type":"number"},{"text":"The green channel multiplier of the specular map.","name":"g","type":"number"},{"text":"The blue channel multiplier of the specular map.","name":"b","type":"number"},{"text":"The alpha channel multiplier of the specular map.","name":"a","type":"number"}]}}},
{"function":{"name":"Position","parent":"mesh","type":"libraryfunc","description":"Sets the position to be used for the next vertex.","realm":"Client","args":{"arg":{"text":"The position of the vertex.","name":"position","type":"Vector"}}}},
{"function":{"name":"Normal","parent":"mesh","type":"libraryfunc","description":"Sets the normal to be used for the next vertex.","realm":"Client","args":{"arg":{"text":"The normal of the vertex.","name":"normal","type":"Vector"}}}},
{"function":{"name":"End","parent":"mesh","type":"libraryfunc","description":"Ends the mesh and renders it.","realm":"Client"}},
{"function":{"name":"Color","parent":"mesh","type":"libraryfunc","description":"Sets the color to be used for the next vertex.","realm":"Client","args":{"arg":[{"text":"Red component.","name":"r","type":"number"},{"text":"Green component.","name":"g","type":"number"},{"text":"Blue component.","name":"b","type":"number"},{"text":"Alpha component.","name":"a","type":"number"}]}}},
{"function":{"name":"Begin","parent":"mesh","type":"libraryfunc","description":{"text":"Starts a new dynamic mesh. If an  is passed, it will use that mesh instead.","page":"IMesh"},"realm":"Client","args":{"arg":[{"text":"Mesh to build. This argument can be removed if you wish to build a \"dynamic\" mesh. See examples below.","name":"mesh","type":"IMesh","default":"nil"},{"text":"Primitive type, see .","name":"primitiveType","type":"number","page":"Enums/MATERIAL"},{"text":"The amount of primitives.","name":"primiteCount","type":"number"}]}},"example":[{"description":"Draws a triangle near Vector( 0, 0, 0 ) in the map using a dynamic mesh.","code":"local mat = Material( \"editor/wireframe\" ) -- The material (a wireframe)\n\nlocal verts = { -- A table of 3 vertices that form a triangle\n\t{ pos = Vector( 0,  0,  0 ), u = 0, v = 0 }, -- Vertex 1\n\t{ pos = Vector( 10, 0,  0 ), u = 1, v = 0 }, -- Vertex 2\n\t{ pos = Vector( 10, 10, 0 ), u = 1, v = 1 }, -- Vertex 3\n}\n\nhook.Add( \"PostDrawOpaqueRenderables\", \"MeshLibTest\", function()\n\n\trender.SetMaterial( mat ) -- Apply the material\n\tmesh.Begin( MATERIAL_TRIANGLES, 1 ) -- Begin writing to the dynamic mesh\n\tfor i = 1, #verts do\n\t\tmesh.Position( verts[i].pos ) -- Set the position\n\t\tmesh.TexCoord( 0, verts[i].u, verts[i].v ) -- Set the texture UV coordinates\n\t\tmesh.AdvanceVertex() -- Write the vertex\n\tend\n\tmesh.End() -- Finish writing the mesh and draw it\nend )"},{"description":"Draws a triangle near Vector( 0, 0, 0 ) in the map using a static mesh.","code":"local mat = Material( \"editor/wireframe\" ) -- The material (a wireframe)\nlocal obj = Mesh() -- Create the IMesh object\n\nlocal verts = { -- A table of 3 vertices that form a triangle\n\t{ pos = Vector( 0,  0,  0 ), u = 0, v = 0 }, -- Vertex 1\n\t{ pos = Vector( 10, 0,  0 ), u = 1, v = 0 }, -- Vertex 2\n\t{ pos = Vector( 10, 10, 0 ), u = 1, v = 1 }, -- Vertex 3\n}\n\nmesh.Begin( obj, MATERIAL_TRIANGLES, 1 ) -- Begin writing to the static mesh\nfor i = 1, #verts do\n\tmesh.Position( verts[i].pos ) -- Set the position\n\tmesh.TexCoord( 0, verts[i].u, verts[i].v ) -- Set the texture UV coordinates\n\tmesh.AdvanceVertex() -- Write the vertex\nend\nmesh.End() -- Finish writing to the IMesh\n\nhook.Add( \"PostDrawOpaqueRenderables\", \"MeshLibTest\", function()\n\n\trender.SetMaterial( mat ) -- Apply the material\n\tobj:Draw() -- Draw the mesh\nend )"}]},
{"function":{"name":"AdvanceVertex","parent":"mesh","type":"libraryfunc","description":"Pushes the new vertex data onto the render stack.","realm":"Client"}},
{"function":{"name":"ParentTo","parent":"menubar","type":"libraryfunc","description":"Parents the menubar to the panel and displays the menubar.","realm":"Client","args":{"arg":{"text":"The panel to parent to","name":"pnl","type":"Panel"}}}},
{"function":{"name":"IsParent","parent":"menubar","type":"libraryfunc","description":"Checks if the supplied panel is parent to the menubar","realm":"Client","args":{"arg":{"text":"The panel to check","name":"pnl","type":"Panel"}},"rets":{"ret":{"text":"Is parent or not","name":"","type":"boolean"}}}},
{"function":{"name":"Init","parent":"menubar","type":"libraryfunc","description":"Creates the menu bar ( The bar at the top of the screen when holding C or Q in sandbox ) and docks it to the top of the screen. It will not appear.\n\n\nCalling this multiple times will **NOT** remove previous panel.","realm":"Client"}},
{"function":{"name":"RecordFrame","parent":"menu","type":"libraryfunc","description":"Used by \"Demo to Video\" to record the frame.","realm":"Client"}},
{"function":{"name":"ShouldOverrideProxy","parent":"matproxy","type":"libraryfunc","description":"Called by engine, returns true if we're overriding a proxy","realm":"Client","args":{"arg":{"text":"The name of proxy in question","name":"name","type":"string"}},"rets":{"ret":{"text":"Are we overriding it?","name":"","type":"boolean"}}}},
{"function":{"name":"Init","parent":"matproxy","type":"libraryfunc","description":"Called by the engine from OnBind","realm":"Client","args":{"arg":[{"name":"name","type":"string"},{"name":"uname","type":"string"},{"name":"mat","type":"IMaterial"},{"name":"values","type":"table"}]}}},
{"function":{"name":"Call","parent":"matproxy","type":"libraryfunc","description":"Called by the engine from OnBind","realm":"Client","args":{"arg":[{"name":"uname","type":"string"},{"name":"mat","type":"IMaterial"},{"name":"ent","type":"Entity"}]}}},
{"function":{"name":"QuadEasy","parent":"mesh","type":"libraryfunc","description":"Draws a quad using a position, a normal and the size.","realm":"Client","args":{"arg":[{"text":"The center of the quad.","name":"position","type":"Vector"},{"text":"The normal of the quad.","name":"normal","type":"Vector"},{"text":"X size in pixels.","name":"sizeX","type":"number"},{"text":"Y size in pixels.","name":"sizeY","type":"number"}]}}},
{"function":{"name":"Add","parent":"matproxy","type":"libraryfunc","description":"Adds a material proxy.","realm":"Client","args":{"arg":{"text":"The information about the proxy. See","name":"MatProxyData","type":"table","page":"Structures/MatProxyData"}}},"example":[{"description":"Adds PlayerColor proxy. Example taken from lua/matproxy/player_color.lua.","code":"matproxy.Add({\n    name = \"PlayerColor\", \n    init = function( self, mat, values )\n        -- Store the name of the variable we want to set\n        self.ResultTo = values.resultvar\n    end,\n    bind = function( self, mat, ent )\n        -- If the target ent has a function called GetPlayerColor then use that\n        -- The function SHOULD return a Vector with the chosen player's colour.\n\n        -- In sandbox this function is created as a network function, \n        -- in player_sandbox.lua in SetupDataTables\n       if ( ent.GetPlayerColor ) then\n           mat:SetVector( self.ResultTo, ent:GetPlayerColor() )\n       end\n   end \n})","output":"Adds PlayerColor proxy."},{"description":{"text":"Material proxy values are stored like this:\n\n* In the .vmt:\n\n```\nProxies {\n    PlayerColor {\n       resultVar $color2\n       myVariable $color\n    }\n}\n```\n\n\n* In Lua ( The **Init** function of  )","page":"Structures/MatProxyData"},"code":"values = {\n    resultvar = \"$color2\"\n    myvariable = \"$color\"\n}"}]},
{"function":{"name":"Truncate","parent":"math","type":"libraryfunc","description":"Rounds towards zero.","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/math.lua","line":"161-L168"},"args":{"arg":[{"text":"The number to truncate","name":"num","type":"number"},{"text":"The amount of digits to keep after the point.","name":"digits","type":"number","default":"0"}]}},"example":{"description":"Demonstrates the use of this function.","code":"local num = 54.59874\n\nprint( math.Truncate( num, 2 ) ) -- 54.59\nprint( math.Round( num, 2 ) ) -- 54.6","outputfixedwidth":"Fixed width","output":"54.59\n54.6"}},
{"function":{"name":"tanh","parent":"math","type":"libraryfunc","description":"Returns the hyperbolic tangent of the given number.","realm":"Shared and Menu","args":{"arg":{"text":"Angle in radians.","name":"number","type":"number"}},"rets":{"ret":{"text":"The hyperbolic tangent of the given angle.","name":"","type":"number"}}}},
{"function":{"name":"TimeFraction","parent":"math","type":"libraryfunc","description":"Returns the fraction of where the current time is relative to the start and end times","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/math.lua","line":"217-L219"},"args":{"arg":[{"text":"Start time in seconds","name":"start","type":"number"},{"text":"End time in seconds","name":"end","type":"number"},{"text":"Current time in seconds","name":"current","type":"number"}]},"rets":{"ret":{"text":"Fraction","name":"","type":"number"}}},"example":{"description":"Prints the time fraction of 5 between 0 and 10","code":"print(math.TimeFraction(0, 10, 5))","output":"0.5"}},
{"function":{"name":"Quad","parent":"mesh","type":"libraryfunc","description":"Draws a quad using 4 vertices.","realm":"Client","args":{"arg":[{"text":"The first vertex.","name":"vertex1","type":"Vector"},{"text":"The second vertex.","name":"vertex2","type":"Vector"},{"text":"The third vertex.","name":"vertex3","type":"Vector"},{"text":"The fourth vertex.","name":"vertex4","type":"Vector"}]}}},
{"function":{"name":"tan","parent":"math","type":"libraryfunc","description":"Returns the tangent of the given angle.","realm":"Shared and Menu","args":{"arg":{"text":"Angle in radians","name":"value","type":"number"}},"rets":{"ret":{"text":"The tangent of the given angle.","name":"","type":"number"}}}},
{"function":{"name":"sqrt","parent":"math","type":"libraryfunc","description":"Returns the square root of the number.","realm":"Shared and Menu","args":{"arg":{"text":"Value to get the square root of.","name":"value","type":"number"}},"rets":{"ret":{"text":"squareRoot","name":"","type":"number"}}}},
{"function":{"name":"sinh","parent":"math","type":"libraryfunc","description":"Returns the hyperbolic sine of the given angle.","realm":"Shared and Menu","args":{"arg":{"text":"Angle in radians.","name":"number","type":"number"}},"rets":{"ret":{"text":"The hyperbolic sine of the given angle.","name":"","type":"number"}}}},
{"function":{"name":"sin","parent":"math","type":"libraryfunc","description":"Returns the sine of given angle.","realm":"Shared and Menu","args":{"arg":{"text":"Angle in radians","name":"number","type":"number"}},"rets":{"ret":{"text":"Sine for given angle","name":"","type":"number"}}}},
{"function":{"name":"Round","parent":"math","type":"libraryfunc","description":"Rounds the given value to the nearest whole number or to the given decimal places.","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/math.lua","line":"156-L162"},"args":{"arg":[{"text":"The value to round.","name":"value","type":"number"},{"text":"The decimal places to round to.","name":"decimals","type":"number","default":"0"}]},"rets":{"ret":{"text":"The rounded value.","name":"","type":"number"}}},"example":[{"description":"Rounds a number to the nearest whole number.","code":"print(math.Round(104.6256712))","output":"105"},{"description":"Rounds the number to two decimal places.","code":"print(math.Round(104.6256712, 2))","output":"104.63"}]},
{"function":{"name":"Remap","parent":"math","type":"libraryfunc","description":"Remaps the value from one range to another","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/math.lua","line":"217-L219"},"args":{"arg":[{"text":"The value","name":"value","type":"number"},{"text":"The minimum of the initial range","name":"inMin","type":"number"},{"text":"The maximum of the initial range","name":"inMax","type":"number"},{"text":"The minimum of new range","name":"outMin","type":"number"},{"text":"The maximum of new range","name":"outMax","type":"number"}]},"rets":{"ret":{"text":"The number in the new range","name":"","type":"number"}}},"example":{"description":"Example usage, converts a value from range 0-1, to range 0-255.","code":"print( math.Remap( 0.5, 0, 1, 0, 255 ) )","output":"127.5"}},
{"function":{"name":"randomseed","parent":"math","type":"libraryfunc","description":{"text":"Seeds the random number generator. The same seed will guarantee the same sequence of numbers each time with .\n\nFor shared random values across predicted realms, use .","page":["math.random","util.SharedRandom"],"warning":"Incorrect usage of this function will affect `all` random numbers in the game."},"realm":"Shared and Menu","args":{"arg":{"text":"The new seed","name":"seed","type":"number"}}}},
{"function":{"name":"random","parent":"math","type":"libraryfunc","description":{"text":"When called without arguments, returns a uniform pseudo-random real number in the range 0 to 1 which includes 0 but excludes 1.\n\nWhen called with an integer number m, returns a uniform pseudo-random integer in the range 1 to m inclusive.\n\nWhen called with two integer numbers m and n, returns a uniform pseudo-random integer in the range m to n inclusive.\n\nSee also","page":"math.Rand"},"realm":"Shared and Menu","args":{"arg":[{"text":"If m is the only parameter: upper limit.\n\nIf n is also provided: lower limit.\n\nIf provided, this must be an integer.","name":"m","type":"number","default":"nil"},{"text":"Upper limit.\n\nIf provided, this must be an integer.","name":"n","type":"number","default":"nil"}]},"rets":{"ret":{"text":"Random value","name":"","type":"number"}}},"example":[{"description":"Generate a random number between 1 and 400 with both math.random and math.Rand.","code":"print(math.random(1,400))\n\nprint(math.Rand(1,400))","outputfixedwidth":"Fixed width","output":"317\n1.0162317198768"},{"description":"Select a random key from a table, where the keys have a different probability of being selected.","code":"function GetWeightedRandomKey(tab)\n\tlocal sum = 0\n\n\tfor _, chance in pairs(tab) do\n\t\tsum = sum + chance\n\tend\n\n\tlocal select = math.random() * sum\n\n\tfor key, chance in pairs(tab) do\n\t\tselect = select - chance\n\t\tif select < 0 then return key end\n\tend\nend\n\n-- Example usage:\nlocal fruit = {\n\tGrape = 4.5,\n\tOrange = 20,\n\tBanana = 3.14\n}\n\nfor i = 1, 5 do\n\tprint(GetWeightedRandomKey(fruit))\nend","outputfixedwidth":"Fixed width","output":"Banana\nGrape\nBanana\nOrange\nOrange"}]},
{"function":{"name":"Rand","parent":"math","type":"libraryfunc","description":{"text":"Returns a random float between min and max.\n\nSee also","page":"math.random"},"realm":"Shared and Menu","file":{"text":"lua/includes/extensions/math.lua","line":"49-L55"},"args":{"arg":[{"text":"The minimum value.","name":"min","type":"number"},{"text":"The maximum value.","name":"max","type":"number"}]},"rets":{"ret":{"text":"Random float between min and max.","name":"","type":"number"}}}},
{"function":{"name":"rad","parent":"math","type":"libraryfunc","description":"Converts an angle in degrees to it's equivalent in radians.","realm":"Shared and Menu","args":{"arg":{"text":"The angle measured in degrees.","name":"degrees","type":"number"}},"rets":{"ret":{"text":"radians","name":"","type":"number"}}},"example":{"description":"Convert various angles in degrees to their equivalent in radians.","code":"print( \"Degrees: 360, Radians: \" .. math.rad( 360 ) ) -- 2*pi\nprint( \"Degrees: 180, Radians: \" .. math.rad( 180 ) ) -- pi\nprint( \"Degrees: 90, Radians: \" .. math.rad( 90 ) ) -- pi/2\nprint( \"Degrees: 1, Radians: \" .. math.rad( 1 ) ) -- pi/180","output":"Degrees: 360, Radians: 6.2831853071796\n\n\nDegrees: 180, Radians: 3.1415926535898\n\n\nDegrees: 90, Radians: 1.5707963267949\n\n\nDegrees: 1, Radians: 0.017453292519943"}},
{"function":{"name":"pow","parent":"math","type":"libraryfunc","description":{"text":"Returns x raised to the power y.\nIn particular, math.pow(1.0, x) and math.pow(x, 0.0) always return 1.0, even when x is a zero or a . If both x and y are finite, x is negative, and y is not an integer then math.pow(x, y) is undefined.","page":"nan"},"realm":"Shared and Menu","args":{"arg":[{"text":"Base.","name":"x","type":"number"},{"text":"Exponent.","name":"y","type":"number"}]},"rets":{"ret":{"text":"y power of x","name":"","type":"number"}}}},
{"function":{"name":"NormalizeAngle","parent":"math","type":"libraryfunc","description":"Normalizes angle, so it returns value between -180 and 180.","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/math.lua","line":"192-L194"},"args":{"arg":{"text":"The angle to normalize, in degrees.","name":"angle","type":"number"}},"rets":{"ret":{"text":"The normalized angle, in the range of -180 to 180 degrees.","name":"","type":"number"}}}},
{"function":{"name":"modf","parent":"math","type":"libraryfunc","description":"Returns the integral and fractional component of the modulo operation.","realm":"Shared and Menu","args":{"arg":{"text":"The base value.","name":"base","type":"number"}},"rets":{"ret":[{"text":"The integral component.","name":"","type":"number"},{"text":"The fractional component.","name":"","type":"number"}]}},"example":{"description":"Finds the integral and fractional components of 5.6.","code":"print(math.modf(5.6))","output":"5   0.6"}},
{"function":{"name":"min","parent":"math","type":"libraryfunc","description":"Returns the smallest value of all arguments.","realm":"Shared and Menu","args":{"arg":{"text":"Numbers to get the smallest from.","name":"numbers","type":"vararg"}},"rets":{"ret":{"text":"The smallest number","name":"","type":"number"}}},"example":{"description":"Get the smallest number of a group.","code":"print( math.min( 1, 2, -3, 464, 654698468 ) )","output":"-3"}},
{"function":{"name":"max","parent":"math","type":"libraryfunc","description":"Returns the largest value of all arguments.","realm":"Shared and Menu","args":{"arg":{"text":"Numbers to get the largest from","name":"numbers","type":"vararg"}},"rets":{"ret":{"text":"The largest number","name":"","type":"number"}}},"example":[{"description":"Get the largest number of a group.","code":"print( math.max( 464, 654698468, 1, 3, 2 ) )","outputfixedwidth":"Fixed width","output":"654698468"},{"description":{"text":"Prevent a value from falling under a certain minimum. A one-sided version of .","page":"math.Clamp"},"code":"local minimumValue = 5\n\nfunction lowClamp(num)\n\n     return math.max( minimumValue, num )\n\nend\n\nprint( lowClamp( 0.1 ) )\nprint( lowClamp( -6 ) )\nprint( lowClamp( 5 ) )\nprint( lowClamp( 8 ) )\nprint( lowClamp( 24 ) )","outputfixedwidth":"Fixed width","output":"5\n5\n5\n8\n24"}]},
{"function":{"name":"mod","parent":"math","type":"libraryfunc","description":{"text":"Returns the modulus of the specified values. Same as .","deprecated":{"text":"This is removed in Lua versions later than what GMod is currently using. You should use the % operator or  instead.","page":"math.fmod"},"page":"math.fmod"},"realm":"Shared and Menu","args":{"arg":[{"text":"The base value","name":"base","type":"number"},{"text":"Modulator","name":"modulator","type":"number"}]},"rets":{"ret":{"text":"The calculated modulus","name":"","type":"number"}}}},
{"function":{"name":"log10","parent":"math","type":"libraryfunc","description":"Returns the base-10 logarithm of x. This is usually more accurate than math.log(x, 10).","realm":"Shared and Menu","args":{"arg":{"text":"The value to get the base from exponent from.","name":"x","type":"number"}}}},
{"function":{"name":"ldexp","parent":"math","type":"libraryfunc","description":"Takes a normalised number and returns the floating point representation.","realm":"Shared and Menu","args":{"arg":[{"text":"The value to get the normalized fraction and the exponent from.","name":"normalizedFraction","type":"number"},{"text":"The value to get the normalized fraction and the exponent from.","name":"exponent","type":"number"}]},"rets":{"ret":{"text":"result","name":"","type":"number"}}}},
{"function":{"name":"log","parent":"math","type":"libraryfunc","description":"With one argument, return the natural logarithm of x (to base e).\n\nWith two arguments, return the logarithm of x to the given base, calculated as log(x)/log(base).","realm":"Shared and Menu","args":{"arg":[{"text":"The value to get the base from exponent from.","name":"x","type":"number"},{"text":"The logarithmic base.","name":"base","type":"number","default":"e"}]},"rets":{"ret":{"text":"Logarithm of x to the given base","name":"","type":"number"}}}},
{"function":{"name":"IntToBin","parent":"math","type":"libraryfunc","description":"Converts an integer to a binary (base-2) string.","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/math.lua","line":"21-L33"},"args":{"arg":{"text":"Number to be converted.","name":"int","type":"number"}},"rets":{"ret":{"text":"Binary number string. The length of this will always be a multiple of 3.","name":"","type":"string"}}},"example":{"description":"Prints the binary representation of 4","code":"print(math.IntToBin(4))","output":"100"}},
{"function":{"name":"frexp","parent":"math","type":"libraryfunc","description":"<-- Lua reference description: Returns m and e such that x = m2e, e is an integer and the absolute value of m is in the range ((0.5, 1) (or zero when x is zero).  -->\nUsed to split the number value into a normalized fraction and an exponent. Two values are returned: the first is a multiplier in the range 1/2 (inclusive) to 1 (exclusive) and the second is an integer exponent.\n\nThe result is such that x = m*2^e.","realm":"Shared and Menu","args":{"arg":{"text":"The value to get the normalized fraction and the exponent from.","name":"x","type":"number"}},"rets":{"ret":[{"text":"m, multiplier - between 0.5 and 1","name":"","type":"number"},{"text":"e, exponent - always an integer","name":"","type":"number"}]}}},
{"function":{"name":"fmod","parent":"math","type":"libraryfunc","description":"Returns the modulus of the specified values.\n\nWhile this is similar to the % operator, **it will return a negative value if the first argument is negative**, whereas the % operator will return a `positive` value **even if the first operand is negative**.","realm":"Shared and Menu","args":{"arg":[{"text":"The base value.","name":"base","type":"number"},{"text":"The modulator.","name":"modulator","type":"number"}]},"rets":{"ret":{"text":"The calculated modulus.","name":"","type":"number"}}}},
{"function":{"name":"floor","parent":"math","type":"libraryfunc","description":"Floors or rounds a number down.","realm":"Shared and Menu","args":{"arg":{"text":"The number to be rounded down.","name":"number","type":"number"}},"rets":{"ret":{"text":"floored numbers","name":"","type":"number"}}},"example":[{"description":"Round pi.","code":"print(math.floor(math.pi))","output":"3"},{"description":"Demonstrates the difference between math.Round and math.floor.","code":"local value = 3.6\n\nprint( math.Round( value ), math.floor( value ) )","output":"4 3"}]},
{"function":{"name":"exp","parent":"math","type":"libraryfunc","description":"Returns the x power of the Euler constant ''''.","realm":"Shared and Menu","args":{"arg":{"text":"The exponent for the function.","name":"exponent","type":"number"}},"rets":{"ret":{"text":"e to the specified power","name":"","type":"number"}}}},
{"function":{"name":"EaseInOut","parent":"math","type":"libraryfunc","description":"Calculates the progress of a value fraction, taking in to account given easing fractions","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/math.lua","line":"60-L91"},"args":{"arg":[{"text":"Fraction of the progress to ease","name":"progress","type":"number"},{"text":"Fraction of how much easing to begin with","name":"easeIn","type":"number"},{"text":"Fraction of how much easing to end with","name":"easeOut","type":"number"}]},"rets":{"ret":{"text":"Eased Value","name":"","type":"number"}}},"example":{"description":"Calculates the easing of three situations","code":"print(math.EaseInOut(0.1, 0.1, 0.1))\nprint(math.EaseInOut(0.2, 0.1, 0.1))\nprint(math.EaseInOut(0.3, 0.1, 0.1))","output":"0.055555...\n0.166666...\n0.277777..."}},
{"function":{"name":"Distance","parent":"math","type":"libraryfunc","description":"Returns the difference between two points in 2D space.","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/math.lua","line":"2-L10"},"args":{"arg":[{"text":"X position of first point","name":"x1","type":"number"},{"text":"Y position of first point","name":"y1","type":"number"},{"text":"X position of second point","name":"x2","type":"number"},{"text":"Y position of second point","name":"y2","type":"number"}]},"rets":{"ret":{"text":"Distance between the two points","name":"","type":"number"}}},"example":{"description":"Demonstrates the use of this function.","code":"print( math.Distance( 1, 2, 5, 6 ) ) -- distance bet","output":"5.6568542494924"}},
{"function":{"name":"Dist","parent":"math","type":"libraryfunc","description":{"text":"Returns the difference between two points in 2D space. Alias of .","deprecated":{"text":"You should use  instead","page":"math.Distance"},"page":"math.Distance"},"realm":"Shared and Menu","file":{"text":"lua/includes/extensions/math.lua","line":"11"},"args":{"arg":[{"text":"X position of first point","name":"x1","type":"number"},{"text":"Y position of first point","name":"y1","type":"number"},{"text":"X position of second point","name":"x2","type":"number"},{"text":"Y position of second point","name":"y2","type":"number"}]},"rets":{"ret":{"text":"Distance between the two points.","name":"","type":"number"}}},"example":{"description":"Demonstrates the use of this function.","code":"print( math.Distance( 1, 2, 5, 6 ) ) -- distance bet","output":"5.6568542494924"}},
{"function":{"name":"deg","parent":"math","type":"libraryfunc","description":"Converts radians to degrees.","realm":"Shared and Menu","args":{"arg":{"text":"Value to be converted to degrees.","name":"radians","type":"number"}},"rets":{"ret":{"text":"degrees","name":"","type":"number"}}}},
{"function":{"name":"cosh","parent":"math","type":"libraryfunc","description":"Returns the  of the given angle.","realm":"Shared and Menu","args":{"arg":{"text":"Angle in radians.","name":"number","type":"number"}},"rets":{"ret":{"text":"The hyperbolic cosine of the given angle.","name":"","type":"number"}}}},
{"function":{"name":"cos","parent":"math","type":"libraryfunc","description":"Returns the  of given angle.","realm":"Shared and Menu","args":{"arg":{"text":"Angle in radians","name":"number","type":"number"}},"rets":{"ret":{"text":"Cosine of given angle","name":"","type":"number"}}},"example":{"description":"Prints the cosine of 3.14159265 (Pi)","code":"print( math.cos( 3.14159265 ) )","output":"-1"}},
{"function":{"name":"Clamp","parent":"math","type":"libraryfunc","description":"Clamps a number between a minimum and maximum value","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/math.lua","line":"39-L47"},"args":{"arg":[{"text":"The number to clamp.","name":"input","type":"number"},{"text":"The minimum value, this function will never return a number less than this.","name":"min","type":"number"},{"text":"The maximum value, this function will never return a number greater than this.","name":"max","type":"number"}]},"rets":{"ret":{"text":"The clamped value.","name":"","type":"number"}}},"example":[{"description":"Demonstrates what this function does.","code":"print( math.Clamp( 10, 0, 5 ) ) -- 10 is greater than 5 so returns 5\nprint( math.Clamp( 3, 0, 5 ) ) -- 3 is greater than 0 and less than 5, so returns 3\nprint( math.Clamp( -1, 0, 5 ) ) -- -1 is less than 0, so returns 0","output":"5\n3\n0"},{"description":"Heals player \"ply\" by 10 health, but won't let their health go above 100.","code":"ply:SetHealth( math.Clamp( ply:Health() + 10, 0, 100 ) )"}]},
{"function":{"name":"ceil","parent":"math","type":"libraryfunc","description":"Ceils or rounds a number up.","realm":"Shared and Menu","args":{"arg":{"text":"The number to be rounded up.","name":"number","type":"number"}},"rets":{"ret":{"text":"ceiled numbers","name":"","type":"number"}}},"example":{"description":"Round pi.","code":"print(math.ceil(math.pi))","output":"4"}},
{"function":{"name":"calcBSplineN","parent":"math","type":"libraryfunc","description":{"text":"Basic code for Bezier-Spline algorithm, helper function for .","internal":{"text":"Use  instead.","page":"math.BSplinePoint"},"page":"math.BSplinePoint"},"realm":"Shared and Menu","file":{"text":"lua/includes/extensions/math.lua","line":"96-L136"},"args":{"arg":[{"name":"i","type":"number"},{"name":"k","type":"number","bug":{"text":"Sending in a value < 1 will result in an infinite loop.","pull":"1477"}},{"name":"t","type":"number"},{"name":"tinc","type":"number"}]},"rets":{"ret":{"name":"","type":"number"}}}},
{"function":{"name":"BSplinePoint","parent":"math","type":"libraryfunc","description":"Basic code for  algorithm.","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/math.lua","line":"138-L154"},"args":{"arg":[{"text":"From 0 to 1, where alongside the spline the point will be.","name":"tDiff","type":"number"},{"text":"A table of s. The amount cannot be less than 4.","name":"tPoints","type":"table","page":"Vector"},{"text":"Just leave this at 1.","name":"tMax","type":"number"}]},"rets":{"ret":{"text":"Point on Bezier curve, related to tDiff.","name":"","type":"Vector"}}},"example":{"description":"Example usage of the function, makes a black box moving along the beizer curve made out of 4 points","code":"local points = { Vector( 100, 100, 0 ), Vector( 200, 200, 0 ), Vector( 300, 100, 0 ), Vector( 400, 200, 0 ) }\nhook.Add( \"HUDPaint\", \"BSplinePointExample\", function()\n\t-- Draw the points\n\tfor id, p in pairs( points ) do\n\t\tdraw.RoundedBox( 0, p.x - 2, p.y - 2, 4, 4, color_white )\n\tend\n\n\t-- Draw the spline\n\tlocal pos = math.BSplinePoint( ( math.cos( CurTime() ) + 1 ) / 2, points, 1 )\n\tdraw.RoundedBox( 0, pos.x - 2, pos.y - 2, 4, 4, Color( 0, 0, 0 ) )\nend )"}},
{"function":{"name":"BinToInt","parent":"math","type":"libraryfunc","description":"Converts a binary string into a number.","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/math.lua","line":"13-L19"},"args":{"arg":{"text":"Binary string to convert","name":"string","type":"string"}},"rets":{"ret":{"text":"Base 10 number.","name":"","type":"number"}}},"example":{"description":"Will print the string \"101010101\" as a number in console.","code":"print( math.BinToInt( \"101010101\" ) )","output":"341"}},
{"function":{"name":"atan2","parent":"math","type":"libraryfunc","description":{"text":"functions like (y / x), except it also takes into account the quadrant of the angle and so doesn't have a limited range of output.","page":"math.atan","note":"The Y argument comes first!"},"realm":"Shared and Menu","args":{"arg":[{"text":"Y coordinate.","name":"y","type":"number"},{"text":"X coordinate.","name":"x","type":"number"}]},"rets":{"ret":{"text":"The angle of the line from (0, 0) to (x, y) in radians, in the range -pi to pi.","name":"","type":"number"}}},"example":{"description":"atan( 1 ) and atan2( 1, 1 ) are both math.pi / 4\n\natan2( -1, -1 ) equals to ( (-3) * math.pi ) / 4","code":"print( atan( 1 ) )\nprint( ata2( 1, 1 ) )\nprint( atan2( -1, -1 ) )","output":"0.7853981633974483\n\n0.7853981633974483\n\n-2.356194490192345"}},
{"function":{"name":"atan","parent":"math","type":"libraryfunc","description":"Returns the  of the given number.","realm":"Shared and Menu","args":{"arg":{"text":"Tangent value.","name":"normal","type":"number"}},"rets":{"ret":{"text":"An angle in radians, in the range -pi/2 to pi/2, which has the given tangent.","name":"","type":"number"}}}},
{"function":{"name":"asin","parent":"math","type":"libraryfunc","description":"Returns the  of the given number.","realm":"Shared and Menu","args":{"arg":{"text":"Sine value in the range of -1 to 1.","name":"normal","type":"number"}},"rets":{"ret":{"text":"An angle in radians, in the range -pi/2 to pi/2, which has the given sine value.\n\n if the argument is out of range.","name":"","type":"number","page":"nan"}}}},
{"function":{"name":"ApproachAngle","parent":"math","type":"libraryfunc","description":{"text":"Increments an angle towards another by specified rate.","note":{"text":"This function is for numbers representing angles (0-360), NOT  objects!","page":"Angle"}},"realm":"Shared and Menu","file":{"text":"lua/includes/extensions/math.lua","line":"209-L215"},"args":{"arg":[{"text":"The current angle to increase","name":"currentAngle","type":"number"},{"text":"The angle to increase towards","name":"targetAngle","type":"number"},{"text":"The amount to approach the target angle by","name":"rate","type":"number"}]},"rets":{"ret":{"text":"Modified angle","name":"","type":"number"}}}},
{"function":{"name":"Approach","parent":"math","type":"libraryfunc","description":"Gradually approaches the target value by the specified amount.","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/math.lua","line":"174-L190"},"args":{"arg":[{"text":"The value we're currently at.","name":"current","type":"number"},{"text":"The target value. This function will never overshoot this value.","name":"target","type":"number"},{"text":"The amount that the current value is allowed to change by to approach the target. (It makes no difference whether this is positive or negative.)","name":"change","type":"number"}]},"rets":{"ret":{"text":"New current value, closer to the target than it was previously.","name":"","type":"number"}}},"example":[{"description":"Demonstrates what this function does","code":"print( math.Approach( 0, 5, 1 ) ) -- attempts to increment 0 by 1, 0 + 1 is less than 5 so returns 1\nprint( math.Approach( 4, 5, 3 ) ) -- attempts to increment 4 by 3, 4 + 3 = 7 is greater than 5 so returns 5","outputfixedwidth":"Fixed width","output":"1\n5"},{"description":"Common usage example of this function with a control variable.","code":"local MyNumber = 0\nlocal Target = 0\nlocal LastThink = 0\nlocal ChangeRate = 1\n\nhook.Add( \"Think\", \"math.Approach Example\", function()\n\tlocal now = CurTime()\n\tlocal timepassed = now - LastThink\n\tLastThink = now\n\n\tMyNumber = math.Approach( MyNumber, Target, ChangeRate * timepassed )\n\n\t-- Normally, you would use MyNumber in code that appears here.\nend )\n\n-- The following functions are for example only:\nfunction GetMyNumber()\n\treturn MyNumber\nend\n\nfunction SetMyNumberTarget( newtarget )\n\tTarget = newtarget\nend\n\nfunction SetMyNumberChangeRate( newrate )\n\tChangeRate = newrate\nend"}]},
{"function":{"name":"AngleDifference","parent":"math","type":"libraryfunc","description":"Calculates the difference between two angles.","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/math.lua","line":"197-L207"},"args":{"arg":[{"text":"The first angle.","name":"a","type":"number"},{"text":"The second angle.","name":"b","type":"number"}]},"rets":{"ret":{"text":"The difference between the angles between -180 and 180","name":"","type":"number"}}},"example":{"description":"Find the angle difference between various angles","code":"print(\"Angle difference between 159 and 240 is \" .. math.AngleDifference(159, 240))\nprint(\"Angle difference between 240 and 159 is \" .. math.AngleDifference(240, 159))\nprint(\"Angle difference between 58 and 145 is \" .. math.AngleDifference(58, 145))","output":{"text":"Angle difference between 159 and 240 is -81\nAngle difference between 240 and 159 is 81\nAngle difference between 58 and 145 is -87","br":["",""]}}},
{"function":{"name":"acos","parent":"math","type":"libraryfunc","description":"Returns the  of the given number.","realm":"Shared and Menu","args":{"arg":{"text":"Cosine value in range of -1 to 1.","name":"cos","type":"number"}},"rets":{"ret":{"text":"An angle in radians, between 0 and pi, which has the given cos value.\n\n if the argument is out of range.","name":"","type":"number","page":"nan"}}}},
{"function":{"name":"abs","parent":"math","type":"libraryfunc","description":"Calculates the absolute value of a number (effectively removes any negative sign).","realm":"Shared and Menu","args":{"arg":{"text":"The number to get the absolute value of.","name":"x","type":"number"}},"rets":{"ret":{"text":"absolute_value","name":"","type":"number"}}},"example":{"description":"Demonstrates what this function does.","code":"print( math.abs( 15 ) )\nprint( math.abs( -15 ) )","output":"15\n\n15"}},
{"function":{"name":"Set","parent":"list","type":"libraryfunc","description":"Sets a specific position in the named list to a value.","realm":"Shared and Menu","args":{"arg":[{"text":"The list identifier","name":"identifier","type":"string"},{"text":"The key in the list to set","name":"key","type":"any"},{"text":"The item to set to the list as key","name":"item","type":"any"}]}},"example":[{"description":"Adds an NPC to the spawnmenu NPC list with the name \"Fisherman\", classname of \"npc_fisherman\" and the default weapon of \"weapon_oldmanharpoon\"","code":"-- Lost Coast\nlist.Set(\"NPC\", \"npc_fisherman\", {\n\tName = \"Fisherman\",\n\tClass = \"npc_fisherman\",\n\tWeapons = { \"weapon_oldmanharpoon\" },\n\tCategory = Category\n})"},{"description":"Adds a new \"Desktop Widget\" to the Context Menu (C Menu). (This is how Player Model selection is added)","code":"list.Set( \"DesktopWindows\", \"My Custom Context Menu Icon\", {\n\ttitle = \"Context Menu Icon\",\n\ticon = \"icon64/icon.png\",\n\tinit = function( icon, window )\n\t\t--Your code here\n\tend\n} )"}]},
{"function":{"name":"Parse","parent":"markup","type":"libraryfunc","description":{"text":"Parses markup into a . Currently, this only supports fonts and colors as demonstrated in the example.","page":"MarkupObject"},"realm":"Client","args":{"arg":[{"text":"The markup to be parsed.","name":"markup","type":"string"},{"text":"The max width of the output","name":"maxwidth","type":"number"}]},"rets":{"ret":{"text":"The parsed markup object ready to be drawn.","name":"","type":"MarkupObject"}}},"example":{"description":"Renders a markup string on the HUD.","code":{"text":"local parsed = markup.Parse(\"\\n","font":{"text":"changed font","default":"Default"},"colour":"changed colour","output":{"image":{"src":"Screenshot-2012-08-30_13.13.59.png"}}}}},
{"function":{"name":"HasEntry","parent":"list","type":"libraryfunc","description":{"text":"Returns true if the list contains the given key.\n\nFor a function that looks for values and not keys see .","page":"list.Contains"},"realm":"Shared and Menu","args":{"arg":[{"text":"List to search through","name":"list","type":"string"},{"text":"The key to test","name":"key","type":"any"}]},"rets":{"ret":{"text":"Returns true if the list contains the key, false otherwise","name":"","type":"boolean"}}}},
{"function":{"name":"GetForEdit","parent":"list","type":"libraryfunc","description":"Returns the actual table of the list stored at identifier. Modifying this will affect the stored list","realm":"Shared and Menu","args":{"arg":{"text":"The list identifier","name":"identifier","type":"string"}},"rets":{"ret":{"text":"The actual list","name":"","type":"table"}}}},
{"function":{"name":"Get","parent":"list","type":"libraryfunc","description":"Returns a copy of the list stored at identifier","realm":"Shared and Menu","args":{"arg":{"text":"The list identifier","name":"identifier","type":"string"}},"rets":{"ret":{"text":"The copy of the list","name":"","type":"table"}}},"example":{"description":"Get every available NPC from the client:","code":"PrintTable( list.Get( \"NPC\" ) )"}},
{"function":{"name":"Contains","parent":"list","type":"libraryfunc","description":{"text":"Returns true if the list contains the value. (as a value - not a key)\n\nFor a function that looks for a key and not a value see .","page":"list.HasEntry"},"realm":"Shared and Menu","args":{"arg":[{"text":"List to search through","name":"list","type":"string"},{"text":"The value to test","name":"value","type":"any"}]},"rets":{"ret":{"text":"Returns true if the list contains the value, false otherwise","name":"","type":"boolean"}}}},
{"function":{"name":"Add","parent":"list","type":"libraryfunc","description":"Adds an item to a named list","realm":"Shared and Menu","args":{"arg":[{"text":"The list identifier","name":"identifier","type":"string"},{"text":"The item to add to the list","name":"item","type":"any"}]}},"example":{"description":"From weapons/gmod_tool/stools/paint.lua","code":"list.Add( \"PaintMaterials\", \"Eye\" )\nlist.Add( \"PaintMaterials\", \"Smile\" )\nlist.Add( \"PaintMaterials\", \"Light\" )"}},
{"function":{"name":"Add","parent":"language","type":"libraryfunc","description":"Adds a language item. Language placeholders preceded with \"#\" are replaced with full text in Garry's Mod once registered with this function.","realm":"Client and Menu","args":{"arg":[{"text":"The key for this phrase, without the preceding \"#\".","name":"placeholder","type":"string"},{"text":"The phrase that should be displayed whenever this key is used.","name":"fulltext","type":"string"}]}},"example":{"description":"Small excerpt from a STOOL named cooltool. It has been registered as cooltool.","code":"language.Add(\"Tool_cooltool_name\", \"The really cool tool\")\nlanguage.Add(\"Tool_cooltool_desc\", \"Do some random cool stuff.\")\nlanguage.Add(\"Tool_cooltool_0\", \"Left-click: Cool Stuff. Right-click: Nothing.\")\nlanguage.Add(\"Undone_cooltool\", \"Cool stuff has been undone.\")","output":"When the player presses undo, \"Cool stuff has been undone\" will be shown. The cooltool's name will be \"The really cool tool\". Below that, where the description is shown, \"Do some random cool stuff.\" will be shown. Below that, where the instructions or additional notes for the tool are shown, it will display \"Left-click: Cool Stuff. Right-click: Nothing.\"."}},
{"function":{"name":"GetPhrase","parent":"language","type":"libraryfunc","description":"Retrieves the translated version of inputted string. Useful for concentrating multiple translated strings.","realm":"Client and Menu","args":{"arg":{"text":"The phrase to translate","name":"phrase","type":"string"}},"rets":{"ret":{"text":"The translated phrase, or the input string if no translation was found","name":"","type":"string"}}},"example":{"description":"An example on usage of this function.","code":"print( \"Our phrase is: \" .. language.GetPhrase( \"limit_physgun\" ) )","output":"Our phrase is: Limited Physgun"}},
{"function":{"name":"GetSize","parent":"killicon","type":"libraryfunc","description":"Returns the size of a kill icon.","realm":"Client","args":{"arg":{"text":"Classname of the kill icon","name":"name","type":"string"}},"rets":{"ret":[{"text":"Width of the kill icon","name":"","type":"number"},{"text":"Height of the kill icon","name":"","type":"number"}]}}},
{"function":{"name":"Exists","parent":"killicon","type":"libraryfunc","description":"Checks if kill icon exists for given class.","realm":"Client","args":{"arg":{"text":"The class to test","name":"class","type":"string"}},"rets":{"ret":{"text":"Returns true if kill icon exists","name":"","type":"boolean"}}}},
{"function":{"name":"Draw","parent":"killicon","type":"libraryfunc","description":"Draws a kill icon.","realm":"Client","args":{"arg":[{"text":"X coordinate of the icon","name":"x","type":"number"},{"text":"Y coordinate of the icon","name":"y","type":"number"},{"text":"Classname of the kill icon","name":"name","type":"string"},{"text":"Alpha/transparency value ( 0 - 255 ) of the icon","name":"alpha","type":"number"}]}}},
{"function":{"name":"AddAlias","parent":"killicon","type":"libraryfunc","description":"Creates kill icon from existing one.","realm":"Client","args":{"arg":[{"text":"New class of the kill icon","name":"new_class","type":"string"},{"text":"Already existing kill icon class","name":"existing_class","type":"string"}]}},"example":{"description":"Copies prop_physics kill icon to prop_ragdoll.","code":"killicon.AddAlias( \"prop_ragdoll\", \"prop_physics\" )"}},
{"function":{"name":"AddFont","parent":"killicon","type":"libraryfunc","description":"Adds kill icon for given weapon/entity class using special font.","realm":"Client","args":{"arg":[{"text":"Weapon or entity class","name":"class","type":"string"},{"text":"Font to be used","name":"font","type":"string"},{"text":"The symbol to be used","name":"symbol","type":"string"},{"text":"Color of the killicon","name":"color","type":"table"}]}},"example":{"description":"Example of using the function. Adds pistol kill icon.","code":"killicon.AddFont( \"weapon_pistol\", \"HL2MPTypeDeath\", \"-\", Color( 255, 80, 0, 255 ) )"}},
{"function":{"name":"AddFont","parent":"killicon","type":"libraryfunc","description":"Adds kill icon for given weapon/entity class using special font.","realm":"Client","args":{"arg":[{"text":"Weapon or entity class","name":"class","type":"string"},{"text":"Font to be used","name":"font","type":"string"},{"text":"The symbol to be used","name":"symbol","type":"string"},{"text":"Color of the killicon","name":"color","type":"table"}]}},"example":{"description":"Example of using the function. Adds pistol kill icon.","code":"killicon.AddFont( \"weapon_pistol\", \"HL2MPTypeDeath\", \"-\", Color( 255, 80, 0, 255 ) )"}},
{"function":{"name":"status","parent":"jit","type":"libraryfunc","description":"Returns the status of the JIT compiler and the current optimizations enabled.","realm":"Shared and Menu","rets":{"ret":[{"text":"Is JIT enabled","name":"","type":"boolean"},{"text":"Strings for CPU-specific features and enabled optimizations","name":"","type":"any"}]}}},
{"function":{"name":"on","parent":"jit","type":"libraryfunc","description":"Enables LuaJIT Lua compilation.","realm":"Shared and Menu"}},
{"function":{"name":"off","parent":"jit","type":"libraryfunc","description":"Disables LuaJIT Lua compilation.","realm":"Shared and Menu"}},
{"function":{"name":"flush","parent":"jit","type":"libraryfunc","description":"Flushes the whole cache of compiled code.","realm":"Shared and Menu"}},
{"function":{"name":"WasMouseReleased","parent":"input","type":"libraryfunc","description":"Returns whether a mouse key was released in the same frame this function was called.\n\nThis function only works in Move hooks, and will detect mouse events even in main menu or when a typing in a text field.","realm":"Client and Menu","args":{"arg":{"text":"The key to test, see","name":"key","type":"number","page":"Enums/MOUSE"}},"rets":{"ret":{"text":"True if the mouse key was released the same frame that this function was called, false otherwise.","name":"","type":"boolean"}}}},
{"function":{"name":"attach","parent":"jit","type":"libraryfunc","description":{"text":"You can attach callbacks to a number of compiler events with jit.attach. The callback can be called:\n\n* when a function has been compiled to bytecode (\"bc\");\n* when trace recording starts or stops (\"trace\");\n* as a trace is being recorded (\"record\");\n* or when a trace exits through a side exit (\"texit\").\n\nSet a callback with jit.attach(callback, \"event\") and clear the same callback with jit.attach(callback)","warning":"This function isn't officially documented on LuJIT wiki, use it at your own risk."},"realm":"Shared and Menu","args":{"arg":[{"text":"The callback function.\n\nThe arguments passed to the callback depend on the event being reported:\n\n* \"bc\":\n func - The function that's just been recorded\n\n\n\n* \"trace\":\n what - description of the trace event: \"flush\", \"start\", \"stop\", \"abort\". Available for all events.\n\n\n tr - The trace number. Not available for flush.\n\n\n func - The function being traced. Available for start and abort.\n\n\n pc - The program counter - the bytecode number of the function being recorded (if this a Lua function). Available for start and abort.\n\n\n otr - start: the parent trace number if this is a side trace, abort: abort code\n\n\n oex - start: the exit number for the parent trace, abort: abort reason (string)\n\n\n\n* \"record\":\n tr - The trace number. Not available for flush.\n\n\n func - The function being traced. Available for start and abort.\n\n\n pc - The program counter - the bytecode number of the function being recorded (if this a Lua function). Available for start and abort.\n\n\n depth  - The depth of the inlining of the current bytecode.\n\n\n\n* \"texit\":\n tr - The trace number. Not available for flush.\n\n\n ex - The exit number\n\n\n ngpr - The number of general-purpose and floating point registers that are active at the exit.\n\n\n nfpr - The number of general-purpose and floating point registers that are active at the exit.","name":"callback","type":"function","page":["function","string","number","function","number","number","string","number","function","number","number","number","number","number","number"]},{"text":"The event to hook into.","name":"event","type":"string"}]}}},
{"function":{"name":"WasMousePressed","parent":"input","type":"libraryfunc","description":{"text":"Returns whether a mouse key was initially pressed in the same frame this function was called.\n\n\nIf  returns true, this function will return false.\n\nThis function only works in Move hooks, and will detect mouse events even in main menu or when a typing in a text field.","page":"input.WasMouseDoublePressed"},"realm":"Client and Menu","args":{"arg":{"text":"The key, see","name":"key","type":"number","page":"Enums/MOUSE"}},"rets":{"ret":{"text":"True if the mouse key was initially pressed the same frame that this function was called, false otherwise.","name":"","type":"boolean"}}},"example":{"description":"Example usage","code":"hook.Add( \"CreateMove\", \"fafawefafwf\", function()\n\tif ( input.WasMousePressed( MOUSE_LEFT ) ) then print( \"Left mouse button was pressed\" ) end\nend )"}},
{"function":{"name":"WasMouseDoublePressed","parent":"input","type":"libraryfunc","description":{"text":"Returns whether a mouse key was double pressed in the same frame this function was called.\n\n\nIf this function returns true,  will return false.\n\nThis function only works in Move hooks, and will detect mouse events even in main menu or when a typing in a text field.","page":"input.WasMousePressed"},"realm":"Client and Menu","args":{"arg":{"text":"The mouse button to test, see","name":"button","type":"number","page":"Enums/MOUSE"}},"rets":{"ret":{"text":"Whether the mouse key was double pressed or not.","name":"","type":"boolean"}}}},
{"function":{"name":"WasKeyTyped","parent":"input","type":"libraryfunc","description":"Returns whether the key is being held down or not.\n\nThis function only works in Move hooks, and will detect key events even in main menu or when a typing in a text field.","realm":"Client and Menu","args":{"arg":{"text":"The key to test, see","name":"key","type":"number","page":"Enums/KEY"}},"rets":{"ret":{"text":"Whether the key is being held down or not.","name":"","type":"boolean"}}}},
{"function":{"name":"WasKeyReleased","parent":"input","type":"libraryfunc","description":"Returns whether a key was released in the same frame this function was called.\n\nThis function only works in Move hooks, and will detect key releases even in main menu or when a typing in a text field.","realm":"Client and Menu","args":{"arg":{"text":"The key, see .","name":"key","type":"number","page":"Enums/KEY"}},"rets":{"ret":{"text":"True if the key was released the same frame that this function was called, false otherwise.","name":"","type":"boolean"}}}},
{"function":{"name":"WasKeyPressed","parent":"input","type":"libraryfunc","description":"Returns whether a key was initially pressed in the same frame this function was called.\n\nThis function only works in Move hooks, and will detect key presses even in main menu or when a typing in a text field.","realm":"Client and Menu","args":{"arg":{"text":"The key, see .","name":"key","type":"number","page":"Enums/KEY"}},"rets":{"ret":{"text":"True if the key was initially pressed the same frame that this function was called, false otherwise.","name":"","type":"boolean"}}}},
{"function":{"name":"StartKeyTrapping","parent":"input","type":"libraryfunc","description":{"text":"Begins waiting for a key to be pressed so we can save it for . Used by the .","page":["input.CheckKeyTrapping","DBinder"]},"realm":"Client and Menu"}},
{"function":{"name":"SetCursorPos","parent":"input","type":"libraryfunc","description":"Sets the cursor's position on the screen, relative to the topleft corner of the window","realm":"Client and Menu","args":{"arg":[{"text":"X coordinate for mouse position","name":"mouseX","type":"number"},{"text":"Y coordinate for mouse position","name":"mouseY","type":"number"}]}},"example":{"description":"Makes the user's cursor circle their screen","code":"hook.Add( 'HUDPaint', 'CircleScreen', function()\n\tinput.SetCursorPos( ScrW() / 2 + math.sin(CurTime()) * ScrW() / 2, ScrH() / 2 + math.cos(CurTime()) * ScrH() / 2 )\nend)"}},
{"function":{"name":"SelectWeapon","parent":"input","type":"libraryfunc","description":"Switches to the provided weapon on the next CUserCmd generation/CreateMove call. Direct binding to [CInput::MakeWeaponSelection](https://github.com/LestaD/SourceEngine2007/blob/43a5c90a5ada1e69ca044595383be67f40b33c61/se2007/game/client/in_main.cpp#L929-L932).","realm":"Client","args":{"arg":{"text":"The weapon entity to switch to.","name":"weapon","type":"Weapon"}}}},
{"function":{"name":"TangentS","parent":"mesh","type":"libraryfunc","description":"Sets the s tangent to be used.\n\nThis function actually does nothing.","realm":"Client","args":{"arg":{"text":"The s tangent.","name":"sTanger","type":"Vector"}}}},
{"function":{"name":"LookupKeyBinding","parent":"input","type":"libraryfunc","description":"Returns the bind string that the given key is bound to.","realm":"Client and Menu","args":{"arg":{"text":"Key from","name":"key","type":"number","page":"Enums/BUTTON_CODE"}},"rets":{"ret":{"text":"The bind string of the given key.","name":"","type":"string"}}}},
{"function":{"name":"LookupBinding","parent":"input","type":"libraryfunc","description":"Gets the match uppercase key for the specified binding.","realm":"Client and Menu","args":{"arg":[{"text":"The binding name","name":"binding","type":"string"},{"text":"True if the binding should match exactly","name":"exact","type":"boolean","default":"false"}]},"rets":{"ret":{"text":"The first key found with that binding or no value if no key with given binding was found.\n\nSee also .","name":"","type":"string","page":"input.GetKeyCode"}}},"example":{"description":"Demonstrates usage of this function and its arguments.","code":"print( input.LookupBinding( \"+use\" ) )\nprint( input.LookupBinding( \"use\" ) )\nprint( input.LookupBinding( \"+use\", true ) )\nprint( input.LookupBinding( \"use\", true ) )","outputfixedwidth":"Fixed width","output":"e\ne\ne\nno value"}},
{"function":{"name":"IsShiftDown","parent":"input","type":"libraryfunc","description":"Gets whether a shift key is being pressed","realm":"Client and Menu","rets":{"ret":{"text":"isDown","name":"","type":"boolean"}}}},
{"function":{"name":"IsKeyTrapping","parent":"input","type":"libraryfunc","description":"Returns whether key trapping is activate and the next key press will be captured.","realm":"Client and Menu","rets":{"ret":{"text":"Whether key trapping active or not","name":"","type":"boolean"}}}},
{"function":{"name":"IsMouseDown","parent":"input","type":"libraryfunc","description":"Gets whether a mouse button is down","realm":"Client and Menu","args":{"arg":{"text":"The key, see","name":"mouseKey","type":"number","page":"Enums/MOUSE"}},"rets":{"ret":{"text":"Is the key down","name":"","type":"boolean"}}}},
{"function":{"name":"IsKeyDown","parent":"input","type":"libraryfunc","description":"Gets whether a key is down","realm":"Client and Menu","args":{"arg":{"text":"The key, see .","name":"key","type":"number","page":"Enums/KEY"}},"rets":{"ret":{"text":"Is the key down","name":"","type":"boolean"}}},"example":{"description":"Show cursor if you press alt.","code":"hook.Add(\"Think\", \"BM_Clients_Key\", function()\n   gui.EnableScreenClicker( input.IsKeyDown( KEY_LALT ) )\nend)\n// Note this may prevent the cursor from naturally appearing without alt"}},
{"function":{"name":"IsControlDown","parent":"input","type":"libraryfunc","description":"Returns whether a control key is being pressed","realm":"Client and Menu","rets":{"ret":{"text":"Is Ctrl key down or not","name":"","type":"boolean"}}}},
{"function":{"name":"IsButtonDown","parent":"input","type":"libraryfunc","description":{"text":"Gets whether the specified button code is down.\n\nUnlike  this can also detect joystick presses from","page":["input.IsKeyDown","Enums/JOYSTICK"]},"realm":"Client and Menu","args":{"arg":{"text":"The button, valid values are in the range of .","name":"button","type":"number","page":"Enums/BUTTON_CODE"}},"rets":{"ret":{"text":"Is the button down","name":"","type":"boolean"}}}},
{"function":{"name":"GetKeyName","parent":"input","type":"libraryfunc","description":{"text":"Gets the button name from a numeric button code. The name needs to be translated with  before being displayed.","page":"language.GetPhrase","note":{"text":"Despite the name of the function, this also works for the full range of keys in .","page":"Enums/BUTTON_CODE"}},"realm":"Client and Menu","args":{"arg":{"text":"The button, see .","name":"button","type":"number","page":"Enums/BUTTON_CODE"}},"rets":{"ret":{"text":"Button name.","name":"","type":"string"}}}},
{"function":{"name":"GetKeyCode","parent":"input","type":"libraryfunc","description":{"text":"Gets the button code from a button name. This is opposite of .","page":"input.GetKeyName"},"realm":"Client and Menu","args":{"arg":{"text":"The internal button name, such as \"e\" or \"shift\".","name":"button","type":"string"}},"rets":{"ret":{"text":"The button code, see .","name":"","type":"number","page":"Enums/BUTTON_CODE"}}}},
{"function":{"name":"GetCursorPos","parent":"input","type":"libraryfunc","description":"Returns the cursor's position on the screen","realm":"Client and Menu","rets":{"ret":[{"text":"The cursors position on the X axis","name":"","type":"number"},{"text":"The cursors position on the Y axis","name":"","type":"number"}]}}},
{"function":{"name":"CheckKeyTrapping","parent":"input","type":"libraryfunc","description":"Returns the last key captured by key trapping.","realm":"Client and Menu","rets":{"ret":{"text":"The key, see","name":"","type":"number","page":"Enums/KEY"}}}},
{"function":{"name":"Post","parent":"http","type":"libraryfunc","description":{"text":"Sends an asynchronous POST request to a HTTP server.\n\nHTTP requests returning a status code >= 400 are still considered a success and will call the onSuccess callback.\n\nThe onFailure callback is usually only called on DNS or TCP errors (e.g. the website is unavailable or the domain does not exist)","note":{"text":"HTTP-requests on private networks don't work. To enable HTTP-requests on private networks use  `-allowlocalhttp`","page":"Command Line Parameters"}},"realm":"Shared and Menu","file":{"text":"lua/includes/modules/http.lua","line":"46-L73"},"args":{"arg":[{"text":"The url to of the website to fetch.","name":"url","type":"string"},{"text":"The post parameters to be send to the server. `'Keys and values `must'' be strings.","name":"parameters","type":"table"},{"text":"The function called on success: function( string responseText, number contentLength, table responseHeaders, number statusCode )","name":"onSuccess","type":"function","default":"nil"},{"text":"The function called on failure: function( string errorMessage )","name":"onFailure","type":"function","default":"nil"},{"text":"KeyValue table for headers","name":"headers","type":"table","default":"{}"}]}},"example":{"description":"Write a file in PHP, and invoke it from Lua. The output below is written in the file, not in the console.\n\n```\n\n```","code":"http.Post(\"http://localhost/post.php\", { p = \"Gmod\", a = \"Test\" }, function(result)\n\tif result then print(\"Done!\") end\nend, function(failed)\n\tprint(failed)\nend)","outputfixedwidth":"Fixed width","output":"This is a test. Gmod Test"}},
{"function":{"name":"Fetch","parent":"http","type":"libraryfunc","description":{"text":"Launches a GET request.","note":{"text":"HTTP-requests on private networks don't work. To enable HTTP-requests on private networks use  `-allowlocalhttp`","br":"","page":"Command Line Parameters"}},"realm":"Shared and Menu","file":{"text":"lua/includes/modules/http.lua","line":"18-L44"},"args":{"arg":[{"text":"The URL of the website to fetch.","name":"url","type":"string"},{"text":"Function to be called on success. Arguments are\n*  body\n*  size - equal to (body)\n*  headers\n*  code - The HTTP success code","name":"onSuccess","type":"function","default":"nil","page":["string","string","string.len","table","number"]},{"text":"Function to be called on failure. Arguments are\n*  error - The error message","name":"onFailure","type":"function","default":"nil","page":"string"},{"text":"KeyValue table for headers","name":"headers","type":"table","default":"{}"}]}},"example":{"description":"Shows the typical usage to get the HTML of a webpage.","code":"local TheReturnedHTML = \"\" -- Blankness\n\nhttp.Fetch( \"http://www.google.com\",\n\tfunction( body, len, headers, code )\n\t\t-- The first argument is the HTML we asked for.\n\t\tTheReturnedHTML = body\n\tend,\n\tfunction( error )\n\t\t-- We failed. =(\n\tend\n)","output":"If it successfully fetched the page, the variable 'TheReturnedHTML' should contain the returned HTML in plain text."}},
{"function":{"name":"Run","parent":"hook","type":"libraryfunc","description":{"text":"Calls hooks associated with the given event.\n\nCalls all hooks until one returns something other than nil and then returns that data.\n\n\nIf no hook returns any data, it will try to call the GAMEMODE:<eventName> alternative, if one exists.\n\nThis function internally calls .\n\nSee also:  - same as this, but does not call hooks if the gamemode hasn't defined the function.","page":["hook.Call","gamemode.Call"]},"realm":"Shared and Menu","file":{"text":"lua/includes/modules/hook.lua","line":"52-L59"},"args":{"arg":[{"text":"The event to call hooks for","name":"eventName","type":"string"},{"text":"The arguments to be passed to the hooks","name":"args","type":"vararg"}]},"rets":{"ret":{"text":"Returned data from called hooks","name":"","type":"any"}}}},
{"function":{"name":"Run","parent":"hook","type":"libraryfunc","description":{"text":"Calls hooks associated with the given event.\n\nCalls all hooks until one returns something other than nil and then returns that data.\n\n\nIf no hook returns any data, it will try to call the GAMEMODE:<eventName> alternative, if one exists.\n\nThis function internally calls .\n\nSee also:  - same as this, but does not call hooks if the gamemode hasn't defined the function.","page":["hook.Call","gamemode.Call"]},"realm":"Shared and Menu","file":{"text":"lua/includes/modules/hook.lua","line":"52-L59"},"args":{"arg":[{"text":"The event to call hooks for","name":"eventName","type":"string"},{"text":"The arguments to be passed to the hooks","name":"args","type":"vararg"}]},"rets":{"ret":{"text":"Returned data from called hooks","name":"","type":"any"}}}},
{"function":{"name":"GetTable","parent":"hook","type":"libraryfunc","description":{"text":"Returns a list of all the hooks registered with .","page":"hook.Add"},"realm":"Shared and Menu","file":{"text":"lua/includes/modules/hook.lua","line":"15"},"rets":{"ret":{"text":"A table of tables. See below for output example.","name":"","type":"table"}}},"example":{"description":"Example of output table structure.","code":"PrintTable( hook.GetTable() )","outputfixedwidth":"Fixed width","output":"EntityNetworkedVarChanged:\n\tNetworkedVars\t=\tfunction: 0x1098ef38\nEntityRemoved:\n\tDoDieFunction\t=\tfunction: 0x253b2650\n\tnocollide_fix\t=\tfunction: 0x3f934a90\nInitPostEntity:\n\tPersistenceInit\t=\tfunction: 0x02b6e2c0\nLoadGModSave:\n\tLoadGModSave\t=\tfunction: 0x1098a680\nOnEntityCreated:\n\tmap_sethelinpcnode\t=\tfunction: 0x3ffe3568\nOnViewModelChanged:\n\tEntity [40][gmod_hands]\t=\tfunction: 0x403478a0\nPersistenceLoad:\n\tPersistenceLoad\t=\tfunction: 0x10961cd0\nPersistenceSave:\n\tPersistenceSave\t=\tfunction: 0x253d8f08\nPlayerInitialSpawn:\n\tPlayerAuthSpawn\t=\tfunction: 0x02b63398\nPlayerTick:\n\tTickWidgets\t=\tfunction: 0x10986c40\nPostDrawEffects:\n\tRenderWidgets\t=\tfunction: 0x10979af8\nShutDown:\n\tSavePersistenceOnShutdown\t=\tfunction: 0x10950c18"}},
{"function":{"name":"Call","parent":"hook","type":"libraryfunc","description":{"text":"Calls all hooks associated with the given event until one returns something other than nil, and then returns that data.\n\nIn almost all cases, you should use  instead - it calls hook.Call internally but supplies the gamemode table by itself, making your code neater.","page":"hook.Run"},"realm":"Shared and Menu","file":{"text":"lua/includes/modules/hook.lua","line":"62-L125"},"args":{"arg":[{"text":"The event to call hooks for","name":"eventName","type":"string"},{"text":"If the gamemode is specified, the gamemode hook within will be called, otherwise not","name":"gamemodeTable","type":"table"},{"text":"The arguments to be passed to the hooks","name":"args","type":"vararg"}]},"rets":{"ret":{"text":"Return data from called hooks. Limited to 6 return values","name":"","type":"vararg"}}},"example":[{"description":"Runs function DoSomething, which eventually calls the event \"DoneDoingSomething\", triggering the hooked function DoSomethingElse.","code":"function DoSomething()\n    --Does something\n    hook.Call(\"DoneDoingSomething\")\nend\n\nfunction DoSomethingElse()\n    --Does something else, once the hook DoneDoingSomething is called.\n    print(\"Done!\")\nend\nhook.Add( \"DoneDoingSomething\", \"Does something else\", DoSomethingElse )\n\nDoSomething()","output":"Done!"},{"description":"You can also make custom functions controllable via hooks.","code":"function MakeCheese()\n    local shouldMakeCheese = hook.Call(\"MakeCheezPleez\")\n\n    if shouldMakeCheese then\n        print(\"yay\")\n    else\n        print(\"nay\")\n    end\nend\n\nfunction MakeCheeseOrNot()\n    if #player.GetAll() >= 1 then\n        return true\n    else\n        return false\n    end\nend\nhook.Add( \"MakeCheezPleez\", \"Does something else\", MakeCheeseOrNot )\n\nMakeCheese()","output":"If there is players in the server, we print \"yay\". If there isn't, we print \"nay\""},{"description":"Calls the event \"DoneDoingSomething\" with args","code":"hook.Add(\"DoneDoingSomething\", \"Does something else\", function(a, b)\n\tprint(a)\n\tprint(b)\nend)\n\n\nhook.Call(\"DoneDoingSomething\", nil, \"Hello\", \"Hey\")","output":"Hello\nHey"}]},
{"function":{"name":"SendCommand","parent":"hammer","type":"libraryfunc","description":"Sends command to Hammer, if Hammer is running with the current map loaded.","realm":"Server","args":{"arg":{"text":"Command to send including arguments\n\nAll commands are in the format \"command var1 var2 etc\"\n\nAll commands that pick an entity with x y z , must use the exact position including decimals. i.e. -354.4523 123.4 \n\n# List of commands\n| Command       | Description   |\n| ------------- | ------------- |\n| \"session_begin mapName mapVersion\" | Starts a hammer edit, locking the editor. mapName is the current map without path or suffix, mapVersion is the current version in the .vmf file |\n| \"session_end\" | Ends a hammer edit, unlocking the editor. |\n| \"map_check_version mapName mapVersion\" | This only works after session_begin, so you'd know the right version already and this only returns ok, this function is apparently useless. |\n| \"entity_create entityClass x y z\" | Creates an entity of entityClass at position x y z |\n| \"entity_delete entityClass x y z\" | Deletes an entity of entityClass at position x y z |\n| \"entity_set_keyvalue entityClass x y z \"key\" \"value\"\" | Set's the KeyValue pair of an entity of entityClass at x y z. The Key name and Value String must be in quotes. |\n| \"entity_rotate_incremental entityClass x y z incX incY incZ\" | Rotates an entity of entityClass at x y z by incX incY incZ |\n| \"node_create nodeClass nodeID x y z\" | Creates an AI node of nodeClass with nodeID at x y z you should keep nodeID unique or you will have issues |\n| \"node_delete nodeID\" | Deletes node(s) with nodeID, this will delete multiple nodes if they have the same nodeID |\n| \"nodelink_create startNodeID endNodeID\" | Creates a link between AI nodes startNodeID and endNodeID |\n| \"nodelink_delete startNodeID endNodeID\" | Removes a link between AI nodes startNodeID and endNodeID |","name":"cmd","type":"string"}},"rets":{"ret":{"text":"Returns \"ok\" if command succeeded otherwise returns \"badcommand\"\n\n**All changes only happen in hammer, there is *NO* in game representation/feedback**","name":"","type":"string"}}},"example":{"description":"A hammer function library I wrote while testing all these functions.\n\nPlease feel free to use this library as-is or with modification.","code":"if ( !SERVER) then return end\n-- Hammer Editor Lua Library\n-- By Malcolm Greene Jr (Fantym420)\n \n-- Allows easy access to the hammer editor commands from lua code\n-- All commands return ok if they worked and badcommand if they don't\n-- All changes only show up in hammer, so if you want to see stuff in game you must\n-- write your own ghost entites and such.\n\nhammerLib = {}\nhammerLib.mapName = game.GetMap() -- Get the map name\nhammerLib.vBSPMapVer = game.GetMapVersion() -- This is the vbsp map version, we need the vmf map version\nhammerLib.mapVer = hammerLib.vBSPMapVer -- place holder value findGoodVer will find the current vmf version via trial and error\n\n-- returns a vector string with spaces the way hammer likes it\nfunction hammerLib.vectorToString(vec)\n\n\treturn tostring(vec.x) .. \" \" .. tostring(vec.y) .. \" \" .. tostring(vec.z)\n\nend\n\n-- tries to start a session using the current version, if it fails it tries the next\n-- if it can't find it in 20 tries you should probably compile your map before edititng more\nfunction hammerLib.findGoodVer()\n\t\n\tlocal verInc = 0\n\tlocal result = \"\"\n\t\n\tfor verInc = 0, 20 do \n\t\n\t\thammerLib.mapVer = hammerLib.vBSPMapVer + verInc\n\t\t\n\t\tresult = hammerLib.startSession()\n\t\t\n\t\tif result == \"ok\" then\n\t\t\tbreak\n\t\tend\n\t\t\n\t\tif verInc == 20 then\n\t\t\tprint(\"Good Version Not Found, Please Re-Compile your map!!!\")\n\t\tend\n\tend\n\t\n\thammerLib.endSession()\n\t\nend\n\n-- simple wrapper for hammer.SendCommand so that I could print the debug info\n-- un-comment the prints to see the command strings and results in console\nfunction hammerLib.runCommand(cmd)\n\t\n\tlocal result = \"\"\n\t--print(\"running \" .. cmd)\n\tresult = hammer.SendCommand(cmd)\n\t--print(cmd .. \" result: \" .. result)\n\treturn result\n\t\n\nend\n\n-- Always ran when starting an edit\n-- This locks hammer until you issue the session_end command\nfunction hammerLib.startSession()\n\t\n\tlocal cmd = \"session_begin \" .. hammerLib.mapName .. \" \" .. hammerLib.mapVer\n\t\n\treturn hammerLib.runCommand(cmd)\n\t\nend\n\n-- Ends the session unlocking hammer\nfunction hammerLib.endSession()\n\t\n\tlocal cmd = \"session_end\"\n\n\treturn hammer.SendCommand(cmd)\n\t\nend\n\n-- useless function, it will return ok if you give it a good name and version\n-- however to run it you must already have a good version because you ran session_start\n-- implemented here for thoroughness, if you give it no variables it will just use the stored info.\nfunction hammerLib.mapCheckVersion(mcName, mcVer)\n\t\n\tmcName = mcName or hammerLib.mapName\n\tmcVer = mcVer or hammerLib.mapVer\n\tlocal cmd = \"map_check_version \" .. mcName .. \" \" .. mcVer\n\tlocal result = \"\"\n\thammerLib.startSession()\n\tresult = hammerLib.runCommand(cmd)\n\thammerLib.endSession()\n\t\n\treturn result\n\t\nend\n\n-- this creates an entity of type entityClass at the given position\n--  I believe this only works with point entites seeing as there is no tie to brush command\nfunction hammerLib.entityCreate(entityClass, entityPos)\n\t\n\tif (entityClass == nil) or (entityPos == nil) then return end\n\tlocal cmd = \"entity_create \" .. entityClass .. \" \" .. hammerLib.vectorToString(entityPos)\n\tlocal result = \"\"\n\thammerLib.startSession()\n\tresult = hammerLib.runCommand(cmd)\n\thammerLib.endSession()\n\t\n\treturn result\n\t\nend\n\n-- this deletes an entity of type entityClass at entityPos\n-- NOTE: must be entities **EXACT** position, decimals and all or it fails\nfunction hammerLib.entityDelete(entityClass, entityPos)\n\t\n\tif (entityClass == nil) or (entityPos == nil) then return end\n\tlocal cmd = \"entity_delete \" .. entityClass .. \" \" .. hammerLib.vectorToString(entityPos)\n\tlocal result = \"\"\n\thammerLib.startSession()\n\tresult = hammerLib.runCommand(cmd)\n\thammerLib.endSession()\n\t\n\treturn result\n\t\nend\n\n-- Set's a Key/Value pair on entity of type entityClass at entityPos\n-- NOTE: must be entities **EXACT** position, decimals and all or it fails\nfunction hammerLib.entitySetKeyValue(entityClass, entityPos, key, value)\n\t\n\t\n\tif (entityClass == nil) or \n\t   (entityPos == nil) or\n\t   (key == nil) or\n\t   (value == nil) then return end\n\t   \n\tlocal cmd = \"entity_set_keyvalue \" .. entityClass .. \" \" .. hammerLib.vectorToString(entityPos) .. \" \\\"\" .. key .. \"\\\" \\\"\" .. value .. \"\\\"\"\n\tlocal result = \"\"\n\thammerLib.startSession()\n\tresult = hammerLib.runCommand(cmd)\n\thammerLib.endSession()\n\t\n\treturn result\n\t\nend\n-- this will rotate an entity of type entityClass(string) at entityPos(vector) by rotationInc(vector)\n-- NOTE: must be entities **EXACT** position, decimals and all or it fails\nfunction hammerLib.entityRotateIncremental(entityClass, entityPos, rotationInc)\n\t\n\tif (entityClass == nil) or (entityPos == nil) then return end\n\tlocal cmd = \"entity_rotate_incremental \" .. entityClass .. \" \" .. hammerLib.vectorToString(entityPos) .. \" \" .. hammerLib.vectorToString(rotationInc)\n\tlocal result = \"\"\n\thammerLib.startSession()\n\tresult = hammerLib.runCommand(cmd)\n\thammerLib.endSession()\n\t\n\treturn result\n\t\nend\n\n-- This creates a node of type nodeClass with an ID of nodeID at nodePos\n-- keep nodeID unique, if you don't and you use node_delete, it deletes all nodes with the given id\nfunction hammerLib.nodeCreate(nodeClass, nodeID, nodePos)\n\t\n\tif (nodeClass == nil) or (nodeID == nil) or (nodePos == nil) then return end\n\tlocal cmd = \"node_create \" .. nodeClass .. \" \" .. nodeID .. \" \" .. hammerLib.vectorToString(nodePos)\n\tlocal result = \"\"\n\thammerLib.startSession()\n\tresult = hammerLib.runCommand(cmd)\n\thammerLib.endSession()\n\t\n\treturn result\n\t\nend\n-- deletes node(s) with the given nodeID, however if there are more than one node with the nodeID all \n-- are deleted\nfunction hammerLib.nodeDelete(nodeID)\n\t\n\tif (nodeID == nil) then return end\n\tlocal cmd = \"node_delete \" .. nodeID\n\tlocal result = \"\"\n\thammerLib.startSession()\n\tresult = hammerLib.runCommand(cmd)\n\thammerLib.endSession()\n\t\n\treturn result\nend\n\n-- This creates a link between two nodes, not sure if there's a limit no number of links\n-- so far it does at least 2 per node\nfunction hammerLib.nodeLinkCreate(node1ID, node2ID)\n\t\n\tif (node1ID == nil) or (node2ID == nil) then return end\n\tlocal cmd = \"nodelink_create \" .. node1ID .. \" \" .. node2ID\n\tlocal result = \"\"\n\thammerLib.startSession()\n\tresult = hammerLib.runCommand(cmd)\n\thammerLib.endSession()\n\t\n\treturn result\n\t\nend\n\n-- This deletes a connection between two nodes\nfunction hammerLib.nodeLinkDelete(node1ID, node2ID)\n\t\n\tif (node1ID == nil) or (node2ID == nil) then return end\n\tlocal cmd = \"nodelink_delete \" .. node1ID .. \" \" .. node2ID\n\tlocal result = \"\"\n\thammerLib.startSession()\n\tresult = hammerLib.runCommand(cmd)\n\thammerLib.endSession()\n\t\n\treturn result\n\t\nend\n\n-- All loaded, run findGoodVer to store the current vmf version\nhammerLib.findGoodVer()"}},
{"function":{"name":"RenderedEntity","parent":"halo","type":"libraryfunc","description":{"text":"Returns the entity the halo library is currently rendering the halo for.\n\nThe main purpose of this function is to be used in  in order not to draw certain parts of the entity when the halo is being rendered, so there's no halo around unwanted entity parts, such as lasers, 3D2D displays, etc.","page":"ENTITY:Draw"},"realm":"Client","rets":{"ret":{"text":"If set, the currently rendered entity by the halo library.","name":"","type":"Entity"}}}},
{"function":{"name":"Add","parent":"hook","type":"libraryfunc","description":"Add a hook to be called upon the given event occurring.","realm":"Shared and Menu","file":{"text":"lua/includes/modules/hook.lua","line":"23"},"args":{"arg":[{"text":"The event to hook on to, see  and","name":"eventName","type":"string"},{"text":"The unique identifier, usually a string. This can be used elsewhere in the code to replace or remove the hook. The identifier **should** be unique so that you do not accidentally override some other mods hook, unless that's what you are trying to do.\n\nThe identifier can be either a , or a /object with an IsValid function defined such as an  or . s and s, for example, are not allowed.\n\nIf the identifier is a table/object, it will be inserted in front of the other arguments in the callback and the hook will be called as long as it's valid. However, as soon as IsValid( identifier ) returns false, the hook will be removed.","name":"identifier","type":"any","page":["string","table","Entity","Panel","number","boolean"]},{"text":"The function to be called, arguments given to it depend on the .","name":"func","type":"function","warning":"Returning any value besides nil from the hook's function will stop other hooks of the same event down the loop from being executed. Only return a value when absolutely necessary and when you know what you are doing.\n\nIt WILL break other addons."}]}},"example":[{"description":"This will hook onto the \"Think\" event with the function onThink, printing to the console whenever the event occurs.","code":"local function onThink()\n\tprint( \"onThink has been called\" )\nend\n\nhook.Add( \"Think\", \"Some unique name\", onThink )","output":"\"onThink has been called\" repeating continuously."},{"description":"This works the same as above, but defines the function inside hook.Add rather than above it.","code":"hook.Add( \"Think\", \"Another unique name\", function()\n\tprint( \"Think has been called\" )\nend )","output":"\"Think has been called\" repeating continuously."},{"description":"This code demonstrates how you can add a table function with a 'self' argument, without the use of a wrapper function","code":"local myTable = {}\nfunction myTable:IsValid()\n    return true\nend\n\nfunction myTable:PlayerInitialSpawn(ply)\n    print( \"CustomHook\", self, ply )\nend\n\nhook.Add( \"CustomHook\" , myTable , myTable.PlayerInitialSpawn )\nhook.Run( \"CustomHook\" )","output":"\"CustomHook table: 0x00000000  Player [1][PotatoMan]\""}]},
{"function":{"name":"Render","parent":"halo","type":"libraryfunc","description":{"text":"Renders a halo according to the specified table, only used internally, called from a PostDrawEffects hook added by the halo library","internal":""},"realm":"Client","args":{"arg":{"text":"Table with info about the halo to draw.","name":"entry","type":"table"}}}},
{"function":{"name":"TextureColor","parent":"GWEN","type":"libraryfunc","description":"When used in a material skin, it returns a color value from a point in the skin image.","realm":"Client and Menu","args":{"arg":[{"text":"X position of the pixel to get the color from.","name":"x","type":"number"},{"text":"Y position of the pixel to get the color from.","name":"y","type":"number"}]},"rets":{"ret":{"text":"The color of the point on the skin as a .","name":"","type":"table","page":"Color"}}}},
{"function":{"name":"CreateTextureNormal","parent":"GWEN","type":"libraryfunc","description":"Used in derma skins to create a rectangle drawing function from an image. The texture of the rectangle will be scaled. The texture is taken from SKIN.GwenTexture","realm":"Client and Menu","args":{"arg":[{"text":"The X coordinate on the texture","name":"x","type":"number"},{"text":"The Y coordinate on the texture","name":"y","type":"number"},{"text":"Width of the area on texture","name":"w","type":"number"},{"text":"Height of the area on texture","name":"h","type":"number"}]},"rets":{"ret":{"text":"The drawing function. Arguments are:\n*  x - X coordinate for the box\n*  y - Y coordinate for the box\n*  w - Width of the box\n*  h - Height of the box\n*  clr - Optional color, default is white. Uses the","name":"","type":"function","page":["number","number","number","number","table","Color"]}}},"example":{"description":"Draws a huge checked checkbox in the top left corner of the screen using current skins texture.","code":"local paintBox = GWEN.CreateTextureNormal( 448, 32, 15, 15 )\nhook.Add( \"HUDPaint\", \"PaintStuff\", function()\n    paintBox( 0, 0, 100, 100 )\nend )","output":"If using default skin, it will be a 100x100px checked checkbox in top left corner of the screen."}},
{"function":{"name":"Add","parent":"halo","type":"libraryfunc","description":{"text":"Applies a  glow effect to one or multiple entities.","page":"halo","warning":{"text":"Using this function outside of the  hook can cause instability or crashes.","page":"GM:PreDrawHalos"}},"realm":"Client","args":{"arg":[{"text":"A table of entities to add the halo effect to","name":"entities","type":"table"},{"text":"The desired color of the halo. See","name":"color","type":"table","page":"Color"},{"text":"The strength of the halo's blur on the x axis.","name":"blurX","type":"number","default":"2"},{"text":"The strength of the halo's blur on the y axis.","name":"blurY","type":"number","default":"2"},{"text":"The number of times the halo should be drawn per frame. Increasing this may hinder player FPS.","name":"passes","type":"number","default":"1"},{"text":"Sets the render mode of the halo to additive.","name":"additive","type":"boolean","default":"true"},{"text":"Renders the halo through anything when set to true.","name":"ignoreZ","type":"boolean","default":"false"}]}},"example":[{"description":"Adds a halo around all props in the map using an O(n) operation and iterating through unseen objects which can be extremely expensive to process.","code":"hook.Add( \"PreDrawHalos\", \"AddPropHalos\", function()\n\thalo.Add( ents.FindByClass( \"prop_physics*\" ), Color( 255, 0, 0 ), 5, 5, 2 )\nend )","output":{"text":"All the props on the map will be rendered with a red halo, a blur amount of 5, and two passes.","image":{"src":"halo_example.png","alt":"_halo_example.png"}}},{"description":"Adds a green halo around all admins.","code":"hook.Add( \"PreDrawHalos\", \"AddStaffHalos\", function()\n\tlocal staff = {}\n\tlocal i = 0\n\n\tfor _, ply in ipairs( player.GetAll() ) do\n\t\tif ( ply:IsAdmin() ) then\n\t\t\ti = i + 1\n\t\t\tstaff[i] = ply\n\t\tend\n\tend\n\n\thalo.Add( staff, Color( 0, 255, 0 ), 0, 0, 2, true, true )\nend )"}]},
{"function":{"name":"CreateTextureCentered","parent":"GWEN","type":"libraryfunc","description":"Used in derma skins to create a rectangle drawing function from an image. The rectangle will not be scaled, but instead it will be drawn in the center of the box. The texture is taken from SKIN.GwenTexture","realm":"Client and Menu","args":{"arg":[{"text":"The X coordinate on the texture","name":"x","type":"number"},{"text":"The Y coordinate on the texture","name":"y","type":"number"},{"text":"Width of the area on texture","name":"w","type":"number"},{"text":"Height of the area on texture","name":"h","type":"number"}]},"rets":{"ret":{"text":"The drawing function. Arguments are:\n x - X coordinate for the box\n\n\n y - Y coordinate for the box\n\n\n w - Width of the box\n\n\n h - Height of the box\n\n\n clr - Optional color, default is white. Uses the","name":"","type":"function","page":["number","number","number","number","table","Color"]}}},"example":{"description":"Draws a box in the top left corner of the screen using current skins texture.","code":"local paintBox = GWEN.CreateTextureCentered( 384, 32, 32, 32 )\nhook.Add( \"HUDPaint\", \"PaintStuff\", function()\n    paintBox( 0, 0, 100, 100 )\nend )","output":"If using default skin, it will be 32x32 transparent blue box centered inside the 100x100 box."}},
{"function":{"name":"ShowConsole","parent":"gui","type":"libraryfunc","description":"Shows console in the game UI.","realm":"Menu"},"example":{"description":"Example from `garrysmod\\lua\\menu\\mainmenu.lua` that initializes the game UI and shows console if activated.","code":"function PANEL:Init()\n\n\tself:Dock( FILL )\n\tself:SetKeyboardInputEnabled( true )\n\tself:SetMouseInputEnabled( true )\n\n\tself.HTML = vgui.Create( \"DHTML\", self )\n\n\tJS_Language( self.HTML )\n\tJS_Utility( self.HTML )\n\tJS_Workshop( self.HTML )\n\n\tself.HTML:Dock( FILL )\n\tself.HTML:OpenURL( \"asset://garrysmod/html/menu.html\" )\n\tself.HTML:SetKeyboardInputEnabled( true )\n\tself.HTML:SetMouseInputEnabled( true )\n\tself.HTML:SetAllowLua( true )\n\tself.HTML:RequestFocus()\n\n\tws_save.HTML = self.HTML\n\taddon.HTML = self.HTML\n\tdemo.HTML = self.HTML\n\n\tself:MakePopup()\n\tself:SetPopupStayAtBack( true )\n\t\n\t-- If the console is already open, we've got in its way.\n\tif ( gui.IsConsoleVisible() ) then\n\t\tgui.ShowConsole()\n\tend\n\nend"}},
{"function":{"name":"SetMousePos","parent":"gui","type":"libraryfunc","description":{"text":"Sets the cursor's position on the screen, relative to the topleft corner of the window","deprecated":{"text":"Use  instead.","page":"input.SetCursorPos"}},"realm":"Client and Menu","args":{"arg":[{"text":"The X coordinate to move the cursor to.","name":"mouseX","type":"number"},{"text":"The Y coordinate to move the cursor to.","name":"mouseY","type":"number"}]}}},
{"function":{"name":"ScreenToVector","parent":"gui","type":"libraryfunc","description":{"text":"Converts the specified screen position to a **direction** vector local to the player's view. A related function is , which translates a 3D position to a screen coordinate.\n\n is a more generic version of this, using a custom view instead of the player's current view.","page":["Vector:ToScreen","util.AimVector"]},"realm":"Client","args":{"arg":[{"text":"X coordinate on the screen.","name":"x","type":"number"},{"text":"Y coordinate on the screen.","name":"y","type":"number"}]},"rets":{"ret":{"text":"Direction","name":"","type":"Vector"}}},"example":[{"description":"This will do a trace from the mouse position to the world","code":"local tr = util.QuickTrace(LocalPlayer():GetShootPos(), gui.ScreenToVector(gui.MousePos()),LocalPlayer())\nprint(tr.HitPos)","output":"The worldpos the cursor is pointing at will be printed"},{"description":{"text":"Replacement for","page":"Player:GetAimVector"},"code":"print(gui.ScreenToVector(ScrW()/2, ScrH()/2))","output":"The player's current aimvector will be printed"}]},
{"function":{"name":"CreateTextureBorder","parent":"GWEN","type":"libraryfunc","description":"Used in derma skins to create a bordered rectangle drawing function from an image. The texture is taken either from last argument or from SKIN.GwenTexture","realm":"Client and Menu","args":{"arg":[{"text":"The X coordinate on the texture","name":"x","type":"number"},{"text":"The Y coordinate on the texture","name":"y","type":"number"},{"text":"Width of the area on texture","name":"w","type":"number"},{"text":"Height of the area on texture","name":"h","type":"number"},{"text":"Left width of border","name":"left","type":"number"},{"text":"Top width of border","name":"top","type":"number"},{"text":"Right width of border","name":"right","type":"number"},{"text":"Bottom width of border","name":"bottom","type":"number"},{"text":"Texture of source image to create a bordered rectangle from. Uses SKIN.GwenTexture if not set.","name":"source","type":"IMaterial","default":"nil"}]},"rets":{"ret":{"text":"The drawing function. Arguments are:\n*  x - X coordinate for the box\n*  y - Y coordinate for the box\n*  w - Width of the box\n*  h - Height of the box\n*  clr - Optional color, default is white. Uses the","name":"","type":"function","page":["number","number","number","number","table","Color"]}}},"example":{"description":"Draws a bordered box in the top left corner of the screen using current skins texture.","code":"local paintBox = GWEN.CreateTextureBorder( 384, 32, 31, 31, 4, 4, 4, 4 )\nhook.Add( \"HUDPaint\", \"PaintStuff\", function()\n    paintBox( 0, 0, 100, 100 )\nend )","output":"If using default skin, it will be a 100x100px transparent blue box in top left corner with solid blue borders."}},
{"function":{"name":"OpenURL","parent":"gui","type":"libraryfunc","description":{"text":"Opens specified URL in the steam overlay browser. The URL has to start with either http:// or https://","note":"User will be asked for confirmation before the website will open.","bug":{"text":"You can't click the confirmation if a model panel has focus.","issue":"3383"}},"realm":"Client and Menu","args":{"arg":{"text":"URL to open","name":"url","type":"string"}}},"example":{"description":"Opens a page when a button is clicked.","code":"local button = vgui.Create( \"DButton\" )\nbutton:SetSize( 125, 90 )\nbutton:Center() \nbutton:SetText( \"Join our Discord!\" )\nbutton.DoClick = function()\n    gui.OpenURL( \"http://discord.gg/gmod\" )\nend"}},
{"function":{"name":"MouseY","parent":"gui","type":"libraryfunc","description":"Returns y component of the mouse position.","realm":"Client and Menu","rets":{"ret":{"text":"mouseY","name":"","type":"number"}}}},
{"function":{"name":"MouseX","parent":"gui","type":"libraryfunc","description":"Returns x component of the mouse position.","realm":"Client and Menu","rets":{"ret":{"text":"mouseX","name":"","type":"number"}}}},
{"function":{"name":"MousePos","parent":"gui","type":"libraryfunc","description":{"text":"Returns the cursor's position on the screen, or 0, 0 if cursor is not visible.","deprecated":{"text":"Use  instead.","page":"input.GetCursorPos"}},"realm":"Client and Menu","rets":{"ret":[{"text":"mouseX","name":"","type":"number"},{"text":"mouseY","name":"","type":"number"}]}}},
{"function":{"name":"IsGameUIVisible","parent":"gui","type":"libraryfunc","description":"Returns whenever the game menu overlay ( main menu ) is open or not.","realm":"Client and Menu","rets":{"ret":{"text":"Whenever the game menu overlay ( main menu ) is open or not","name":"","type":"boolean"}}}},
{"function":{"name":"IsConsoleVisible","parent":"gui","type":"libraryfunc","description":"Returns whether the console is visible or not.","realm":"Client and Menu","rets":{"ret":{"text":"Whether the console is visible or not.","name":"","type":"boolean"}}}},
{"function":{"name":"InternalMouseWheeled","parent":"gui","type":"libraryfunc","description":"Simulates a mouse wheel scroll with the given delta.","realm":"Client and Menu","args":{"arg":{"text":"The amount of scrolling to simulate.","name":"delta","type":"number"}}}},
{"function":{"name":"InternalMouseReleased","parent":"gui","type":"libraryfunc","description":"Simulates a mouse key release for the given mouse key.","realm":"Client and Menu","args":{"arg":{"text":"The key, see .","name":"key","type":"number","page":"Enums/MOUSE"}}}},
{"function":{"name":"InternalMousePressed","parent":"gui","type":"libraryfunc","description":"Simulates a mouse key press for the given mouse key.","realm":"Client and Menu","args":{"arg":{"text":"The key, see .","name":"key","type":"number","page":"Enums/MOUSE"}}}},
{"function":{"name":"InternalMouseDoublePressed","parent":"gui","type":"libraryfunc","description":"Simulates a double mouse key press for the given mouse key.","realm":"Client and Menu","args":{"arg":{"text":"The key, see .","name":"key","type":"number","page":"Enums/MOUSE"}}}},
{"function":{"name":"InternalKeyTyped","parent":"gui","type":"libraryfunc","description":"Simulates an ASCII symbol writing.\nUse to write text in the chat or in VGUI.\nDoesn't work while the main menu is open!","realm":"Client and Menu","args":{"arg":{"text":"ASCII code of symbol, see http://www.mikroe.com/img/publication/spa/pic-books/programming-in-basic/chapter/04/fig4-24.gif","name":"code","type":"number"}}},"example":{"description":"Writes \"Hello\" every think.","code":"hook.Add(\"Think\",\"Example\",function()\n\tgui.InternalKeyTyped(72)\n\tgui.InternalKeyTyped(101)\n\tgui.InternalKeyTyped(108)\n\tgui.InternalKeyTyped(108)\n\tgui.InternalKeyTyped(111)\nend)"}},
{"function":{"name":"InternalKeyCodeTyped","parent":"gui","type":"libraryfunc","description":"Simulates a key type typing to the specified key.","realm":"Client and Menu","args":{"arg":{"text":"The key, see .","name":"key","type":"number","page":"Enums/KEY"}}}},
{"function":{"name":"InternalKeyCodeReleased","parent":"gui","type":"libraryfunc","description":"Simulates a key release for the given key.","realm":"Client and Menu","args":{"arg":{"text":"The key, see .","name":"key","type":"number","page":"Enums/KEY"}}}},
{"function":{"name":"InternalKeyCodePressed","parent":"gui","type":"libraryfunc","description":"Simulates a key press for the given key.","realm":"Client and Menu","args":{"arg":{"text":"The key, see .","name":"key","type":"number","page":"Enums/KEY"}}}},
{"function":{"name":"InternalCursorMoved","parent":"gui","type":"libraryfunc","description":"Simulates a mouse move with the given deltas.","realm":"Client and Menu","args":{"arg":[{"text":"The movement delta on the x axis.","name":"deltaX","type":"number"},{"text":"The movement delta on the y axis.","name":"deltaY","type":"number"}]}}},
{"function":{"name":"HideGameUI","parent":"gui","type":"libraryfunc","description":"Hides the game menu overlay.","realm":"Client and Menu"}},
{"function":{"name":"ActivateGameUI","parent":"gui","type":"libraryfunc","description":"Opens the game menu overlay.","realm":"Client and Menu"}},
{"function":{"name":"EnableScreenClicker","parent":"gui","type":"libraryfunc","description":{"text":"Enables the mouse cursor without restricting player movement, like using Sandbox's context menu.","bug":{"text":"Some  functions to return incorrect values will return incorrect values when this function is active.","issue":"982","page":"CUserCmd"}},"realm":"Client","args":{"arg":{"text":"Whether the cursor should be enabled or not. (true = enable, false = disable)","name":"enabled","type":"boolean"}}}},
{"function":{"name":"SaveMap","parent":"gmsave","type":"libraryfunc","description":"Saves the map","realm":"Server","args":{"arg":{"text":"The player, whose position should be saved for loading the save","name":"ply","type":"Player"}},"rets":{"ret":{"text":"The encoded to JSON string containing save data","name":"","type":"string"}}}},
{"function":{"name":"ShouldSaveEntity","parent":"gmsave","type":"libraryfunc","description":"Returns if we should save this entity in a duplication or a map save or not.","realm":"Server","args":{"arg":[{"text":"The entity","name":"ent","type":"Entity"},{"text":"A table containing classname key with entities classname.","name":"t","type":"table"}]},"rets":{"ret":{"text":"Should save entity or not","name":"","type":"boolean"}}}},
{"function":{"name":"PlayerSave","parent":"gmsave","type":"libraryfunc","description":{"text":"Returns a table containing player position and angles. Used by .","page":"gmsave.SaveMap"},"realm":"Server","args":{"arg":{"text":"The player to \"save\"","name":"ply","type":"Player"}},"rets":{"ret":{"text":"A table containing player position ( Origin ) and angles ( Angle )","name":"","type":"table"}}}},
{"function":{"name":"PlayerLoad","parent":"gmsave","type":"libraryfunc","description":"Sets player position and angles from supplied table","realm":"Server","args":{"arg":[{"text":"The player to \"load\" values for","name":"ply","type":"Player"},{"text":"A table containing Origin and Angle keys for position and angles to set.","name":"data","type":"table"}]}}},
{"function":{"name":"LoadMap","parent":"gmsave","type":"libraryfunc","description":"Loads a saved map.","realm":"Server","args":{"arg":[{"text":"The JSON encoded string containing all the map data.","name":"mapData","type":"string"},{"text":"The player to load positions for","name":"ply","type":"Player"}]}}},
{"function":{"name":"GetGamemode","parent":"gmod","type":"libraryfunc","description":{"text":"Returns .","page":"GAMEMODE"},"realm":"Shared","rets":{"ret":{"text":"GAMEMODE","name":"","type":"table"}}}},
{"function":{"name":"Register","parent":"gamemode","type":"libraryfunc","description":{"text":"Called by the engine when a gamemode is being loaded.","internal":""},"realm":"Shared","args":{"arg":[{"text":"Your GM table","name":"gm","type":"table"},{"text":"Name of your gamemode, lowercase, no spaces.","name":"name","type":"string"},{"text":"The gamemode name that your gamemode is derived from","name":"derived","type":"string"}]}}},
{"function":{"name":"Call","parent":"gamemode","type":"libraryfunc","description":{"text":"Called by the engine to call a hook within the loaded gamemode.\n\nThe supplied event 'name' must be defined in the active gamemode. Otherwise, nothing will happen - not even hooks added with  will be called.\n\nThis is similar to  and , except the hook library will call hooks created with hook.Add even if there is no corresponding gamemode function.","page":["hook.Add","hook.Run","hook.Call"]},"realm":"Shared","file":{"text":"lua/includes/modules/gamemode.lua","line":"75-L88"},"args":{"arg":[{"text":"The name of the hook to call.","name":"name","type":"string"},{"text":"The arguments","name":"args","type":"vararg"}]},"rets":{"ret":{"text":"The result of the hook function - can be up to 6 values. Returns false if the gamemode function doesn't exist (i.e. nothing happened), but remember - a hook can also return false.","name":"","type":"any"}}},"example":{"description":"Shows a suicide death notice in Sandbox.","code":"local ply = Entity(1)\ngamemode.Call( \"AddDeathNotice\", ply:GetName(), ply:Team(), nil, ply:GetName(), ply:Team() )","output":{"image":{"src":"suidcide_death_notice.jpg"}}}},
{"function":{"name":"Get","parent":"gamemode","type":"libraryfunc","description":{"text":"This returns the internally stored gamemode table.","internal":""},"realm":"Shared","args":{"arg":{"text":"The name of the gamemode you want to get","name":"name","type":"string"}},"rets":{"ret":{"text":"The gamemode's table","name":"","type":"table"}}}},
{"function":{"name":"Listen","parent":"gameevent","type":"libraryfunc","description":"Add a game event listener.","realm":"Shared","args":{"arg":{"text":"The event to listen to, travels through hooks with eventName as event.\n\nList of valid events can be found .","name":"eventName","type":"string","br":"","page":",hereGame_Events"}}},"example":[{"description":"Announce to everyone that a player has connected.","code":"gameevent.Listen( \"player_connect\" )\nhook.Add(\"player_connect\", \"AnnounceConnection\", function( data )\n\tfor k,v in pairs( player.GetAll() ) do\n\t\tv:ChatPrint( data.name .. \" has connected to the server.\" )\n\tend\nend)","output":"\"Shinycow has connected to the server.\""},{"description":"This is a basic template for creating game_event listeners/hooks with the purpose of including all arguments / table variables for each game-event to make it easily known which values can be accessed and when: player_connect. player_connect is triggered at the exact moment they join the server.","code":"gameevent.Listen( \"player_connect\" )\nhook.Add( \"player_connect\", \"player_connect_example\", function( data )\n\tlocal name = data.name\t\t\t// Same as Player:Nick()\n\tlocal steamid = data.networkid\t// Same as Player:SteamID()\n\tlocal ip = data.address\t\t\t// Same as Player:IPAddress()\n\tlocal id = data.userid\t\t\t// Same as Player:UserID()\n\tlocal bot = data.bot\t\t\t// Same as Player:IsBot()\n\tlocal index = data.index\t\t// Same as Player:EntIndex()\n\n\t// Player has connected; this happens instantly after they join -- do something..\n\nend )"},{"description":"This is a basic template for creating game_event listeners/hooks with the purpose of including all arguments / table variables for each game-event to make it easily known which values can be accessed and when: player_disconnect. player_disconnect is triggered at the exact moment they disconnect from the server and will ALWAYS trigger regardless of whether they time-out, are kick/banned, client crashes, they click the X, they type quit in console, etc...","code":"gameevent.Listen( \"player_disconnect\" )\nhook.Add( \"player_disconnect\", \"player_disconnect_example\", function( data )\n\tlocal name = data.name\t\t\t// Same as Player:Nick()\n\tlocal steamid = data.networkid\t\t// Same as Player:SteamID()\n\tlocal id = data.userid\t\t\t// Same as Player:UserID()\n\tlocal bot = data.bot\t\t\t// Same as Player:IsBot()\n\tlocal reason = data.reason\t\t// Text reason for disconnected such as \"Kicked by console!\", \"Timed out!\", etc...\n\n\t// Player has disconnected - this is more reliable than PlayerDisconnect\n\t\nend )"},{"description":"This is a basic template for creating game_event listeners/hooks with the purpose of including all arguments / table variables for each game-event to make it easily known which values can be accessed and when: player_spawn. player_spawn is triggered when the player initially spawns, or respawns.","code":"gameevent.Listen( \"player_spawn\" )\nhook.Add( \"player_spawn\", \"player_spawn_example\", function( data ) \n\tlocal id = data.userid\t// Same as Player:UserID()\n\n\t// Called when the player spawns initially or respawns.\n\nend )"},{"description":"This is a basic template for creating game_event listeners/hooks with the purpose of including all arguments / table variables for each game-event to make it easily known which values can be accessed and when: player_hurt. player_hurt is triggered when the player is injured or dies.\n\nThe SERVER receives 1 extra value - Priority.","code":"gameevent.Listen( \"player_hurt\" )\nhook.Add( \"player_hurt\", \"player_hurt_example\", function( data ) \n\tlocal health = data.health\t\t\t\t// Remaining health after injury\n\tlocal priority = SERVER and data.Priority or 5 \t\t// Priority ??\n\tlocal id = data.userid\t\t\t\t\t// Same as Player:UserID()\n\tlocal attackerid = data.attacker\t\t\t// Same as Player:UserID() but it's the attacker id.\n\n\t// Called when the player is injured or dies.\n\nend )"},{"description":"This is a basic template for creating game_event listeners/hooks with the purpose of including all arguments / table variables for each game-event to make it easily known which values can be accessed and when: player_hurt. player_hurt is triggered when the player is injured or dies.\n\nThe SERVER receives 1 extra value - Priority.","code":"gameevent.Listen( \"player_say\" )\nhook.Add( \"player_say\", \"player_say_example\", function( data ) \n\tlocal priority = SERVER and data.Priority or 1 \t// Priority ??\n\tlocal id = data.userid\t\t\t\t// Same as Player:UserID() for the speaker\n\tlocal text = data.text\t\t\t\t// The written text.\n\n\t// Called when a player writes text ( Called by the SERVER on the client AFTER the PlayerSay hook )\n\nend )"},{"description":"This is a basic template for creating game_event listeners/hooks with the purpose of including all arguments / table variables for each game-event to make it easily known which values can be accessed and when: entity_killed. entity_killed is triggered when the player or entity dies.","code":"gameevent.Listen( \"entity_killed\" )\nhook.Add( \"entity_killed\", \"entity_killed_example\", function( data ) \n\tlocal inflictor_index = data.entindex_inflictor\t\t// Same as Weapon:EntIndex() / weapon used to kill victim\n\tlocal attacker_index = data.entindex_attacker\t\t// Same as Player/Entity:EntIndex() / person or entity who did the damage\n\tlocal damagebits = data.damagebits\t\t\t// DAMAGE_TYPE - use BIT operations to decipher damage types...\n\tlocal victim_index = data.entindex_killed\t\t// Same as Victim:EntIndex() / the entity / player victim\n\n\t// Called when a Player or Entity is killed\n\nend )"}]},
{"function":{"name":"StartSpot","parent":"game","type":"libraryfunc","description":"Returns position the player should start from, this is not the same thing as spawn points, it is used to properly transit the player between maps.","realm":"Shared","rets":{"ret":{"text":"startSpot","name":"","type":"Vector"}}}},
{"function":{"name":"SetSkillLevel","parent":"game","type":"libraryfunc","description":{"text":"Sets the difficulty level of the game, can be retrieved with .\n\nThis will automatically change whenever the \"skill\" convar is modified serverside.","page":"game.GetSkillLevel","bug":{"text":"This function will not work if the skill convar doesn't match the targeted value. To work around this, you must use RunConsoleCommand(\"skill\", num) alongside this function.","issue":"3491"}},"realm":"Server","args":{"arg":{"text":"The difficulty level, Easy( 1 ), Normal( 2 ), Hard( 3 ).","name":"level","type":"number"}}}},
{"function":{"name":"SetSkillLevel","parent":"game","type":"libraryfunc","description":{"text":"Sets the difficulty level of the game, can be retrieved with .\n\nThis will automatically change whenever the \"skill\" convar is modified serverside.","page":"game.GetSkillLevel","bug":{"text":"This function will not work if the skill convar doesn't match the targeted value. To work around this, you must use RunConsoleCommand(\"skill\", num) alongside this function.","issue":"3491"}},"realm":"Server","args":{"arg":{"text":"The difficulty level, Easy( 1 ), Normal( 2 ), Hard( 3 ).","name":"level","type":"number"}}}},
{"function":{"name":"SetSkillLevel","parent":"game","type":"libraryfunc","description":{"text":"Sets the difficulty level of the game, can be retrieved with .\n\nThis will automatically change whenever the \"skill\" convar is modified serverside.","page":"game.GetSkillLevel","bug":{"text":"This function will not work if the skill convar doesn't match the targeted value. To work around this, you must use RunConsoleCommand(\"skill\", num) alongside this function.","issue":"3491"}},"realm":"Server","args":{"arg":{"text":"The difficulty level, Easy( 1 ), Normal( 2 ), Hard( 3 ).","name":"level","type":"number"}}}},
{"function":{"name":"SetGlobalState","parent":"game","type":"libraryfunc","description":{"text":"Sets whether a Global State is off, active or dead ( inactive )\n\nSee  for more information.","page":"Global States"},"realm":"Server","args":{"arg":[{"text":"The name of the Global State to set. \n\nIf the Global State by that name does not exist, it will be created.\n\nSee  for a list of default global states.","name":"name","type":"string","page":"Global States"},{"text":"The state of the Global State. See","name":"state","type":"number","page":"Enums/GLOBAL"}]}}},
{"function":{"name":"RemoveRagdolls","parent":"game","type":"libraryfunc","description":"Removes all the clientside ragdolls.","realm":"Shared"},"example":{"description":"This will remove all the client ragdolls every 3 secconds.","code":"timer.Create( \"removeRagdolls\", 3, 0, function() game.RemoveRagdolls() end )"}},
{"function":{"name":"MountGMA","parent":"game","type":"libraryfunc","description":{"text":"Mounts a GMA addon from the disk. Any error models currently loaded that the mounted addon provides will be reloaded.\n\nCan be used with","page":"steamworks.Download"},"realm":"Shared","args":{"arg":{"text":"Location of the GMA file to mount, retrieved from","name":"path","type":"string","page":"steamworks.Download"}},"rets":{"ret":[{"text":"success","name":"","type":"boolean"},{"text":"If successful, a table of files that have been mounted","name":"","type":"table"}]}},"example":{"description":"Downloads the Playable Piano addon and mounts the content.","code":"steamworks.FileInfo( 104548572, function( result )\n\tsteamworks.Download( result.fileid, true, function( name )\n\t\tgame.MountGMA( name )\n\tend) \nend)"}},
{"function":{"name":"SetGlobalCounter","parent":"game","type":"libraryfunc","description":{"text":"Sets the counter of a Global State.\n\nSee  for more information.","page":"Global States"},"realm":"Server","args":{"arg":[{"text":"The name of the Global State to set. \n\nIf the Global State by that name does not exist, it will be created.\n\nSee  for a list of default global states.","name":"name","type":"string","page":"Global States"},{"text":"The value to set for that Global State.","name":"count","type":"number"}]}}},
{"function":{"name":"MaxPlayers","parent":"game","type":"libraryfunc","description":"Returns the maximum amount of players (including bots) that the server can have.","realm":"Shared","rets":{"ret":{"text":"The maximum amount of players","name":"","type":"number"}}}},
{"function":{"name":"MapLoadType","parent":"game","type":"libraryfunc","description":"Returns the map load type of the current map.\n\nAfter changing the map with the console command `changelevel`, \"newgame\" is returned. With `changelevel2` (single player only), \"transition\" is returned.","realm":"Server","rets":{"ret":{"text":"The load type. Possible values are: \"newgame\", \"loadgame\", \"transition\", \"background\".","name":"","type":"string"}}}},
{"function":{"name":"LoadNextMap","parent":"game","type":"libraryfunc","description":"Loads the next map according to the nextlevel convar, or from the current mapcycle file set by the respective convar.","realm":"Server"}},
{"function":{"name":"KickID","parent":"game","type":"libraryfunc","description":"Kicks a player from the server. This can be ran before the player has spawned.","realm":"Server","args":{"arg":[{"text":"UserID or SteamID of the player to kick.","name":"id","type":"string"},{"text":"Reason to display to the player. This can span across multiple lines.","name":"reason","type":"string","default":"No reason given","warning":"This will be shortened to ~512 chars, though this includes the command itself and the player index so will realistically be more around ~498. It is recommended to avoid going near the limit to avoid truncation."}]}}},
{"function":{"name":"IsDedicated","parent":"game","type":"libraryfunc","description":{"text":"Returns true if the server is a dedicated server, false if it is a  or a singleplayer game.","bug":{"text":"This always returns false on the client.","issue":"1495"}},"realm":"Shared","rets":{"ret":{"text":"Is the server dedicated or not.","name":"","type":"boolean"}}}},
{"function":{"name":"GetWorld","parent":"game","type":"libraryfunc","description":"Returns the worldspawn entity.","realm":"Shared","rets":{"ret":{"text":"The world","name":"","type":"Entity"}}}},
{"function":{"name":"GetTimeScale","parent":"game","type":"libraryfunc","description":"Returns the time scale of the game","realm":"Shared","rets":{"ret":{"text":"The time scale","name":"","type":"number"}}}},
{"function":{"name":"GetSkillLevel","parent":"game","type":"libraryfunc","description":{"text":"Returns the difficulty level of the game.\n\n**TIP:** You can use this function in your scripted NPCs or Nextbots to make them harder, however, it is a good idea to lock powerful attacks behind the highest difficulty instead of just increasing the health.","note":{"text":"Internally this is tied to the gamerules entity, so you'll have to wait to wait until  is called to return the skill level","page":"GM:InitPostEntity"}},"realm":"Shared","rets":{"ret":{"text":"The difficulty level, Easy( 1 ), Normal( 2 ), Hard( 3 ).","name":"","type":"number"}}}},
{"function":{"name":"GetMapVersion","parent":"game","type":"libraryfunc","description":{"text":"Returns the VBSP version of the current map.","bug":{"text":"This does not exist in the client realm.","issue":"4427"}},"realm":"Shared","rets":{"ret":{"text":"mapVersion","name":"","type":"number"}}}},
{"function":{"name":"GetMapNext","parent":"game","type":"libraryfunc","description":"Returns the next map that would be loaded according to the file that is set by the mapcyclefile convar.","realm":"Server","rets":{"ret":{"text":"nextMap","name":"","type":"string"}}}},
{"function":{"name":"GetMap","parent":"game","type":"libraryfunc","description":"Returns the name of the current map, without a file extension.\nOn the menu state, returns \"menu\".","realm":"Shared and Menu","rets":{"ret":{"text":"The name of the current map, without a file extension.","name":"","type":"string"}}},"example":{"code":"print(game.GetMap())","output":"gm_flatgrass"}},
{"function":{"name":"GetIPAddress","parent":"game","type":"libraryfunc","description":{"text":"Returns the public IP address and port of the current server. This will return the IP/port that you are connecting through when ran clientside.","note":"Returns \"0.0.0.0:0\" in singleplayer.","bug":{"text":"Returns \"0.0.0.0:`port`\" on the server when called too early, including in  and . This bug seems to only happen the first time a server is launched, and will return the correct value after switching maps.","issue":"3001","page":["GM:Initialize","GM:InitPostEntity"]}},"realm":"Shared","rets":{"ret":{"text":"The IP address and port in the format \"x.x.x.x:x\"","name":"","type":"string"}}}},
{"function":{"name":"GetGlobalState","parent":"game","type":"libraryfunc","description":{"text":"Returns whether a Global State is off, active or dead ( inactive )\n\nSee  for more information.","page":"Global States"},"realm":"Server","args":{"arg":{"text":"The name of the Global State to retrieve the state of. \n\nIf the Global State by that name does not exist, **GLOBAL_DEAD** will be returned.\n\nSee  for a list of default global states.","name":"name","type":"string","page":"Global States"}},"rets":{"ret":{"text":"The state of the Global State. See","name":"","type":"number","page":"Enums/GLOBAL"}}}},
{"function":{"name":"GetAmmoTypes","parent":"game","type":"libraryfunc","description":"Returns a list of all ammo types currently registered.","realm":"Shared","rets":{"ret":{"text":"A table containing all ammo types. The keys are ammo IDs, the values are the names associated with those IDs.","name":"","type":"table"}}}},
{"function":{"name":"GetGlobalCounter","parent":"game","type":"libraryfunc","description":{"text":"Returns the counter of a Global State.\n\nSee  for more information.","page":"Global States"},"realm":"Server","args":{"arg":{"text":"The name of the Global State to set. \n\nIf the Global State by that name does not exist, it will be created.\n\nSee  for a list of default global states.","name":"name","type":"string","page":"Global States"}},"rets":{"ret":{"text":"The value of the given Global State, 0 if the global state doesn't exist.","name":"","type":"number"}}}},
{"function":{"name":"GetAmmoPlayerDamage","parent":"game","type":"libraryfunc","description":"Returns the damage given ammo type should do to players.","realm":"Shared","args":{"arg":{"text":"Ammo ID to retrieve the damage info of. Starts from 1.","name":"id","type":"number"}},"rets":{"ret":{"name":"","type":"number"}}}},
{"function":{"name":"GetAmmoNPCDamage","parent":"game","type":"libraryfunc","description":"Returns the damage given ammo type should do to NPCs.","realm":"Shared","args":{"arg":{"text":"Ammo ID to retrieve the damage info of. Starts from 1.","name":"id","type":"number"}},"rets":{"ret":{"name":"","type":"number"}}}},
{"function":{"name":"GetAmmoName","parent":"game","type":"libraryfunc","description":{"text":"Returns the ammo name for given ammo type ID.\n\nSee  for reverse.","page":"game.GetAmmoID"},"realm":"Shared","args":{"arg":{"text":"Ammo ID to retrieve the name of. Starts from 1.","name":"id","type":"number"}},"rets":{"ret":{"text":"The name of given ammo type ID or nil if ammo type ID is invalid.","name":"","type":"string"}}}},
{"function":{"name":"GetAmmoMax","parent":"game","type":"libraryfunc","description":{"text":"Returns the real maximum amount of ammo of given ammo ID.","note":"Currently all ammo types have overridden maximum value of reserve ammo set to 9999."},"realm":"Shared","args":{"arg":{"text":"Ammo type ID","name":"id","type":"number"}},"rets":{"ret":{"text":"The maximum amount of reserve ammo a player can hold of this ammo type.","name":"","type":"number"}}}},
{"function":{"name":"GetAmmoID","parent":"game","type":"libraryfunc","description":{"text":"Returns the ammo type ID for given ammo type name.\n\nSee  for reverse.","page":"game.GetAmmoName"},"realm":"Shared","args":{"arg":{"text":"Name of the ammo type to look up ID of","name":"name","type":"string"}},"rets":{"ret":{"text":"The ammo type ID of given ammo type name, or -1 if not found","name":"","type":"number"}}}},
{"function":{"name":"GetAmmoForce","parent":"game","type":"libraryfunc","description":"Returns the ammo bullet force that is applied when an entity is hit by a bullet of given ammo type.","realm":"Shared","args":{"arg":{"text":"Ammo ID to retrieve the force of. Starts from 1.","name":"id","type":"number"}},"rets":{"ret":{"name":"","type":"number"}}}},
{"function":{"name":"GetAmmoData","parent":"game","type":"libraryfunc","description":{"text":"Returns the  for given ID.","page":"Structures/AmmoData"},"realm":"Shared","args":{"arg":{"text":"ID of the ammo type to look up the data for","name":"id","type":"number"}},"rets":{"ret":{"text":"The  containing all ammo data","name":"","type":"table","page":"Structures/AmmoData"}}}},
{"function":{"name":"GetAmmoDamageType","parent":"game","type":"libraryfunc","description":"Returns the damage type of given ammo type.","realm":"Shared","args":{"arg":{"text":"Ammo ID to retrieve the damage type of. Starts from 1.","name":"id","type":"number"}},"rets":{"ret":{"text":"See","name":"","type":"number","page":"Enums/DMG"}}}},
{"function":{"name":"ConsoleCommand","parent":"game","type":"libraryfunc","description":{"text":"Runs a console command.\nMake sure to add a newline (\"\\n\") at the end of the command.","warning":{"text":"If you use data that were received from a client, you should avoid using this function because newline and semicolon (at least) allow the client to run arbitrary commands!\n\nFor safety, you are urged to prefer using  in this case.","page":"Global.RunConsoleCommand"}},"realm":"Server","args":{"arg":{"text":"String containing the command and arguments to be ran.","name":"stringCommand","type":"string"}}},"example":{"description":"Changes the gravity to 400 (default 600).","code":"game.ConsoleCommand(\"sv_gravity 400\\n\")"}},
{"function":{"name":"CleanUpMap","parent":"game","type":"libraryfunc","description":{"text":"If called serverside it will remove ALL entities which were not created by the map(not players or weapons held by players).\n\nOn the client it will remove decals, sounds, gibs, dead NPCs, and entities created via .\n\nThis function calls  before cleaning up the map and  after cleaning up the map.","page":["ents.CreateClientProp","GM:PreCleanupMap","GM:PostCleanupMap"],"bug":[{"text":"Calling this in a  or  hook will crash the game.","issue":"1142","page":["ENTITY:StartTouch","ENTITY:Touch"]},{"text":"Calling this destroys all BASS streams.","issue":"2874"},{"text":"This can crash when removing _firesmoke entities.","issue":"3637"}]},"realm":"Shared","args":{"arg":[{"text":"If set to true, don't run this functions on all clients.","name":"dontSendToClients","type":"boolean","default":"false"},{"text":"Entity classes not to reset during cleanup.","name":"ExtraFilters","type":"table","default":"{}"}]}}},
{"function":{"name":"BuildAmmoTypes","parent":"game","type":"libraryfunc","description":{"text":"Called by the engine to retrieve the ammo types.","internal":{"text":"Consider using  and  instead.","page":["game.GetAmmoTypes","game.GetAmmoData"]}},"realm":"Shared","file":{"text":"lua/includes/extensions/game.lua","line":"43-53"},"rets":{"ret":{"text":"All ammo types registered via , sorted by its name value.","name":"","type":"table","page":"game.AddAmmoType"}}}},
{"function":{"name":"AddParticles","parent":"game","type":"libraryfunc","description":{"text":"Loads a particle file.","note":"You will still need to call this function clientside regardless if you create the particle effects serverside."},"realm":"Shared","args":{"arg":{"text":"The path of the file to add. Must be (file).pcf.","name":"particleFileName","type":"string"}}},"example":{"description":"Example usage of the function. Precaches \"ExplosionCore_wall\" particle from \"particles/explosion.pcf\", a Team Fortress 2 particle file.\n\nYou can find a list of particles inside a .pcf file using the [Particle Editor Tool](https://developer.valvesoftware.com/wiki/Particle_Editor)","code":"game.AddParticles( \"particles/explosion.pcf\" )\nPrecacheParticleSystem( \"ExplosionCore_wall\" )\n\nif ( SERVER ) then\n\t-- A test console command to see if the particle works, spawns the particle where the player is looking at. \n\tconcommand.Add( \"particleitup\", function( ply, cmd, args )\n\t\tParticleEffect( \"ExplosionCore_wall\", ply:GetEyeTrace().HitPos, Angle( 0, 0, 0 ) )\n\tend )\nend"}},
{"function":{"name":"AddDecal","parent":"game","type":"libraryfunc","description":{"text":"Registers a new decal.","warning":"There's a rather low limit of around 256 for decals that may be registered and they are not cleared on map load."},"realm":"Shared","args":{"arg":[{"text":"The name of the decal.","name":"decalName","type":"string"},{"text":"The material to be used for the decal. May also be a list of material names, in which case a random material from that list will be chosen every time the decal is placed.","name":"materialName","type":"string"}]}}},
{"function":{"name":"AddAmmoType","parent":"game","type":"libraryfunc","description":{"text":"Adds a new ammo type to the game.\n\nYou can find a list of default ammo types .","page":",hereDefault_Ammo_Types","warning":"This function must be called shared or you will have unexpected problems.","note":[{"text":"This function must be called in .","page":"GM:Initialize"},"There is a limit of 128 ammo types, including the default ones."],"bug":{"text":"This will have unpredictable results when registering ammo types with the same name but different capitalisation.","pull":"1487"}},"realm":"Shared","file":{"text":"lua/includes/extensions/game.lua","line":"24"},"args":{"arg":{"text":"The attributes of the ammo. See the .","name":"ammoData","type":"table","page":"Structures/AmmoData"}}},"example":{"description":"Add an ammo type","code":"game.AddAmmoType({\n\tname = \"ammo_9mm_max\",\n\tdmgtype = DMG_BULLET,\n\ttracer = TRACER_LINE,\n\tplydmg = 0,\n\tnpcdmg = 0,\n\tforce = 2000,\n\tminsplash = 10,\n\tmaxsplash = 5\n})"}},
{"function":{"name":"ShouldSkipFrame","parent":"frame_blend","type":"libraryfunc","description":"Returns whether we should skip frame or not","realm":"Client","rets":{"ret":{"text":"Should the frame be skipped or not","name":"","type":"boolean"}}}},
{"function":{"name":"RenderableFrames","parent":"frame_blend","type":"libraryfunc","description":{"text":"Returns amount of frames needed to render?","internal":""},"realm":"Client","rets":{"ret":{"text":"Amount of frames needed to render?","name":"","type":"number"}}}},
{"function":{"name":"IsLastFrame","parent":"frame_blend","type":"libraryfunc","description":{"text":"Returns whether the current frame is the last frame?","internal":""},"realm":"Client","rets":{"ret":{"text":"Whether the current frame is the last frame?","name":"","type":"boolean"}}}},
{"function":{"name":"IsActive","parent":"frame_blend","type":"libraryfunc","description":"Returns whether frame blend post processing effect is enabled or not.","realm":"Client","rets":{"ret":{"text":"Is frame blend enabled or not","name":"","type":"boolean"}}}},
{"function":{"name":"CompleteFrame","parent":"frame_blend","type":"libraryfunc","description":{"text":"Renders the frame onto internal render target.","internal":""},"realm":"Client"}},
{"function":{"name":"CompleteFrame","parent":"frame_blend","type":"libraryfunc","description":{"text":"Renders the frame onto internal render target.","internal":""},"realm":"Client"}},
{"function":{"name":"BlendFrame","parent":"frame_blend","type":"libraryfunc","description":{"text":"Blends the frame(s).","internal":""},"realm":"Client"}},
{"function":{"name":"AddFrame","parent":"frame_blend","type":"libraryfunc","description":{"text":"Adds a frame to the blend. Calls  once enough frames have passed since last  call.","internal":"","page":["frame_blend.CompleteFrame","frame_blend.CompleteFrame"]},"realm":"Client"}},
{"function":{"name":"Write","parent":"file","type":"libraryfunc","description":{"text":"Writes the given string to a file. Erases all previous data in the file. To add data without deleting previous data, use .","page":"file.Append"},"realm":"Shared and Menu","file":{"text":"lua/includes/extensions/file.lua","line":"21"},"args":{"arg":[{"text":"The name of the file being written into. The path is relative to the **data/** folder.\n\nThis argument will be forced lowercase.\n\nThe filename **must** end with one of the following:\n* .txt\n* .jpg\n* .png\n* .vtf\n* .dat\n* .json\n\n\nRestricted symbols are: ```\" : ```","name":"fileName","type":"string"},{"text":"The content that will be written into the file.","name":"content","type":"string"}]}},"example":{"description":"Writes to **data/helloworld.txt**.","code":"file.Write( \"helloworld.txt\", \"This is the content!\" )"}},
{"function":{"name":"Time","parent":"file","type":"libraryfunc","description":"Returns when the file or folder was lasted modified in Unix time.","realm":"Shared and Menu","args":{"arg":[{"text":"The **file** or **folder** path.","name":"path","type":"string"},{"text":"The game path to be used.\n\n* \"GAME\" Structured like base folder (garrysmod/), searches all the mounted content (main folder, addons, mounted games etc)\n* \"LUA\" or \"lsv\" - All Lua folders (lua/) including gamesmodes and addons\n* \"DATA\" Data folder (garrysmod/data)\n* \"MOD\" Strictly the game folder (garrysmod/), ignores mounting.","name":"gamePath","type":"string"}]},"rets":{"ret":{"text":"Seconds passed since Unix epoch.","name":"","type":"number"}}},"example":[{"description":"Prints out the last modified date of **file** helloworld.txt","code":"print( os.date(\"%d.%m.%Y\", file.Time(\"helloworld.txt\", \"DATA\") ) )","output":"04.08.2012"},{"description":"Prints out the last modified date of **folder** lua","code":"print( os.date( \"%d.%m.%Y\", file.Time( \"lua\", \"GAME\" ) ) )","output":"31.01.2016"}]},
{"function":{"name":"Size","parent":"file","type":"libraryfunc","description":"Returns the file's size in bytes. If the file is not found, returns -1.","realm":"Shared and Menu","args":{"arg":[{"text":"The file's name.","name":"fileName","type":"string"},{"text":"The path type.\n\n* \"GAME\" Structured like base folder (garrysmod/), searches all the mounted content (main folder, addons, mounted games etc)\n* \"LUA\" or \"lsv\" - All Lua folders (lua/) including gamesmodes and addons\n* \"DATA\" Data folder (garrysmod/data)\n* \"MOD\" Strictly the game folder (garrysmod/), ignores mounting.","name":"path","type":"string"}]}},"example":{"description":"Prints the size of `helloworld.txt`.","code":"print( file.Size(\"helloworld.txt\", \"DATA\") )","output":"8"}},
{"function":{"name":"Rename","parent":"file","type":"libraryfunc","description":"Attempts to rename a file with the given name to another given name.\n\nThis function is constrained to the data/ folder.","realm":"Shared and Menu","args":{"arg":[{"text":"The original file or folder name. See  for details on filename restrictions when writing to files.\n\nThis argument will be forced lowercase.","name":"orignalFileName","type":"string","page":"file.Write"},{"text":"The target file or folder name. See  for details on filename restrictions when writing to files.\n\nThis argument will be forced lowercase.","name":"targetFileName","type":"string","page":"file.Write"}]},"rets":{"ret":{"text":"True on success, false otherwise.","name":"","type":"boolean"}}}},
{"function":{"name":"Read","parent":"file","type":"libraryfunc","description":"Returns the content of a file.\n\nBeware of casing -- some filesystems are case-sensitive. SRCDS on Linux seems to force file/directory creation to lowercase, but will not modify read operations.","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/file.lua","line":"4"},"args":{"arg":[{"text":"The name of the file.","name":"fileName","type":"string"},{"text":"The path used to look up the file.\n* \"GAME\" Structured like base folder (garrysmod/), searches all the mounted content (main folder, addons, mounted games etc)\n* \"LUA\" or \"lsv\" - All Lua folders (lua/) including gamesmodes and addons\n* \"DATA\" Data folder (garrysmod/data)\n* \"MOD\" Strictly the game folder (garrysmod/), ignores mounting.\n\nIt can also be a boolean:\n* true = \"GAME\"\n* false = \"DATA\"","name":"path","type":"string","default":"DATA"}]},"rets":{"ret":{"text":"The data from the file as a string, or nil if the file isn't found","name":"","type":"string"}}},"example":{"description":"Prints out the content of `helloworld.txt`.","code":"print( file.Read(\"helloworld.txt\", \"DATA\") )","output":"This is the content!"}},
{"function":{"name":"Open","parent":"file","type":"libraryfunc","description":"Attempts to open a file with the given mode.","realm":"Shared and Menu","args":{"arg":[{"text":"The files name. See  for details on filename restrictions when writing to files.","name":"fileName","type":"string","page":"file.Write"},{"text":"The mode to open the file in. Possible values are:\n* **r** - read mode\n* **w** - write mode\n* **a** - append mode\n* **rb** - binary read mode\n* **wb** - binary write mode\n* **ab** - binary append mode","name":"fileMode","type":"string"},{"text":"The path type. See \n\nCommon paths are:\n* \"GAME\" - Structured like base folder (garrysmod/), searches all the mounted content (main folder, addons, mounted games etc)\n* \"LUA\" or \"lsv\" - All Lua folders (lua/) including gamesmodes and addons\n* \"DATA\" - Local to Data folder, has write access (garrysmod/data)\n* \"MOD\" - Strictly the game folder (garrysmod/), ignores mounting.","name":"path","type":"string","page":"File Search Paths"}]},"rets":{"ret":{"text":"The opened file object, or nil if it failed to open due to it not existing or being used by another process.","name":"","type":"File"}}},"example":{"description":"Open a file in read only mode, reads a line, tells where the current file pointer is at and then closes the file handle.","code":"local f = file.Open( \"cfg/mapcycle.txt\", \"r\", \"MOD\" )\nprint( f:ReadLine() )\nprint( f:ReadLine() )\nprint( f:Tell() )\nf:Close()","outputfixedwidth":"Fixed width","output":"```\n//\n// Default mapcycle file for Garry's Mod.\n45\n```"}},
{"function":{"name":"IsDir","parent":"file","type":"libraryfunc","description":"Returns whether the given file is a directory or not.","realm":"Shared and Menu","args":{"arg":[{"text":"The file or directory's name.","name":"fileName","type":"string"},{"text":"The path type.","name":"path","type":"string"}]},"rets":{"ret":{"text":"True if the given path is a directory or false if it is a file.","name":"","type":"boolean"}}},"example":{"description":"Prints if `helloworld.txt` is a directory.","code":"print( file.IsDir(\"helloworld.txt\", \"DATA\") )","output":"false"}},
{"function":{"name":"Find","parent":"file","type":"libraryfunc","description":"Returns a list of files and directories inside a single folder.","realm":"Shared and Menu","args":{"arg":[{"text":"The wildcard to search for. \"models/*.mdl\" will list .mdl files in the models/ folder.","name":"name","type":"string"},{"text":"The path to look for the files and directories in. See  for a list of valid paths.","name":"path","type":"string","page":",this listFile_Search_Paths"},{"text":"The sorting to be used, optional.\n\n* \"nameasc\" sort the files ascending by name\n* \"namedesc\" sort the files descending by name\n* \"dateasc\" sort the files ascending by date\n* \"datedesc\" sort the files descending by date","name":"sorting","type":"string","default":"nameasc"}]},"rets":{"ret":[{"text":"A table of found files, or nil if the path is invalid","name":"","type":"table"},{"text":"A table of found directories, or nil if the path is invalid","name":"","type":"table"}]}},"example":{"description":"Prints the first file and the first directory in the `data` folder.","code":"local files, directories = file.Find(\"*\", \"DATA\")\n\nprint( \"File: \" .. files[1], \"Folder: \" .. directories[1] )","output":{"text":"File: helloworld.txt\nFolder: ctp","br":["",""]}}},
{"function":{"name":"Delete","parent":"file","type":"libraryfunc","description":"Deletes a file or `empty` folder that is relative to the **data** folder.\nYou can't remove any files outside of **data** folder.","realm":"Shared and Menu","args":{"arg":{"text":"The file name","name":"name","type":"string"}}},"example":{"description":"Deletes **data/helloworld.txt** file.","code":"file.Delete( \"helloworld.txt\" )"}},
{"function":{"name":"Exists","parent":"file","type":"libraryfunc","description":"Returns a boolean of whether the file or directory exists or not.","realm":"Shared and Menu","args":{"arg":[{"text":"The file or directory's name.","name":"name","type":"string"},{"text":"The path of where to look for the file.\n\n* \"GAME\" Structured like base folder (garrysmod/), searches all the mounted content (main folder, addons, mounted games etc)\n* \"LUA\" or \"lsv\" - All Lua folders (lua/) including gamesmodes and addons\n* \"DATA\" Data folder (garrysmod/data)\n* \"MOD\" Strictly the game folder (garrysmod/), ignores mounting.","name":"path","type":"string"}]},"rets":{"ret":{"text":"Returns true if the file exists and false if it is not.","name":"","type":"boolean"}}},"example":{"description":"Prints whether the `data` folder exists in the base directory.","code":"print( file.Exists(\"data\", \"GAME\") )","output":"true"}},
{"function":{"name":"CreateDir","parent":"file","type":"libraryfunc","description":"Creates a directory that is relative to the `data` folder.","realm":"Shared and Menu","args":{"arg":{"text":"The directory's name.","name":"name","type":"string"}}},"example":[{"description":"Creates a directory named `sample` in the `data` folder.","code":"file.CreateDir(\"sample\")"},{"description":"This function will create all subfolders you specify.","code":"file.CreateDir(\"a/b/c/d/e/f/g\")","output":"A folder named \"a\" is created in the data folder, which contains the folder named \"b\", which contains a folder named \"c\", etc."}]},
{"function":{"name":"GetMapCreatedEntity","parent":"ents","type":"libraryfunc","description":{"text":"Returns entity that has given .","page":"Entity:MapCreationID"},"realm":"Server","args":{"arg":{"text":"Entity's creation id","name":"id","type":"number"}},"rets":{"ret":{"text":"Found entity","name":"","type":"Entity"}}}},
{"function":{"name":"GetEdictCount","parent":"ents","type":"libraryfunc","description":{"text":"Returns the amount of networked entities, which is limited to 8192.  will fail somewhere between 8064 and 8176 - this can vary based on the amount of existing temp ents.","page":"ents.Create"},"realm":"Server","rets":{"ret":{"text":"Number of networked entities","name":"","type":"number"}}}},
{"function":{"name":"Append","parent":"file","type":"libraryfunc","description":"Appends a file relative to the `data` folder.","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/file.lua","line":"31"},"args":{"arg":[{"text":"The file's name.","name":"name","type":"string"},{"text":"The content which should be appended to the file.","name":"content","type":"string"}]}},"example":{"description":"Adds \"Append!\" to `helloworld.txt`, then prints it.","code":"file.Append( \"helloworld.txt\", \"Append!\" )\n\nprint( file.Read( \"helloworld.txt\", \"DATA\" ) )","output":"This is the content!Append!"}},
{"function":{"name":"GetCount","parent":"ents","type":"libraryfunc","description":{"text":"Gives you the amount of currently existing entities.\nSimilar to # but with much better performance.","page":"ents.GetAll"},"realm":"Shared","args":{"arg":{"text":"Include entities with the FL_KILLME flag. This will skip an internal loop, and the function will be more efficient as a byproduct.","name":"IncludeKillMe","type":"boolean","default":"false"}},"rets":{"ret":{"text":"Number of entities","name":"","type":"number"}}}},
{"function":{"name":"GetByIndex","parent":"ents","type":"libraryfunc","description":{"text":"Returns an entity by its index. Same as .","page":"Global.Entity"},"realm":"Shared","args":{"arg":{"text":"The index of the entity.","name":"entIdx","type":"number"}},"rets":{"ret":{"text":"The entity if it exists.","name":"","type":"Entity"}}}},
{"function":{"name":"GetAll","parent":"ents","type":"libraryfunc","description":"Returns a table of all existing entities. The table is sequential","realm":"Shared","rets":{"ret":{"text":"Table of all existing s.","name":"","type":"table","page":"Entity"}}}},
{"function":{"name":"FireTargets","parent":"ents","type":"libraryfunc","description":"Fires a use event.","realm":"Server","args":{"arg":[{"text":"Name of the target entity.","name":"target","type":"string"},{"text":"Activator of the event.","name":"activator","type":"Entity"},{"text":"Caller of the event.","name":"caller","type":"Entity"},{"text":"Use type. See the .","name":"usetype","type":"number","page":"Enums/USE"},{"text":"This value is passed to , but isn't used by any default entities in the engine.","name":"value","type":"number","page":"ENTITY:Use"}]}}},
{"function":{"name":"FindInSphere","parent":"ents","type":"libraryfunc","description":{"text":"Gets all entities within the specified sphere.","note":"Clientside entities will not be returned by this function."},"realm":"Shared","args":{"arg":[{"text":"Center of the sphere.","name":"origin","type":"Vector"},{"text":"Radius of the sphere.","name":"radius","type":"number"}]},"rets":{"ret":{"text":"A table of all found s. Has a limit of 1024 entities.","name":"","type":"table","page":"Entity"}}}},
{"function":{"name":"FindInPVS","parent":"ents","type":"libraryfunc","description":{"text":"Finds all entities that lie within a [PVS](https://developer.valvesoftware.com/wiki/PVS).","note":{"text":"The function won't take in to account  and the like.","page":"Global.AddOriginToPVS"}},"realm":"Server","args":{"arg":{"text":"or  to find entities within the PVS of. If a player is given, this function will use the player's view entity.","name":"viewPoint","type":"any","page":["Entity","Vector"]}},"rets":{"ret":{"text":"The found s.","name":"","type":"table","page":"Entity"}}}},
{"function":{"name":"FindInBox","parent":"ents","type":"libraryfunc","description":{"text":"Returns all entities within the specified box.","note":"Clientside entities will not be returned by this function.","warning":"There is a limit of 512 entities for the output!"},"realm":"Shared","args":{"arg":[{"text":"The box minimum coordinates.","name":"boxMins","type":"Vector"},{"text":"The box maximum coordinates.","name":"boxMaxs","type":"Vector"}]},"rets":{"ret":{"text":"A table of all found entities.","name":"","type":"table"}}},"example":{"description":"Returns a table of players in a box using ents.FindInBox","code":"function ents.FindPlayersInBox( vCorner1, vCorner2 )\n\tlocal tEntities = ents.FindInBox( vCorner1, vCorner2 )\n\tlocal tPlayers = {}\n\tlocal iPlayers = 0\n\t\n\tfor i = 1, #tEntities do\n\t\tif ( tEntities[ i ]:IsPlayer() ) then\n\t\t\tiPlayers = iPlayers + 1\n\t\t\ttPlayers[ iPlayers ] = tEntities[ i ]\n\t\tend\n\tend\n\t\n\treturn tPlayers, iPlayers\nend","outputfixedwidth":"Fixed width"}},
{"function":{"name":"FindInCone","parent":"ents","type":"libraryfunc","description":{"text":"Finds and returns all entities within the specified cone. Only entities whose  is within the cone are considered to be in it.\n\nThe \"cone\" is actually a conical \"slice\" of an axis-aligned box (see: ). The image to the right shows approximately how this function would look in 2D. Due to this, the entity may be farther than the specified range!","image":{"src":"ents.FindInCone.png","alt":"2D_visualization_of_the_actual_shape_of_the_cone,_click_to_enlarge"},"page":["Entity:WorldSpaceCenter","ents.FindInBox"],"note":"Clientside entities will not be returned by this function.","warning":"If there are more than 512 entities in the axis-aligned box around the origin, then the result may be incomplete!"},"realm":"Shared","args":{"arg":[{"text":"The tip of the cone.","name":"origin","type":"Vector"},{"text":"Direction of the cone.","name":"normal","type":"Vector"},{"text":"The range of the cone/box around the origin.","name":"range","type":"number","note":"The function internally adds 1 to this argument before using it."},{"text":"The  of the angle between the center of the cone to its edges, which is half the overall angle of the cone.\n\n1 makes a 0° cone, 0.707 makes approximately 90°, 0 makes 180°, and so on.","name":"angle_cos","type":"number","page":",cosinemath.cos"}]},"rets":{"ret":{"text":"A table of all found s.","name":"","type":"table","page":"Entity"}}},"example":{"description":"An example usage of this function. This example shows which entities are being returned by the function with red lines and the range with white transparent box.","code":"local mat = Material( \"models/shiny\" )\nmat:SetFloat( \"$alpha\", 0.5 )\n\nhook.Add( \"PostDrawOpaqueRenderables\", \"conetest\", function()\n\tlocal size = 200\n\tlocal dir = LocalPlayer():GetAimVector()\n\tlocal angle = math.cos( math.rad( 15 ) ) -- 15 degrees\n\tlocal startPos = LocalPlayer():EyePos()\n\n\tlocal entities = ents.FindInCone( startPos, dir, size, angle )\n\n\t-- draw the outer box\n\tlocal mins = Vector( -size, -size, -size )\n\tlocal maxs = Vector( size, size, size )\n\n\trender.SetMaterial( mat )\n\trender.DrawWireframeBox( startPos, Angle( 0, 0, 0 ), mins, maxs, color_white, true )\n\trender.DrawBox( startPos, Angle( 0, 0, 0 ), -mins, -maxs, color_white )\n\n\t-- draw the lines\n\tfor id, ent in pairs( entities ) do\n\t\trender.DrawLine( ent:WorldSpaceCenter() - dir * ( ent:WorldSpaceCenter()-startPos ):Length(), ent:WorldSpaceCenter(), Color( 255, 0, 0 ) )\n\tend\nend )"}},
{"function":{"name":"FindByName","parent":"ents","type":"libraryfunc","description":{"text":"Gets all entities with the given hammer targetname. This works internally by iterating over .\n\n\n\nDoesn't do anything on client.","page":"ents.GetAll","note":{"text":"A player's Name is his nickname, see","page":"Player:GetName"}},"realm":"Shared","args":{"arg":{"text":"The targetname to look for","name":"name","type":"string"}},"rets":{"ret":{"text":"A table of all found entities","name":"","type":"table"}}}},
{"function":{"name":"FindByModel","parent":"ents","type":"libraryfunc","description":{"text":"Gets all entities with the given model, supports wildcards. This works internally by iterating over .","page":"ents.GetAll","bug":{"text":"This currently only supports trailing asterisks (*) for wildcards.","issue":"2872"}},"realm":"Shared","args":{"arg":{"text":"The model of the entities to find.","name":"model","type":"string"}},"rets":{"ret":{"text":"A table of all found entities.","name":"","type":"table"}}}},
{"function":{"name":"FindByClassAndParent","parent":"ents","type":"libraryfunc","description":{"text":"Finds all entities that are of given class and are children of given entity. This works internally by iterating over .","page":"ents.GetAll"},"realm":"Shared","file":{"text":"lua/includes/extensions/ents.lua","line":"2"},"args":{"arg":[{"text":"The class of entities to search for","name":"class","type":"string"},{"text":"Parent of entities that are being searched for","name":"parent","type":"Entity"}]},"rets":{"ret":{"text":"A table of found entities or nil if none are found","name":"","type":"table"}}}},
{"function":{"name":"FindByClass","parent":"ents","type":"libraryfunc","description":{"text":"Gets all entities with the given class, supports wildcards. This works internally by iterating over . Even if internally ents.GetAll is used, It is faster to use ents.FindByClass than ents.GetAll with a single class comparison.","page":"ents.GetAll","note":"Asterisks (*) are the only wildcard supported."},"realm":"Shared","args":{"arg":{"text":"The class of the entities to find.","name":"class","type":"string"}},"rets":{"ret":{"text":"A table containing all found entities","name":"","type":"table"}}},"example":{"description":"Prints the location of every prop on the map.","code":"for k, v in pairs( ents.FindByClass( \"prop_*\" ) ) do\n\tprint( v:GetPos() )\nend","output":"The location of each prop on the map. In gm_construct, the output might be as follows:\n\n\n```\n-2936.288818 -1376.545532 -73.852913\n-2943.928467 -1375.800171 -84.964996\n-2932.637695 -1288.051636 -76.791924\n-2064.000000 -183.000000 -179.216003\n-2384.000000 -183.000000 -179.216003\n-2704.000000 -183.000000 -179.216003\n-1744.000000 -183.000000 -179.216003\n-1424.000000 -183.000000 -179.216003\n-3019.895020 -1095.824829 -78.900757\n```"}},
{"function":{"name":"FindAlongRay","parent":"ents","type":"libraryfunc","description":"Returns a table of all entities along the ray. The ray does not stop on collisions, meaning it will go through walls/entities.","realm":"Shared","args":{"arg":[{"text":"The start position of the ray","name":"start","type":"Vector"},{"text":"The end position of the ray","name":"end","type":"Vector"},{"text":"The mins corner of the ray","name":"mins","type":"Vector","default":"nil"},{"text":"The maxs corner of the ray","name":"maxs","type":"Vector","default":"nil"}]},"rets":{"ret":{"text":"Table of the found entities.","name":"","type":"table"}}}},
{"function":{"name":"CreateClientside","parent":"ents","type":"libraryfunc","description":"Creates a clientside only scripted entity. The scripted entity must be of \"anim\" type.","realm":"Client","args":{"arg":{"text":"The class name of the entity to create.","name":"class","type":"string"}},"rets":{"ret":{"text":"Created entity.","name":"","type":"Entity"}}}},
{"function":{"name":"CreateClientProp","parent":"ents","type":"libraryfunc","description":{"text":"Creates a clientside only prop. See also .","page":"Global.ClientsideModel","bug":{"text":"Projected textures do not work on clientside props under specific conditions (see [this explanation](https://github.com/Facepunch/garrysmod-issues/issues/3268#issuecomment-324821962)).","issue":"3268"}},"realm":"Client","args":{"arg":{"text":"The model for the entity to be created.","name":"model","type":"string","default":"models/error.mdl","warning":{"text":"Model must be precached with  on the server before usage.","page":"util.PrecacheModel"}}},"rets":{"ret":{"text":"Created entity. (C_PhysPropClientside)","name":"","type":"Entity"}}},"example":{"description":"Creates a clientside prop at the player location.","code":"function GhostBarrel( ply )\n\tlocal c_Model = ents.CreateClientProp()\n\tc_Model:SetPos( ply:GetPos() )\n\tc_Model:SetModel( \"models/props_borealis/bluebarrel001.mdl\" )\n\tc_Model:SetParent( ply )\n\tc_Model:Spawn()\nend"}},
{"function":{"name":"Create","parent":"ents","type":"libraryfunc","description":{"text":"Creates an entity. This function will fail and return NULL if the networked-edict limit is hit (around 8176), or the provided entity class doesn't exist.","warning":{"text":"Do not use before  has been called, otherwise the server will crash!","page":"GM:InitPostEntity","br":{"text":"If you need to perform entity creation when the game starts, create a hook for  and do it there.","page":"GM:InitPostEntity"}}},"realm":"Server","args":{"arg":{"text":"The classname of the entity to create","name":"class","type":"string"}},"rets":{"ret":{"text":"The created entity, or NULL if failed","name":"","type":"Entity"}}},"example":{"description":"Creates a gmod_button entity near 0,0,0","code":"local button = ents.Create( \"gmod_button\" )\nif ( !IsValid( button ) ) then return end // Check whether we successfully made an entity, if not - bail\nbutton:SetModel( \"models/dav0r/buttons/button.mdl\" )\nbutton:SetPos( Vector( 0, 0, 100 ) )\nbutton:Spawn()"}},
{"function":{"name":"WriteSave","parent":"engine","type":"libraryfunc","description":"Stores savedata into the game (can be loaded using the LoadGame menu)","realm":"Client","args":{"arg":[{"text":"Data generated by gmsave.SaveMap","name":"saveData","type":"string"},{"text":"Name the save will have.","name":"name","type":"string"},{"text":"When the save was saved during the game (Put CurTime here)","name":"time","type":"number"},{"text":"The map the save is used for.","name":"map","type":"string"}]}}},
{"function":{"name":"WriteDupe","parent":"engine","type":"libraryfunc","description":"Saves a duplication as a file.","realm":"Client","args":{"arg":[{"text":"Dupe table, encoded by  and compressed by","name":"dupe","type":"string","page":["util.TableToJSON","util.Compress"]},{"text":"The dupe icon, created by","name":"jpeg","type":"string","page":"render.Capture"}]}}},
{"function":{"name":"VideoSettings","parent":"engine","type":"libraryfunc","description":{"text":"Returns video recording settings set by . Used by Demo-To-Video feature.","page":"video.Record"},"realm":"Client","rets":{"ret":{"text":"The video recording settings, see .","name":"","type":"table","page":"Structures/VideoData"}}}},
{"function":{"name":"TickInterval","parent":"engine","type":"libraryfunc","description":"Returns the number of seconds between each gametick.","realm":"Shared and Menu","rets":{"ret":{"text":"Number of seconds between each gametick.","name":"","type":"number"}}},"example":{"code":"print(1 / engine.TickInterval())","output":"66.666668156783 (servertick is 66)"}},
{"function":{"name":"TickCount","parent":"engine","type":"libraryfunc","description":"Returns the number of ticks since the game server started.","realm":"Shared","rets":{"ret":{"text":"Number of ticks since the game server started.","name":"","type":"number"}}}},
{"function":{"name":"SetMounted","parent":"engine","type":"libraryfunc","description":"Sets the mounting options for mountable content.","realm":"Menu","args":{"arg":[{"text":"The depot id of the game to mount.","name":"depotID","type":"string"},{"text":"The mount state, true to mount, false to unmount","name":"doMount","type":"boolean"}]}}},
{"function":{"name":"ServerFrameTime","parent":"engine","type":"libraryfunc","description":{"text":"Returns an estimate of the server's performance. Equivalent to calling  from the server, according to source code.","page":"Global.FrameTime"},"realm":"Client","rets":{"ret":[{"text":"Frame time","name":"","type":"number"},{"text":"Server Framerate Std Deviation","name":"","type":"number"}]}},"example":{"description":"Get the servers tickrate. Can be used to indicate lag","code":"print(\"Server Tick: \"..(1/engine.ServerFrameTime()))","output":"Server Tick: 66.666668156783"}},
{"function":{"name":"OpenDupe","parent":"engine","type":"libraryfunc","description":"Loads a duplication from the local filesystem.","realm":"Client","args":{"arg":{"text":"Name of the file. e.g, engine.OpenDupe(\"dupes/8b809dd7a1a9a375e75be01cdc12e61f.dupe\")","name":"dupeName","type":"string"}},"rets":{"ret":{"text":"Compressed dupeData. Use util.JSONToTable to make it into a format useable by the duplicator tool.","name":"","type":"string"}}}},
{"function":{"name":"LightStyle","parent":"engine","type":"libraryfunc","description":{"text":"This is a direct binding to the function “engine->LightStyle”. This function allows you to change the default light style of the map - so you can make lighting lighter or darker. You’ll need to call  clientside to refresh the lightmaps to this new color.","page":"render.RedownloadAllLightmaps","bug":{"text":"Calling this function with arguments 0 and \"a\" will cause dynamic lights such as those produced by the Light tool to stop working.","issue":"3626"}},"realm":"Server","args":{"arg":[{"text":"The lightstyle to edit. 0 to 63. If you want to edit map lighting, you want to set this to 0.","name":"lightstyle","type":"number"},{"text":"The pattern to change the lightstyle to. \"a\" is the darkest, \"z\" is the brightest. You can use stuff like \"abcxyz\" to make flashing patterns. The normal brightness for a map is \"m\". Values over \"z\" are allowed, \"~\" for instance.","name":"pattern","type":"string"}]}}},
{"function":{"name":"IsRecordingDemo","parent":"engine","type":"libraryfunc","description":"Returns true if the game is currently recording a demo file (.dem) using gm_demo","realm":"Client and Menu","rets":{"ret":{"text":"Whether the game is currently recording a demo or not.","name":"","type":"boolean"}}}},
{"function":{"name":"IsPlayingDemo","parent":"engine","type":"libraryfunc","description":"Returns true if we're currently playing a demo.\n\nYou will notice that there's no server-side version of this. That's because there is no server when playing a demo. Demos are both recorded and played back purely clientside.","realm":"Client and Menu","rets":{"ret":{"text":"Whether the game is currently playing a demo or not.","name":"","type":"boolean"}}}},
{"function":{"name":"GetUserContent","parent":"engine","type":"libraryfunc","description":{"text":"Returns the UGC (demos, saves and dupes) the player have subscribed to on the workshop.","deprecated":{"text":"Used internally for in-game menus, may be merged in the future into .","page":"engine.GetAddons"}},"realm":"Shared and Menu","rets":{"ret":{"text":"Returns a table with 6 keys (title, type, tags, wsid, timeadded)","name":"","type":"table"}}}},
{"function":{"name":"GetGames","parent":"engine","type":"libraryfunc","description":"Returns an array of tables corresponding to all games from which Garry's Mod supports mounting content.","realm":"Shared and Menu","rets":{"ret":{"text":"A table of tables containing all mountable games","name":"","type":"table"}}},"example":{"description":"Prints out a list of games, their Steam AppIds, titles and status (owned, installed, mounted).","code":"PrintTable( engine.GetGames() )","output":"```\n1:\n depot = 220\n title = Half-Life 2\n owned = true\n folder = hl2\n mounted = true\n installed = true\n2:\n depot = 240\n title = Counter-Strike\n owned = false\n folder = cstrike\n mounted = false\n installed = false\n3:\n depot = 300\n title = Day of Defeat\n owned = false\n folder = dod\n mounted = false\n installed = false\n4:\n depot = 440\n title = Team Fortress 2\n owned = true\n folder = tf\n mounted = true\n installed = true\n```\n\n```"}},
{"function":{"name":"GetGamemodes","parent":"engine","type":"libraryfunc","description":"Returns a table containing info for all installed gamemodes","realm":"Shared and Menu","rets":{"ret":{"text":"gamemodes","name":"","type":"table"}}},"example":{"description":"Prints out a list of gamemodes and various info","code":"PrintTable( engine.GetGamemodes() )","output":"```\n1:\n title = Base\n workshopid = \n menusystem = false\n maps = \n name = base\n2:\n title = Sandbox\n workshopid = \n menusystem = true\n maps = ^gm_| ^gmod_\n name = sandbox\n```\n\n```"}},
{"function":{"name":"GetDemoPlaybackTotalTicks","parent":"engine","type":"libraryfunc","description":"Returns total amount of ticks of currently loaded demo.\n\nIf not playing a demo, returns 0 or the value of last played demo.","realm":"Client and Menu","rets":{"ret":{"text":"Total amount of ticks of currently loaded demo.","name":"","type":"number"}}}},
{"function":{"name":"GetDemoPlaybackTimeScale","parent":"engine","type":"libraryfunc","description":"Returns time scale of demo playback.\n\nIf not during demo playback, returns 1.","realm":"Client and Menu","rets":{"ret":{"text":"The time scale of demo playback, value of demo_timescale console variable.","name":"","type":"number"}}}},
{"function":{"name":"GetDemoPlaybackTick","parent":"engine","type":"libraryfunc","description":"Current tick of currently loaded demo.\n\nIf not playing a demo, it will return amount of ticks since last demo playback.","realm":"Client and Menu","rets":{"ret":{"text":"The amount of ticks of currently loaded demo.","name":"","type":"number"}}}},
{"function":{"name":"GetDemoPlaybackStartTick","parent":"engine","type":"libraryfunc","description":{"text":"When starting playing a demo,  will be reset and its old value will be added to this functions return value.","page":"engine.GetDemoPlaybackTick"},"realm":"Client and Menu","rets":{"ret":{"name":"","type":"number"}}}},
{"function":{"name":"GetAddons","parent":"engine","type":"libraryfunc","description":"Returns a list of addons the player have subscribed to on the workshop.\n\nThis list will also include \"Floating\" .gma addons that are mounted by the game, but not the folder addons.","realm":"Shared and Menu","rets":{"ret":{"text":"A table with 6 keys (downloaded, models, title, file, mounted, wsid)","name":"","type":"table"}}},"example":{"description":"Will return a list of all the workshop addons you have downloaded / are downloading.","code":"PrintTable(engine.GetAddons())","output":"```\n1:\n\t\tdownloaded\t=\ttrue \n\t\tmodels\t\t=\t0 \n\t\ttitle\t\t=\tTitle of Addon \n\t\tfile\t\t=\taddons/title_of_addon_123456789.gma \n\t\tmounted\t\t=\ttrue\n\t\twsid\t\t=\t123456789\n```"}},
{"function":{"name":"CloseServer","parent":"engine","type":"libraryfunc","description":"Closes the server and completely exits.\n\nThis is only functional when running in server test mode (launch option -systemtest). Server test mode is used internally at Facepunch as part of the build process to make sure that the dedicated servers aren't crashing on startup.","realm":"Server"}},
{"function":{"name":"ActiveGamemode","parent":"engine","type":"libraryfunc","description":{"text":"Returns the name of the currently running gamemode.","bug":{"text":"This will return the incorrect gamemode name on the client if used too early.","issue":"1988"}},"realm":"Shared and Menu","rets":{"ret":{"text":"The active gamemode's name. This is the name of the gamemode's folder.","name":"","type":"string"}}},"example":{"description":"Prints out the name of the active gamemode.","code":"print( engine.ActiveGamemode() )","outputfixedwidth":"Fixed width","output":"sandbox"}},
{"function":{"name":"Register","parent":"effects","type":"libraryfunc","description":{"text":"Registers a new effect.","internal":""},"realm":"Client","args":{"arg":[{"text":"Effect table.","name":"effect_table","type":"table"},{"text":"Effect name.","name":"name","type":"string"}]}}},
{"function":{"name":"Create","parent":"effects","type":"libraryfunc","description":{"text":"Returns the table of the effect specified.","internal":{"text":"You are looking for .","page":"util.Effect"}},"realm":"Client","args":{"arg":{"text":"Effect name.","name":"name","type":"string"}},"rets":{"ret":{"text":"Effect table.","name":"","type":"table"}}}},
{"function":{"name":"WorkoutSize","parent":"duplicator","type":"libraryfunc","description":"\"Work out the AABB size\"","realm":"Server","args":{"arg":{"text":"A table of entity duplication datums.","name":"Ents","type":"table"}}}},
{"function":{"name":"StoreEntityModifier","parent":"duplicator","type":"libraryfunc","description":"Stores an entity modifier into an entity for saving","realm":"Server","args":{"arg":[{"text":"The entity to store modifier in","name":"entity","type":"Entity"},{"text":"Unique modifier name as defined in","name":"name","type":"string","page":"duplicator.RegisterEntityModifier"},{"text":"Modifier data","name":"data","type":"table"}]}}},
{"function":{"name":"StoreBoneModifier","parent":"duplicator","type":"libraryfunc","description":"Stores bone mod data for a registered bone modification function","realm":"Server","args":{"arg":[{"text":"The entity to add bone mod data to","name":"ent","type":"Entity"},{"text":"The bone ID.\nSee","name":"boneID","type":"number","page":"Entity:GetPhysicsObjectNum"},{"text":"The key for the bone modification","name":"key","type":"any"},{"text":"The bone modification data that is passed to the bone modification function","name":"data","type":"table"}]}}},
{"function":{"name":"SetLocalAng","parent":"duplicator","type":"libraryfunc","description":"\"When a copy is copied it will be translated according to these.\nIf you set them - make sure to set them back to 0 0 0!\"","realm":"Shared","args":{"arg":{"text":"The angle to offset all pastes from","name":"v","type":"Angle"}}}},
{"function":{"name":"SetLocalPos","parent":"duplicator","type":"libraryfunc","description":"\"When a copy is copied it will be translated according to these.\nIf you set them - make sure to set them back to 0 0 0!\"","realm":"Shared","args":{"arg":{"text":"The position to offset all pastes from","name":"v","type":"Vector"}}}},
{"function":{"name":"RemoveMapCreatedEntities","parent":"duplicator","type":"libraryfunc","description":"Help to remove certain map created entities before creating the saved entities\nThis is obviously so we don't get duplicate props everywhere.\nIt should be called before calling Paste.","realm":"Server"}},
{"function":{"name":"RegisterEntityModifier","parent":"duplicator","type":"libraryfunc","description":{"text":"This allows you to register tweaks to entities. For instance, if you were making an \"unbreakable\" addon, you would use this to enable saving the \"unbreakable\" state of entities between duplications.\n\nThis function registers a piece of generic code that is run on all entities with this modifier. In order to have it actually run, use .\n\nThis function does nothing when run clientside.","page":"duplicator.StoreEntityModifier"},"realm":"Shared","args":{"arg":[{"text":"An identifier for your modification. This is not limited, so be verbose. \"Person's 'Unbreakable' mod\" is far less likely to cause conflicts than \"unbreakable\"","name":"name","type":"string"},{"text":"The function to be called for your modification. It should have the arguments (Player, Entity, Data), where data is what you pass to .","name":"func","type":"function","page":"duplicator.StoreEntityModifier"}]}}},
{"function":{"name":"RegisterConstraint","parent":"duplicator","type":"libraryfunc","description":"Register a function used for creating a duplicated constraint.","realm":"Shared","args":{"arg":[{"text":"The unique name of new constraint","name":"name","type":"string"},{"text":"Function to be called when this constraint is created","name":"callback","type":"function"},{"text":"Arguments passed to the callback function","name":"...","type":"any"}]}},"example":{"description":"This is from lua/includes/modules/constraint.lua, it registers the Weld Constraint.","code":"duplicator.RegisterConstraint( \"Weld\", Weld, \"Ent1\", \"Ent2\", \"Bone1\", \"Bone2\", \"forcelimit\", \"nocollide\", \"deleteonbreak\" )"}},
{"function":{"name":"RegisterEntityClass","parent":"duplicator","type":"libraryfunc","description":{"text":"This allows you to specify a specific function to be run when your SENT is pasted with the duplicator, instead of relying on the generic automatic functions.","note":{"text":"Automatically calls  for the entity class.","page":"duplicator.Allow"}},"realm":"Shared","args":{"arg":[{"text":"The ClassName of the entity you wish to register a factory for","name":"name","type":"string"},{"text":"The factory function you want to have called. It should have the arguments (Player, ...) where ... is whatever arguments you request to be passed. It also should return the entity created, otherwise  result will not include it!","name":"function","type":"function","page":"duplicator.Paste"},{"text":"Strings of the names of arguments you want passed to function the from the . As a special case, \"Data\" will pass the whole structure.","name":"args","type":"vararg","page":"Structures/EntityCopyData"}]}},"example":{"description":"Prints the datatable and then lets the duplicator do it's job","code":"duplicator.RegisterEntityClass(\"prop_physics\", function(ply, data)\n\tPrintTable(data)\n\treturn duplicator.GenericDuplicatorFunction(ply, data)\nend, \"Data\")","output":"```\nSkin = 0\nMins = -14.357550 -14.390250 -25.934851\nFlex:\n\tColGroup = 0\nPos = -292.415070 -157.575043 -12262.056641\nPhysicsObjects:\n\t0:\n\t\tFrozen = false\n\t\tPos = 13.750092 0.490356 -4.675781\n\t\tAngle = 0.057 87.808 -0.031\nClass = prop_physics\nFlexScale = 1\nMaxs = 14.438149 14.405550 25.995348\nModel = models/props_borealis/bluebarrel001.mdl\nAngle = 0.057 134.318 -0.031\n```"}},
{"function":{"name":"RegisterBoneModifier","parent":"duplicator","type":"libraryfunc","description":{"text":"Registers a function to be called on each of an entity's bones when  is called.","page":"duplicator.ApplyBoneModifiers","note":"This function is available to call on the client, but registered functions aren't used anywhere!"},"realm":"Shared","args":{"arg":[{"text":"The type of the key doesn't appear to matter, but it is preferable to use a string.","name":"key","type":"any"},{"text":"Function called on each bone that an ent has. Called during .\nFunction parameters are:\n*  ply\n*  ent\n*  boneID\n*  bone\n*  data\n\n\nThe data table that is passed to boneModifier is set with","name":"boneModifier","type":"function","page":["duplicator.ApplyBoneModifiers","Player","Entity","number","PhysObj","table","duplicator.StoreBoneModifier"]}]}}},
{"function":{"name":"Paste","parent":"duplicator","type":"libraryfunc","description":{"text":"\"Given entity list and constraint list, create all entities and return their tables\"\n\nCalls  on each sub-table of EntityList. If an entity is actually created, it calls  with the entity's duplicator data, then ,  and finally   is called.\n\nThe constraints are then created with .","page":["duplicator.CreateEntityFromTable","ENTITY:OnDuplicated","duplicator.ApplyEntityModifiers","duplicator.ApplyBoneModifiers","ENTITY:PostEntityPaste","duplicator.CreateConstraintFromTable"]},"realm":"Server","file":{"text":"lua/includes/modules/duplicator.lua","line":"697-L790"},"args":{"arg":[{"text":"The player who wants to create something","name":"Player","type":"Player"},{"text":"A table of duplicator data to create the entities from","name":"EntityList","type":"table"},{"text":"A table of duplicator data to create the constraints from","name":"ConstraintList","type":"table"}]},"rets":{"ret":[{"text":"List of created entities","name":"","type":"table"},{"text":"List of created constraints","name":"","type":"table"}]}},"example":{"description":"Code used for a TOOL to copy duplication data on right click and paste it with its original info on left click.","code":"function TOOL:LeftClick( trace )\n\tif (SERVER) then\n\t\tduplicator.Paste(self:GetOwner(),Dupe.Entities,Dupe.Constraints)\n\t\tprint(\"PASTED\")\n\tend\n\treturn true\nend\n \nfunction TOOL:RightClick( trace )\n\tif (SERVER and IsValid(trace.Entity)) then\n\t\tDupe = duplicator.Copy(trace.Entity)\n\t\tprint(\"COPIED\")\n\tend\n\treturn true\nend"}},
{"function":{"name":"IsAllowed","parent":"duplicator","type":"libraryfunc","description":"Returns whether the entity can be duplicated or not","realm":"Shared","args":{"arg":{"text":"An entity's classname","name":"classname","type":"string"}},"rets":{"ret":{"text":"Returns true if the entity can be duplicated (nil otherwise)","name":"","type":"boolean"}}}},
{"function":{"name":"GenericDuplicatorFunction","parent":"duplicator","type":"libraryfunc","description":{"text":"\"Generic function for duplicating stuff\" \n\n\nThis is called when  can't find an entity factory to build with. It calls  and  to apply standard duplicator stored things such as the model and position.","page":["duplicator.CreateEntityFromTable","duplicator.DoGeneric","duplicator.DoGenericPhysics"]},"realm":"Server","args":{"arg":[{"text":"The player who wants to create something","name":"ply","type":"Player"},{"text":"The duplication data to build the entity with","name":"data","type":"table"}]},"rets":{"ret":{"text":"The newly created entity","name":"","type":"Entity"}}}},
{"function":{"name":"FindEntityClass","parent":"duplicator","type":"libraryfunc","description":{"text":"Returns the entity class factory registered with .","page":"duplicator.RegisterEntityClass"},"realm":"Shared","args":{"arg":{"text":"The name of the entity class factory","name":"name","type":"string"}},"rets":{"ret":{"text":"Is compromised of the following members:\n*  Func - The function that creates the entity\n*  Args - Arguments to pass to the function","name":"","type":"table","page":["function","table"]}}}},
{"function":{"name":"GetAllConstrainedEntitiesAndConstraints","parent":"duplicator","type":"libraryfunc","description":{"text":"Fills entStorageTable with all of the entities in a group connected with constraints. Fills constraintStorageTable with all of the constrains constraining the group.","internal":""},"realm":"Server","args":{"arg":[{"text":"The entity to start from","name":"ent","type":"Entity"},{"text":"The table the entities will be inserted into","name":"entStorageTable","type":"table"},{"text":"The table the constraints will be inserted into","name":"constraintStorageTable","type":"table"}]},"rets":{"ret":[{"text":"entStorageTable","name":"","type":"table"},{"text":"constraintStorageTable","name":"","type":"table"}]}}},
{"function":{"name":"DoGenericPhysics","parent":"duplicator","type":"libraryfunc","description":"\"Applies bone data, generically.\"\n\n\nIf data contains a PhysicsObjects table, it moves, re-angles and if relevent freezes all specified bones, first converting from local coordinates to world coordinates.","realm":"Server","args":{"arg":[{"text":"The entity to be applied upon","name":"ent","type":"Entity"},{"text":"The player who owns the entity. Unused in function as of early 2013","name":"ply","type":"Player","default":"nil"},{"text":"The data to be applied onto the entity","name":"data","type":"table"}]}}},
{"function":{"name":"DoGeneric","parent":"duplicator","type":"libraryfunc","description":{"text":"\"Applies generic every-day entity stuff for ent from table data.\"\n\n\nDepending on the values of Model, Angle, Pos, Skin, Flex, Bonemanip, ModelScale, ColGroup, Name, and BodyG ( of multiple values) in the data table, this calls , , , , , , , , ,  on ent.\n\n\nIf ent has a RestoreNetworkVars function, it is called with data.DT.","page":["table","Entity:SetModel","Entity:SetAngles","Entity:SetPos","Entity:SetSkin","duplicator.DoFlex","duplicator.DoBoneManipulator","Entity:SetModelScale","Entity:SetCollisionGroup","Entity:SetName","Entity:SetBodygroup"]},"realm":"Server","args":{"arg":[{"text":"The entity to be applied upon","name":"ent","type":"Entity"},{"text":"The data to be applied onto the entity","name":"data","type":"table"}]}}},
{"function":{"name":"DoBoneManipulator","parent":"duplicator","type":"libraryfunc","description":{"text":"\"Restores the bone's data.\"\n\n\nLoops through Bones and calls ,  and  on ent with the table keys and the subtable values s, a and p respectively.","page":["Entity:ManipulateBoneScale","Entity:ManipulateBoneAngles","Entity:ManipulateBonePosition"]},"realm":"Server","args":{"arg":[{"text":"The entity to be bone manipulated","name":"ent","type":"Entity"},{"text":"Table with a  for every bone (that has manipulations applied) using the bone ID as the table index.","name":"bones","type":"table","page":"Structures/BoneManipulationData"}]}}},
{"function":{"name":"DoFlex","parent":"duplicator","type":"libraryfunc","description":{"text":"Restores the flex data using  and","page":["Entity:SetFlexWeight","Entity:SetFlexScale"]},"realm":"Server","args":{"arg":[{"text":"The entity to restore the flexes on","name":"ent","type":"Entity"},{"text":"The flexes to restore","name":"flex","type":"table"},{"text":"The flex scale to apply. (Flex scale is unchanged if omitted)","name":"scale","type":"number","default":"nil"}]}}},
{"function":{"name":"CreateEntityFromTable","parent":"duplicator","type":"libraryfunc","description":{"text":"\"Create an entity from a table.\" \n\n\nThis creates an entity using the data in EntTable.\n\n\nIf an entity factory has been registered for the entity's Class, it will be called. \n\n\nOtherwise,  will be called instead.","page":"duplicator.GenericDuplicatorFunction"},"realm":"Server","args":{"arg":[{"text":"The player who wants to create something","name":"ply","type":"Player"},{"text":"The duplication data to build the entity with. See","name":"entTable","type":"table","page":"Structures/EntityCopyData"}]},"rets":{"ret":{"text":"The newly created entity","name":"","type":"Entity"}}}},
{"function":{"name":"CreateConstraintFromTable","parent":"duplicator","type":"libraryfunc","description":{"text":"Creates a constraint from a saved/copied constraint table.","internal":""},"realm":"Server","args":{"arg":[{"text":"Saved/copied constraint table","name":"constraint","type":"table"},{"text":"The list of entities that are to be constrained","name":"entityList","type":"table"}]},"rets":{"ret":{"text":"The newly created constraint entity","name":"","type":"Entity"}}}},
{"function":{"name":"CopyEntTable","parent":"duplicator","type":"libraryfunc","description":{"text":"Returns a table with some entity data that can be used to create a new entity with","page":"duplicator.CreateEntityFromTable"},"realm":"Server","args":{"arg":{"text":"The entity table to save","name":"ent","type":"Entity"}},"rets":{"ret":{"text":"See","name":"","type":"table","page":"Structures/EntityCopyData"}}}},
{"function":{"name":"CopyEnts","parent":"duplicator","type":"libraryfunc","description":"Copies the passed table of entities to save for later.","realm":"Server","args":{"arg":{"text":"A table of entities to save/copy.","name":"ents","type":"table"}},"rets":{"ret":{"text":"A table containing duplication info which includes the following members:\n*  Entities\n*  Constraints\n*  Mins\n*  Maxs","name":"","type":"table","page":["table","table","Vector","Vector"]}}}},
{"function":{"name":"Copy","parent":"duplicator","type":"libraryfunc","description":"Copies the entity, and all of its constraints and entities, then returns them in a table.","realm":"Server","args":{"arg":[{"text":"The entity to duplicate. The function will automatically copy all constrained entities.","name":"ent","type":"Entity"},{"text":"A preexisting table to add entities and constraints in from.\nUses the same table format as the table returned from this function.","name":"tableToAdd","type":"table","default":"{}"}]},"rets":{"ret":{"text":"A table containing duplication info which includes the following members:\n*  Entities\n*  Constraints\n*  Mins\n*  Maxs\n\nThe values of Mins & Maxs from the table are returned from","name":"","type":"table","page":["table","table","Vector","Vector","duplicator.WorkoutSize"]}}}},
{"function":{"name":"ClearEntityModifier","parent":"duplicator","type":"libraryfunc","description":"Clears/removes the chosen entity modifier from the entity.","realm":"Server","args":{"arg":[{"text":"The entity the modification is stored on","name":"ent","type":"Entity"},{"text":"The key of the stored entity modifier","name":"key","type":"any"}]}}},
{"function":{"name":"ApplyBoneModifiers","parent":"duplicator","type":"libraryfunc","description":{"text":"Calls every function registered with  on each bone the ent has.","page":"duplicator.RegisterBoneModifier"},"realm":"Server","args":{"arg":[{"text":"The player whose entity this is","name":"ply","type":"Player"},{"text":"The entity in question","name":"ent","type":"Entity"}]}}},
{"function":{"name":"ApplyEntityModifiers","parent":"duplicator","type":"libraryfunc","description":{"text":"Calls every function registered with  on the entity.","page":"duplicator.RegisterEntityModifier"},"realm":"Server","args":{"arg":[{"text":"The player whose entity this is","name":"ply","type":"Player"},{"text":"The entity in question","name":"ent","type":"Entity"}]}}},
{"function":{"name":"Allow","parent":"duplicator","type":"libraryfunc","description":"Allow this entity to be duplicated","realm":"Shared","args":{"arg":{"text":"An entity's classname","name":"classname","type":"string"}}}},
{"function":{"name":"StartMove","parent":"drive","type":"libraryfunc","description":{"text":"The user command is received by the server and then converted into a move. This is also run clientside when in multiplayer, for prediction to work.","internal":""},"realm":"Shared","args":{"arg":[{"text":"The player","name":"ply","type":"Player"},{"text":"The move data","name":"mv","type":"CMoveData"},{"text":"The user command","name":"cmd","type":"CUserCmd"}]},"rets":{"ret":{"text":"true if succeeded","name":"","type":"boolean"}}}},
{"function":{"name":"Start","parent":"drive","type":"libraryfunc","description":"Called when the player first starts driving this entity","realm":"Shared","args":{"arg":[{"text":"The player","name":"ply","type":"Player"},{"text":"The entity","name":"ent","type":"Entity"}]}}},
{"function":{"name":"PlayerStopDriving","parent":"drive","type":"libraryfunc","description":"Stops the player from driving anything. ( For example a prop in sandbox )","realm":"Shared","args":{"arg":{"text":"The player to affect","name":"ply","type":"Player"}}}},
{"function":{"name":"Register","parent":"drive","type":"libraryfunc","description":"Registers a new entity drive.","realm":"Shared","args":{"arg":[{"text":"The name of the drive.","name":"name","type":"string"},{"text":"The data required to create the drive. This includes the functions used by the drive.","name":"data","type":"table"},{"text":"The base of the drive.","name":"base","type":"string"}]}},"example":{"description":"Adds a noclip drive type.","code":"drive.Register( \"drive_noclip\", \n{\n\t--\n\t-- Called before each move. You should use your entity and cmd to \n\t-- fill mv with information you need for your move.\n\t--\n\tStartMove =  function( self, mv, cmd )\n\n\t\t--\n\t\t-- Update move position and velocity from our entity\n\t\t--\n\t\tmv:SetOrigin( self.Entity:GetNetworkOrigin() )\n\t\tmv:SetVelocity( self.Entity:GetAbsVelocity() )\n\n\tend,\n\n\t--\n\t-- Runs the actual move. On the client when there's \n\t-- prediction errors this can be run multiple times.\n\t-- You should try to only change mv.\n\t--\n\tMove = function( self, mv )\n\n\t\t--\n\t\t-- Set up a speed, go faster if shift is held down\n\t\t--\n\t\tlocal speed = 0.0005 * FrameTime()\n\t\tif ( mv:KeyDown( IN_SPEED ) ) then speed = 0.005 * FrameTime() end\n\n\t\t--\n\t\t-- Get information from the movedata\n\t\t--\n\t\tlocal ang = mv:GetMoveAngles()\n\t\tlocal pos = mv:GetOrigin()\n\t\tlocal vel = mv:GetVelocity()\n\n\t\t--\n\t\t-- Add velocities. This can seem complicated. On the first line\n\t\t-- we're basically saying get the forward vector, then multiply it\n\t\t-- by our forward speed (which will be > 0 if we're holding W, < 0 if we're\n\t\t-- holding S and 0 if we're holding neither) - and add that to velocity.\n\t\t-- We do that for right and up too, which gives us our free movement.\n\t\t--\n\t\tvel = vel + ang:Forward() * mv:GetForwardSpeed() * speed\n\t\tvel = vel + ang:Right() * mv:GetSideSpeed() * speed\n\t\tvel = vel + ang:Up() * mv:GetUpSpeed() * speed\n\n\t\t--\n\t\t-- We don't want our velocity to get out of hand so we apply\n\t\t-- a little bit of air resistance. If no keys are down we apply\n\t\t-- more resistance so we slow down more.\n\t\t--\n\t\tif ( math.abs(mv:GetForwardSpeed()) + math.abs(mv:GetSideSpeed()) + math.abs(mv:GetUpSpeed()) < 0.1 ) then\n\t\t\tvel = vel * 0.90\n\t\telse\n\t\t\tvel = vel * 0.99\n\t\tend\n\n\t\t--\n\t\t-- Add the velocity to the position (this is the movement)\n\t\t--\n\t\tpos = pos + vel\n\n\t\t--\n\t\t-- We don't set the newly calculated values on the entity itself\n\t\t-- we instead store them in the movedata. These get applied in FinishMove.\n\t\t--\n\t\tmv:SetVelocity( vel )\n\t\tmv:SetOrigin( pos )\n\n\tend,\n\n\t--\n\t-- The move is finished. Use mv to set the new positions\n\t-- on your entities/players.\n\t--\n\tFinishMove =  function( self, mv )\n\n\t\t--\n\t\t-- Update our entity!\n\t\t--\n\t\tself.Entity:SetNetworkOrigin( mv:GetOrigin() )\n\t\tself.Entity:SetAbsVelocity( mv:GetVelocity() )\n\t\tself.Entity:SetAngles( mv:GetMoveAngles() )\n\n\t\t--\n\t\t-- If we have a physics object update that too. But only on the server.\n\t\t--\n\t\tif ( SERVER && IsValid( self.Entity:GetPhysicsObject() ) ) then\n\n\t\t\tself.Entity:GetPhysicsObject():EnableMotion( true )\n\t\t\tself.Entity:GetPhysicsObject():SetPos( mv:GetOrigin() );\n\t\t\tself.Entity:GetPhysicsObject():Wake()\n\t\t\tself.Entity:GetPhysicsObject():EnableMotion( false )\n\n\t\tend\n\n\tend,\n\n\t--\n\t-- Calculates the view when driving the entity\n\t--\n\tCalcView =  function( self, view )\n\n\t\t--\n\t\t-- Use the utility method on drive_base.lua to give us a 3rd person view\n\t\t--\n\t\tlocal idealdist = math.max( 10, self.Entity:BoundingRadius() ) * 4\n\n\t\tself:CalcView_ThirdPerson( view, idealdist, 2, { self.Entity } )\n\n\tend,\n\n}, \"drive_base\" );"}},
{"function":{"name":"PlayerStartDriving","parent":"drive","type":"libraryfunc","description":"Starts driving for the player.","realm":"Shared","args":{"arg":[{"text":"The player to affect","name":"ply","type":"Player"},{"text":"The entity to drive","name":"ent","type":"Entity"},{"text":"The driving mode","name":"mode","type":"string"}]}}},
{"function":{"name":"Move","parent":"drive","type":"libraryfunc","description":{"text":"The move is executed here.","internal":""},"realm":"Shared","args":{"arg":[{"text":"The player","name":"ply","type":"Player"},{"text":"The move data","name":"mv","type":"CMoveData"}]},"rets":{"ret":{"text":"true if succeeded","name":"","type":"boolean"}}}},
{"function":{"name":"GetMethod","parent":"drive","type":"libraryfunc","description":{"text":"Returns ( or creates if inexistent ) a driving method.","internal":""},"realm":"Shared","args":{"arg":{"text":"The player","name":"ply","type":"Player"}},"rets":{"ret":{"text":"A method object.","name":"","type":"table"}}}},
{"function":{"name":"FinishMove","parent":"drive","type":"libraryfunc","description":{"text":"The move is finished. Copy mv back into the target.","internal":""},"realm":"Shared","args":{"arg":[{"text":"The player","name":"ply","type":"Player"},{"text":"The move data","name":"mv","type":"CMoveData"}]},"rets":{"ret":{"text":"true if succeeded","name":"","type":"boolean"}}}},
{"function":{"name":"End","parent":"drive","type":"libraryfunc","description":"Player has stopped driving the entity.","realm":"Shared","args":{"arg":[{"text":"The player","name":"ply","type":"Player"},{"text":"The entity","name":"ent","type":"Entity"}]}}},
{"function":{"name":"DestroyMethod","parent":"drive","type":"libraryfunc","description":{"text":"Destroys players current driving method.","internal":""},"realm":"Shared","args":{"arg":{"text":"The player to affect","name":"ply","type":"Player"}}}},
{"function":{"name":"CreateMove","parent":"drive","type":"libraryfunc","description":{"text":"Clientside, the client creates the cmd (usercommand) from their input device (mouse, keyboard) and then it's sent to the server. Restrict view angles here.","internal":""},"realm":"Shared","args":{"arg":{"text":"The user command","name":"cmd","type":"CUserCmd"}},"rets":{"ret":{"text":"true if succeeded","name":"","type":"boolean"}}}},
{"function":{"name":"CalcView","parent":"drive","type":"libraryfunc","description":{"text":"Optionally alter the view.","internal":""},"realm":"Shared","args":{"arg":[{"text":"The player","name":"ply","type":"Player"},{"text":"The view, see","name":"view","type":"table","page":"Structures/ViewData"}]},"rets":{"ret":{"text":"true if succeeded","name":"","type":"boolean"}}}},
{"function":{"name":"TexturedQuad","parent":"draw","type":"libraryfunc","description":{"text":"Draws a texture with a table structure.","rendercontext":{"hook":"false","type":"2D"}},"realm":"Client and Menu","file":{"text":"lua/includes/modules/draw.lua","line":"288-L300"},"args":{"arg":{"text":"The texture properties. See","name":"texturedata","type":"table","page":"Structures/TextureData"}}},"example":{"description":"Example usage","code":"local TexturedQuadStructure = {\n\ttexture = surface.GetTextureID( 'phoenix_storms/amraam' ),\n\tcolor   = Color( 255, 0, 255, 255 ),\n\tx \t= 0,\n\ty \t= 0,\n\tw \t= 512,\n\th \t= 512\n}\ndraw.TexturedQuad( TexturedQuadStructure )","output":"Renders the texture."}},
{"function":{"name":"WordBox","parent":"draw","type":"libraryfunc","description":{"text":"Draws a rounded box with text in it.","rendercontext":{"hook":"false","type":"2D"}},"realm":"Client and Menu","file":{"text":"lua/includes/modules/draw.lua","line":"235-L253"},"args":{"arg":[{"text":"Size of border, should be multiple of 2. Ideally this will be 8 or 16.","name":"bordersize","type":"number"},{"text":"The X Coordinate.","name":"x","type":"number"},{"text":"The Y Coordinate.","name":"y","type":"number"},{"text":"Text to draw.","name":"text","type":"string"},{"text":"Font to draw in. See  to create your own, or  for a list of default fonts.","name":"font","type":"string","page":["surface.CreateFont",",hereDefault_Fonts"]},{"text":"The box color. Uses the .","name":"boxcolor","type":"table","page":"Color"},{"text":"The text color. Uses the .","name":"textcolor","type":"table","page":"Color"}]},"rets":{"ret":[{"text":"The width of the word box.","name":"","type":"number"},{"text":"The height of the word box.","name":"","type":"number"}]}}},
{"function":{"name":"TextShadow","parent":"draw","type":"libraryfunc","description":{"text":"Works like , but draws the text as a shadow.","page":"draw.Text","rendercontext":{"hook":"false","type":"2D"}},"realm":"Client and Menu","file":{"text":"lua/includes/modules/draw.lua","line":"265-L285"},"args":{"arg":[{"text":"The text properties. See","name":"textdata","type":"table","page":"Structures/TextData"},{"text":"How far away the shadow appears.","name":"distance","type":"number"},{"text":"How visible the shadow is (0-255).","name":"alpha","type":"number","default":"200"}]}}},
{"function":{"name":"Text","parent":"draw","type":"libraryfunc","description":{"text":"Works like  but uses a table structure instead.","page":"draw.SimpleText","rendercontext":{"hook":"false","type":"2D"}},"realm":"Client and Menu","file":{"text":"lua/includes/modules/draw.lua","line":"255-L263"},"args":{"arg":{"text":"The text properties. See the","name":"textdata","type":"table","page":"Structures/TextData"}},"rets":{"ret":[{"text":"Width of drawn text","name":"","type":"number"},{"text":"Height of drawn text","name":"","type":"number"}]}},"example":{"description":"Example usage","code":"hook.Add( \"HUDPaint\", \"drawTextExample\", function()\n\tdraw.Text( {\n\t\ttext = \"test\",\n\t\tpos = { 50, 50 }\n\t} )\nend )"}},
{"function":{"name":"SimpleText","parent":"draw","type":"libraryfunc","description":{"text":"Draws text on the screen.","rendercontext":{"hook":"false","type":"2D"}},"realm":"Client and Menu","file":{"text":"lua/includes/modules/draw.lua","line":"51-L94"},"args":{"arg":[{"text":"The text to be drawn.","name":"text","type":"string"},{"text":"The font. See  to create your own, or see  for a list of default fonts.","name":"font","type":"string","default":"DermaDefault","page":["surface.CreateFont","Default Fonts"]},{"text":"The X Coordinate.","name":"x","type":"number","default":"0"},{"text":"The Y Coordinate.","name":"y","type":"number","default":"0"},{"text":"The color of the text. Uses the .","name":"color","type":"table","default":"Color( 255, 255, 255, 255 )","page":"Color"},{"text":"The alignment of the X coordinate using .","name":"xAlign","type":"number","default":"TEXT_ALIGN_LEFT","page":"Enums/TEXT_ALIGN"},{"text":"The alignment of the Y coordinate using .","name":"yAlign","type":"number","default":"TEXT_ALIGN_TOP","page":"Enums/TEXT_ALIGN"}]},"rets":{"ret":[{"text":"The width of the text. Same value as if you were calling .","name":"","type":"number","page":"surface.GetTextSize"},{"text":"The height of the text. Same value as if you were calling .","name":"","type":"number","page":"surface.GetTextSize"}]}},"example":{"description":"Example usage","code":"hook.Add( \"HUDPaint\", \"HelloThere\", function()\n\tdraw.SimpleText( \"Hello there!\", \"DermaDefault\", 50, 50, color_white )\nend )"}},
{"function":{"name":"RoundedBoxEx","parent":"draw","type":"libraryfunc","description":{"text":"Draws a rounded rectangle. This function also lets you specify which corners are drawn rounded.","rendercontext":{"hook":"false","type":"2D"}},"realm":"Client and Menu","file":{"text":"lua/includes/modules/draw.lua","line":"175-L233"},"args":{"arg":[{"text":"Radius of the rounded corners, works best with a power of 2 number.","name":"cornerRadius","type":"number"},{"text":"The x coordinate of the top left of the rectangle.","name":"x","type":"number"},{"text":"The y coordinate of the top left of the rectangle.","name":"y","type":"number"},{"text":"The width of the rectangle.","name":"width","type":"number"},{"text":"The height of the rectangle.","name":"height","type":"number"},{"text":"The color to fill the rectangle with. Uses the .","name":"color","type":"table","page":"Color"},{"text":"Whether the top left corner should be rounded.","name":"roundTopLeft","type":"boolean","default":"false"},{"text":"Whether the top right corner should be rounded.","name":"roundTopRight","type":"boolean","default":"false"},{"text":"Whether the bottom left corner should be rounded.","name":"roundBottomLeft","type":"boolean","default":"false"},{"text":"Whether the bottom right corner should be rounded.","name":"roundBottomRight","type":"boolean","default":"false"}]}}},
{"function":{"name":"SimpleTextOutlined","parent":"draw","type":"libraryfunc","description":{"text":"Creates a simple line of text that is outlined.","rendercontext":{"hook":"false","type":"2D"}},"realm":"Client and Menu","file":{"text":"lua/includes/modules/draw.lua","line":"96-L114"},"args":{"arg":[{"text":"The text to draw.","name":"Text","type":"string"},{"text":"The font name to draw with. See  to create your own, or  for a list of default fonts.","name":"font","type":"string","default":"DermaDefault","page":["surface.CreateFont",",hereDefault_Fonts"]},{"text":"The X Coordinate.","name":"x","type":"number","default":"0"},{"text":"The Y Coordinate.","name":"y","type":"number","default":"0"},{"text":"The color of the text. Uses the .","name":"color","type":"table","default":"Color( 255, 255, 255, 255 )","page":"Color"},{"text":"The alignment of the X Coordinate using .","name":"xAlign","type":"number","default":"TEXT_ALIGN_LEFT","page":"Enums/TEXT_ALIGN"},{"text":"The alignment of the Y Coordinate using .","name":"yAlign","type":"number","default":"TEXT_ALIGN_TOP","page":"Enums/TEXT_ALIGN"},{"text":"Width of the outline.","name":"outlinewidth","type":"number"},{"text":"Color of the outline. Uses the .","name":"outlinecolor","type":"table","default":"Color( 255, 255, 255, 255 )","page":"Color"}]},"rets":{"ret":[{"text":"The width of the text. Same value as if you were calling .","name":"","type":"number","page":"surface.GetTextSize"},{"text":"The height of the text. Same value as if you were calling .","name":"","type":"number","page":"surface.GetTextSize"}]}}},
{"function":{"name":"RoundedBox","parent":"draw","type":"libraryfunc","description":{"text":"Draws a rounded rectangle.","note":{"text":"If you intend to draw a non-rounded rectangle, then it's more efficient to use .","page":"surface.DrawRect"},"rendercontext":{"hook":"false","type":"2D"}},"realm":"Client and Menu","file":{"text":"lua/includes/modules/draw.lua","line":"164-L173"},"args":{"arg":[{"text":"Radius of the rounded corners, works best with a multiple of 2.","name":"cornerRadius","type":"number"},{"text":"The x coordinate of the top left of the rectangle.","name":"x","type":"number"},{"text":"The y coordinate of the top left of the rectangle.","name":"y","type":"number"},{"text":"The width of the rectangle.","name":"width","type":"number"},{"text":"The height of the rectangle.","name":"height","type":"number"},{"text":"The color to fill the rectangle with. Uses the .","name":"color","type":"table","page":"Color"}]}}},
{"function":{"name":"GetFontHeight","parent":"draw","type":"libraryfunc","description":{"text":"Returns the height of the specified font in pixels.","rendercontext":{"hook":"false","type":"2D"}},"realm":"Client and Menu","file":{"text":"lua/includes/modules/draw.lua","line":"33-L49"},"args":{"arg":{"text":"Name of the font to get the height of.","name":"font","type":"string"}},"rets":{"ret":{"text":"The font height","name":"","type":"number"}}}},
{"function":{"name":"NoTexture","parent":"draw","type":"libraryfunc","description":{"text":"Sets drawing texture to a default white texture (vgui/white) via . Useful for resetting the drawing texture.","page":"surface.SetMaterial","rendercontext":{"hook":"false","type":"2D"}},"realm":"Client and Menu","file":{"text":"lua/includes/modules/draw.lua","line":"302-L304"}}},
{"function":{"name":"UpdateReceiver","parent":"dragndrop","type":"libraryfunc","description":{"text":"Updates the receiver to drop the panels onto. Called from .","internal":"","page":"dragndrop.Think"},"realm":"Client and Menu","file":{"text":"lua/includes/extensions/client/panel/dragdrop.lua","line":"127"}}},
{"function":{"name":"DrawText","parent":"draw","type":"libraryfunc","description":{"text":"Simple draw text at position, but this will expand newlines and tabs.\n\n\n\nSee also  for limited width and markup support.","rendercontext":{"hook":"false","type":"2D"},"page":"MarkupObject"},"realm":"Client and Menu","file":{"text":"lua/includes/modules/draw.lua","line":"116-L162"},"args":{"arg":[{"text":"Text to be drawn.","name":"text","type":"string"},{"text":"Name of font to draw the text in. See  to create your own, or  for a list of default fonts.","name":"font","type":"string","default":"DermaDefault","page":["surface.CreateFont","Default Fonts"]},{"text":"The X Coordinate.","name":"x","type":"number","default":"0"},{"text":"The Y Coordinate.","name":"y","type":"number","default":"0"},{"text":"Color to draw the text in. Uses the .","name":"color","type":"table","default":"Color( 255, 255, 255, 255 )","page":"Color"},{"text":"Where to align the text horizontally. Uses the .","name":"xAlign","type":"number","default":"TEXT_ALIGN_LEFT","page":"Enums/TEXT_ALIGN"}]}},"example":{"description":"Makes a message saying \"Hello there!\" pop up in the center of your screen.","code":"hook.Add(\"HUDPaint\", \"HelloThere\", function() \n\tdraw.DrawText(\"Hello there!\", \"TargetID\", ScrW() * 0.5, ScrH() * 0.25, Color(255,255,255,255), TEXT_ALIGN_CENTER)\nend)","output":"Hello there!"}},
{"function":{"name":"Think","parent":"dragndrop","type":"libraryfunc","description":{"text":"Handles all the drag'n'drop processes. Calls  and .","internal":"","page":["dragndrop.UpdateReceiver","dragndrop.HoverThink"]},"realm":"Client and Menu","file":{"text":"lua/includes/extensions/client/panel/dragdrop.lua","line":"190"}}},
{"function":{"name":"StopDragging","parent":"dragndrop","type":"libraryfunc","description":{"text":"Stops the drag'n'drop and calls .","page":"dragndrop.Clear"},"realm":"Client and Menu","file":{"text":"lua/includes/extensions/client/panel/dragdrop.lua","line":"116"}}},
{"function":{"name":"StartDragging","parent":"dragndrop","type":"libraryfunc","description":{"text":"Starts the drag'n'drop.","internal":""},"realm":"Client and Menu","file":{"text":"lua/includes/extensions/client/panel/dragdrop.lua","line":"81"}}},
{"function":{"name":"IsDragging","parent":"dragndrop","type":"libraryfunc","description":"Returns whether the user is dragging something with the drag'n'drop system.","realm":"Client and Menu","file":{"text":"lua/includes/extensions/client/panel/dragdrop.lua","line":"26"},"rets":{"ret":{"text":"True if the user is dragging something with the drag'n'drop system.","name":"","type":"boolean"}}}},
{"function":{"name":"HoverThink","parent":"dragndrop","type":"libraryfunc","description":{"text":"Handles the hover think. Called from .","internal":"","page":"dragndrop.Think"},"realm":"Client and Menu","file":{"text":"lua/includes/extensions/client/panel/dragdrop.lua","line":"560"}}},
{"function":{"name":"HandleDroppedInGame","parent":"dragndrop","type":"libraryfunc","description":{"text":"If returns true, calls  in . Seems to be broken and does nothing. Is it for override?","page":["dragndrop.StopDragging","dragndrop.Drop"]},"realm":"Client and Menu","file":{"text":"lua/includes/extensions/client/panel/dragdrop.lua","line":"34"}}},
{"function":{"name":"GetDroppable","parent":"dragndrop","type":"libraryfunc","description":"Returns a table of currently dragged panels.","realm":"Client and Menu","file":{"text":"lua/includes/extensions/client/panel/dragdrop.lua","line":"158"},"args":{"arg":{"text":"If set, the function will return only the panels with this  name.","name":"name","type":"string","default":"nil","page":"Panel:Droppable"}},"rets":{"ret":{"text":"A table of all panels that are being currently dragged, if any.","name":"","type":"table"}}}},
{"function":{"name":"Drop","parent":"dragndrop","type":"libraryfunc","description":{"text":"Handles the drop action of drag'n'drop library.","internal":""},"realm":"Client and Menu","file":{"text":"lua/includes/extensions/client/panel/dragdrop.lua","line":"42"}}},
{"function":{"name":"Clear","parent":"dragndrop","type":"libraryfunc","description":"Clears all the internal drag'n'drop variables.","realm":"Client and Menu","file":{"text":"lua/includes/extensions/client/panel/dragdrop.lua","line":"11"}}},
{"function":{"name":"CallReceiverFunction","parent":"dragndrop","type":"libraryfunc","description":{"text":"Calls the receiver function of hovered panel.","internal":""},"realm":"Client and Menu","file":{"text":"lua/includes/extensions/client/panel/dragdrop.lua","line":"171"},"args":{"arg":[{"text":"true if the mouse was released, false if we right clicked.","name":"bDoDrop","type":"boolean"},{"text":"The command value. This should be the ID of the clicked dropdown menu ( if right clicked, or nil )","name":"command","type":"number"},{"text":"The local to the panel mouse cursor X position when the click happened.","name":"mx","type":"number"},{"text":"The local to the panel  mouse cursor Y position when the click happened.","name":"my","type":"number"}]}}},
{"function":{"name":"SkinTexture","parent":"derma","type":"libraryfunc","description":"Returns a function to draw a specified texture of panels skin.","realm":"Client and Menu","args":{"arg":[{"text":"The identifier of the texture","name":"name","type":"string"},{"text":"Panel to get the skin of.","name":"pnl","type":"Panel"},{"text":"What to return if we failed to retrieve the texture","name":"fallback","type":"any","default":"nil"}]},"rets":{"ret":{"text":"A function that is created with the  to draw a texture.","name":"","type":"function","page":"GWEN"}}}},
{"function":{"name":"SkinChangeIndex","parent":"derma","type":"libraryfunc","description":{"text":"Returns how many times  has been called.","page":"derma.RefreshSkins"},"realm":"Client and Menu","rets":{"ret":{"text":"Amount of times  has been called.","name":"","type":"number","page":"derma.RefreshSkins"}}}},
{"function":{"name":"SkinHook","parent":"derma","type":"libraryfunc","description":"Calls the specified hook for the given panel","realm":"Client and Menu","args":{"arg":[{"text":"The type of hook to run","name":"type","type":"string"},{"text":"The name of the hook to run","name":"name","type":"string"},{"text":"The panel to call the hook for","name":"panel","type":"Panel"},{"text":"The width of the panel","name":"w","type":"number"},{"text":"The height of the panel","name":"h","type":"number"}]},"rets":{"ret":{"text":"The returned variable from the skin hook","name":"","type":"any"}}}},
{"function":{"name":"RefreshSkins","parent":"derma","type":"libraryfunc","description":"Clears all cached panels so that they reassess which skin they should be using.","realm":"Client and Menu"}},
{"function":{"name":"GetSkinTable","parent":"derma","type":"libraryfunc","description":"Returns a copy of the table containing every Derma skin","realm":"Client and Menu","rets":{"ret":{"text":"Table of every Derma skin","name":"","type":"table"}}}},
{"function":{"name":"GetNamedSkin","parent":"derma","type":"libraryfunc","description":"Returns the skin table of the skin with the supplied name","realm":"Client and Menu","args":{"arg":{"text":"Name of skin","name":"name","type":"string"}},"rets":{"ret":{"text":"Skin table","name":"","type":"table"}}}},
{"function":{"name":"GetDefaultSkin","parent":"derma","type":"libraryfunc","description":{"text":"Returns the default skin table, which can be changed with the hook","page":"GM/ForceDermaSkin"},"realm":"Client and Menu","rets":{"ret":{"text":"Skin table","name":"","type":"table"}}}},
{"function":{"name":"GetControlList","parent":"derma","type":"libraryfunc","description":{"text":"Returns the  table, a list of all derma controls registered with .","page":["derma.Controls","derma.DefineControl"]},"realm":"Client and Menu","rets":{"ret":{"text":"A listing of all available derma-based controls. See  for structure and contents.","name":"","type":"table","page":"derma.Controls"}}}},
{"function":{"name":"DefineSkin","parent":"derma","type":"libraryfunc","description":"Defines a new skin so that it is usable by Derma. The default skin can be found in \"garrysmod/lua/skins/default.lua\"","realm":"Client and Menu","args":{"arg":[{"text":"Name of the skin","name":"name","type":"string"},{"text":"Description of the skin","name":"descriptions","type":"string"},{"text":"Table containing skin data","name":"skin","type":"table"}]}}},
{"function":{"name":"Color","parent":"derma","type":"libraryfunc","description":"Gets the color from a Derma skin of a panel and returns default color if not found","realm":"Client and Menu","args":{"arg":[{"name":"name","type":"string"},{"name":"pnl","type":"Panel"},{"text":"The default color in case of failure.","name":"default","type":"table"}]}}},
{"function":{"name":"DefineControl","parent":"derma","type":"libraryfunc","description":{"text":"Defines a new Derma control with an optional base.\n\nThis calls  internally, but also does the following:\n* Adds the control to \n* Adds a key \"Derma\" - This is returned by \n* Makes a global table with the name of the control (This is technically deprecated and should not be relied upon)\n* If reloading (i.e. called this function with name of an existing panel), updates all existing instances of panels with this name. (Updates functions, calls  and , etc.)","page":["vgui.Register","derma.GetControlList","derma.GetControlList","PANEL:PreAutoRefresh","PANEL:PostAutoRefresh"]},"realm":"Client and Menu","args":{"arg":[{"text":"Name of the newly created control","name":"name","type":"string"},{"text":"Description of the control","name":"description","type":"string"},{"text":"Table containing control methods and properties","name":"tab","type":"table"},{"text":"Derma control to base the new control off of","name":"base","type":"string"}]},"rets":{"ret":{"text":"A table containing the new control's methods and properties","name":"","type":"table"}}},"example":{"description":"Defines a new control based off of DTextEntry that prints to the console whenever it is changed","code":"local PANEL = {}\n\nfunction PANEL:OnChange()\n    print(self:GetValue())\nend\n\nderma.DefineControl(\"MyTextEntry\", \"Printing text entry control\", PANEL, \"DTextEntry\")"}},
{"function":{"name":"Triangle","parent":"debugoverlay","type":"libraryfunc","description":{"text":"Displays a colored triangle at the specified coordinates.","note":{"text":"This function will silently fail if the **developer**  is set to 0.","page":"ConVar"}},"realm":"Shared","args":{"arg":[{"text":"First point of the triangle","name":"pos1","type":"Vector"},{"text":"Second point of the triangle","name":"pos2","type":"Vector"},{"text":"Third point of the triangle","name":"pos3","type":"Vector"},{"text":"Number of seconds to appear","name":"lifetime","type":"number","default":"1"},{"text":"The color of the box. Uses the","name":"color","type":"table","default":"Color( 255, 255, 255 )","page":"Color"},{"text":"If true, will draw on top of everything; ignoring the Z buffer","name":"ignoreZ","type":"boolean","default":"false"}]}}},
{"function":{"name":"Text","parent":"debugoverlay","type":"libraryfunc","description":{"text":"Displays text at the specified position.","note":{"text":"This function will silently fail if the **developer**  is set to 0.","page":"ConVar"}},"realm":"Shared","args":{"arg":[{"text":"Position origin","name":"origin","type":"Vector"},{"text":"String message to display","name":"text","type":"string"},{"text":"Number of seconds to appear","name":"lifetime","type":"number","default":"1"},{"text":"Clip text that is obscured","name":"viewCheck","type":"boolean","default":"false"}]}}},
{"function":{"name":"SweptBox","parent":"debugoverlay","type":"libraryfunc","description":{"text":"Displays \"swept\" box, two boxes connected with lines by their verices.","note":{"text":"This function will silently fail if the **developer**  is set to 0.","page":"ConVar"}},"realm":"Shared","args":{"arg":[{"text":"The start position of the box.","name":"vStart","type":"Vector"},{"text":"The end position of the box.","name":"vEnd","type":"Vector"},{"text":"The \"minimum\" edge of the box.","name":"vMins","type":"Vector"},{"text":"The \"maximum\" edge of the box.","name":"vMaxs","type":"Vector"},{"name":"ang","type":"Angle"},{"text":"Number of seconds to appear","name":"lifetime","type":"number","default":"1"},{"text":"The color of the box. Uses the","name":"color","type":"table","default":"Color( 255, 255, 255 )","page":"Color"}]}}},
{"function":{"name":"Sphere","parent":"debugoverlay","type":"libraryfunc","description":{"text":"Displays a coloured sphere at the specified position.","note":{"text":"This function will silently fail if the **developer**  is set to 0.","page":"ConVar"}},"realm":"Shared","args":{"arg":[{"text":"Position origin","name":"origin","type":"Vector"},{"text":"Size of the sphere","name":"size","type":"number"},{"text":"Number of seconds to appear","name":"lifetime","type":"number","default":"1"},{"text":"The color of the sphere. Uses the","name":"color","type":"table","default":"Color( 255, 255, 255 )","page":"Color"},{"text":"If true, will draw on top of everything; ignoring the Z buffer","name":"ignoreZ","type":"boolean","default":"false"}]}}},
{"function":{"name":"ScreenText","parent":"debugoverlay","type":"libraryfunc","description":{"text":"Displays text triangle at the specified coordinates.","note":{"text":"This function will silently fail if the **developer**  is set to 0.","page":"ConVar"}},"realm":"Shared","args":{"arg":[{"text":"The position of the text, from 0 ( left ) to 1 ( right ).","name":"x","type":"number"},{"text":"The position of the text, from 0 ( top ) to 1 ( bottom ).","name":"y","type":"number"},{"text":"The text to display","name":"text","type":"string"},{"text":"Number of seconds to appear","name":"lifetime","type":"number","default":"1"},{"text":"The color of the box. Uses the","name":"color","type":"table","default":"Color( 255, 255, 255 )","page":"Color"}]}}},
{"function":{"name":"Line","parent":"debugoverlay","type":"libraryfunc","description":{"text":"Displays a coloured line at the specified position.","note":{"text":"This function will silently fail if the **developer**  is set to 0.","page":"ConVar"}},"realm":"Shared","args":{"arg":[{"text":"First position of the line","name":"pos1","type":"Vector"},{"text":"Second position of the line","name":"pos2","type":"Vector"},{"text":"Number of seconds to appear","name":"lifetime","type":"number","default":"1"},{"text":"The color of the line. Uses the","name":"color","type":"table","default":"Color( 255, 255, 255 )","page":"Color"},{"text":"If true, will draw on top of everything; ignoring the Z buffer","name":"ignoreZ","type":"boolean","default":"false"}]}}},
{"function":{"name":"Grid","parent":"debugoverlay","type":"libraryfunc","description":{"text":"Draws a 3D grid of limited size in given position.","note":{"text":"This function will silently fail if the **developer**  is set to 0.","page":"ConVar"}},"realm":"Shared","args":{"arg":{"name":"position","type":"Vector"}}}},
{"function":{"name":"EntityTextAtPosition","parent":"debugoverlay","type":"libraryfunc","description":{"text":"Displays 2D text at the specified coordinates.","note":{"text":"This function will silently fail if the **developer**  is set to 0.","page":"ConVar"}},"realm":"Shared","args":{"arg":[{"text":"The position in 3D to display the text.","name":"pos","type":"Vector"},{"text":"Line of text, will offset text on the to display the new line unobstructed","name":"line","type":"number"},{"text":"The text to display","name":"text","type":"string"},{"text":"Number of seconds to appear","name":"lifetime","type":"number","default":"1"},{"text":"The color of the box. Uses the","name":"color","type":"table","default":"Color( 255, 255, 255 )","page":"Color"}]}}},
{"function":{"name":"Cross","parent":"debugoverlay","type":"libraryfunc","description":{"text":"Creates a coloured cross at the specified position for the specified time.","note":{"text":"This function will silently fail if the **developer**  is set to 0.","page":"ConVar"}},"realm":"Shared","args":{"arg":[{"text":"Position origin","name":"position","type":"Vector"},{"text":"Size of the cross","name":"size","type":"number"},{"text":"Number of seconds the cross to appear","name":"lifetime","type":"number","default":"1"},{"text":"The color of the cross. Uses the","name":"color","type":"table","default":"Color( 255, 255, 255 )","page":"Color"},{"text":"If true, will draw on top of everything; ignoring the Z buffer","name":"ignoreZ","type":"boolean","default":"false"}]}}},
{"function":{"name":"BoxAngles","parent":"debugoverlay","type":"libraryfunc","description":{"text":"Displays a solid colored rotated box at the specified position.","note":{"text":"This function will silently fail if the **developer**  is set to 0.","page":"ConVar"}},"realm":"Shared","args":{"arg":[{"text":"World position","name":"pos","type":"Vector"},{"text":"The mins of the box (lowest corner)","name":"mins","type":"Vector"},{"text":"The maxs of the box (highest corner)","name":"maxs","type":"Vector"},{"text":"The angle to draw the box at","name":"ang","type":"Angle"},{"text":"Amount of seconds to show the box","name":"lifetime","type":"number","default":"1"},{"text":"The color of the box. Uses the","name":"color","type":"table","default":"Color( 255, 255, 255 )","page":"Color"}]}}},
{"function":{"name":"Box","parent":"debugoverlay","type":"libraryfunc","description":{"text":"Displays a solid coloured box at the specified position.","note":{"text":"This function will silently fail if the **developer**  is set to 0.","page":"ConVar"}},"realm":"Shared","args":{"arg":[{"text":"Position origin","name":"origin","type":"Vector"},{"text":"Minimum bounds of the box","name":"mins","type":"Vector"},{"text":"Maximum bounds of the box","name":"maxs","type":"Vector"},{"text":"Number of seconds to appear","name":"lifetime","type":"number","default":"1"},{"text":"The color of the box. Uses the","name":"color","type":"table","default":"Color( 255, 255, 255 )","page":"Color"}]}}},
{"function":{"name":"Axis","parent":"debugoverlay","type":"libraryfunc","description":{"text":"Displays an axis indicator at the specified position.","note":{"text":"This function will silently fail if the **developer**  is set to 0","page":"ConVar"}},"realm":"Shared","args":{"arg":[{"text":"Position origin","name":"origin","type":"Vector"},{"text":"Angle of the axis","name":"ang","type":"Angle"},{"text":"Size of the axis","name":"size","type":"number"},{"text":"Number of seconds to appear","name":"lifetime","type":"number","default":"1"},{"text":"If true, will draw on top of everything; ignoring the Z buffer","name":"ignoreZ","type":"boolean","default":"false"}]}}},
{"function":{"name":"upvaluejoin","parent":"debug","type":"libraryfunc","description":{"text":"Make the n1-th upvalue of the Lua closure f1 refer to the n2-th upvalue of the Lua closure f2.","removed":"This function was removed due to security concerns."},"realm":"Shared and Menu","args":{"arg":[{"name":"f1","type":"function"},{"name":"n1","type":"number"},{"name":"f2","type":"function"},{"name":"n2","type":"number"}]}}},
{"function":{"name":"upvalueid","parent":"debug","type":"libraryfunc","description":{"text":"Returns an unique identifier for the upvalue indexed from func","removed":"This function was removed due to security concerns."},"realm":"Shared and Menu","args":{"arg":[{"text":"The function to index the upvalue from","name":"func","type":"function"},{"text":"The index from func","name":"index","type":"number"}]},"rets":{"ret":{"text":"A unique identifier","name":"","type":"number"}}},"example":{"description":"Small example showing the type of the returned data.","code":"print(type(debug.upvalueid(hook.Add, 1)))","output":"userdata"}},
{"function":{"name":"traceback","parent":"debug","type":"libraryfunc","description":"Returns a full execution stack trace.","realm":"Shared and Menu","args":{"arg":[{"text":"Thread (ie. error object from xpcall error handler) to build traceback for.","name":"thread","type":"thread","default":"current thread"},{"text":"Appended at the beginning of the traceback.","name":"message","type":"string","default":"nil"},{"text":"Which level to start the traceback.","name":"level","type":"number","default":"1"}]},"rets":{"ret":{"text":"A dump of the execution stack.","name":"","type":"string"}}},"example":[{"description":"Prints the traceback into console.","code":"print(debug.traceback())","output":"> print(debug.traceback())...\nstack traceback:\n```\n\n        lua_run:1: in main chunk\n```"},{"description":"Defines two functions that are later visible in the traceback. Enter \"lua_run TracebackTest()\" into the development console to achieve exact results.","code":"function TracebackTest()\n     AnotherTracebackFunction()\nend\n\nfunction AnotherTracebackFunction()\n     print(debug.traceback())\nend","output":"stack traceback:\n```\n\n        lua_run:1: in function 'AnotherTracebackFunction'\n        lua_run:1: in function 'TracebackTest'\n        lua_run:1: in main chunk\n```"}]},
{"function":{"name":"Trace","parent":"debug","type":"libraryfunc","description":"Prints out the lua function call stack to the console.","realm":"Shared and Menu","file":{"text":"lua/includes/extensions/debug.lua","line":"24"}},"example":{"description":"Prints the current call stack.","code":"debug.Trace()","output":"```\nTrace: \n 1: Line 32 \"Trace\" lua/includes/extensions/debug.lua\n 2: Line 1 \"(null)\" LuaCmd\n```"}},
{"function":{"name":"setupvalue","parent":"debug","type":"libraryfunc","description":{"text":"Sets the variable indexed from func","removed":"This function was removed due to security concerns."},"realm":"Shared and Menu","args":{"arg":[{"text":"The function to index the upvalue from","name":"func","type":"function"},{"text":"The index from func","name":"index","type":"number"},{"text":"The value to set the upvalue to.","name":"val","type":"any","default":"nil"}]},"rets":{"ret":{"text":"Returns nil if there is no upvalue with the given index, otherwise it returns the upvalue's name.","name":"","type":"string"}}},"example":{"description":"An example demonstrating a function overwrite.","code":"local function my_isfunction(f)\n\treturn type(f) == \"function\" or f == \"coolguy\"\t\nend\n\nprint(debug.setupvalue(hook.Add, 1, my_isfunction))"}},
{"function":{"name":"setupvalue","parent":"debug","type":"libraryfunc","description":{"text":"Sets the variable indexed from func","removed":"This function was removed due to security concerns."},"realm":"Shared and Menu","args":{"arg":[{"text":"The function to index the upvalue from","name":"func","type":"function"},{"text":"The index from func","name":"index","type":"number"},{"text":"The value to set the upvalue to.","name":"val","type":"any","default":"nil"}]},"rets":{"ret":{"text":"Returns nil if there is no upvalue with the given index, otherwise it returns the upvalue's name.","name":"","type":"string"}}},"example":{"description":"An example demonstrating a function overwrite.","code":"local function my_isfunction(f)\n\treturn type(f) == \"function\" or f == \"coolguy\"\t\nend\n\nprint(debug.setupvalue(hook.Add, 1, my_isfunction))"}},
{"function":{"name":"setlocal","parent":"debug","type":"libraryfunc","description":{"text":"Sets a local variable's value.","removed":"This function was removed due to security concerns."},"realm":"Shared and Menu","args":{"arg":[{"text":"The thread","name":"thread","type":"thread","default":"Current Thread"},{"text":"The level above the thread. \n0 is the function that was called (most always this function)'s arguments\n\n1 is the thread that had called this function.\n\n2 is the thread that had called the function that started the thread that called this function.","name":"level","type":"number"},{"text":"The variable's index you want to get.\n\n1 = the first local defined in the thread\n\n2 = the second local defined in the thread","name":"index","type":"number"},{"text":"The value to set the local to","name":"value","type":"any","default":"nil"}]},"rets":{"ret":{"text":"The name of the local variable if the local at the index exists, otherwise nil is returned.","name":"","type":"string"}}},"example":{"description":"Prints the local variables, sets them, then prints the variables again.","code":"local var1 = \"Luke, I am not your father.\"\nlocal var2 = \"PMFPMF\"\n\n(function()\n\tprint(\"Getting the locals now!\")\n\tPrintTable({debug.getlocal(2, 1)})\n\tPrintTable({debug.getlocal(2, 2)})\n\n\tprint(\"\\nSetting the locals now!\")\n\tprint(debug.setlocal(2, 1, \"I'm actually your mother.\"))\n\tprint(debug.setlocal(2, 2, \"Chemo-chi\"))\n\tprint(debug.setlocal(2, 3, \"nil should be returned here!\"))\n\n\tprint(\"\\nHere are the locals after being set!\")\n\tPrintTable({debug.getlocal(2, 1)})\n\tPrintTable({debug.getlocal(2, 2)})\nend)()","output":"```\nGetting the locals now!\n1\t=\tvar1\n2\t=\tLuke, I am not your father.\n1\t=\tvar2\n2\t=\tPMFPMF\n\nSetting the locals now!\nvar1\nvar2\nnil\n\nHere are the locals after being set!\n1\t=\tvar1\n2\t=\tI'm actually your mother.\n1\t=\tvar2\n2\t=\tChemo-chi\n```"}},
{"function":{"name":"sethook","parent":"debug","type":"libraryfunc","description":"Sets the given function as a Lua hook. This is completely different to gamemode hooks. The thread argument can be completely omitted and calling this function with no arguments will remove the current hook. This is used by default for infinite loop detection. More information on hooks can be found at http://www.lua.org/pil/23.2.html\n\nHooks are not always ran when code that has been compiled by LuaJIT's JIT compiler is being executed. This means that relying on them for infinite loop protection is unwise.","realm":"Shared and Menu","args":{"arg":[{"text":"Thread to set the hook on. This argument can be omited","name":"thread","type":"thread"},{"text":"Function for the hook to call","name":"hook","type":"function"},{"text":"The hook's mask","name":"mask","type":"string"},{"text":"How often to call the hook (in instructions). 0 for every instruction","name":"count","type":"number"}]}}},
{"function":{"name":"setfenv","parent":"debug","type":"libraryfunc","description":"Sets the environment of the passed object.","realm":"Shared and Menu","args":{"arg":[{"text":"Object to set environment of","name":"object","type":"table"},{"text":"Environment to set","name":"env","type":"table"}]},"rets":{"ret":{"text":"The object","name":"","type":"table"}}},"example":{"description":"create a new environment and setfenv Display inside it","code":"local newenvironment = {}\n\nfunction newenvironment.log( msg )\n\tprint( msg )\nend\n\nlocal function Display()\n\tlog( \"yay\" )\nend\n\ndebug.setfenv( Display , newenvironment )\n\nDisplay()","outputfixedwidth":"Fixed width","output":"yay"}},
{"function":{"name":"getupvalue","parent":"debug","type":"libraryfunc","description":"Used for getting variable values in an index from the passed function. This does nothing for C functions.","realm":"Shared and Menu","args":{"arg":[{"text":"Function to get the upvalue indexed from.","name":"func","type":"function"},{"text":"The index in the upvalue array. The max number of entries can be found in 's \"\" key.","name":"index","type":"number","page":["debug.getinfo",",nupsStructures/DebugInfo"]}]},"rets":{"ret":[{"text":"Name of the upvalue. Will be nil if the index was out of range (< 1 or > .nups), or the function was defined in C.","name":"","type":"string","page":"debug.getinfo"},{"text":"Value of the upvalue.","name":"","type":"any"}]}},"example":{"description":"Prints the upvalues of some local functions.","code":{"text":"local foo = 5\nlocal bar = \"hello\"\nlocal test = { \"table\", true, \"variable\" }\n\nlocal function DoSomethingWithFoo()\n\t-- This code won't be run but the function\n\t-- has to reference the variable for\n\t-- it to be counted as an upvalue\n\tfoo = foo + 1\nend\n\nlocal function DoSomethingWithFooAndBar()\n\tfoo = foo / 2\n\tbar = bar .. \" world\"\nend\n\nlocal function DoSomethingWithBarAndTest()\n\ttest[1] = bar .. \"reader!\"\nend\n\n\n-- level = stack level to get local variables of\n-- returns a table with  keys representing the variable name\nlocal function GetUpvalues( func )\n\tlocal info = debug.getinfo( func, \"uS\" )\n\tlocal variables = {}\n\n\t-- Upvalues can't be retrieved from C functions\n\tif ( info != nil && info.what == \"Lua\" ) then\n\t\tlocal upvalues = info.nups\n\n\t\tfor i = 1, upvalues do\n\t\t\tlocal key, value = debug.getupvalue( func, i )\n\t\t\tvariables[ key ] = value\n\t\tend\n\tend\n\n\treturn variables\nend\n\nprint( \"DoSomethingWithFoo:\" )\nPrintTable( GetUpvalues( DoSomethingWithFoo ) )\n\nprint( \"\\nDoSomethingWithFooAndBar:\" )\nPrintTable( GetUpvalues( DoSomethingWithFooAndBar ) )\n\nprint( \"\\nDoSomethingWithBarAndTest:\" )\nPrintTable( GetUpvalues( DoSomethingWithBarAndTest ) )","page":"string"},"output":"```\nDoSomethingWithFoo:\nfoo\t=\t5\n\nDoSomethingWithFooAndBar:\nbar\t=\thello\nfoo\t=\t5\n\nDoSomethingWithBarAndTest:\nbar\t=\thello\ntest:\n\t\t1\t=\ttable\n\t\t2\t=\ttrue\n\t\t3\t=\tvariable\n```"}},
{"function":{"name":"getregistry","parent":"debug","type":"libraryfunc","description":{"text":"Returns the internal Lua registry table.\n\nThe Lua registry is used by the engine and binary modules to create references to Lua values. Avoid creating entries into the registry with a number as the key, as they are reserved for the reference system.","warning":"Improper editing of the registry can result in unintended side effects, including crashing of the game."},"realm":"Shared and Menu","rets":{"ret":{"text":"The Lua registry","name":"","type":"table"}}}},
{"function":{"name":"getmetatable","parent":"debug","type":"libraryfunc","description":"Returns the metatable of an object. This function ignores the metatable's __metatable field.","realm":"Shared and Menu","args":{"arg":{"text":"The object to retrieve the metatable from.","name":"object","type":"any"}},"rets":{"ret":{"text":"The metatable of the given object.","name":"","type":"table"}}}},
{"function":{"name":"getinfo","parent":"debug","type":"libraryfunc","description":"Returns debug information about a function.","realm":"Shared and Menu","args":{"arg":[{"text":"Takes either a function or a number representing the stack level as an argument. Stack level 0 always corresponds to the debug.getinfo call, 1 would be the function calling debug.getinfo, and so on.\n\nReturns useful information about that function in a table.","name":"funcOrStackLevel","type":"function"},{"text":"A string whose characters specify the information to be retrieved.\n\n* f - Populates the func field.\n* l - Populates the currentline field.\n* L - Populates the activelines field.\n* n - Populates the name and namewhat fields - only works if stack level is passed rather than function pointer.\n* S - Populates the location fields (lastlinedefined, linedefined, short_src, source and what).\n* u - Populates the argument and upvalue fields (isvararg, nparams, nups)","name":"fields","type":"string","default":"flnSu"}]},"rets":{"ret":{"text":"A table as a  containing information about the function you passed. Can return nil if the stack level didn't point to a valid stack frame.","name":"","type":"table","page":"Structures/DebugInfo"}}},"example":{"description":"Let's find out information about net.Receive, such as which file it's defined in, the line it starts and the line it ends, and if it's defined in Lua, or C plus additional information.","code":"PrintTable( debug.getinfo( net.Receive ) )","outputfixedwidth":"Fixed width","output":"[linedefined] \t\t= 7\n[currentline] \t\t= -1\n[func] \t\t\t= function: 0x1a8fae90\n[isvararg] \t\t= false\n[namewhat] \t\t=\n[lastlinedefined] \t= 11\n[source] \t\t= @lua/includes/modules/net.lua\n[nups] \t\t\t= 0\n[what] \t\t\t= Lua\n[nparams] \t\t= 2\n[short_src] \t\t= lua/includes/modules/net.lua"}},
{"function":{"name":"getlocal","parent":"debug","type":"libraryfunc","description":{"text":"Gets the name and value of a local variable indexed from the level","warning":"When a function has a tailcall return, you cannot access the locals of this function"},"realm":"Shared and Menu","args":{"arg":[{"text":"The thread","name":"thread","type":"thread","default":"Current thread"},{"text":"The level above the thread. \n0 = the function that was called (most always this function)'s arguments\n\n1 = the thread that had called this function.\n\n2 = the thread that had called the function that started the thread that called this function.\n\nA function defined in Lua can also be passed as the level. The index will specify the parameter's name to be returned (a parameter will have a value of nil).","name":"level","type":"number"},{"text":"The variable's index you want to get.\n\n1 = the first local defined in the thread\n\n2 = the second local defined in the thread\n\netc...","name":"index","type":"number"}]},"rets":{"ret":[{"text":"The name of the variable\n\nSometimes this will be \"(*temporary)\" if the local variable had no name.","name":"","type":"string","note":"Variables with names starting with **(** are **internal variables**."},{"text":"The value of the local variable.","name":"","type":"any"}]}},"example":[{"description":"Gets all the local variables of the current thread and stores them in a table.","code":"local name, value;\nlocal NIL = {} -- to represent nil variables\nlocal locals = {}\nlocal i = 1\nwhile( true ) do\n    name, value = debug.getlocal( 1, i )\n    if ( name == nil ) then break end\n    locals[ name ] = value == nil and NIL or value\n\ti = i + 1\nend\n\nfor k,v in pairs( locals ) do \n\tprint( k, v )\nend","output":"```\nlocals\ttable: 0x274a8dc0\nvalue\ttable: 0x274a8d98\nNIL\ttable: 0x274a8d98\nname\ttable: 0x274a8d98\ni\t5\n```"},{"description":{"text":"Prints the parameter names for","page":"hook.Add"},"code":"local print = print\nlocal getlocal = debug.getlocal\n\nlocal function PrintFunctionParameters(func)\n\tlocal k = 2\n\tlocal param = getlocal(func, 1)\n\twhile param ~= nil do\n\t\tprint(param)\n\t\tparam = getlocal(func, k)\n\t\tk = k + 1\n\tend\nend\n\nPrintFunctionParameters(hook.Add)","output":"```\nevent_name\nname\nfunc\n```"}]},
{"function":{"name":"gethook","parent":"debug","type":"libraryfunc","description":"Returns the current hook settings of the passed thread. The thread argument can be omitted. This is unrelated to . More information on hooks can be found at http://www.lua.org/pil/23.2.html","realm":"Shared and Menu","args":{"arg":{"text":"Which thread to retrieve its hook from","name":"thread","type":"thread","default":"nil"}},"rets":{"ret":[{"text":"Hook function","name":"","type":"function"},{"text":"Hook mask","name":"","type":"string"},{"text":"Hook count","name":"","type":"number"}]}}},
{"function":{"name":"getfenv","parent":"debug","type":"libraryfunc","description":{"text":"Returns the environment of the passed object. This can be set with","page":"debug.setfenv"},"realm":"Shared and Menu","args":{"arg":{"text":"Object to get environment of","name":"object","type":"table"}},"rets":{"ret":{"text":"Environment","name":"","type":"table"}}}},
{"function":{"name":"debug","parent":"debug","type":"libraryfunc","description":"Enters an interactive mode with the user, running each string that the user enters. Using simple commands and other debug facilities, the user can inspect global and local variables, change their values, evaluate expressions, and so on. A line containing only the word cont finishes this function, so that the caller continues its execution.\n\n* Commands for debug.debug are not lexically nested within any function, and so have no direct access to local variables.\n* This only works on the source dedicated server.\n* To exit this interactive mode, you can press Ctrl + Z then Enter OR type the word 'cont' on a single line and press enter.","realm":"Shared and Menu"}},
{"function":{"name":"String","parent":"cvars","type":"libraryfunc","description":"Retrieves console variable as a string.","realm":"Shared and Menu","args":{"arg":[{"text":"Name of console variable","name":"cvar","type":"string"},{"text":"The value to return if the console variable does not exist","name":"default","type":"any","default":"nil"}]},"rets":{"ret":{"text":"Retrieved value","name":"","type":"string"}}}},
{"function":{"name":"OnConVarChanged","parent":"cvars","type":"libraryfunc","description":{"text":"Called by the engine when a convar value changes.","internal":{"text":"You are probably looking for .","page":"cvars.AddChangeCallback"}},"realm":"Shared and Menu","args":{"arg":[{"text":"Convar name","name":"name","type":"string"},{"text":"The old value of the convar","name":"oldVal","type":"string"},{"text":"The new value of the convar","name":"newVal","type":"string"}]}}},
{"function":{"name":"RemoveChangeCallback","parent":"cvars","type":"libraryfunc","description":{"text":"Removes a callback for a convar using the the callback's identifier. The identifier should be the third argument specified for .","page":"cvars.AddChangeCallback"},"realm":"Shared and Menu","args":{"arg":[{"text":"The name of the convar to remove the callback from.","name":"name","type":"string"},{"text":"The callback's identifier.","name":"indentifier","type":"string"}]}}},
{"function":{"name":"Number","parent":"cvars","type":"libraryfunc","description":"Retrieves console variable as a number.","realm":"Shared and Menu","args":{"arg":[{"text":"Name of console variable","name":"cvar","type":"string"},{"text":"The value to return if the console variable does not exist","name":"default","type":"any","default":"nil"}]},"rets":{"ret":{"text":"Retrieved value","name":"","type":"number"}}}},
{"function":{"name":"Bool","parent":"cvars","type":"libraryfunc","description":"Retrieves console variable as a boolean.","realm":"Shared and Menu","args":{"arg":[{"text":"Name of console variable","name":"cvar","type":"string"},{"text":"The value to return if the console variable does not exist","name":"default","type":"boolean","default":"false"}]},"rets":{"ret":{"text":"Retrieved value","name":"","type":"boolean"}}}},
{"function":{"name":"GetConVarCallbacks","parent":"cvars","type":"libraryfunc","description":{"text":"Returns a table of the given s callbacks.","page":"ConVar"},"realm":"Shared and Menu","args":{"arg":[{"text":"The name of the .","name":"name","type":"string","page":"ConVar"},{"text":"Whether or not to create the internal callback table for given  if there isn't one yet.\n\n\nThis argument is internal and should not be used.","name":"createIfNotFound","type":"boolean","default":"false","page":"ConVar"}]},"rets":{"ret":{"text":"A table of the convar's callbacks, or nil if the convar doesn't exist.","name":"","type":"table"}}}},
{"function":{"name":"AddChangeCallback","parent":"cvars","type":"libraryfunc","description":{"text":"Adds a callback to be called when the named convar changes.","bug":[{"text":"This does not callback convars in the menu state.","issue":"1440"},{"text":"This does not callback convars on the client with FCVAR_GAMEDLL and convars on the server without FCVAR_GAMEDLL.","issue":"3503"},{"text":"This does not callback convars on the client with FCVAR_REPLICATED.","issue":"3740"}]},"realm":"Shared and Menu","args":{"arg":[{"text":"The name of the convar to add the change callback to.","name":"name","type":"string"},{"text":"The function to be called when the convar changes. The arguments passed are:\n*  convar - The name of the convar.\n*  oldValue - The old value of the convar.\n*  newValue - The new value of the convar.","name":"callback","type":"function","page":["string","string","string"]},{"text":"If set, you will be able to remove the callback using .","name":"identifier","type":"string","default":"nil","page":"cvars.RemoveChangeCallback"}]}},"example":{"description":"Called when convar changes.","code":"cvars.AddChangeCallback(\"convar name\", function(convar_name, value_old, value_new)\n    print(convar_name, value_old, value_new)\nend)","output":"\"convar name\" 2 5"}},
{"function":{"name":"yield","parent":"coroutine","type":"libraryfunc","description":{"text":"Pauses the active coroutine and passes all additional variables to the call of  that resumed the coroutine last time, and returns all additional variables that were passed to the previous call of resume.","page":"coroutine.resume"},"realm":"Shared and Menu","args":{"arg":{"text":"Arguments to be returned by the last call of","name":"returnValue","type":"vararg","page":"coroutine.resume"}},"rets":{"ret":{"text":"Arguments that were set previously by","name":"","type":"vararg","page":"coroutine.resume"}}},"example":{"description":"Demonstrates the use of using varargs as a return value.","code":"local co = coroutine.create( function()\n\tcoroutine.yield( \"Hello world!\" )\nend )\nprint( coroutine.resume( co ) )","output":"true, \"Hello world!\""}},
{"function":{"name":"wrap","parent":"coroutine","type":"libraryfunc","description":{"text":"Returns a function which calling is equivalent with calling  with the coroutine and all extra parameters.","page":"coroutine.resume"},"realm":"Shared and Menu","args":{"arg":{"text":"Coroutine to resume.","name":"coroutine","type":"function"}},"rets":{"ret":{"text":"func","name":"","type":"function"}}}},
{"function":{"name":"wait","parent":"coroutine","type":"libraryfunc","description":{"text":"Yields the coroutine for the given duration before continuing.\n\nThis only works inside a coroutine.\n\nThis function uses  instead of .","page":["Global.CurTime","Global.RealTime"]},"realm":"Shared","file":{"text":"lua/includes/extensions/coroutine.lua","line":"15"},"args":{"arg":{"text":"The number of seconds to wait","name":"duration","type":"number"}}}},
{"function":{"name":"status","parent":"coroutine","type":"libraryfunc","description":"Returns the status of the coroutine passed to it, the possible statuses are \"suspended\", \"running\", and \"dead\".","realm":"Shared and Menu","args":{"arg":{"text":"Coroutine to check the status of.","name":"coroutine","type":"thread"}},"rets":{"ret":{"text":"status","name":"","type":"string"}}}},
{"function":{"name":"running","parent":"coroutine","type":"libraryfunc","description":"Returns the active coroutine or nil if we are not within a coroutine.","realm":"Shared and Menu","rets":{"ret":{"text":"coroutine","name":"","type":"thread"}}}},
{"function":{"name":"resume","parent":"coroutine","type":"libraryfunc","description":{"text":"Resumes the given coroutine and passes the given vararg to either the function arguments or the  that is inside that function and returns whatever yield is called with the next time or by the final return in the function.","page":"coroutine.yield"},"realm":"Shared and Menu","args":{"arg":[{"text":"Coroutine to resume.","name":"coroutine","type":"thread"},{"text":"Arguments to be returned by .","name":"args","type":"vararg","page":"coroutine.yield"}]},"rets":{"ret":[{"text":"If the executed thread code had no errors occur within it.","name":"","type":"boolean"},{"text":"If an error occured, this will be a string containing the error message. Otherwise, this will be arguments that were yielded.","name":"","type":"vararg"}]}}},
{"function":{"name":"create","parent":"coroutine","type":"libraryfunc","description":"Creates a coroutine of the given function.","realm":"Shared and Menu","args":{"arg":{"text":"The function for the coroutine to use","name":"func","type":"function"}},"rets":{"ret":{"text":"coroutine","name":"","type":"thread"}}},"example":{"description":"Display the location of each player in an endless loop, but only one player per frame.","code":"do\n\tlocal function displayer()\n\t\tlocal players\n\t\twhile true do -- endless loop: you must guarantee that coroutine.yield() is always called!\n\t\t\tplayers = player.GetAll()\n\t\t\tif not next( players ) then -- empty table\n\t\t\t\tcoroutine.yield() -- guarantee a pause in coroutine even with an empty table\n\t\t\telse\n\t\t\t\tfor _, ply in pairs( players ) do\n\t\t\t\t\tcoroutine.yield() -- We yield here so what you may do next will start immediatly when this for loop finishes.\n\t\t\t\t\tif IsValid( ply ) then -- The player ply may be disconnected now!\n\t\t\t\t\t\tprint( ply:Nick(), \"is located at\", ply:GetPos() )\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\t\n\t\t\tend\n\t\tend\n\tend\n\t\n\tlocal co\n\thook.Add( \"Think\", \"DisplayPlayersLocation\", function()\n\t\tif not co or not coroutine.resume( co ) then\n\t\t\tco = coroutine.create( displayer )\n\t\t\tcoroutine.resume( co )\n\t\tend\n\tend )\nend","outputfixedwidth":"Fixed width","output":"Custom Nickname\tis located at\t10.102 59.04 -100.96\nSuperBoss\tis located at\t55.85 1209.11 -100.96\nCustom Nickname\tis located at\t11.126 51.92 -100.96\n..."}},
{"function":{"name":"Set","parent":"cookie","type":"libraryfunc","description":{"text":"Sets the value of a cookie, which is saved automatically by the .\n\nThese are stored in the *.db files - cl.db for clients, mn.db for menu state and sv.db for servers.","page":"sql"},"realm":"Shared","file":{"text":"lua/includes/modules/cookie.lua","line":"105"},"args":{"arg":[{"text":"The name of the cookie that you want to set.","name":"key","type":"string"},{"text":"Value to store in the cookie.","name":"value","type":"string"}]}}},
{"function":{"name":"GetString","parent":"cookie","type":"libraryfunc","description":"Gets the value of a cookie on the client as a string.","realm":"Shared and Menu","file":{"text":"lua/includes/modules/cookie.lua","line":"74"},"args":{"arg":[{"text":"The name of the cookie that you want to get.","name":"name","type":"string"},{"text":"Value to return if the cookie does not exist.","name":"default","type":"any","default":"nil"}]},"rets":{"ret":{"text":"The cookie value","name":"","type":"string"}}}},
{"function":{"name":"Delete","parent":"cookie","type":"libraryfunc","description":"Deletes a cookie on the client.","realm":"Shared and Menu","file":{"text":"lua/includes/modules/cookie.lua","line":"94"},"args":{"arg":{"text":"The name of the cookie that you want to delete.","name":"name","type":"string"}}}},
{"function":{"name":"GetNumber","parent":"cookie","type":"libraryfunc","description":"Gets the value of a cookie on the client as a number.","realm":"Shared and Menu","file":{"text":"lua/includes/modules/cookie.lua","line":"84"},"args":{"arg":[{"text":"The name of the cookie that you want to get.","name":"name","type":"string"},{"text":"Value to return if the cookie does not exist.","name":"default","type":"any","default":"nil"}]},"rets":{"ret":{"text":"The cookie value","name":"","type":"number"}}}},
{"function":{"name":"Get","parent":"controlpanel","type":"libraryfunc","description":"Returns (or creates if not exists) a controlpanel.","realm":"Client","file":{"text":"lua/includes/modules/constraint.lua","line":"6"},"args":{"arg":{"text":"The name of the panel.","name":"name","type":"string"}},"rets":{"ret":{"text":"ControlPanel","name":"","type":"Panel"}}},"example":{"description":"Get the Contextmenus panel for the weld tool.","code":"local ControlPanel = controlpanel.Get( \"Weld\" )"}},
{"function":{"name":"Clear","parent":"controlpanel","type":"libraryfunc","description":"Clears ALL the control panels ( for tools )","realm":"Client","file":{"text":"lua/includes/modules/controlpanel.lua","line":"30"}}},
{"function":{"name":"SetPhysProp","parent":"construct","type":"libraryfunc","description":"Sets props physical properties.","realm":"Server","file":{"text":"lua/includes/modules/construct.lua","line":"16"},"args":{"arg":[{"text":"The player. This variable is not used and can be left out.","name":"ply","type":"Player"},{"text":"The entity to apply properties to","name":"ent","type":"Entity"},{"text":"You can use this or the argument below. This will be used in case you don't provide argument below.","name":"physObjID","type":"number"},{"text":"The physics object to apply the properties to","name":"physObj","type":"PhysObj"},{"text":"The table containing properties to apply. See","name":"data","type":"table","page":"Structures/PhysProperties"}]}}},
{"function":{"name":"Magnet","parent":"construct","type":"libraryfunc","description":"Creates a magnet.","realm":"Server","file":{"text":"lua/includes/modules/construct.lua","line":"94"},"args":{"arg":[{"text":"Player that will have the numpad control over the magnet","name":"ply","type":"Player"},{"text":"The position of the magnet","name":"pos","type":"Vector"},{"text":"The angles of the magnet","name":"ang","type":"Angle"},{"text":"The model of the maget","name":"model","type":"string"},{"text":"Material of the magnet ( texture )","name":"material","type":"string"},{"text":"The key to toggle the magnet, see","name":"key","type":"number","page":"Enums/KEY"},{"text":"Maximum amount of objects the magnet can hold","name":"maxObjects","type":"number"},{"text":"Strength of the magnet","name":"strength","type":"number"},{"text":"If > 0, disallows the magnet to pull objects towards it","name":"nopull","type":"number","default":"0"},{"text":"If > 0, allows rotation of the objects attached","name":"allowrot","type":"number","default":"0"},{"text":"If > 0, enabled from spawn","name":"startOn","type":"number","default":"0"},{"text":"If != 0, pressing the key toggles the magnet, otherwise you'll have to hold the key to keep it enabled","name":"toggle","type":"number"},{"text":"Velocity to set on spawn","name":"vel","type":"Vector","default":"Vector( 0, 0, 0 )"},{"text":"Angular velocity to set on spawn","name":"aVel","type":"Angle","default":"Angle( 0, 0, 0 )"},{"text":"Freeze the magnet on start","name":"frozen","type":"boolean","default":"false"}]},"rets":{"ret":{"text":"The magnet","name":"","type":"Entity"}}}},
{"function":{"name":"Weld","parent":"constraint","type":"libraryfunc","description":"Creates a weld constraint","realm":"Server","file":{"text":"lua/includes/modules/constraint.lua","line":"419"},"args":{"arg":[{"text":"The first entity","name":"ent1","type":"Entity"},{"text":"The second entity","name":"ent2","type":"Entity"},{"text":"The bonenumber of the first entity (0 for monoboned entities) \n\nPhysObj number for ragdolls, see: .","name":"bone1","type":"number","page":"Entity:TranslateBoneToPhysBone"},{"text":"The bonenumber of the second entity","name":"bone2","type":"number"},{"text":"The amount of force appliable to the constraint before it will break (0 is never)","name":"forcelimit","type":"number"},{"text":"Should ent1 be nocollided to ent2 via this constraint","name":"nocollide","type":"boolean"},{"text":"If true, when ent2 is removed, ent1 will also be removed","name":"deleteent1onbreak","type":"boolean"}]},"rets":{"ret":{"text":"constraint","name":"","type":"Entity"}}},"example":{"description":"Adapted from stools/thruster.lua","code":"function TOOL:LeftClick( trace )\n /* Boilerplate stool code to extract ClientConVars to variables */\n local thruster = MakeThruster( ply, model, Ang, trace.HitPos, key, key_bk, force, toggle, effect, damageable, soundname )\n local weld = constraint.Weld( thruster, trace.Entity, 0, trace.PhysicsBone, 0, collision == 0, true )\n -- If you remove the entity thrusters are welded to, the thruster is removed as well\nend"}},
{"function":{"name":"Winch","parent":"constraint","type":"libraryfunc","description":"Creates a Winch constraint.","realm":"Server","file":{"text":"lua/includes/modules/constraint.lua","line":"1253"},"args":{"arg":[{"text":"The player that will be used to call  and .","name":"pl","type":"Player","page":["numpad.OnDown","numpad.OnUp"]},{"text":"First entity.","name":"Ent1","type":"Entity"},{"text":"Second entity.","name":"Ent2","type":"Entity"},{"text":"Bone of first entity (0 for non-ragdolls),","name":"Bone1","type":"number"},{"text":"Bone of second entity (0 for non-ragdolls).","name":"Bone2","type":"number"},{"name":"LPos1","type":"Vector"},{"name":"LPos2","type":"Vector"},{"text":"The width of the rope.","name":"width","type":"number"},{"text":"The key binding for \"forward\", corresponding to an","name":"fwd_bind","type":"number","page":"Enums/KEY"},{"text":"The key binding for \"backwards\", corresponding to an","name":"bwd_bind","type":"number","page":"Enums/KEY"},{"text":"Forward speed.","name":"fwd_speed","type":"number"},{"text":"Backwards speed.","name":"bwd_speed","type":"number"},{"text":"The material of the rope.","name":"material","type":"string"},{"text":"Whether the winch should be on toggle.","name":"toggle","type":"boolean"}]},"rets":{"ret":[{"text":"Constraint. Can return nil. Will return false if the constraint could not be created.","name":"","type":"Entity"},{"text":"rope. Will return nil if the constraint could not be created.","name":"","type":"Entity"},{"text":"controller. Can return nil.","name":"","type":"Entity"}]}}},
{"function":{"name":"Slider","parent":"constraint","type":"libraryfunc","description":"Creates a slider constraint.","realm":"Server","file":{"text":"lua/includes/modules/constraint.lua","line":"692"},"args":{"arg":[{"text":"First entity.","name":"Ent1","type":"Entity"},{"text":"Second entity.","name":"Ent2","type":"Entity"},{"text":"Bone of first entity (0 for non-ragdolls),","name":"Bone1","type":"number"},{"text":"Bone of second entity (0 for non-ragdolls).","name":"Bone2","type":"number"},{"name":"LPos1","type":"Vector"},{"name":"LPos2","type":"Vector"},{"text":"The width of the rope.","name":"width","type":"number"},{"text":"The material of the rope.","name":"material","type":"string"}]},"rets":{"ret":[{"text":"Constraint. Will return false if the constraint could not be created.","name":"","type":"Entity"},{"text":"rope. Will return nil if the constraint could not be created.","name":"","type":"Entity"}]}}},
{"function":{"name":"RemoveConstraints","parent":"constraint","type":"libraryfunc","description":"Attempts to remove all constraints of a specified type associated with an entity","realm":"Server","file":{"text":"lua/includes/modules/constraint.lua","line":"171"},"args":{"arg":[{"text":"The entity to check","name":"ent","type":"Entity"},{"text":"The constraint type to remove (eg. \"Weld\", \"Elastic\", \"NoCollide\")","name":"type","type":"string"}]},"rets":{"ret":[{"text":"Whether we removed any constraints or not","name":"","type":"boolean"},{"text":"The amount of constraints removed","name":"","type":"number"}]}},"example":{"description":"From stools/axis.lua","code":"function TOOL:Reload( trace )\n if (!trace.Entity:IsValid() or trace.Entity:IsPlayer() ) then return false end\n local bool = constraint.RemoveConstraints( trace.Entity, \"Axis\" )\n return bool\nend"}},
{"function":{"name":"RemoveAll","parent":"constraint","type":"libraryfunc","description":"Attempts to remove all constraints associated with an entity","realm":"Server","file":{"text":"lua/includes/modules/constraint.lua","line":"214"},"args":{"arg":{"text":"The entity to remove constraints from","name":"ent","type":"Entity"}},"rets":{"ret":[{"text":"Whether any constraints were removed","name":"","type":"boolean"},{"text":"Number of constraints removed","name":"","type":"number"}]}},"example":{"description":"From stools/remover.lua","code":"-- Reload removes all constraints on the targetted entity\nfunction TOOL:Reload( trace )\n\tif ( !IsValid( trace.Entity ) or trace.Entity:IsPlayer() ) then return false end\n\treturn constraint.RemoveAll( trace.Entity )\nend"}},
{"function":{"name":"Rope","parent":"constraint","type":"libraryfunc","description":"Creates a rope constraint - with rope!","realm":"Server","file":{"text":"lua/includes/modules/constraint.lua","line":"484"},"args":{"arg":[{"text":"First entity","name":"Ent1","type":"Entity"},{"text":"Second entity","name":"Ent2","type":"Entity"},{"text":"Bone of first entity (0 for non-ragdolls)","name":"Bone1","type":"number"},{"text":"Bone of second entity (0 for non-ragdolls)","name":"Bone2","type":"number"},{"text":"Position of first end of the rope. Local to Ent1.","name":"LPos1","type":"Vector"},{"text":"Position of second end of the rope. Local to Ent2.","name":"LPos2","type":"Vector"},{"text":"Length of the rope.","name":"length","type":"number"},{"text":"Amount to add to the length of the rope. Works as it does in the Rope tool.","name":"addlength","type":"number"},{"text":"Amount of force until it breaks (0 = unbreakable).","name":"forcelimit","type":"number"},{"text":"Width of the rope.","name":"width","type":"number"},{"text":"Material of the rope.","name":"material","type":"string"},{"text":"Whether the constraint is rigid.","name":"rigid","type":"boolean"}]},"rets":{"ret":[{"text":"Constraint. Will be a keyframe_rope if you roping to the same bone on the same entity. Will return false if the constraint could not be created.","name":"","type":"Entity"},{"text":"rope. Will return nil if \"Constraint\" is a keyframe_rope or if the constraint could not be created.","name":"","type":"Entity"}]}}},
{"function":{"name":"Pulley","parent":"constraint","type":"libraryfunc","description":"Creates a pulley constraint.","realm":"Server","file":{"text":"lua/includes/modules/constraint.lua","line":"1133"},"args":{"arg":[{"name":"Ent1","type":"Entity"},{"name":"Ent4","type":"Entity"},{"name":"Bone1","type":"number"},{"name":"Bone4","type":"number"},{"name":"LPos1","type":"Vector"},{"name":"LPos4","type":"Vector"},{"name":"WPos2","type":"Vector"},{"name":"WPos3","type":"Vector"},{"text":"Amount of force until it breaks (0 = unbreakable)","name":"forcelimit","type":"number"},{"text":"Whether the constraint is rigid.","name":"rigid","type":"boolean"},{"text":"Width of the rope.","name":"width","type":"number"},{"text":"Material of the rope.","name":"material","type":"string"}]},"rets":{"ret":{"text":"Constraint. Will return false if the constraint could not be created.","name":"","type":"Entity"}}}},
{"function":{"name":"NoCollide","parent":"constraint","type":"libraryfunc","description":{"text":"Creates an no-collide \"constraint\". Disables collision between two entities.","note":"Does not work with players."},"realm":"Server","file":{"text":"lua/includes/modules/constraint.lua","line":"917"},"args":{"arg":[{"text":"First entity.","name":"Ent1","type":"Entity"},{"text":"Second entity.","name":"Ent2","type":"Entity"},{"text":"Bone of first entity (0 for non-ragdolls).","name":"Bone1","type":"number"},{"text":"Bone of second entity (0 for non-ragdolls).","name":"Bone2","type":"number"}]},"rets":{"ret":{"text":"Constraint. Will return false if the constraint could not be created.","name":"","type":"Entity"}}}},
{"function":{"name":"Keepupright","parent":"constraint","type":"libraryfunc","description":{"text":"Creates a keep upright constraint.","note":"This function only works on prop_physics or prop_ragdoll."},"realm":"Server","file":{"text":"lua/includes/modules/constraint.lua","line":"631"},"args":{"arg":[{"text":"The entity to keep upright","name":"ent","type":"Entity"},{"text":"The angle defined as \"upright\"","name":"ang","type":"Angle"},{"text":"The bone of the entity to constrain (0 for boneless)","name":"bone","type":"number"},{"text":"Basically, the strength of the constraint","name":"angularLimit","type":"number"}]},"rets":{"ret":{"text":"The created constraint, if any or false if the constraint failed to set","name":"","type":"Entity"}}},"example":{"description":"From properties/keep_upright.lua (the right click menu)","code":"constraint.Keepupright( ent, Phys:GetAngles(), 0, 999999 )"}},
{"function":{"name":"Muscle","parent":"constraint","type":"libraryfunc","description":"Creates a muscle constraint.","realm":"Server","file":{"text":"lua/includes/modules/constraint.lua","line":"1400"},"args":{"arg":[{"text":"The player that will be used to call .","name":"pl","type":"Player","page":"numpad.OnDown"},{"text":"First entity.","name":"Ent1","type":"Entity"},{"text":"Second entity.","name":"Ent2","type":"Entity"},{"text":"Bone of first entity (0 for non-ragdolls)","name":"Bone1","type":"number"},{"text":"Bone of second entity (0 for non-ragdolls)","name":"Bone2","type":"number"},{"name":"LPos1","type":"Vector"},{"name":"LPos2","type":"Vector"},{"name":"Length1","type":"number"},{"name":"Length2","type":"number"},{"text":"Width of the rope.","name":"width","type":"number"},{"text":"The key binding, corresponding to an","name":"key","type":"number","page":"Enums/KEY"},{"text":"Whether the constraint is fixed.","name":"fixed","type":"number"},{"name":"period","type":"number"},{"name":"amplitude","type":"number"},{"name":"starton","type":"boolean"},{"text":"Material of the rope.","name":"material","type":"string"}]},"rets":{"ret":[{"text":"Constraint. Will return false if the constraint could not be created.","name":"","type":"Entity"},{"text":"rope. Will return nil if the constraint could not be created.","name":"","type":"Entity"},{"text":"controller. Will return nil if the constraint could not be created.","name":"","type":"Entity"},{"text":"slider. Will return nil if the fixed argument is not 1 or if the constraint could not be created.","name":"","type":"Entity"}]}}},
{"function":{"name":"Motor","parent":"constraint","type":"libraryfunc","description":"Creates a motor constraint.","realm":"Server","file":{"text":"lua/includes/modules/constraint.lua","line":"966"},"args":{"arg":[{"text":"First entity.","name":"Ent1","type":"Entity"},{"text":"Second entity.","name":"Ent2","type":"Entity"},{"text":"Bone of first entity (0 for non-ragdolls)","name":"Bone1","type":"number"},{"text":"Bone of second entity (0 for non-ragdolls)","name":"Bone2","type":"number"},{"name":"LPos1","type":"Vector"},{"name":"LPos2","type":"Vector"},{"name":"friction","type":"number"},{"name":"torque","type":"number"},{"name":"forcetime","type":"number"},{"text":"Whether the entities should be no-collided.","name":"nocollide","type":"number"},{"text":"Whether the constraint is on toggle.","name":"toggle","type":"number"},{"text":"The player that will be used to call  and .","name":"pl","type":"Player","page":["numpad.OnDown","numpad.OnUp"]},{"text":"Amount of force until it breaks (0 = unbreakable)","name":"forcelimit","type":"number"},{"text":"The key binding for \"forward\", corresponding to an","name":"numpadkey_fwd","type":"number","page":"Enums/KEY"},{"text":"The key binding for \"backwards\", corresponding to an","name":"numpadkey_bwd","type":"number","page":"Enums/KEY"},{"name":"direction","type":"number"},{"name":"LocalAxis","type":"Vector"}]},"rets":{"ret":[{"text":"Constraint. Will return false if the constraint could not be created.","name":"","type":"Entity"},{"text":"axis. Will return nil if the constraint could not be created.","name":"","type":"Entity"}]}}},
{"function":{"name":"Hydraulic","parent":"constraint","type":"libraryfunc","description":"Creates a Hydraulic constraint.","realm":"Server","file":{"text":"lua/includes/modules/constraint.lua","line":"1324"},"args":{"arg":[{"text":"The player that will be used to call .","name":"pl","type":"Player","page":"numpad.OnDown"},{"text":"First entity.","name":"Ent1","type":"Entity"},{"text":"Second entity.","name":"Ent2","type":"Entity"},{"text":"Bone of first entity (0 for non-ragdolls),","name":"Bone1","type":"number"},{"text":"Bone of second entity (0 for non-ragdolls).","name":"Bone2","type":"number"},{"name":"LPos1","type":"Vector"},{"name":"LPos2","type":"Vector"},{"name":"Length1","type":"number"},{"name":"Length2","type":"number"},{"text":"The width of the rope.","name":"width","type":"number"},{"text":"The key binding, corresponding to an","name":"key","type":"number","page":"Enums/KEY"},{"text":"Whether the hydraulic is fixed.","name":"fixed","type":"number"},{"name":"speed","type":"number"},{"text":"The material of the rope.","name":"material","type":"string"}]},"rets":{"ret":[{"text":"Constraint. Will return false if the constraint could not be created.","name":"","type":"Entity"},{"text":"rope. Will return nil if the constraint could not be created.","name":"","type":"Entity"},{"text":"controller. Can return nil depending on how the constraint was created. Will return nil if the constraint could not be created.","name":"","type":"Entity"},{"text":"slider. Can return nil depending on how the constraint was created. Will return nil if the constraint could not be created.","name":"","type":"Entity"}]}}},
{"function":{"name":"HasConstraints","parent":"constraint","type":"libraryfunc","description":"Returns true if the entity has constraints attached to it","realm":"Server","file":{"text":"lua/includes/modules/constraint.lua","line":"1479"},"args":{"arg":{"text":"The entity to check","name":"ent","type":"Entity"}},"rets":{"ret":{"text":"Whether the entity has any constraints or not.","name":"","type":"boolean"}}}},
{"function":{"name":"GetTable","parent":"constraint","type":"libraryfunc","description":"Returns a table of all constraints directly connected to the entity","realm":"Server","file":{"text":"lua/includes/modules/constraint.lua","line":"1508"},"args":{"arg":{"text":"The entity to check","name":"ent","type":"Entity"}},"rets":{"ret":{"text":"A list of all constraints connected to the entity.","name":"","type":"table"}}}},
{"function":{"name":"GetAllConstrainedEntities","parent":"constraint","type":"libraryfunc","description":"Returns a table of all entities recursively constrained to an entitiy.","realm":"Server","file":{"text":"lua/includes/modules/constraint.lua","line":"1620"},"args":{"arg":[{"text":"The entity to check","name":"ent","type":"Entity"},{"text":"Table used to return result. Optional.","name":"ResultTable","type":"table","default":"nil"}]},"rets":{"ret":{"text":"A table containing all of the constrained entities. This includes all entities constrained to entities constrained to the supplied entity, etc.","name":"","type":"table"}}},"example":{"description":"Adapted from stools/remover.lua","code":"-- Remove this entity and everything constrained\nfunction TOOL:RightClick( trace )\n\tif ( !IsValid( trace.Entity ) or trace.Entity:IsPlayer() ) then return false end\n\t-- Loop through all the entities in the system\n\tfor _, Entity in pairs( constraint.GetAllConstrainedEntities( trace.Entity ) ) do\n\t\tDoRemoveEntity( Entity )\n\tend\n\treturn true\nend"}},
{"function":{"name":"ForgetConstraints","parent":"constraint","type":"libraryfunc","description":"Make this entity forget any constraints it knows about. Note that this will not actually remove the constraints.","realm":"Server","file":{"text":"lua/includes/modules/constraint.lua","line":"1551"},"args":{"arg":{"text":"The entity that will forget its constraints.","name":"ent","type":"Entity"}}}},
{"function":{"name":"FindConstraintEntity","parent":"constraint","type":"libraryfunc","description":"Returns the other entity involved in the first constraint of a specific type directly connected to the entity","realm":"Server","file":{"text":"lua/includes/modules/constraint.lua","line":"1601"},"args":{"arg":[{"text":"The entity to check","name":"ent","type":"Entity"},{"text":"The type of constraint (eg. \"Weld\", \"Elastic\", \"NoCollide\")","name":"type","type":"string"}]},"rets":{"ret":{"text":"The other entity.","name":"","type":"Entity"}}}},
{"function":{"name":"FindConstraints","parent":"constraint","type":"libraryfunc","description":"Returns a table of all constraints of a specific type directly connected to the entity","realm":"Server","file":{"text":"lua/includes/modules/constraint.lua","line":"1561"},"args":{"arg":[{"text":"The entity to check","name":"ent","type":"Entity"},{"text":"The type of constraint (eg. \"Weld\", \"Elastic\", \"NoCollide\")","name":"type","type":"string"}]},"rets":{"ret":{"text":"All the constraints of this entity.","name":"","type":"table"}}}},
{"function":{"name":"FindConstraint","parent":"constraint","type":"libraryfunc","description":"Returns the first constraint of a specific type directly connected to the entity found","realm":"Server","file":{"text":"lua/includes/modules/constraint.lua","line":"1582"},"args":{"arg":[{"text":"The entity to check","name":"ent","type":"Entity"},{"text":"The type of constraint (eg. \"Weld\", \"Elastic\", \"NoCollide\")","name":"type","type":"string"}]},"rets":{"ret":{"text":"The constraint table, set with","name":"","type":"table","page":"constraint.AddConstraintTable"}}}},
{"function":{"name":"Find","parent":"constraint","type":"libraryfunc","description":"Returns the constraint of a specified type between two entities, if it exists","realm":"Server","file":{"text":"lua/includes/modules/constraint.lua","line":"246"},"args":{"arg":[{"text":"The first entity to check","name":"ent1","type":"Entity"},{"text":"The second entity to check","name":"ent2","type":"Entity"},{"text":"The constraint type to look for (eg. \"Weld\", \"Elastic\", \"NoCollide\")","name":"type","type":"string"},{"text":"The bone number for the first entity (0 for monoboned entities)","name":"bone1","type":"number"},{"text":"The bone number for the second entity","name":"bone2","type":"number"}]},"rets":{"ret":{"text":"constraint","name":"","type":"Entity"}}}},
{"function":{"name":"CreateStaticAnchorPoint","parent":"constraint","type":"libraryfunc","description":"Creates an invisible, non-moveable anchor point in the world to which things can be attached.","realm":"Server","file":{"text":"lua/includes/modules/constraint.lua","line":"674"},"args":{"arg":{"text":"The position to spawn the anchor at","name":"pos","type":"Vector"}},"rets":{"ret":[{"text":"anchor","name":"","type":"Entity"},{"text":"physicsObject,","name":"","type":"PhysObj"},{"text":"bone","name":"","type":"number"},{"text":"LPos","name":"","type":"Vector"}]}}},
{"function":{"name":"Elastic","parent":"constraint","type":"libraryfunc","description":"Creates an elastic constraint.","realm":"Server","file":{"text":"lua/includes/modules/constraint.lua","line":"559"},"args":{"arg":[{"text":"First entity.","name":"Ent1","type":"Entity"},{"text":"Second entity","name":"Ent2","type":"Entity"},{"text":"Bone of first entity (0 for non-ragdolls)","name":"Bone1","type":"number"},{"text":"Bone of second entity (0 for non-ragdolls)","name":"Bone2","type":"number"},{"text":"Position of first end of the rope. Local to Ent1.","name":"LPos1","type":"Vector"},{"text":"Position of second end of the rope. Local to Ent2.","name":"LPos2","type":"Vector"},{"name":"constant","type":"number"},{"name":"damping","type":"number"},{"name":"rdamping","type":"number"},{"text":"The material of the rope.","name":"material","type":"string"},{"text":"Width of rope.","name":"width","type":"number"},{"name":"stretchonly","type":"boolean"}]},"rets":{"ret":[{"text":"Constraint. Will return false if the constraint could not be created.","name":"","type":"Entity"},{"text":"rope.  Will return nil if the constraint could not be created.","name":"","type":"Entity"}]}}},
{"function":{"name":"CreateKeyframeRope","parent":"constraint","type":"libraryfunc","description":"Creates a rope without any constraint","realm":"Server","file":{"text":"lua/includes/modules/constraint.lua","line":"324"},"args":{"arg":[{"name":"pos","type":"Vector"},{"name":"width","type":"number"},{"name":"material","type":"string"},{"name":"Constraint","type":"Entity"},{"name":"Ent1","type":"Entity"},{"name":"LPos1","type":"Vector"},{"name":"Bone1","type":"number"},{"name":"Ent2","type":"Entity"},{"name":"LPos2","type":"Vector"},{"name":"Bone2","type":"number"},{"name":"kv","type":"table"}]},"rets":{"ret":{"text":"rope","name":"","type":"Entity"}}}},
{"function":{"name":"CanConstrain","parent":"constraint","type":"libraryfunc","description":"Basic checks to make sure that the specified entity and bone are valid. Returns false if we should not be constraining the entity.","realm":"Server","file":{"text":"lua/includes/modules/constraint.lua","line":"278"},"args":{"arg":[{"text":"The entity to check","name":"ent","type":"Entity"},{"text":"The bone of the entity to check (use 0 for mono boned ents)","name":"bone","type":"number"}]},"rets":{"ret":{"text":"shouldConstrain","name":"","type":"boolean"}}},"example":{"description":"From modules/constraint.lua","code":"function Weld( Ent1, Ent2, Bone1, Bone2, forcelimit, nocollide, deleteonbreak )\n if ( !CanConstrain( Ent1, Bone1 ) ) then return false end\n if ( !CanConstrain( Ent2, Bone2 ) ) then return false end"}},
{"function":{"name":"Ballsocket","parent":"constraint","type":"libraryfunc","description":"Creates a ballsocket joint.","realm":"Server","file":{"text":"lua/includes/modules/constraint.lua","line":"1203"},"args":{"arg":[{"text":"First entity","name":"Ent1","type":"Entity"},{"text":"Second entity","name":"Ent2","type":"Entity"},{"text":"Bone of first entity (0 for non-ragdolls)","name":"Bone1","type":"number"},{"text":"Bone of second entity (0 for non-ragdolls)","name":"Bone2","type":"number"},{"text":"Centerposition of the joint, relative to the **second** entity.","name":"LocalPos","type":"Vector"},{"text":"Amount of force until it breaks (0 = unbreakable)","name":"forcelimit","type":"number"},{"text":"Amount of torque (rotation speed) until it breaks (0 = unbreakable)","name":"torquelimit","type":"number"},{"text":"Whether the entities should be nocollided","name":"nocollide","type":"number"}]},"rets":{"ret":{"text":"Constraint. Will return false if the constraint could not be created.","name":"","type":"Entity"}}}},
{"function":{"name":"AddConstraintTableNoDelete","parent":"constraint","type":"libraryfunc","description":{"text":"Stores info about the constraints on the entity's table. The only difference between this and  is that the constraint does not get deleted when the entity is removed.","page":"constraint.AddConstraintTable"},"realm":"Server","file":{"text":"lua/includes/modules/constraint.lua","line":"397"},"args":{"arg":[{"text":"The entity to store the information on.","name":"ent1","type":"Entity"},{"text":"The constraint to store in the entity's table.","name":"constrt","type":"Entity"},{"text":"Optional. If different from `ent1`, the info will also be stored in the table for this entity.","name":"ent2","type":"Entity","default":"nil"},{"text":"Optional. Same as `ent2`.","name":"ent3","type":"Entity","default":"nil"},{"text":"Optional. Same as `ent2`.","name":"ent4","type":"Entity","default":"nil"}]}}},
{"function":{"name":"Axis","parent":"constraint","type":"libraryfunc","description":"Creates an axis constraint.","realm":"Server","file":{"text":"lua/includes/modules/constraint.lua","line":"779"},"args":{"arg":[{"text":"First entity.","name":"Ent1","type":"Entity"},{"text":"Second entity.","name":"Ent2","type":"Entity"},{"text":"Bone of first entity (0 for non-ragdolls)","name":"Bone1","type":"number"},{"text":"Bone of second entity (0 for non-ragdolls)","name":"Bone2","type":"number"},{"text":"Position on the first entity, in its local space coordinates.","name":"LPos1","type":"Vector"},{"text":"Position on the second entity, in its local space coordinates.","name":"LPos2","type":"Vector"},{"text":"Amount of force until it breaks (0 = unbreakable)","name":"forcelimit","type":"number"},{"text":"Amount of torque (rotational force) until it breaks (0 = unbreakable)","name":"torquelimit","type":"number"},{"text":"Constraint friction.","name":"friction","type":"number"},{"text":"Whether the entities should be no-collided.","name":"nocollide","type":"number"},{"text":"If you include the LocalAxis then LPos2 will not be used in the final constraint. However, LPos2 is still a required argument.","name":"LocalAxis","type":"Vector"},{"text":"Whether or not to add the constraint info on the entity table. See .","name":"DontAddTable","type":"boolean","page":"constraint.AddConstraintTable"}]},"rets":{"ret":{"text":"Constraint. Will return false if the constraint could not be created.","name":"","type":"Entity"}}}},
{"function":{"name":"AddConstraintTable","parent":"constraint","type":"libraryfunc","description":"Stores information about constraints in an entity's table.","realm":"Server","file":{"text":"lua/includes/modules/constraint.lua","line":"375"},"args":{"arg":[{"text":"The entity to store the information on.","name":"ent1","type":"Entity"},{"text":"The constraint to store in the entity's table.","name":"constrt","type":"Entity"},{"text":"Optional. If different from `ent1`, the info will also be stored in the table for this entity.","name":"ent2","type":"Entity","default":"nil"},{"text":"Optional. Same as `ent2`.","name":"ent3","type":"Entity","default":"nil"},{"text":"Optional. Same as `ent2`.","name":"ent4","type":"Entity","default":"nil"}]}}},
{"function":{"name":"Remove","parent":"concommand","type":"libraryfunc","description":{"text":"Removes a console command.","bug":[{"text":"This will not always remove the command from auto-complete.","issue":"1183"},{"text":"will fail if the concommand was previously removed with this function in a different realm (creating a command on the client that was removed from the server and vice-versa).","issue":"1183","page":"concommand.Add"}]},"realm":"Shared and Menu","file":{"text":"lua/includes/modules/concommand.lua","line":"39"},"args":{"arg":{"text":"The name of the command to be removed.","name":"name","type":"string"}}},"example":{"description":"Removes the built-in concommand \"gmod_camera\" which would normally quickly select the camera swep","code":"concommand.Remove(\"gmod_camera\")"}},
{"function":{"name":"AdvBallsocket","parent":"constraint","type":"libraryfunc","description":"Creates an advanced ballsocket (ragdoll) constraint.\n\nUses a https://developer.valvesoftware.com/wiki/Phys_ragdollconstraint","realm":"Server","file":{"text":"lua/includes/modules/constraint.lua","line":"842"},"args":{"arg":[{"text":"First entity.","name":"Ent1","type":"Entity"},{"text":"Second entity.","name":"Ent2","type":"Entity"},{"text":"Bone of first entity (0 for non-ragdolls)","name":"Bone1","type":"number"},{"text":"Bone of second entity (0 for non-ragdolls)","name":"Bone2","type":"number"},{"text":"Position on the first entity, in its local space coordinates.","name":"LPos1","type":"Vector"},{"text":"Position on the second entity, in its local space coordinates.","name":"LPos2","type":"Vector"},{"text":"Amount of force until it breaks (0 = unbreakable)","name":"forcelimit","type":"number"},{"text":"Amount of torque (rotation speed) until it breaks (0 = unbreakable)","name":"torquelimit","type":"number"},{"text":"Minimum angle in rotations around the X axis local to the constraint.","name":"xmin","type":"number"},{"text":"Minimum angle in rotations around the Y axis local to the constraint.","name":"ymin","type":"number"},{"text":"Minimum angle in rotations around the Z axis local to the constraint.","name":"zmin","type":"number"},{"text":"Maximum angle in rotations around the X axis local to the constraint.","name":"xmax","type":"number"},{"text":"Maximum angle in rotations around the Y axis local to the constraint.","name":"ymax","type":"number"},{"text":"Maximum angle in rotations around the Z axis local to the constraint.","name":"zmax","type":"number"},{"text":"Rotational friction in the X axis local to the constraint.","name":"xfric","type":"number"},{"text":"Rotational friction in the Y axis local to the constraint.","name":"yfric","type":"number"},{"text":"Rotational friction in the Z axis local to the constraint.","name":"zfric","type":"number"},{"text":"Only limit rotation, free movement.","name":"onlyrotation","type":"number"},{"text":"Whether the entities should be no-collided.","name":"nocollide","type":"number"}]},"rets":{"ret":{"text":"A phys_ragdollconstraint entity. Will return false if the constraint could not be created.","name":"","type":"Entity"}}}},
{"function":{"name":"Run","parent":"concommand","type":"libraryfunc","description":{"text":"Used by the engine to run a console command's callback function. This will only be called for commands that were added with , which  calls internally. An error is sent to the player's chat if no callback is found.\n\nThis will still be called for concommands removed with  but will return false.","internal":{"text":"You might be looking for  or .","page":["Global.RunConsoleCommand","Player:ConCommand"]},"page":["Global.AddConsoleCommand","concommand.Add","concommand.Remove"]},"realm":"Shared and Menu","file":{"text":"lua/includes/modules/concommand.lua","line":"49"},"args":{"arg":[{"text":"Player to run concommand on","name":"ply","type":"Player"},{"text":"Command name","name":"cmd","type":"string"},{"text":"Command arguments.\nCan be table or string","name":"args","type":"any"},{"text":"string of all arguments sent to the command","name":"argumentString","type":"string"}]},"rets":{"ret":{"text":"`true` if the console command with the given name exists, and `false` if it doesn't.","name":"","type":"boolean"}}}},
{"function":{"name":"GetTable","parent":"concommand","type":"libraryfunc","description":{"text":"Returns the tables of all console command callbacks, and autocomplete functions, that were added to the game with .","page":"concommand.Add"},"realm":"Shared and Menu","file":{"text":"lua/includes/modules/concommand.lua","line":"20"},"rets":{"ret":[{"text":"Table of command callback functions.","name":"","type":"table"},{"text":"Table of command autocomplete functions.","name":"","type":"table"}]}}},
{"function":{"name":"AutoComplete","parent":"concommand","type":"libraryfunc","description":{"text":"Used by the engine to call the autocomplete function for a console command, and retrieve returned options.","internal":""},"realm":"Shared and Menu","file":{"text":"lua/includes/modules/concommand.lua","line":"67"},"args":{"arg":[{"text":"Name of command","name":"command","type":"string"},{"text":"Arguments given to the command","name":"arguments","type":"string"}]},"rets":{"ret":{"text":"Possibilities for auto-completion. This is the return value of the auto-complete callback.","name":"","type":"table"}}}},
{"function":{"name":"UpdateUI","parent":"cleanup","type":"libraryfunc","description":"Repopulates the clients cleanup menu","realm":"Client","file":{"text":"lua/includes/modules/cleanup.lua","line":"207"}}},
{"function":{"name":"ReplaceEntity","parent":"cleanup","type":"libraryfunc","description":"Replaces one entity in the cleanup module with another","realm":"Server","file":{"text":"lua/includes/modules/cleanup.lua","line":"76"},"args":{"arg":[{"text":"Old entity","name":"from","type":"Entity"},{"text":"New entity","name":"to","type":"Entity"}]},"rets":{"ret":{"text":"Whether any action was taken.","name":"","type":"boolean"}}}},
{"function":{"name":"Add","parent":"concommand","type":"libraryfunc","description":{"text":"Creates a console command that runs a function in lua with optional autocompletion function and help text.","bug":{"text":"This will fail if the concommand was previously removed with  in a different realm (creating a command on the client that was removed from the server and vice-versa).","issue":"1183","page":"concommand.Remove"}},"realm":"Shared and Menu","file":{"text":"lua/includes/modules/concommand.lua","line":"28"},"args":{"arg":[{"text":"The command name to be used in console.\n\nThis cannot be a name of existing console command or console variable. It will silently fail if it is.","name":"name","type":"string"},{"text":"The function to run when the concommand is executed. Arguments passed are:\n*  ply - The player that ran the concommand. NULL entity if command was entered with the dedicated server console.\n*  cmd - The concommand string (if one callback is used for several concommands).\n*  args - A table of all string arguments.\n*  argStr - The arguments as a string.","name":"callback","type":"function","page":["Player","string","table","string"]},{"text":"The function to call which should return a table of options for autocompletion. ()\n\nThis only properly works on the client since it is **not** networked. Arguments passed are:\n*  cmd - The concommand this autocompletion is for.\n*  args - The arguments typed so far.","name":"autoComplete","type":"function","default":"nil","page":[",Autocompletion TutorialAutocomplete_Tutorial","string","string"]},{"text":"The text to display should a user run 'help cmdName'.","name":"helpText","type":"string","default":"nil"},{"text":"Concommand modifier flags. See .","name":"flags","type":"number","default":"0","page":"Enums/FCVAR"}]}},"example":[{"description":"Adds a concommand `killyourself` which will kill the user.","code":"concommand.Add(\"killyourself\", function( ply, cmd, args )\n    ply:Kill()\n    print(\"You killed yourself!\")\nend)"},{"description":"A concommand that prints the SteamID and nickname of every player on the server.","code":"concommand.Add( \"retrieveplayers\", function()  \n\tfor _, ply in ipairs( player.GetAll() ) do\n\t\tprint( ply:Nick() .. \", \" .. ply:SteamID() .. \"\\n\" )\n\tend\nend)"}]},
{"function":{"name":"GetTable","parent":"cleanup","type":"libraryfunc","description":"Gets the table of cleanup types.","realm":"Shared","file":{"text":"lua/includes/modules/cleanup.lua","line":"31"},"rets":{"ret":{"text":"cleanup_types","name":"","type":"table"}}}},
{"function":{"name":"Register","parent":"cleanup","type":"libraryfunc","description":"Registers a new cleanup type.","realm":"Shared","file":{"text":"lua/includes/modules/cleanup.lua","line":"17"},"args":{"arg":{"text":"Name of type.","name":"type","type":"string"}}}},
{"function":{"name":"GetList","parent":"cleanup","type":"libraryfunc","description":"Gets the cleanup list.","realm":"Server","file":{"text":"lua/includes/modules/cleanup.lua","line":"40"}}},
{"function":{"name":"CC_Cleanup","parent":"cleanup","type":"libraryfunc","description":{"text":"Called by the `gmod_cleanup` console command. Allows players to cleanup their own props.","internal":""},"realm":"Server","file":{"text":"lua/includes/modules/cleanup.lua","line":"98"},"args":{"arg":[{"text":"The player that called the console command.","name":"pl","type":"Player"},{"text":"The console command that called this function.","name":"command","type":"string"},{"text":"First and only arg is the cleanup type.","name":"args","type":"table"}]}}},
{"function":{"name":"Add","parent":"cleanup","type":"libraryfunc","description":"Adds an entity to a player's cleanup list.","realm":"Server","file":{"text":"lua/includes/modules/cleanup.lua","line":"59"},"args":{"arg":[{"text":"Who's cleanup list to add the entity to.","name":"pl","type":"Player"},{"text":"The type of cleanup.","name":"type","type":"string"},{"text":"The entity to add to the player's cleanup list.","name":"ent","type":"Entity"}]}}},
{"function":{"name":"PlaySound","parent":"chat","type":"libraryfunc","description":"Plays the chat \"tick\" sound.","realm":"Client"},"example":{"description":"Plays an obnoxious tick sound.","code":"chat.PlaySound()"}},
{"function":{"name":"CC_AdminCleanup","parent":"cleanup","type":"libraryfunc","description":{"text":"Called by the `gmod_admin_cleanup` console command. Allows admins to clean up the server.","internal":""},"realm":"Server","file":{"text":"lua/includes/modules/cleanup.lua","line":"148"},"args":{"arg":[{"text":"The player that called the console command.","name":"pl","type":"Player"},{"text":"The console command that called this function.","name":"command","type":"string"},{"text":"First and only arg is the cleanup type.","name":"args","type":"table"}]}}},
{"function":{"name":"Open","parent":"chat","type":"libraryfunc","description":"Opens the chat window.","realm":"Client","args":{"arg":{"text":"If equals 1, opens public chat, otherwise opens team chat","name":"mode","type":"number"}}}},
{"function":{"name":"GetChatBoxSize","parent":"chat","type":"libraryfunc","description":"Returns the chatbox size.","realm":"Client","rets":{"ret":[{"text":"The width of the chatbox.","name":"","type":"number"},{"text":"The height of the chatbox.","name":"","type":"number"}]}},"example":{"description":"Prints the width and the height of the chatbox.","code":"print( chat.GetChatBoxSize() )"}},
{"function":{"name":"Close","parent":"chat","type":"libraryfunc","description":"Closes the chat window.","realm":"Client"}},
{"function":{"name":"GetChatBoxPos","parent":"chat","type":"libraryfunc","description":"Returns the chatbox position.","realm":"Client","rets":{"ret":[{"text":"The X coordinate of the chatbox's position.","name":"","type":"number"},{"text":"The Y coordinate of the chatbox's position.","name":"","type":"number"}]}},"example":{"description":"Prints the x and y coordinates of the chatbox.","code":"print( chat.GetChatBoxPos() )"}},
{"function":{"name":"AddText","parent":"chat","type":"libraryfunc","description":"Adds text to the local player's chat box (which only they can read).","realm":"Client","args":{"arg":{"text":"The arguments. Arguments can be:\n*  - . Will set the color for all following strings until the next Color argument.\n*  - Text to be added to the chat box.\n*  - Adds the name of the player in the player's team color to the chat box.\n*  - Any other type, such as  will be converted to string and added as text.","name":"arguments","type":"vararg","page":["table","Color","string","Player","any","Entity"]}}},"example":{"description":"Prints the player's name and current weapon to their chat area.","code":"local ply = LocalPlayer()\nchat.AddText( Color( 100, 100, 255 ), ply, \", you are holding \", Color( 100, 255, 100 ), ply:GetActiveWeapon():GetClass() )","output":{"image":{"src":"chat_AddText.png","alt":"center"}}}},
{"function":{"name":"StartOrthoView","parent":"cam","type":"libraryfunc","description":"Sets up a new 3d context using orthographic projection.","realm":"Client","args":{"arg":[{"text":"The left plane offset.","name":"leftOffset","type":"number"},{"text":"The top plane offset.","name":"topOffset","type":"number"},{"text":"The right plane offset.","name":"rightOffset","type":"number"},{"text":"The bottom plane offset.","name":"bottomOffset","type":"number"}]}}},
{"function":{"name":"Start2D","parent":"cam","type":"libraryfunc","file":{"text":"lua/includes/extensions/client/render.lua","line":"107-L111"},"description":{"text":"Sets up a new 2D rendering context. Must be finished by .\n\nThis is almost always used with a render target from the . To set its position use  with a target already stored.","page":["cam.End2D","render","render.SetViewPort"],"note":{"text":"This will put an identity matrix at the top of the model matrix stack. If you are trying to use , call it after this function and not before.","page":"cam.PushModelMatrix"},"rendercontext":{"hook":"false","type":"2D"}},"realm":"Client"},"example":{"description":"Sets the viewport then draws on the view with 2d methods","code":"local oldW, oldH = ScrW(), ScrH()\nrender.SetViewPort( 0, 100, 50, 50 )\ncam.Start2D()\n\tsurface.SetDrawColor( 255, 255, 255 )\n\tsurface.DrawLine( 10, 10, 100, 100 )\ncam.End2D()\nrender.SetViewPort( 0, 0, oldW, oldH )"}},
{"function":{"name":"Start3D2D","parent":"cam","type":"libraryfunc","description":{"text":"Sets up a new 2D rendering context. Must be finished by . This function pushes a new matrix onto the stack. ()\n\nMatrix formula:\n```\nlocal m = Matrix()\nm:SetAngles(angles)\nm:SetTranslation(pos)\nm:SetScale(Vector(scale, -scale, 1))\n```","page":["cam.End3D2D","cam.PushModelMatrix"],"rendercontext":[{"hook":"false","type":"2D"},{"hook":"false","type":"3D"}],"warning":{"text":"This should be closed by  otherwise the game crashes","page":"cam.End3D2D"}},"realm":"Client","args":{"arg":[{"text":"Origin of the 3D2D context, ie. the top left corner, (0, 0).","name":"pos","type":"Vector"},{"text":"Angles of the 3D2D context.\n+x in the 2d context corresponds to +x of the angle (its forward direction).\n+y in the 2d context corresponds to -y of the angle (its right direction).\n\nIf (dx, dy) are your desired (+x, +y) unit vectors, the angle you want is dx:AngleEx(dx:Cross(-dy)).","name":"angles","type":"Angle"},{"text":"The scale of the render context.\nIf scale is 1 then 1 pixel in 2D context will equal to 1 unit in 3D context.","name":"scale","type":"number"}]}},"example":[{"description":"Makes a floating rectangle with text above where the player is looking at, pointing at the player","code":"hook.Add(\"PostDrawOpaqueRenderables\", \"example\", function()\n\t-- Get the game's camera angles\n\tlocal angle = EyeAngles()\n\n\t-- Only use the Yaw component of the angle\n\tangle = Angle( 0, angle.y, 0 )\n\n\t-- Apply some animation to the angle\n\tangle.y = angle.y + math.sin( CurTime() ) * 10\n\n\t-- Correct the angle so it points at the camera\n\t-- This is usually done by trial and error using Up(), Right() and Forward() axes\n\tangle:RotateAroundAxis( angle:Up(), -90 )\n\tangle:RotateAroundAxis( angle:Forward(), 90 )\n\n\t-- A trace just for a position\n\tlocal trace = LocalPlayer():GetEyeTrace()\n\tlocal pos = trace.HitPos\n\n\t-- Raise the hitpos off the ground by 20 units and apply some animation\n\tpos = pos + Vector( 0, 0, math.cos( CurTime() / 2 ) + 20 )\n\n\t-- Notice the scale is small, so text looks crispier\n\tcam.Start3D2D( pos, angle, 0.1 )\n\t\t-- Get the size of the text we are about to draw\n\t\tlocal text = \"Testing\"\n\t\tsurface.SetFont( \"Default\" )\n\t\tlocal tW, tH = surface.GetTextSize( \"Testing\" )\n\n\t\t-- This defines amount of padding for the box around the text\n\t\tlocal pad = 5\n\n\t\t-- Draw a rectable. This has to be done before drawing the text, to prevent overlapping\n\t\t-- Notice how we start drawing in negative coordinates\n\t\t-- This is to make sure the 3d2d display rotates around our position by its center, not left corner\n\t\tsurface.SetDrawColor( 0, 0, 0, 255 )\n\t\tsurface.DrawRect( -tW / 2 - pad, -pad, tW + pad * 2, tH + pad * 2 )\n\n\t\t-- Draw some text\n\t\tdraw.SimpleText( \"Testing\", \"Default\", -tW / 2, 0, color_white )\n\tcam.End3D2D()\nend )"},{"code":"hook.Add(\"PostDrawOpaqueRenderables\", \"example\", function()\n\tlocal trace = LocalPlayer():GetEyeTrace()\n\tlocal angle = trace.HitNormal:Angle()\n\t\t\n\trender.DrawLine( trace.HitPos, trace.HitPos + 8 * angle:Forward(), Color( 255, 0, 0 ), true )\n\trender.DrawLine( trace.HitPos, trace.HitPos + 8 * -angle:Right(), Color( 0, 255, 0 ), true )\n\trender.DrawLine( trace.HitPos, trace.HitPos + 8 * angle:Up(), Color( 0, 0, 255 ), true )\n\t\t\n\tcam.Start3D2D( trace.HitPos, angle, 1 )\n\t\tsurface.SetDrawColor( 255, 165, 0, 255 )\n\t\tsurface.DrawRect( 0, 0, 8, 8 )\n\t\trender.DrawLine( Vector( 0, 0, 0 ), Vector( 8, 8, 8 ), Color( 100, 149, 237, 255 ), true )\n\tcam.End3D2D()\nend )","output":{"image":{"src":"cam.Start3D2D_example_1.png"}}}]},
{"function":{"name":"Start3D","parent":"cam","type":"libraryfunc","file":{"text":"lua/includes/extensions/client/render.lua","line":"113-L142"},"description":{"text":"Sets up a new 3D rendering context. Must be finished by .\n\nFor more advanced settings such as an orthographic view, use  instead.","page":["cam.End3D","cam.Start"],"rendercontext":{"hook":"false","type":"3D"},"note":"Both zNear and zFar need a value before any of them work.\n\nzNear also requires a value higher than 0.","bug":[{"text":"Negative x/y values won't work.","issue":"1995"},{"text":"This will not update current view properties.","issue":"2682"}]},"realm":"Client","args":{"arg":[{"text":"Render cam position.","name":"pos","type":"Vector","default":"EyePos()"},{"text":"Render cam angles.","name":"angles","type":"Angle","default":"EyeAngles()"},{"text":"Field of view.","name":"fov","type":"number","default":"nil"},{"text":"X coordinate of where to start the new view port.","name":"x","type":"number","default":"0"},{"text":"Y coordinate of where to start the new view port.","name":"y","type":"number","default":"0"},{"text":"Width of the new viewport.","name":"w","type":"number","default":"ScrW()"},{"text":"Height of the new viewport.","name":"h","type":"number","default":"ScrH()"},{"text":"Distance to near clipping plane.","name":"zNear","type":"number","default":"nil"},{"text":"Distance to far clipping plane.","name":"zFar","type":"number","default":"nil"}]}},"example":{"description":"Set up a 3D rendering environment in a 2D rendering hook to render models on HUD.","code":"hook.Add( \"HUDPaint\", \"3d_camera_example\", function()\n\tcam.Start3D()\n\t\tfor id, ply in pairs( player.GetAll() ) do\n\t\t\tply:DrawModel()\n\t\tend\n\tcam.End3D()\nend )","output":"All players can be seen through walls."}},
{"function":{"name":"PopModelMatrix","parent":"cam","type":"libraryfunc","description":"Pops the current active rendering matrix from the stack and reinstates the previous one.","realm":"Client"}},
{"function":{"name":"Start","parent":"cam","type":"libraryfunc","description":{"text":"Sets up a new rendering context. This is an extended version of  and . Must be finished by  or .","page":["cam.Start3D","cam.Start2D","cam.End3D","cam.End2D"],"bug":{"text":"This will not update current view properties for 3D contexts.","issue":"2682"}},"realm":"Client","args":{"arg":{"text":"Render context config. See","name":"dataTbl","type":"table","page":"Structures/RenderCamData"}}}},
{"function":{"name":"PushModelMatrix","parent":"cam","type":"libraryfunc","description":{"text":"Pushes the specified matrix onto the render matrix stack. Unlike opengl, this will replace the current model matrix.","note":{"text":"This does not work with  if `multiply` is false.","page":"cam.Start3D2D"}},"realm":"Client","args":{"arg":[{"text":"The matrix to push.","name":"matrix","type":"VMatrix"},{"text":"If set, multiplies given matrix with currently active matrix () before pushing.","name":"multiply","type":"boolean","default":"false","page":"cam.GetModelMatrix"}]}},"example":[{"description":"Rotates and scales text in the center of the screen.","code":"hook.Add(\"HUDPaint\", \"2d rotation test\", function()\n\tlocal w, h = ScrW(), ScrH()\n\tlocal t = RealTime()*50\n\t\n\tlocal mat = Matrix()\n\n\tmat:Translate(Vector(w/2, h/2))\n\tmat:Rotate(Angle(0,t,0))\n\tmat:Scale(Vector(1,1,1) * math.sin(t/100) *10)\n\tmat:Translate(-Vector(w/2, h/2))\n\n\tcam.PushModelMatrix(mat)\n\t\tsurface.SetFont(\"DermaDefault\")\n\t\tsurface.SetTextColor(255, 255, 255, 255)\n\t\tsurface.SetTextPos(w/2, h/2)\n\t\tsurface.DrawText(\"LOLLOLOLOL\")\n\tcam.PopModelMatrix()\t\nend)"},{"description":"Simple function to draw rotated text","code":"function draw.TextRotated(text, x, y, color, font, ang)\n\trender.PushFilterMag(TEXFILTER.ANISOTROPIC)\n\trender.PushFilterMin(TEXFILTER.ANISOTROPIC)\n\tsurface.SetFont(font)\n\tsurface.SetTextColor(color)\n\tsurface.SetTextPos(0, 0)\n\tlocal textWidth, textHeight = surface.GetTextSize( text )\n\tlocal rad = -math.rad( ang )\n\tx = x - ( math.cos( rad ) * textWidth / 2 + math.sin( rad ) * textHeight / 2 )\n\ty = y + ( math.sin( rad ) * textWidth / 2 + math.cos( rad ) * textHeight / 2 )\n\tlocal m = Matrix()\n\tm:SetAngles(Angle(0, ang, 0))\n\tm:SetTranslation(Vector(x, y, 0))\n\tcam.PushModelMatrix(m)\n\t\tsurface.DrawText(text)\n\tcam.PopModelMatrix()\n\trender.PopFilterMag()\n\trender.PopFilterMin()\nend"}]},
{"function":{"name":"IgnoreZ","parent":"cam","type":"libraryfunc","description":"Tells the renderer to ignore the depth buffer and draw any upcoming operation \"ontop\" of everything that was drawn yet.","realm":"Client","args":{"arg":{"text":"Determines whenever to ignore the depth buffer or not.","name":"ignoreZ","type":"boolean"}}}},
{"function":{"name":"EndOrthoView","parent":"cam","type":"libraryfunc","description":"Switches the renderer back to the previous drawing mode from a 3D orthographic rendering context.","realm":"Client"}},
{"function":{"name":"GetModelMatrix","parent":"cam","type":"libraryfunc","description":{"text":"Returns the currently active model matrix.","validate":"Does this actually mean the matrix on top of the stack? Probably"},"realm":"Client","rets":{"ret":{"text":"The currently active matrix.","name":"","type":"VMatrix"}}}},
{"function":{"name":"End3D2D","parent":"cam","type":"libraryfunc","description":{"text":"Switches the renderer back to the previous drawing mode from a 3D2D context.","bug":{"text":"This will crash the game if there is no context to end.","issue":"1091"}},"realm":"Client"}},
{"function":{"name":"End3D","parent":"cam","type":"libraryfunc","description":{"text":"Switches the renderer back to the previous drawing mode from a 3D context.","bug":{"text":"This will crash the game if there is no context to end.","issue":"1091"}},"realm":"Client"}},
{"function":{"name":"End2D","parent":"cam","type":"libraryfunc","description":{"text":"Switches the renderer back to the previous drawing mode from a 2D context.","bug":{"text":"This will crash the game if there is no context to end.","issue":"1091"}},"realm":"Client"}},
{"function":{"name":"End","parent":"cam","type":"libraryfunc","description":{"text":"Switches the renderer back to the previous drawing mode from a 3D context.\n\nThis function is an alias of .","page":"cam.End3D","bug":{"text":"This will crash the game if there is no context to end.","issue":"1091"}},"realm":"Client"}},
{"function":{"name":"ApplyShake","parent":"cam","type":"libraryfunc","description":"Shakes the screen at a certain position.","realm":"Client","args":{"arg":[{"text":"Origin of the shake.","name":"pos","type":"Vector"},{"text":"Angles of the shake.","name":"angles","type":"Angle"},{"text":"The shake factor.","name":"factor","type":"number"}]}}},
{"function":{"name":"tohex","parent":"bit","type":"libraryfunc","description":"Returns the hexadecimal representation of the number with the specified digits.","realm":"Shared and Menu","args":{"arg":[{"text":"The value to be normalized.","name":"value","type":"number"},{"text":"The number of digits. Optional","name":"digits","type":"number","default":"8"}]},"rets":{"ret":{"text":"hexString","name":"","type":"string"}}}},
{"function":{"name":"tobit","parent":"bit","type":"libraryfunc","description":"Normalizes the specified value and clamps it in the range of a signed 32bit integer.","realm":"Shared and Menu","args":{"arg":{"text":"The value to be normalized.","name":"value","type":"number"}},"rets":{"ret":{"text":"swapped","name":"","type":"number"}}}},
{"function":{"name":"rshift","parent":"bit","type":"libraryfunc","description":"Returns the right shifted value.","realm":"Shared and Menu","args":{"arg":[{"text":"The value to be manipulated.","name":"value","type":"number"},{"text":"Amounts of bits to shift right by.","name":"shiftCount","type":"number"}]},"rets":{"ret":{"text":"shiftedValue","name":"","type":"number"}}}},
{"function":{"name":"rol","parent":"bit","type":"libraryfunc","description":"Returns the left rotated value.","realm":"Shared and Menu","args":{"arg":[{"text":"The value to be manipulated.","name":"value","type":"number"},{"text":"Amounts of bits to rotate left by.","name":"shiftCount","type":"number"}]},"rets":{"ret":{"text":"shiftedValue","name":"","type":"number"}}}},
{"function":{"name":"ror","parent":"bit","type":"libraryfunc","description":"Returns the right rotated value.","realm":"Shared and Menu","args":{"arg":[{"text":"The value to be manipulated.","name":"value","type":"number"},{"text":"Amounts of bits to rotate right by.","name":"shiftCount","type":"number"}]},"rets":{"ret":{"text":"shiftedValue","name":"","type":"number"}}}},
{"function":{"name":"lshift","parent":"bit","type":"libraryfunc","description":"Returns the left shifted value.","realm":"Shared and Menu","args":{"arg":[{"text":"The value to be manipulated.","name":"value","type":"number"},{"text":"Amounts of bits to shift left by.","name":"shiftCount","type":"number"}]},"rets":{"ret":{"text":"shiftedValue","name":"","type":"number"}}}},
{"function":{"name":"bxor","parent":"bit","type":"libraryfunc","description":"Returns the bitwise xor of all values specified.","realm":"Shared and Menu","args":{"arg":[{"text":"The value to be manipulated.","name":"value","type":"number"},{"text":"Values bit xor with. Optional.","name":"otherValues","type":"number","default":"nil"}]},"rets":{"ret":{"text":"bitwiseXOr","name":"","type":"number"}}}},
{"function":{"name":"bswap","parent":"bit","type":"libraryfunc","description":"Swaps the byte order.","realm":"Shared and Menu","args":{"arg":{"text":"The value to be byte swapped.","name":"value","type":"number"}},"rets":{"ret":{"text":"swapped","name":"","type":"number"}}}},
{"function":{"name":"bor","parent":"bit","type":"libraryfunc","description":"Returns the bitwise OR of all values specified.","realm":"Shared and Menu","args":{"arg":[{"text":"The first value.","name":"value1","type":"number"},{"text":"Extra values to be evaluated. (must all be numbers)","name":"...","type":"vararg"}]},"rets":{"ret":{"text":"The bitwise OR result between all numbers.","name":"","type":"number"}}},"example":[{"description":"Performs the bitwise OR operation between three values","code":"local a = math.BinToInt(\"1000\")\nlocal b = math.BinToInt(\"0100\")\nlocal c = math.BinToInt(\"0001\")\n\nlocal result = bit.bor(a, b, c)\n\nprint(math.IntToBin(result))\nprint(result)","outputfixedwidth":"Fixed width","output":"1101\n13"},{"description":"Adding multiple capabilities to an NPC.","code":"NPC:CapabilitiesAdd( bit.bor( CAP_MOVE_GROUND, CAP_ANIMATEDFACE, CAP_TURN_HEAD ) )"}]},
{"function":{"name":"bnot","parent":"bit","type":"libraryfunc","description":"Returns the bitwise not of the value.","realm":"Shared and Menu","args":{"arg":{"text":"The value to be inverted.","name":"value","type":"number"}},"rets":{"ret":{"text":"bitwiseNot","name":"","type":"number"}}}},
{"function":{"name":"band","parent":"bit","type":"libraryfunc","description":"Performs the bitwise \"and\" for all values specified.","realm":"Shared and Menu","args":{"arg":[{"text":"The value to be manipulated.","name":"value","type":"number"},{"text":"Values bit to perform bitwise \"and\" with. Optional.","name":"otherValues","type":"number","default":"nil"}]},"rets":{"ret":{"text":"Result of bitwise \"and\" operation.","name":"","type":"number"}}},"example":{"code":"local a = 170    -- 10101010 in binary form\nlocal b = 146    -- 10010010 in binary form\nprint( bit.band( a, b ) )","output":"130 (10000010 in binary form)"}},
{"function":{"name":"arshift","parent":"bit","type":"libraryfunc","description":"Returns the arithmetically shifted value.","realm":"Shared and Menu","args":{"arg":[{"text":"The value to be manipulated.","name":"value","type":"number"},{"text":"Amounts of bits to shift.","name":"shiftCount","type":"number"}]},"rets":{"ret":{"text":"shiftedValue","name":"","type":"number"}}}},
{"function":{"name":"Set","parent":"baseclass","type":"libraryfunc","description":"Add a new base class that can be derived by others. This is done automatically for:\n* widgets\n* panels\n* drive modes\n* entities\n* weapons\n* gamemodes (with prefix \"gamemode_\")","realm":"Shared and Menu","file":{"text":"lua/includes/modules/baseclass.lua","line":"43-L58"},"args":{"arg":[{"text":"The name of this base class. Must be completely unique.","name":"name","type":"string"},{"text":"The base class.","name":"tab","type":"table"}]}}},
{"function":{"name":"Get","parent":"baseclass","type":"libraryfunc","description":"Gets the base class of an an object.\n\nThis is used not just by entities, but also by widgets, panels, drive modes, weapons and gamemodes (with \"gamemode_\" prefix).\n\nThe keyword **DEFINE_BASECLASS** translates into a call to this function. In the engine, it is replaced with:\n\n```\nlocal BaseClass = baseclass.Get\n```","realm":"Shared and Menu","file":{"text":"lua/includes/modules/baseclass.lua","line":"32-L41"},"args":{"arg":{"text":"The child class.","name":"name","type":"string"}},"rets":{"ret":{"text":"The base class's meta table.","name":"","type":"table"}}},"example":{"description":"Inherits the weapon from weapon_csbasegun and calls its base functions","code":"AddCSLuaFile()\nDEFINE_BASECLASS( \"weapon_csbasegun\" ) //this is equivalent to local BaseClass = baseclass.Get( \"weapon_csbasegun\" )\n\n//omitted generic swep definitions\n\nfunction SWEP:Initialize()\n\tBaseClass.Initialize( self ) //calls SWEP:Initialize() from weapon_csbasegun\n\tself:SetHoldType( \"pistol\" )\nend\n\nfunction SWEP:Deploy()\n\tself:SetAccuracy( 0.9 )\n\treturn BaseClass.Deploy( self ) //calls SWEP:Deploy() from weapon_csbasegun and returns its result\nend\n\nfunction SWEP:SetupDataTables()\n\tBaseClass.SetupDataTables( self ) //calls SWEP:SetupDataTables() from weapon_csbasegun and inits its dtvars\nend"}},
{"function":{"name":"New","parent":"ai_task","type":"libraryfunc","description":{"text":"Create a new empty task. Used by  and .","page":["Schedule:AddTask","Schedule:EngTask"]},"realm":"Server","file":{"text":"lua/includes/modules/ai_task.lua","line":"138"},"rets":{"ret":{"text":"The new task object.","name":"","type":"Task"}}}},
{"function":{"name":"GetTaskID","parent":"ai","type":"libraryfunc","description":"Translates a task name to its corresponding ID.","realm":"Server","args":{"arg":{"text":"The task name.","name":"task","type":"string"}},"rets":{"ret":{"text":"The task ID, see [ai_task.h](https://github.com/ValveSoftware/source-sdk-2013/blob/55ed12f8d1eb6887d348be03aee5573d44177ffb/mp/src/game/server/ai_task.h#L89-L502). Returns -1 if the schedule name isn't valid.","name":"","type":"number"}}}},
{"function":{"name":"New","parent":"ai_schedule","type":"libraryfunc","description":"Creates a schedule for scripted NPC.","realm":"Server","file":{"text":"lua/includes/modules/ai_schedule.lua","line":"96"},"args":{"arg":{"text":"Name of the schedule.","name":"name","type":"string"}},"rets":{"ret":{"text":"A table containing schedule information to be used with .","name":"","type":"table","page":"ENTITY:StartSchedule"}}}},
{"function":{"name":"SpawnMenuOpen","parent":"achievements","type":"libraryfunc","description":{"text":"Adds one to the count of how many times the spawnmenu has been opened. Once this count reaches 100,000, the 'Menu User' achievement is unlocked.","internal":""},"realm":"Client"}},
{"function":{"name":"GetScheduleID","parent":"ai","type":"libraryfunc","description":"Translates a schedule name to its corresponding ID.","realm":"Server","args":{"arg":{"text":"Then schedule name. In most cases, this will be the same as the  name.","name":"sched","type":"string","page":"Enums/SCHED"}},"rets":{"ret":{"text":"The schedule ID, see . Returns -1 if the schedule name isn't valid.","name":"","type":"number","page":"Enums/SCHED"}}}},
{"function":{"name":"SpawnedRagdoll","parent":"achievements","type":"libraryfunc","description":{"text":"Adds one to the count of ragdolls spawned. Once this count reaches 2000, the 'Dollhouse' achievement is unlocked.","internal":""},"realm":"Client"}},
{"function":{"name":"SpawnedProp","parent":"achievements","type":"libraryfunc","description":{"text":"Adds one to the count of props spawned. Once this count reaches 5000, the 'Creator' achievement is unlocked.","internal":""},"realm":"Client"}},
{"function":{"name":"SpawnedNPC","parent":"achievements","type":"libraryfunc","description":{"text":"Adds one to the count of NPCs spawned. Once this count reaches 1000, the 'Procreator' achievement is unlocked.","internal":""},"realm":"Client"}},
{"function":{"name":"IncGoodies","parent":"achievements","type":"libraryfunc","description":{"text":"Adds one to the count of friendly NPCs killed. Once this count reaches 1000, the 'Bad Friend' achievement is unlocked.","internal":""},"realm":"Client"}},
{"function":{"name":"Remover","parent":"achievements","type":"libraryfunc","description":{"text":"Adds one to the count of things removed. Once this count reaches 5000, the 'Destroyer' achievement is unlocked.","internal":""},"realm":"Client"}},
{"function":{"name":"IsAchieved","parent":"achievements","type":"libraryfunc","description":"Used in GMod 12 in the achievements menu to show the user if they have unlocked certain achievements.","realm":"Client and Menu","args":{"arg":{"text":"Internal Achievement ID number","name":"AchievementID","type":"number"}},"rets":{"ret":{"text":"Returns true if the given achievementID is achieved.","name":"","type":"boolean"}}},"example":{"description":"Prints true if you got the achievement.","code":"print(\"Did you get achievement number 7?, \" .. achievements.IsAchieved(7))","output":"boolean true (assuming you have unlocked achievement 7)"}},
{"function":{"name":"IncBystander","parent":"achievements","type":"libraryfunc","description":{"text":"Adds one to the count of innocent animals killed. Once this count reaches 1000, the 'Innocent Bystander' achievement is unlocked.","internal":""},"realm":"Client"}},
{"function":{"name":"IncBaddies","parent":"achievements","type":"libraryfunc","description":{"text":"Adds one to the count of baddies killed. Once this count reaches 1000, the 'War Zone' achievement is unlocked.","internal":""},"realm":"Client"}},
{"function":{"name":"GetGoal","parent":"achievements","type":"libraryfunc","description":"Retrieves progress goal of given achievement","realm":"Client and Menu","args":{"arg":{"text":"The ID of achievement to retrieve goal of. Note: IDs start from 0, not 1.","name":"achievementID","type":"number"}},"rets":{"ret":{"text":"Progress goal of an achievement","name":"","type":"number"}}},"example":{"description":"Will print achievement progress and goals for all of your achievements into console","code":"for i = 0, achievements.Count() - 1 do\n\tprint( achievements.GetCount( i ) .. \" / \" .. achievements.GetGoal( i ) )\nend","output":"Prints achievement progress and goals for all of your achievements into console."}},
{"function":{"name":"GetName","parent":"achievements","type":"libraryfunc","description":"Retrieves name of given achievement","realm":"Client and Menu","args":{"arg":{"text":"The ID of achievement to retrieve name of. Note: IDs start from 0, not 1.","name":"achievementID","type":"number"}},"rets":{"ret":{"text":"Name of an achievement","name":"","type":"string"}}},"example":{"description":"Will print all achievement names into console","code":"for i = 0, achievements.Count() - 1 do\n\tprint( achievements.GetName( i ) )\nend","output":"Prints all achievement names into console"}},
{"function":{"name":"GetDesc","parent":"achievements","type":"libraryfunc","description":"Retrieves description of given achievement","realm":"Client and Menu","args":{"arg":{"text":"The ID of achievement to retrieve description of. Note: IDs start from 0, not 1.","name":"achievementID","type":"number"}},"rets":{"ret":{"text":"Description of an achievement","name":"","type":"string"}}},"example":{"description":"Will print achievement descriptions for all of your achievements into console","code":"for i = 0, achievements.Count() - 1 do\n\tprint( achievements.GetDesc( i ) )\nend","output":"Prints achievement descriptions for all of your achievements into console."}},
{"function":{"name":"GetCount","parent":"achievements","type":"libraryfunc","description":"Retrieves progress of given achievement","realm":"Client and Menu","args":{"arg":{"text":"The ID of achievement to retrieve progress of. Note: IDs start from 0, not 1.","name":"achievementID","type":"number"}}},"example":{"description":"Will print achievement progress for all of your achievements into console","code":"for i = 0, achievements.Count() - 1 do\n\tprint( achievements.GetCount( i ) )\nend","output":"Prints achievement progress for all of your achievements into console.\nNote: Non-progress based achievements will have 0, even if they are completed"}},
{"function":{"name":"EatBall","parent":"achievements","type":"libraryfunc","description":{"text":"Adds one to the count of balls eaten. Once this count reaches 200, the 'Ball Eater' achievement is unlocked.","internal":""},"realm":"Client"}},
{"function":{"name":"Count","parent":"achievements","type":"libraryfunc","description":"Returns the amount of achievements in Garry's Mod.","realm":"Client and Menu","rets":{"ret":{"text":"The amount of achievements available.","name":"","type":"number"}}}},
{"function":{"name":"BalloonPopped","parent":"achievements","type":"libraryfunc","description":{"text":"Adds one to the count of balloons burst. Once this count reaches 1000, the 'Popper' achievement is unlocked.","internal":""},"realm":"Client"}},
{"function":{"name":"SetNextSecondaryFire","parent":"Weapon","type":"classfunc","description":{"text":"Sets when the weapon can alt-fire again. Time should be based on .","page":"Global.CurTime"},"realm":"Shared","args":{"arg":{"text":"Time when player should be able to use secondary fire again","name":"time","type":"number"}}}},
{"function":{"name":"SetLastShootTime","parent":"Weapon","type":"classfunc","description":{"text":"Sets the time since this weapon last fired in seconds. Used in conjunction with","page":"Weapon:LastShootTime"},"realm":"Shared","args":{"arg":{"text":"The time in seconds when the last time the weapon was fired.","name":"time","type":"number","default":"CurTime()"}}}},
{"function":{"name":"SetLastShootTime","parent":"Weapon","type":"classfunc","description":{"text":"Sets the time since this weapon last fired in seconds. Used in conjunction with","page":"Weapon:LastShootTime"},"realm":"Shared","args":{"arg":{"text":"The time in seconds when the last time the weapon was fired.","name":"time","type":"number","default":"CurTime()"}}}},
{"function":{"name":"SetHoldType","parent":"Weapon","type":"classfunc","description":{"text":"Sets the hold type of the weapon. This function also calls  and properly networks it to all clients.","page":"WEAPON:SetWeaponHoldType","note":"This only works on scripted weapons.","bug":"Using this function on weapons held by bots will not network holdtype changes to clients if the world model is set to an empty string (SWEP.WorldModel = \"\")."},"realm":"Shared","args":{"arg":{"text":"Name of the hold type. You can find all default hold types","name":"name","type":"string","page":",hereHold_Types"}}},"example":{"description":{"text":"Puts a players hands down by its sides on .","page":",reloadWEAPON:Reload"},"code":"function SWEP:Reload()\n\tself:SetHoldType( \"normal\" )\nend"}},
{"function":{"name":"SetClip2","parent":"Weapon","type":"classfunc","description":"Lets you change the number of bullets in the given weapons secondary clip.","realm":"Shared","args":{"arg":{"text":"The amount of bullets the clip should contain","name":"ammo","type":"number"}}}},
{"function":{"name":"SetClip1","parent":"Weapon","type":"classfunc","description":"Lets you change the number of bullets in the given weapons primary clip.","realm":"Shared","args":{"arg":{"text":"The amount of bullets the clip should contain","name":"ammo","type":"number"}}}},
{"function":{"name":"SendWeaponAnim","parent":"Weapon","type":"classfunc","description":"Forces weapon to play activity/animation.","realm":"Shared","args":{"arg":{"text":"Activity to play. See the  (specifically ACT_VM_).","name":"act","type":"number","page":"Enums/ACT"}}}},
{"function":{"name":"LastShootTime","parent":"Weapon","type":"classfunc","description":{"text":"Returns the time since this weapon last fired a bullet with  in seconds. It is not networked.","page":"Entity:FireBullets"},"realm":"Shared","rets":{"ret":{"text":"The time in seconds when the last bullet was fired.","name":"","type":"number"}}}},
{"function":{"name":"IsWeaponVisible","parent":"Weapon","type":"classfunc","description":"Returns whether the weapon is visible. The term visibility is not exactly what gets checked here, first it checks if the owner is a player, then checks if the active view model has EF_NODRAW flag NOT set.","realm":"Shared","rets":{"ret":{"text":"Is visible or not","name":"","type":"boolean"}}}},
{"function":{"name":"IsScripted","parent":"Weapon","type":"classfunc","description":"Checks if the weapon is a SWEP or a built-in weapon.","realm":"Shared","rets":{"ret":{"text":"Returns true if weapon is scripted ( SWEP ), false if not ( A built-in HL2 weapon )","name":"","type":"boolean"}}}},
{"function":{"name":"IsCarriedByLocalPlayer","parent":"Weapon","type":"classfunc","description":"Returns whenever the weapon is carried by the local player.","realm":"Client","rets":{"ret":{"text":"Is the weapon is carried by the local player or not","name":"","type":"boolean"}}}},
{"function":{"name":"GetWeight","parent":"Weapon","type":"classfunc","description":{"text":"Returns the \"weight\" of the weapon, which is used when deciding which  is better by the engine.","page":"Weapon"},"realm":"Shared","rets":{"ret":{"text":"The weapon \"weight\".","name":"","type":"number"}}}},
{"function":{"name":"GetWeight","parent":"Weapon","type":"classfunc","description":{"text":"Returns the \"weight\" of the weapon, which is used when deciding which  is better by the engine.","page":"Weapon"},"realm":"Shared","rets":{"ret":{"text":"The weapon \"weight\".","name":"","type":"number"}}}},
{"function":{"name":"GetWeaponWorldModel","parent":"Weapon","type":"classfunc","description":"Returns the world model of the weapon.","realm":"Shared","rets":{"ret":{"text":"The world model of the weapon.","name":"","type":"string"}}}},
{"function":{"name":"GetWeaponViewModel","parent":"Weapon","type":"classfunc","description":"Returns the view model of the weapon.","realm":"Shared","rets":{"ret":{"text":"The view model of the weapon.","name":"","type":"string"}}}},
{"function":{"name":"GetSlot","parent":"Weapon","type":"classfunc","description":"Returns the slot of the weapon (slot numbers start from 0)","realm":"Shared","rets":{"ret":{"text":"The slot of the weapon","name":"","type":"number"}}},"example":{"description":"How you could use this function to check if a weapon slot was empty or not","code":"local function IsSlotEmpty( ply, slot )\n\n\tslot = slot - 1 -- take away 1 from the slot number you want since it starts from 0\n\n\tlocal weptbl = ply:GetWeapons() -- get all the weapons the player has\n\n\tfor k,v in pairs( weptbl ) do -- loop through them\n\t\tif v:GetSlot() == slot then return false end -- check if the slot is the slot you wanted to check, if it is, return false\n\tend\n\n\treturn true -- otherwise return true\n\nend"}},
{"function":{"name":"GetSlot","parent":"Weapon","type":"classfunc","description":"Returns the slot of the weapon (slot numbers start from 0)","realm":"Shared","rets":{"ret":{"text":"The slot of the weapon","name":"","type":"number"}}},"example":{"description":"How you could use this function to check if a weapon slot was empty or not","code":"local function IsSlotEmpty( ply, slot )\n\n\tslot = slot - 1 -- take away 1 from the slot number you want since it starts from 0\n\n\tlocal weptbl = ply:GetWeapons() -- get all the weapons the player has\n\n\tfor k,v in pairs( weptbl ) do -- loop through them\n\t\tif v:GetSlot() == slot then return false end -- check if the slot is the slot you wanted to check, if it is, return false\n\tend\n\n\treturn true -- otherwise return true\n\nend"}},
{"function":{"name":"GetSlotPos","parent":"Weapon","type":"classfunc","description":"Returns slot position of the weapon","realm":"Shared","rets":{"ret":{"text":"The slot position of the weapon","name":"","type":"number"}}}},
{"function":{"name":"GetPrintName","parent":"Weapon","type":"classfunc","description":{"text":"Returns the non-internal name of the weapon, that should be for displaying.","note":[{"text":"If that returns an untranslated message (#HL2_XX), use  to see the \"nice\" name.","page":"language.GetPhrase"},"If SWEP.PrintName is not set in the Weapon or the Weapon Base then \"<MISSING SWEP PRINT NAME>\" will be returned."]},"realm":"Shared","rets":{"ret":{"text":"The \"nice\" name of the weapon.","name":"","type":"string"}}}},
{"function":{"name":"GetPrimaryAmmoType","parent":"Weapon","type":"classfunc","description":"Gets the primary ammo type of the given weapon.","realm":"Shared","rets":{"ret":{"text":"The ammo type ID, or -1 if not found.","name":"","type":"number"}}}},
{"function":{"name":"GetNextSecondaryFire","parent":"Weapon","type":"classfunc","description":{"text":"Gets the next time the weapon can secondary fire. ( Can call  )","page":"WEAPON:SecondaryAttack"},"realm":"Shared","rets":{"ret":{"text":"The time, relative to","name":"","type":"number","page":"Global.CurTime"}}}},
{"function":{"name":"GetNextPrimaryFire","parent":"Weapon","type":"classfunc","description":{"text":"Gets the next time the weapon can primary fire. ( Can call  )","page":"WEAPON:PrimaryAttack"},"realm":"Shared","rets":{"ret":{"text":"The time, relative to","name":"","type":"number","page":"Global.CurTime"}}}},
{"function":{"name":"GetMaxClip2","parent":"Weapon","type":"classfunc","description":"Returns maximum secondary clip size","realm":"Shared","rets":{"ret":{"text":"Maximum secondary clip size","name":"","type":"number"}}}},
{"function":{"name":"GetMaxClip1","parent":"Weapon","type":"classfunc","description":"Returns maximum primary clip size","realm":"Shared","rets":{"ret":{"text":"Maximum primary clip size","name":"","type":"number"}}}},
{"function":{"name":"GetHoldType","parent":"Weapon","type":"classfunc","description":"Returns the hold type of the weapon.","realm":"Shared","rets":{"ret":{"text":"The hold type of the weapon. You can find a list of default hold types .","name":"","type":"string","page":",hereHold_Types"}}}},
{"function":{"name":"DefaultReload","parent":"Weapon","type":"classfunc","description":{"text":"Forces the weapon to reload while playing given animation.","note":{"text":"This will stop the  function from getting called while the weapon is reloading!","page":"Weapon:Think"}},"realm":"Shared","args":{"arg":{"text":"Sequence to use as reload animation. Uses the .","name":"act","type":"number","page":"Enums/ACT"}},"rets":{"ret":{"text":"Did reloading actually take place","name":"","type":"boolean"}}}},
{"function":{"name":"DefaultReload","parent":"Weapon","type":"classfunc","description":{"text":"Forces the weapon to reload while playing given animation.","note":{"text":"This will stop the  function from getting called while the weapon is reloading!","page":"Weapon:Think"}},"realm":"Shared","args":{"arg":{"text":"Sequence to use as reload animation. Uses the .","name":"act","type":"number","page":"Enums/ACT"}},"rets":{"ret":{"text":"Did reloading actually take place","name":"","type":"boolean"}}}},
{"function":{"name":"Clip2","parent":"Weapon","type":"classfunc","description":"Returns how much secondary ammo is in magazine.","realm":"Shared","rets":{"ret":{"text":"The amount of secondary ammo in the magazine.","name":"","type":"number"}}},"example":{"description":"Prints the amount of secondary ammo in the magazine of the weapon the 1st player has equipped.","code":"print( player.GetByID( 1 ):GetActiveWeapon():Clip2() )","output":"Will print -1 for all HL2 weapons."}},
{"function":{"name":"Clip1","parent":"Weapon","type":"classfunc","description":"Returns how much primary ammo is in the magazine.","realm":"Shared","rets":{"ret":{"text":"The amount of primary ammo in the magazine.","name":"","type":"number"}}},"example":{"description":"Prints the amount of primary ammo in the magazine of the weapon the 1st player has equipped.","code":"print( player.GetByID( 1 ):GetActiveWeapon():Clip1() )","output":"Will print 45 for fully loaded SMG1."}},
{"function":{"name":"AllowsAutoSwitchTo","parent":"Weapon","type":"classfunc","description":{"text":"Returns whether the weapon allows to being switched to when a better (  ) weapon is being picked up.","page":"Weapon:GetWeight"},"realm":"Shared","rets":{"ret":{"text":"Whether the weapon allows to being switched to.","name":"","type":"boolean"}}}},
{"function":{"name":"CallOnClient","parent":"Weapon","type":"classfunc","description":{"text":"Calls a SWEP function on client.","warning":{"text":"This uses the  internally, because of that, the combined length of the arguments of this function may not exceed 254 bytes/characters or the function will cease to function!","page":"usermessage"}},"realm":"Shared","args":{"arg":[{"text":"Name of function to call. If you want to call SWEP:MyFunc() on client, you type in \"MyFunc\"","name":"functionName","type":"string"},{"text":"Arguments for the function, separated by spaces.","name":"arguments","type":"string","default":"","note":"Only the second argument is passed as argument and must be a string"}]}}},
{"function":{"name":"Zero","parent":"VMatrix","type":"classfunc","description":"Sets all components of the matrix to 0, also known as a [null matrix](https://en.wikipedia.org/wiki/Zero_matrix).\n\nThis function is more efficient than setting each element manually.","realm":"Shared"}},
{"function":{"name":"AllowsAutoSwitchFrom","parent":"Weapon","type":"classfunc","description":{"text":"Returns whether the weapon allows to being switched from when a better (  ) weapon is being picked up.","page":"Weapon:GetWeight"},"realm":"Shared","rets":{"ret":{"text":"Whether the weapon allows to being switched from.","name":"","type":"boolean"}}}},
{"function":{"name":"Translate","parent":"VMatrix","type":"classfunc","description":"Translates the matrix by the given vector aka. adds the vector to the translation.\n\nPostmultiplies the matrix by a translation matrix (A = AT).","realm":"Shared","args":{"arg":{"text":"Vector to translate the matrix by.","name":"translation","type":"Vector"}}}},
{"function":{"name":"Unpack","parent":"VMatrix","type":"classfunc","description":"Returns each component of the matrix, expanding rows before columns.","realm":"Shared","rets":{"ret":[{"text":"(1, 1)","name":"","type":"number","page":"VMatrix:GetField"},{"text":"(1, 2)","name":"","type":"number","page":"VMatrix:GetField"},{"text":"(1, 3)","name":"","type":"number","page":"VMatrix:GetField"},{"text":"(1, 4)","name":"","type":"number","page":"VMatrix:GetField"},{"text":"(2, 1)","name":"","type":"number","page":"VMatrix:GetField"},{"text":"(2, 2)","name":"","type":"number","page":"VMatrix:GetField"},{"text":"(2, 3)","name":"","type":"number","page":"VMatrix:GetField"},{"text":"(2, 4)","name":"","type":"number","page":"VMatrix:GetField"},{"text":"(3, 1)","name":"","type":"number","page":"VMatrix:GetField"},{"text":"(3, 2)","name":"","type":"number","page":"VMatrix:GetField"},{"text":"(3, 3)","name":"","type":"number","page":"VMatrix:GetField"},{"text":"(3, 4)","name":"","type":"number","page":"VMatrix:GetField"},{"text":"(4, 1)","name":"","type":"number","page":"VMatrix:GetField"},{"text":"(4, 2)","name":"","type":"number","page":"VMatrix:GetField"},{"text":"(4, 3)","name":"","type":"number","page":"VMatrix:GetField"},{"text":"(4, 4)","name":"","type":"number","page":"VMatrix:GetField"}]}}},
{"function":{"name":"ToTable","parent":"VMatrix","type":"classfunc","description":{"text":"Converts the matrix to a 4x4 table. See  function.","page":"Global.Matrix"},"realm":"Shared","rets":{"ret":{"text":"The 4x4 table.","name":"","type":"table"}}}},
{"function":{"name":"SetUp","parent":"VMatrix","type":"classfunc","description":"Sets the up direction of the matrix.\n\nie. The third column of the matrix, excluding the w coordinate.","realm":"Shared","args":{"arg":{"text":"The up direction of the matrix.","name":"forward","type":"Vector"}}}},
{"function":{"name":"SetUnpacked","parent":"VMatrix","type":"classfunc","description":"Sets each component of the matrix.","realm":"Shared","args":{"arg":[{"name":"e11","type":"number"},{"name":"e12","type":"number"},{"name":"e13","type":"number"},{"name":"e14","type":"number"},{"name":"e21","type":"number"},{"name":"e22","type":"number"},{"name":"e23","type":"number"},{"name":"e24","type":"number"},{"name":"e31","type":"number"},{"name":"e32","type":"number"},{"name":"e33","type":"number"},{"name":"e34","type":"number"},{"name":"e41","type":"number"},{"name":"e42","type":"number"},{"name":"e43","type":"number"},{"name":"e44","type":"number"}]}}},
{"function":{"name":"SetTranslation","parent":"VMatrix","type":"classfunc","description":"Sets the absolute translation of the matrix.","realm":"Shared","args":{"arg":{"text":"New translation.","name":"translation","type":"Vector"}}}},
{"function":{"name":"SetRight","parent":"VMatrix","type":"classfunc","description":"Sets the right direction of the matrix.\n\nie. The second column of the matrix, negated, excluding the w coordinate.","realm":"Shared","args":{"arg":{"text":"The right direction of the matrix.","name":"forward","type":"Vector"}}}},
{"function":{"name":"SetScale","parent":"VMatrix","type":"classfunc","description":"Modifies the scale of the matrix while preserving the rotation and translation.","realm":"Shared","args":{"arg":{"text":"The scale to set.","name":"scale","type":"Vector"}}}},
{"function":{"name":"SetForward","parent":"VMatrix","type":"classfunc","description":"Sets the forward direction of the matrix.\n\nie. The first column of the matrix, excluding the w coordinate.","realm":"Shared","args":{"arg":{"text":"The forward direction of the matrix.","name":"forward","type":"Vector"}}}},
{"function":{"name":"SetAngles","parent":"VMatrix","type":"classfunc","description":"Sets the absolute rotation of the matrix.","realm":"Shared","args":{"arg":{"text":"New angles.","name":"angle","type":"Angle"}}}},
{"function":{"name":"Set","parent":"VMatrix","type":"classfunc","description":"Copies values from the given matrix object.","realm":"Shared","args":{"arg":{"text":"The matrix to copy values from.","name":"src","type":"VMatrix"}}}},
{"function":{"name":"SetField","parent":"VMatrix","type":"classfunc","description":"Sets a specific field in the matrix.","realm":"Shared","args":{"arg":[{"text":"Row of the field to be set, from 1 to 4","name":"row","type":"number"},{"text":"Column of the field to be set, from 1 to 4","name":"column","type":"number"},{"text":"The value to set in that field","name":"value","type":"number"}]}}},
{"function":{"name":"ScaleTranslation","parent":"VMatrix","type":"classfunc","description":"Scales the absolute translation with the given value.","realm":"Shared","args":{"arg":{"text":"Value to scale the translation with.","name":"scale","type":"number"}}}},
{"function":{"name":"Rotate","parent":"VMatrix","type":"classfunc","description":"Rotates the matrix by the given angle.\n\nPostmultiplies the matrix by a rotation matrix (A = AR).","realm":"Shared","args":{"arg":{"text":"Rotation.","name":"rotation","type":"Angle"}}}},
{"function":{"name":"IsZero","parent":"VMatrix","type":"classfunc","description":"Checks whenever all fields of the matrix are 0, aka if this is a [null matrix](https://en.wikipedia.org/wiki/Zero_matrix).","realm":"Shared","rets":{"ret":{"text":"If the matrix is a null matrix.","name":"","type":"boolean"}}}},
{"function":{"name":"Scale","parent":"VMatrix","type":"classfunc","description":"Scales the matrix by the given vector.\n\nPostmultiplies the matrix by a scaling matrix (A = AS).","realm":"Shared","args":{"arg":{"text":"Vector to scale with matrix with.","name":"scale","type":"Vector"}}}},
{"function":{"name":"IsRotationMatrix","parent":"VMatrix","type":"classfunc","description":"Returns whether the matrix is a rotation matrix or not.\n\nTechnically it checks if the forward, right and up vectors are orthogonal and normalized.","realm":"Shared","rets":{"ret":{"text":"Is the matrix a rotation matrix or not","name":"","type":"boolean"}}}},
{"function":{"name":"InvertTR","parent":"VMatrix","type":"classfunc","description":{"text":"Inverts the matrix. This function will not fail, but only works correctly on matrices that contain only translation and/or rotation.\n\nUsing this function on a matrix with modified scale may return an incorrect inverted matrix.\n\nTo invert a matrix that contains other modifications, see .","page":"VMatrix:Invert"},"realm":"Shared"}},
{"function":{"name":"IsIdentity","parent":"VMatrix","type":"classfunc","description":"Returns whether the matrix is equal to Identity matrix or not.","realm":"Shared","rets":{"ret":{"text":"Is the matrix an Identity matrix or not","name":"","type":"boolean"}}}},
{"function":{"name":"Invert","parent":"VMatrix","type":"classfunc","description":{"text":"Inverts the matrix.\n\nInverting the matrix will fail if its [determinant](https://en.wikipedia.org/wiki/Determinant) is 0 or close to 0. (ie. its \"scale\" in any direction is 0.)\n\nIf the matrix cannot be inverted, it does not get modified.\n\nSee also .","page":"VMatrix:InvertTR"},"realm":"Shared","rets":{"ret":{"text":"Whether the matrix was inverted or not","name":"","type":"boolean"}}}},
{"function":{"name":"Identity","parent":"VMatrix","type":"classfunc","description":"Initializes the matrix as Identity matrix.","realm":"Shared"}},
{"function":{"name":"GetUp","parent":"VMatrix","type":"classfunc","description":"Gets the up direction of the matrix.\n\nie. The third column of the matrix, excluding the w coordinate.","realm":"Shared","rets":{"ret":{"text":"The up direction of the matrix.","name":"","type":"Vector"}}}},
{"function":{"name":"GetScale","parent":"VMatrix","type":"classfunc","description":"Returns the absolute scale of the matrix.","realm":"Shared","rets":{"ret":{"text":"Absolute scale of the matrix","name":"","type":"Vector"}}}},
{"function":{"name":"GetTranslation","parent":"VMatrix","type":"classfunc","description":"Returns the absolute translation of the matrix.","realm":"Shared","rets":{"ret":{"text":"Absolute translation of the matrix","name":"","type":"Vector"}}}},
{"function":{"name":"GetRight","parent":"VMatrix","type":"classfunc","description":"Gets the right direction of the matrix.\n\nie. The second column of the matrix, negated, excluding the w coordinate.","realm":"Shared","rets":{"ret":{"text":"The right direction of the matrix.","name":"","type":"Vector"}}}},
{"function":{"name":"GetForward","parent":"VMatrix","type":"classfunc","description":"Gets the forward direction of the matrix.\n\nie. The first column of the matrix, excluding the w coordinate.","realm":"Shared","rets":{"ret":{"text":"The forward direction of the matrix.","name":"","type":"Vector"}}}},
{"function":{"name":"GetForward","parent":"VMatrix","type":"classfunc","description":"Gets the forward direction of the matrix.\n\nie. The first column of the matrix, excluding the w coordinate.","realm":"Shared","rets":{"ret":{"text":"The forward direction of the matrix.","name":"","type":"Vector"}}}},
{"function":{"name":"GetInverse","parent":"VMatrix","type":"classfunc","description":{"text":"Returns an inverted matrix without modifying the original matrix.\n\nInverting the matrix will fail if its [determinant](https://en.wikipedia.org/wiki/Determinant) is 0 or close to 0. (ie. its \"scale\" in any direction is 0.)\n\nSee also .","page":"VMatrix:GetInverseTR"},"realm":"Shared","rets":{"ret":{"text":"The inverted matrix if possible, nil otherwise","name":"","type":"VMatrix"}}}},
{"function":{"name":"SetWheelFriction","parent":"Vehicle","type":"classfunc","description":"Sets friction of given wheel.  This function may be broken.","realm":"Server","args":{"arg":[{"text":"The wheel to change the friction of","name":"wheel","type":"number"},{"text":"The new friction to set","name":"friction","type":"number"}]}}},
{"function":{"name":"GetField","parent":"VMatrix","type":"classfunc","description":"Returns a specific field in the matrix.","realm":"Shared","args":{"arg":[{"text":"Row of the field whose value is to be retrieved, from 1 to 4","name":"row","type":"number"},{"text":"Column of the field whose value is to be retrieved, from 1 to 4","name":"column","type":"number"}]},"rets":{"ret":{"text":"The value of the specified field","name":"","type":"number"}}}},
{"function":{"name":"StartEngine","parent":"Vehicle","type":"classfunc","description":"Starts or stops the engine.","realm":"Server","args":{"arg":{"text":"True to start, false to stop.","name":"start","type":"boolean"}}}},
{"function":{"name":"GetAngles","parent":"VMatrix","type":"classfunc","description":"Returns the absolute rotation of the matrix.","realm":"Shared","rets":{"ret":{"text":"Absolute rotation of the matrix","name":"","type":"Angle"}}}},
{"function":{"name":"SetVehicleEntryAnim","parent":"Vehicle","type":"classfunc","description":"Sets whether the entry or exit camera animation should be played or not.","realm":"Server","args":{"arg":{"text":"Whether the entry or exit camera animation should be played or not.","name":"bOn","type":"boolean"}}}},
{"function":{"name":"SetVehicleClass","parent":"Vehicle","type":"classfunc","description":{"text":"Sets the vehicle class name.","internal":""},"realm":"Shared","file":{"text":"lua/includes/extensions/entity.lua","line":"535-L539"},"args":{"arg":{"text":"The vehicle class name to set","name":"class","type":"string"}}}},
{"function":{"name":"SetVehicleParams","parent":"Vehicle","type":"classfunc","description":{"text":"Sets the vehicle parameters for given vehicle.","note":{"text":"Not all variables from the  can be set.","page":"Structures/VehicleParams"},"bug":{"text":"Because this method uses miles per hour but  returns Hammer units per second, this method incorrectly modifies the vehicle engine's \"boostMaxSpeed\", \"maxRevSpeed\" and \"maxSpeed\" even when not explicitly set in a call to this method.\n\n**Workaround**: In order to retain the original values for these fields, call  yourself, convert the mentioned fields from Hammer units per second to miles per hour (1 MPH ≈ 17.6 HU/s in this case) and add them to the table passed into the call to this setter. Avoid doing this repeatedly to avoid floating point inaccuracies over time (store the ready-calculated value for next time if possible).","issue":"2625","page":["Vehicle:GetVehicleParams","Vehicle:GetVehicleParams"]}},"realm":"Server","args":{"arg":{"text":"The new new vehicle parameters. See","name":"params","type":"table","page":"Structures/VehicleParams"}}},"example":{"description":"Adds 25 horsepower to every vehicle spawned.","code":"hook.Add(\"PlayerSpawnedVehicle\", \"VehicleParamsExample\", function(ply, ent)\n\n    local params = ent:GetVehicleParams()\n\n\n    params.engine.horsepower = params.engine.horsepower + 25\n\n\n    ent:SetVehicleParams(params)\n\nend)"}},
{"function":{"name":"SetVehicleParams","parent":"Vehicle","type":"classfunc","description":{"text":"Sets the vehicle parameters for given vehicle.","note":{"text":"Not all variables from the  can be set.","page":"Structures/VehicleParams"},"bug":{"text":"Because this method uses miles per hour but  returns Hammer units per second, this method incorrectly modifies the vehicle engine's \"boostMaxSpeed\", \"maxRevSpeed\" and \"maxSpeed\" even when not explicitly set in a call to this method.\n\n**Workaround**: In order to retain the original values for these fields, call  yourself, convert the mentioned fields from Hammer units per second to miles per hour (1 MPH ≈ 17.6 HU/s in this case) and add them to the table passed into the call to this setter. Avoid doing this repeatedly to avoid floating point inaccuracies over time (store the ready-calculated value for next time if possible).","issue":"2625","page":["Vehicle:GetVehicleParams","Vehicle:GetVehicleParams"]}},"realm":"Server","args":{"arg":{"text":"The new new vehicle parameters. See","name":"params","type":"table","page":"Structures/VehicleParams"}}},"example":{"description":"Adds 25 horsepower to every vehicle spawned.","code":"hook.Add(\"PlayerSpawnedVehicle\", \"VehicleParamsExample\", function(ply, ent)\n\n    local params = ent:GetVehicleParams()\n\n\n    params.engine.horsepower = params.engine.horsepower + 25\n\n\n    ent:SetVehicleParams(params)\n\nend)"}},
{"function":{"name":"SetThirdPersonMode","parent":"Vehicle","type":"classfunc","description":"Sets the third person mode state.","realm":"Shared","file":{"text":"lua/includes/extensions/entity.lua","line":"547-L551"},"args":{"arg":{"text":"Enable or disable the third person mode for this vehicle","name":"enable","type":"boolean"}}}},
{"function":{"name":"SetSteeringDegrees","parent":"Vehicle","type":"classfunc","description":"Sets the maximum steering degrees of the vehicle","realm":"Server","args":{"arg":{"text":"The new maximum steering degree","name":"steeringDegrees","type":"number"}}}},
{"function":{"name":"SetSpringLength","parent":"Vehicle","type":"classfunc","description":"Sets spring length of given wheel","realm":"Server","args":{"arg":[{"text":"The wheel to change spring length of","name":"wheel","type":"number"},{"text":"The new spring length","name":"length","type":"number"}]}}},
{"function":{"name":"SetSteering","parent":"Vehicle","type":"classfunc","description":{"text":"Sets the steering of the vehicle.","validate":"The correct range, 0 to 1 or -1 to 1"},"args":{"arg":[{"text":"Angle of the front wheels (-1 to 1)","name":"front","type":"number"},{"text":"Angle of the rear wheels (-1 to 1)","name":"rear","type":"number"}]}}},
{"function":{"name":"SetMaxThrottle","parent":"Vehicle","type":"classfunc","description":"Sets maximum forward throttle","realm":"Server","args":{"arg":{"text":"The new maximum throttle.","name":"maxThrottle","type":"number"}}}},
{"function":{"name":"SetMaxReverseThrottle","parent":"Vehicle","type":"classfunc","description":"Sets maximum reverse throttle","realm":"Server","args":{"arg":{"text":"The new maximum throttle. This number must be negative.","name":"maxRevThrottle","type":"number"}}}},
{"function":{"name":"SetHasBrakePedal","parent":"Vehicle","type":"classfunc","description":"Sets whether this vehicle has a brake pedal.","realm":"Server","args":{"arg":{"text":"Whether this vehicle has a brake pedal","name":"brakePedal","type":"boolean"}}}},
{"function":{"name":"SetHandbrake","parent":"Vehicle","type":"classfunc","description":"Turns on or off the Jeep handbrake so it can roll without a driver inside.\n\nDoes nothing while the vehicle has a driver in it.","realm":"Server","args":{"arg":{"text":"true to turn on, false to turn off.","name":"handbrake","type":"boolean"}}}},
{"function":{"name":"SetCameraDistance","parent":"Vehicle","type":"classfunc","description":"Sets the third person camera distance of the vehicle.","realm":"Shared","file":{"text":"lua/includes/extensions/entity.lua","line":"559-L563"},"args":{"arg":{"text":"Camera distance to set to","name":"distance","type":"number"}}}},
{"function":{"name":"SetBoost","parent":"Vehicle","type":"classfunc","description":"Sets the boost. It is possible that this function does not work while the vehicle has a valid driver in it.","realm":"Server","args":{"arg":{"text":"The new boost value","name":"boost","type":"number"}}}},
{"function":{"name":"IsVehicleBodyInWater","parent":"Vehicle","type":"classfunc","description":"Returns whether this vehicle's engine is underwater or not. ( Internally the attachment point \"engine\" or \"vehicle_engine\" is checked )","realm":"Server","rets":{"ret":{"text":"Whether this vehicle's engine is underwater or not.","name":"","type":"boolean"}}}},
{"function":{"name":"ReleaseHandbrake","parent":"Vehicle","type":"classfunc","description":{"text":"Releases the vehicle's handbrake (Jeep) so it can roll without any passengers.\n\nThis will be overwritten if the vehicle has a driver. Same as ( false )","page":"Vehicle:SetHandbrake"},"realm":"Server"}},
{"function":{"name":"IsValidVehicle","parent":"Vehicle","type":"classfunc","description":{"text":"Returns true if the vehicle object is a valid or not. This will return false when  functions are not usable on the vehicle.","page":"Vehicle"},"realm":"Shared","rets":{"ret":{"text":"Is the vehicle a valid vehicle or not","name":"","type":"boolean"}}}},
{"function":{"name":"IsBoosting","parent":"Vehicle","type":"classfunc","description":"Returns whether this vehicle is currently boosting or not.","realm":"Server","rets":{"ret":{"text":"Whether this vehicle is currently boosting or not.","name":"","type":"boolean"}}}},
{"function":{"name":"IsEngineStarted","parent":"Vehicle","type":"classfunc","description":"Returns whether the engine is started or not.","realm":"Server","rets":{"ret":{"text":"Whether the engine is started or not.","name":"","type":"boolean"}}}},
{"function":{"name":"IsEngineEnabled","parent":"Vehicle","type":"classfunc","description":"Returns whether the engine is enabled or not, i.e. whether it can be started.","realm":"Server","rets":{"ret":{"text":"Whether the engine is enabled","name":"","type":"boolean"}}}},
{"function":{"name":"HasBrakePedal","parent":"Vehicle","type":"classfunc","description":{"text":"Returns whether this vehicle has a brake pedal. See .","page":"Vehicle:SetHasBrakePedal"},"realm":"Server","rets":{"ret":{"text":"Whether this vehicle has a brake pedal or not.","name":"","type":"boolean"}}}},
{"function":{"name":"GetWheelTotalHeight","parent":"Vehicle","type":"classfunc","description":"Returns the total wheel height.","realm":"Server","args":{"arg":{"text":"The wheel to get the base wheel height of.","name":"wheel","type":"number"}},"rets":{"ret":{"text":"The total wheel height.","name":"","type":"number"}}}},
{"function":{"name":"GetWheelCount","parent":"Vehicle","type":"classfunc","description":"Returns the wheel count of the vehicle","realm":"Server","rets":{"ret":{"text":"The amount of wheels","name":"","type":"number"}}}},
{"function":{"name":"HasBoost","parent":"Vehicle","type":"classfunc","description":"Returns whether this vehicle has boost at all.","realm":"Server","rets":{"ret":{"text":"Whether this vehicle has boost at all.","name":"","type":"boolean"}}}},
{"function":{"name":"GetWheelContactPoint","parent":"Vehicle","type":"classfunc","description":"Returns the wheel contact point.","realm":"Server","args":{"arg":{"text":"The wheel to check","name":"wheel","type":"number"}},"rets":{"ret":[{"text":"The contact position","name":"","type":"Vector"},{"text":"The Surface Properties ID of hit surface.","name":"","type":"number"},{"text":"Whether the wheel is on ground or not","name":"","type":"boolean"}]}}},
{"function":{"name":"GetWheelBaseHeight","parent":"Vehicle","type":"classfunc","description":"Returns the base wheel height.","realm":"Server","args":{"arg":{"text":"The wheel to get the base wheel height of.","name":"wheel","type":"number"}},"rets":{"ret":{"text":"The base wheel height.","name":"","type":"number"}}}},
{"function":{"name":"GetVehicleViewPosition","parent":"Vehicle","type":"classfunc","description":"Returns the view position and forward angle of a given passenger seat.","realm":"Shared","args":{"arg":{"text":"The passenger role. 0 is the driver. This parameter seems to be ignored by the game engine and is therefore optional.","name":"role","type":"number","default":"0"}},"rets":{"ret":[{"text":"The view position, will be 0, 0, 0 on failure","name":"","type":"Vector"},{"text":"The view angles, will be 0, 0, 0 on failure","name":"","type":"Angle"},{"text":"The field of view, will be 0 on failure","name":"","type":"number"}]}}},
{"function":{"name":"GetWheel","parent":"Vehicle","type":"classfunc","description":{"text":"Returns the  of given wheel.","page":"PhysObj"},"realm":"Server","args":{"arg":{"text":"The wheel to retrieve","name":"wheel","type":"number"}},"rets":{"ret":{"text":"The wheel","name":"","type":"PhysObj"}}}},
{"function":{"name":"GetVehicleParams","parent":"Vehicle","type":"classfunc","description":"Returns the vehicle parameters of given vehicle.","realm":"Server","rets":{"ret":{"text":"The vehicle parameters. See","name":"","type":"table","page":"Structures/VehicleParams"}}}},
{"function":{"name":"GetVehicleClass","parent":"Vehicle","type":"classfunc","description":{"text":"Returns the vehicle class name. This is only useful for Sandbox spawned vehicles or any vehicle that properly sets the vehicle class with .","page":"Vehicle:SetVehicleClass"},"realm":"Shared","file":{"text":"lua/includes/extensions/entity.lua","line":"541-L545"},"rets":{"ret":{"text":"The class name of the vehicle.","name":"","type":"string"}}},"example":{"description":"Prints the spawn menu name of the vehicle the player is currently in.","code":"local c = Entity(1):GetVehicle():GetVehicleClass()\nif ( !list.Get( \"Vehicles\" )[ c ] ) then return end\nlocal t = list.Get( \"Vehicles\" )[ c ]\nprint( t.Name )"}},
{"function":{"name":"GetThrottle","parent":"Vehicle","type":"classfunc","description":"Returns the current throttle of the vehicle.","realm":"Server","rets":{"ret":{"text":"The current throttle of the vehicle","name":"","type":"number"}}}},
{"function":{"name":"GetThirdPersonMode","parent":"Vehicle","type":"classfunc","description":"Returns if vehicle has thirdperson mode enabled or not.","realm":"Shared","file":{"text":"lua/includes/extensions/entity.lua","line":"553-L557"},"rets":{"ret":{"text":"Returns true if third person mode enabled, false otherwise","name":"","type":"boolean"}}}},
{"function":{"name":"GetSteeringDegrees","parent":"Vehicle","type":"classfunc","description":"Returns the maximum steering degree of the vehicle","realm":"Server","rets":{"ret":{"text":"The maximum steering degree of the vehicle","name":"","type":"number"}}}},
{"function":{"name":"GetRPM","parent":"Vehicle","type":"classfunc","description":"Returns the current RPM of the vehicle. This value is fake and doesn't actually affect the vehicle movement.","realm":"Server","rets":{"ret":{"text":"The RPM.","name":"","type":"number"}}}},
{"function":{"name":"GetSpeed","parent":"Vehicle","type":"classfunc","description":"Returns the current speed of the vehicle in MPH.","realm":"Server","rets":{"ret":{"text":"The speed of the vehicle in MPH","name":"","type":"number"}}}},
{"function":{"name":"GetSteering","parent":"Vehicle","type":"classfunc","description":"Returns the current steering of the vehicle.","realm":"Server","rets":{"ret":{"text":"The current steering of the vehicle.","name":"","type":"number"}}}},
{"function":{"name":"GetPassengerSeatPoint","parent":"Vehicle","type":"classfunc","description":"Returns the seat position and angle of a given passenger seat.","realm":"Server","args":{"arg":{"text":"The passenger role. ( 1 is the driver )","name":"role","type":"number"}},"rets":{"ret":[{"text":"The seat position","name":"","type":"Vector"},{"text":"The seat angle","name":"","type":"Angle"}]}}},
{"function":{"name":"GetOperatingParams","parent":"Vehicle","type":"classfunc","description":"Returns some info about the vehicle.","realm":"Server","rets":{"ret":{"text":"The operating params. See .","name":"","type":"table","page":"Structures/OperatingParams"}}},"example":{"description":"Example output on a default Half-Life 2 Jeep.","code":"PrintTable( Entity(1):GetVehicle():GetOperatingParams() )","output":"```\nRPM\t=\t19.902961730957\ngear\t=\t0\nisTorqueBoosting\t=\tfalse\nspeed\t=\t-0.67361652851105\nsteeringAngle\t=\t0\nwheelsInContact\t=\t4\n```"}},
{"function":{"name":"GetMaxSpeed","parent":"Vehicle","type":"classfunc","description":"Returns the max speed of the vehicle in MPH.","realm":"Server","rets":{"ret":{"text":"The max speed of the vehicle in MPH","name":"","type":"number"}}}},
{"function":{"name":"GetPassenger","parent":"Vehicle","type":"classfunc","description":"Gets the passenger of the vehicle, returns NULL if no drivers is present.","realm":"Shared","args":{"arg":{"text":"The index of the passenger","name":"passenger","type":"number"}},"rets":{"ret":{"text":"The passenger","name":"","type":"Entity"}}}},
{"function":{"name":"GetHLSpeed","parent":"Vehicle","type":"classfunc","description":{"text":"Returns the current speed of the vehicle in Half-Life Hammer Units (in/s). Same as  + .","page":["Entity:GetVelocity","Vector:Length"]},"realm":"Server","rets":{"ret":{"text":"The speed of the vehicle","name":"","type":"number"}}}},
{"function":{"name":"GetDriver","parent":"Vehicle","type":"classfunc","description":"Gets the driver of the vehicle, returns NULL if no driver is present.","note":"Shared in next update","realm":"Shared","rets":{"ret":{"text":"The driver of the vehicle","name":"","type":"Entity"}}}},
{"function":{"name":"GetCameraDistance","parent":"Vehicle","type":"classfunc","description":"Returns third person camera distance.","realm":"Shared","file":{"text":"lua/includes/extensions/entity.lua","line":"565-L569"},"rets":{"ret":{"text":"Camera distance","name":"","type":"number"}}}},
{"function":{"name":"GetAmmo","parent":"Vehicle","type":"classfunc","description":"Returns information about the ammo of the vehicle","realm":"Client","rets":{"ret":[{"text":"Ammo type of the vehicle ammo","name":"","type":"number"},{"text":"Clip size","name":"","type":"number"},{"text":"Count","name":"","type":"number"}]}}},
{"function":{"name":"EnableEngine","parent":"Vehicle","type":"classfunc","description":"Sets whether the engine is enabled or disabled, i.e. can be started or not.","realm":"Server","args":{"arg":{"text":"Enable or disable the engine","name":"enable","type":"boolean"}}}},
{"function":{"name":"CheckExitPoint","parent":"Vehicle","type":"classfunc","description":"Tries to find an Exit Point for leaving vehicle, if one is unobstructed in the direction given.","realm":"Server","args":{"arg":[{"text":"Yaw/roll from vehicle angle to check for exit","name":"yaw","type":"number"},{"text":"Distance from origin to drop player","name":"distance","type":"number"}]},"rets":{"ret":{"text":"Returns the vector for exit position or nil if cannot exit that way.","name":"","type":"Vector"}}}},
{"function":{"name":"BoostTimeLeft","parent":"Vehicle","type":"classfunc","description":"Returns the remaining boosting time left.","realm":"Server","rets":{"ret":{"text":"The remaining boosting time left","name":"","type":"number"}}}},
{"function":{"name":"Zero","parent":"Vector","type":"classfunc","description":"Sets x, y and z to 0.","realm":"Shared"}},
{"function":{"name":"WithinAABox","parent":"Vector","type":"classfunc","description":"Returns whenever the given vector is in a box created by the 2 other vectors.","realm":"Shared","args":{"arg":[{"text":"The first vector.","name":"boxStart","type":"Vector"},{"text":"The second vector.","name":"boxEnd","type":"Vector"}]},"rets":{"ret":{"text":"Is the vector in the box or not","name":"","type":"boolean"}}},"example":{"description":"Checks if player is within a certain area on the map.","code":"-- Position to test, we get the position of first player on the server\nlocal testPos = Entity( 1 ):GetPos()\n\n-- Positions to test, in this case we test if the player is in spawn area of gm_construct\nlocal pos1 = Vector( 1119, 895, 63 )\nlocal pos2 = Vector( 656, -896, -144 )\n\n-- This will return true if the player is within the tested area\nprint( testPos:WithinAABox( pos1, pos2 ) )"}},
{"function":{"name":"Unpack","parent":"Vector","type":"classfunc","description":"Returns the x, y, and z of the vector.","realm":"Shared","rets":{"ret":[{"text":"x or Vector[1].","name":"","type":"number"},{"text":"y or Vector[2].","name":"","type":"number"},{"text":"z or Vector[3].","name":"","type":"number"}]}}},
{"function":{"name":"ToScreen","parent":"Vector","type":"classfunc","description":{"text":"Returns where on the screen the specified position vector would appear. A related function is , which converts a 2D coordinate to a 3D direction.","page":"gui.ScreenToVector","note":{"text":"Should be called from a 3D rendering environment or after  or it may not work correctly.","page":"cam.Start3D"},"bug":[{"text":"Errors in a render hook can make this value incorrect until the player restarts their game.","issue":"462"},{"text":"or 3D context  with non-default parameters incorrectly sets the reference FOV for this function, causing incorrect return values. This can be fixed by creating and ending a default 3D context ( with no arguments).","issue":"1404","page":["cam.Start3D","cam.Start","cam.Start3D"]}]},"realm":"Client","rets":{"ret":{"text":"The created .","name":"","type":"table","page":"Structures/ToScreenData"}}}},
{"function":{"name":"ToTable","parent":"Vector","type":"classfunc","description":"Returns the vector as a table with three elements.","realm":"Shared","rets":{"ret":{"text":"The table with elements 1 = x, 2 = y, 3 = z.","name":"","type":"table"}}}},
{"function":{"name":"ToColor","parent":"Vector","type":"classfunc","description":{"text":"Translates the  (values ranging from 0 to 1) into a . This will also range the values from 0 - 1 to 0 - 255.\n\nx * 255 -> r\ny * 255 -> g\nz * 255 -> b\n\nThis is the opposite of","page":["Vector","Color","Color:ToVector"],"br":["",""]},"realm":"Shared","rets":{"ret":{"text":"The created .","name":"","type":"table","page":"Color"}}},"example":{"description":"Get the Player1's player model color but in RGB","code":"print( Entity( 1 ):GetPlayerColor( ):ToColor( ) )","output":"Prints the player color of Player1 in RGB instead of a Vector"}},
{"function":{"name":"Sub","parent":"Vector","type":"classfunc","description":"Substracts the values of the second vector from the orignal vector, this function can be used to avoid garbage collection.","realm":"Shared","args":{"arg":{"text":"The other vector.","name":"vector","type":"Vector"}}},"example":[{"description":"Subtracts vector A's components with the other vector.","code":"a = Vector(5, 6, 7)\na:Sub(Vector(1, 2, 3))\nprint(a)","outputfixedwidth":"Fixed width","output":"4 4 4"},{"description":"If you don't want to set your vector to the result, and just return a new vector as the result. You can use a ' - ' operator to subtract two vectors from each other.","code":"a = Vector(5, 6, 7)\nprint(a-Vector(1, 2, 3))","outputfixedwidth":"Fixed width","output":"4 4 4"}]},
{"function":{"name":"Set","parent":"Vector","type":"classfunc","description":"Copies the values from the second vector to the first vector.","realm":"Shared","args":{"arg":{"text":"The vector to copy from.","name":"vector","type":"Vector"}}},"example":{"description":"Sets vector B to vector A's value.","code":"a = Vector(1, 2, 3)\nb = Vector()\nb:Set(a)\nprint(b)","output":"1, 2, 3."}},
{"function":{"name":"SetUnpacked","parent":"Vector","type":"classfunc","description":"Sets the x, y, and z of the vector.","realm":"Shared","args":{"arg":[{"text":"The x component","name":"x","type":"number"},{"text":"The y component","name":"y","type":"number"},{"text":"The z component","name":"z","type":"number"}]}}},
{"function":{"name":"Rotate","parent":"Vector","type":"classfunc","description":"Rotates a vector by the given angle.\nDoesn't return anything, but rather changes the original vector.","realm":"Shared","args":{"arg":{"text":"The angle to rotate the vector by.","name":"rotation","type":"Angle"}}}},
{"function":{"name":"Normalize","parent":"Vector","type":"classfunc","description":{"text":"Normalizes the given vector. This changes the vector you call it on, if you want to return a normalized copy without affecting the original, use .","page":"Vector:GetNormalized"},"realm":"Shared"},"example":{"description":"Normalizes Vector(4, 3, 2).","code":"local test = Vector(4, 3, 2)\ntest:Normalize()\nMsgN( test )","output":"0.7428 0.5571 0.3714."}},
{"function":{"name":"Mul","parent":"Vector","type":"classfunc","description":"Scales the vector by the given number, that means x, y and z are multiplied by that value.","realm":"Shared","args":{"arg":{"text":"The value to scale the vector with.","name":"multiplier","type":"number"}}},"example":[{"description":"Scales a vector by 250.","code":"a = Vector(1, 1, 1)\na:Mul(250)\nprint(a)","outputfixedwidth":"Fixed width","output":"250 250 250"},{"description":"If you don't want to set your vector to the result, and just return a new vector as the result. You can use a ' * ' operator to multiply a vector with a scalar.","code":"a = Vector(1, 1, 1)\nprint(a*250)","outputfixedwidth":"Fixed width","output":"250 250 250"}]},
{"function":{"name":"LengthSqr","parent":"Vector","type":"classfunc","description":{"text":"Returns the squared length of the vector, x² + y² + z².\n\nThis is faster than  as calculating the square root is an expensive process.","page":"Vector:Length"},"realm":"Shared","rets":{"ret":{"text":"Squared length of the vector","name":"","type":"number"}}}},
{"function":{"name":"Length2DSqr","parent":"Vector","type":"classfunc","description":{"text":"Returns the squared length of the vectors x and y value, x² + y².\n\nThis is faster than  as calculating the square root is an expensive process.","page":"Vector:Length2D"},"realm":"Shared","rets":{"ret":{"text":"Squared length of the vector in two dimensions","name":"","type":"number"}}}},
{"function":{"name":"Length2D","parent":"Vector","type":"classfunc","description":"Returns the length of the vector in two dimensions, without the Z axis.","realm":"Shared","rets":{"ret":{"text":"Length of the vector in two dimensions, √<span style=\"text-decoration:overline;\"> x² + y² </span>","name":"","type":"number"}}}},
{"function":{"name":"Length","parent":"Vector","type":"classfunc","description":"Returns the Euclidean length of the vector: √x² + y² + z²","realm":"Shared","rets":{"ret":{"text":"Length of the vector.","name":"","type":"number"}}},"example":{"description":"Gets the length of the vector.","code":"print(Vector(15, 16, 17):Length())","output":"27.748874664307."}},
{"function":{"name":"Length","parent":"Vector","type":"classfunc","description":"Returns the Euclidean length of the vector: √x² + y² + z²","realm":"Shared","rets":{"ret":{"text":"Length of the vector.","name":"","type":"number"}}},"example":{"description":"Gets the length of the vector.","code":"print(Vector(15, 16, 17):Length())","output":"27.748874664307."}},
{"function":{"name":"GetNormalized","parent":"Vector","type":"classfunc","description":{"text":"Returns a normalized version of the vector. Normalized means vector with same direction but with length of 1.\n\nThis does not affect the vector you call it on; to do this, use .","page":"Vector:Normalize"},"realm":"Shared","rets":{"ret":{"text":"Normalized version of the vector.","name":"","type":"Vector"}}}},
{"function":{"name":"IsEqualTol","parent":"Vector","type":"classfunc","description":"Returns if the vector is equal to another vector with the given tolerance.","realm":"Shared","args":{"arg":[{"text":"The vector to compare to.","name":"compare","type":"Vector"},{"text":"The tolerance range.","name":"tolerance","type":"number"}]},"rets":{"ret":{"text":"Are the vectors equal or not.","name":"","type":"boolean"}}}},
{"function":{"name":"DotProduct","parent":"Vector","type":"classfunc","description":{"text":"Returns the dot product of the two vectors.","deprecated":{"text":"This is an alias of . Use that instead.","page":"Vector:Dot"}},"realm":"Shared","args":{"arg":{"text":"The other vector.","name":"Vector","type":"Vector"}},"rets":{"ret":{"text":"Dot Product","name":"","type":"number"}}},"example":{"description":"A function to make sure the player is looking somewhere.","code":"function IsLookingAt( ply, targetVec )\n return ply:GetAimVector():DotProduct( ( targetVec - ply:GetPos() + Vector(70) ):GetNormalized() ) < 0.95 \nend","output":"Returns true if ply is looking at (or close to) the target."}},
{"function":{"name":"GetNormal","parent":"Vector","type":"classfunc","description":{"text":"Returns a normalized version of the vector. This is a alias of .","deprecated":{"text":"Use  instead.","page":"Vector:GetNormalized"},"page":"Vector:GetNormalized"},"realm":"Shared","rets":{"ret":{"text":"Normalized version of the vector.","name":"","type":"Vector"}}}},
{"function":{"name":"Div","parent":"Vector","type":"classfunc","description":"Divide the vector by the given number, that means x, y and z are divided by that value. This will change the value of the original vector, see example 2 for division without changing the value.","realm":"Shared","args":{"arg":{"text":"The value to divide the vector with.","name":"divisor","type":"number"}}},"example":[{"description":"Divides a vector by 255.","code":"a = Vector(255, 130, 0)\na:Div(255)\nprint(a)","outputfixedwidth":"Fixed width","output":"1 0.509804 0"},{"description":"If you don't want to set your vector to the result, and just return a new vector as the result. You can use a ' / ' operator to divide a vector with a divisor.","code":"a = Vector(255, 255, 255)\nprint(a/255)","outputfixedwidth":"Fixed width","output":"1 1 1"}]},
{"function":{"name":"Dot","parent":"Vector","type":"classfunc","description":{"text":"Returns the  of this vector and the passed one.\n\nThe dot product of two vectors is the product of their magnitudes (lengths), and the cosine of the angle between them:\n**a · b** = |**a**| |**b**| cos(θ) \nwhere **a** and **b** are vectors.\nSee  for obtaining magnitudes.\n\nA dot product returns just the cosine of the angle if both vectors are normalized, and zero if the vectors are at right angles to each other.","br":["","","","","",""],"page":"Vector:Length"},"realm":"Shared","args":{"arg":{"text":"The vector to calculate the dot product with","name":"otherVector","type":"Vector"}},"rets":{"ret":{"text":"The dot product between the two vectors","name":"","type":"number"}}},"example":[{"description":"Get the angle of two opposite normalized vectors.","code":"local a = Vector(0, 1, 0)\nlocal b = Vector(0, -1, 0)\n\nlocal dot = a:Dot(b) -- returns the cos(ang) of the two vectors because they're both of length 1\nprint(\"Radians\", math.acos(dot)) -- the inverse of the cosine to get the angle\nprint(\"Degrees\", math.deg(math.acos(dot))) -- Convert radians to degrees","output":"Radians    3.1415926535898\nDegrees    180"},{"description":"Calculates whether the player is looking in the direction of an entity. This is often faster than traces, but it produces a slightly different result.\n\nThe player is looking in the direction of the entity if the angle between the aimvector and the vector from the player to the entity is less than 45 degrees (or pi / 8 radians).","code":{"text":"local directionAng = math.pi / 8 \nlocal aimvector = ply:GetAimVector()\n-- The vector that goes from the player's shoot pos to the entity's position\nlocal entVector = ent:GetPos() - ply:GetShootPos() \nlocal dot = aimvector:Dot(entVector) / entVector:Length()\nprint(dot","directionang":{"ode":"ode","output":"This script will say if the player is looking in the direction of the entity."}}},{"description":"A function to make sure the player is looking somewhere.","code":"function IsLookingAt( ply, targetVec )\n return ply:GetAimVector():Dot( ( targetVec - ply:GetPos() + Vector(70) ):GetNormalized() ) < 0.95 \nend","output":"Returns true if ply is looking at (or close to) the target."}]},
{"function":{"name":"Distance","parent":"Vector","type":"classfunc","description":{"text":"Returns the pythagorean distance between the vector and the other vector.","warning":{"text":"This is a relatively expensive process since it uses the square root. It is recommended that you use  whenever possible.","page":"Vector:DistToSqr"}},"realm":"Shared","args":{"arg":{"text":"The vector to get the distance to.","name":"otherVector","type":"Vector"}},"rets":{"ret":{"text":"Distance between the vectors.","name":"","type":"number"}}},"example":{"description":"Gets the distance from A to B.","code":"print(Vector(0, 0, 0):Distance(Vector(2, 3, 4)))","output":"5.3851647377014"}},
{"function":{"name":"DistToSqr","parent":"Vector","type":"classfunc","description":{"text":"Returns the squared distance of 2 vectors, this is faster than  as calculating the square root is an expensive process.","page":"Vector:Distance"},"realm":"Shared","args":{"arg":{"text":"The vector to calculate the distance to.","name":"otherVec","type":"Vector"}},"rets":{"ret":{"text":"Squared distance to the vector","name":"","type":"number"}}},"example":{"description":"Checks if a player is within `dist` units of another player in the most efficient way possible.","code":{"text":"function PlayerWithinBounds(ply,otherPly, dist)\n\treturn ply:GetPos():DistToSqr(otherPly:GetPos()) < (dist*dist)\n\t-- This is computationally faster than:\n\t-- ply:GetPos():Distance(otherPly:GetPos())","dist":{"end":"","printplayerwithinboundsentity1entity2500":"","ode":"ode","output":"true"}}}},
{"function":{"name":"Cross","parent":"Vector","type":"classfunc","description":"Calculates the cross product of this vector and the passed one.\n\nThe cross product of two vectors is a 3-dimensional vector with a direction perpendicular (at right angles) to both of them (according to the right-hand rule), and magnitude equal to the area of parallelogram they span. This is defined as the product of the magnitudes, the sine of the angle between them, and unit (normal) vector `n` defined by the right-hand rule:\n:**a** × **b** = |**a**| |**b**| sin(θ) **n̂**\nwhere **a** and **b** are vectors, and **n̂** is a unit vector (magnitude of 1) perpendicular to both.","realm":"Shared","args":{"arg":{"text":"Vector to calculate the cross product with.","name":"otherVector","type":"Vector"}},"rets":{"ret":{"text":"The cross product of the two vectors.","name":"","type":"Vector"}}}},
{"function":{"name":"AngleEx","parent":"Vector","type":"classfunc","description":{"text":"Returns the angle of the vector, but instead of assuming that up is ( 0, 0, 1 ) (Like  does) you can specify which direction is 'up' for the angle.","page":["Global.Vector","Vector:Angle"]},"realm":"Shared","args":{"arg":{"text":"The up direction vector","name":"up","type":"Vector"}},"rets":{"ret":{"text":"The angle","name":"","type":"Angle"}}},"example":[{"description":"Shows usage of the function","code":"print( Vector( 0, 0, 100 ):AngleEx( Vector( 0, 0, 0 ) ) )","output":"Angle( -90.000, -0.000, 0.000 )"},{"description":"Use forward and up vector to produce angle. These two lines below will\n\t\treturn the same angle","code":"local e = ents.Create(\"prop_physics\")\n\t\tprint(e:GetAngles())\n\t\tprint(e:GetForward():AngleEx(e:GetUp()))"}]},
{"function":{"name":"AngleEx","parent":"Vector","type":"classfunc","description":{"text":"Returns the angle of the vector, but instead of assuming that up is ( 0, 0, 1 ) (Like  does) you can specify which direction is 'up' for the angle.","page":["Global.Vector","Vector:Angle"]},"realm":"Shared","args":{"arg":{"text":"The up direction vector","name":"up","type":"Vector"}},"rets":{"ret":{"text":"The angle","name":"","type":"Angle"}}},"example":[{"description":"Shows usage of the function","code":"print( Vector( 0, 0, 100 ):AngleEx( Vector( 0, 0, 0 ) ) )","output":"Angle( -90.000, -0.000, 0.000 )"},{"description":"Use forward and up vector to produce angle. These two lines below will\n\t\treturn the same angle","code":"local e = ents.Create(\"prop_physics\")\n\t\tprint(e:GetAngles())\n\t\tprint(e:GetForward():AngleEx(e:GetUp()))"}]},
{"function":{"name":"Angle","parent":"Vector","type":"classfunc","description":"Returns an angle representing the normal of the vector.","realm":"Shared","rets":{"ret":{"text":"The angle/direction of the vector.","name":"","type":"Angle"}}}},
{"function":{"name":"UpdateGhostEntity","parent":"Tool","type":"classfunc","description":{"text":"Updates the position and orientation of the ghost entity based on where the toolgun owner is looking along with data from object with id 1 set by .\n\nThis should be called in the tool's  hook.\n\nThis command is only used for tools that move props, such as easy weld, axis and motor. If you want to update a ghost like the thruster tool does it for example, check its [source code](https://github.com/Facepunch/garrysmod/blob/master/garrysmod/gamemodes/sandbox/entities/weapons/gmod_tool/stools/thruster.lua#L179).","page":["Tool:SetObject","TOOL:Think"]},"realm":"Shared","file":{"text":"gamemodes/sandbox/entities/weapons/gmod_tool/ghostentity.lua","line":"101"}}},
{"function":{"name":"UpdateData","parent":"Tool","type":"classfunc","description":{"text":"Sets the tool's stage to how many stored objects the tool has.","internal":"Called on deploy automatically"},"realm":"Shared","file":{"text":"gamemodes/sandbox/entities/weapons/gmod_tool/object.lua","line":"2"}}},
{"function":{"name":"StartGhostEntity","parent":"Tool","type":"classfunc","description":"Initializes the ghost entity based on the supplied entity.","realm":"Shared","file":{"text":"gamemodes/sandbox/entities/weapons/gmod_tool/ghostentity.lua","line":"54"},"args":{"arg":{"text":"The entity to copy ghost parameters off","name":"ent","type":"Entity"}}}},
{"function":{"name":"SetStage","parent":"Tool","type":"classfunc","description":{"text":"Sets the current stage of the tool. Does nothing clientside.\n\nSee also .","page":"Tool:SetOperation"},"realm":"Shared","file":{"text":"sandbox/entities/weapons/gmod_tool/object.lua","line":"15"},"args":{"arg":{"text":"The new stage to set.","name":"stage","type":"number"}}}},
{"function":{"name":"SetOperation","parent":"Tool","type":"classfunc","description":{"text":"Sets the current operation of the tool. Does nothing clientside. See also .\n\nOperations and stages work as follows:\n* Operation 1\n* * Stage 1\n* * Stage 2\n* * Stage 3\n* Operation 2\n* * Stage 1\n* * Stage 2\n* * Stage ...","page":"Tool:SetStage"},"realm":"Shared","file":{"text":"gamemodes/sandbox/entities/weapons/gmod_tool/object.lua","line":"20"},"args":{"arg":{"text":"The new operation ID to set.","name":"operation","type":"number"}}}},
{"function":{"name":"ReleaseGhostEntity","parent":"Tool","type":"classfunc","description":"Removes any ghost entity created for this tool.","realm":"Shared","file":{"text":"gamemodes/sandbox/entities/weapons/gmod_tool/ghostentity.lua","line":"68"}}},
{"function":{"name":"NumObjects","parent":"Tool","type":"classfunc","description":{"text":"Returns the amount of stored objects ( s ) the tool has.","page":"Entity","validate":"Are TOOLs limited to 4 entities?"},"realm":"Shared","file":{"text":"gamemodes/sandbox/entities/weapons/gmod_tool/object.lua","line":"149"},"rets":{"ret":{"text":"The amount of stored objects, or  clientide.","name":"","type":"number","page":"Tool:GetStage"}}}},
{"function":{"name":"SetObject","parent":"Tool","type":"classfunc","description":{"text":"Stores an  for later use in the tool.\n\nThe stored values can be retrieved by , , , ,  and","page":["Entity","Tool:GetEnt","Tool:GetPos","Tool:GetLocalPos","Tool:GetPhys","Tool:GetBone","Tool:GetNormal"]},"realm":"Shared","file":{"text":"gamemodes/sandbox/entities/weapons/gmod_tool/object.lua","line":"112"},"args":{"arg":[{"text":"The id of the object to store.","name":"id","type":"number"},{"text":"The entity to store.","name":"ent","type":"Entity"},{"text":"The position to store.","name":"pos","type":"Vector","br":"","note":"this position is in **global space** and is internally converted to **local space** relative to the object, so when you retrieve it later it will be corrected to the object's new position"},{"text":"The physics object to store.","name":"phys","type":"PhysObj"},{"text":"The hit bone to store.","name":"bone","type":"number"},{"text":"The hit normal to store.","name":"normal","type":"Vector"}]}}},
{"function":{"name":"MakeGhostEntity","parent":"Tool","type":"classfunc","description":"Initializes the ghost entity with the given model. Removes any old ghost entity if called multiple times.\n\nThe ghost is a regular prop_physics entity in singleplayer games, and a clientside prop in multiplayer games.","realm":"Shared","file":{"text":"gamemodes/sandbox/entities/weapons/gmod_tool/ghostentity.lua","line":"6"},"args":{"arg":[{"text":"The model of the new ghost entity","name":"model","type":"string"},{"text":"Position to initialize the ghost entity at, usually not needed since this is updated in .","name":"pos","type":"Vector","page":"Tool:UpdateGhostEntity"},{"text":"Angle to initialize the ghost entity at, usually not needed since this is updated in .","name":"angle","type":"Angle","page":"Tool:UpdateGhostEntity"}]}}},
{"function":{"name":"GetStage","parent":"Tool","type":"classfunc","description":{"text":"Returns the current stage of the tool set by .","page":"Tool:SetStage"},"realm":"Shared","file":{"text":"gamemodes/sandbox/entities/weapons/gmod_tool/object.lua","line":"16"},"rets":{"ret":{"text":"The current stage of the current operation the tool is at.","name":"","type":"number"}}}},
{"function":{"name":"GetServerInfo","parent":"Tool","type":"classfunc","description":{"text":"Attempts to grab a serverside tool .\nThis will not do anything on client, despite the function being defined shared.","page":"ConVar"},"realm":"Shared","file":{"text":"gamemodes/sandbox/entities/weapons/gmod_tool/stool.lua","line":"59"},"args":{"arg":{"text":"Name of the convar to retrieve. The function will automatically add the \"mytoolfilename_\" part to it.","name":"name","type":"string"}},"rets":{"ret":{"text":"The value of the requested .","name":"","type":"string","page":"ConVar"}}}},
{"function":{"name":"GetPos","parent":"Tool","type":"classfunc","description":{"text":"Retrieves an vector previously stored using . See also .","page":["Tool:SetObject","Tool:GetLocalPos"]},"realm":"Shared","file":{"text":"gamemode/sandbox/entities/weapons/gmod_tool/object.lua","line":"61"},"args":{"arg":{"text":"The id of the object which was set in .","name":"id","type":"number","page":"Tool:SetObject"}},"rets":{"ret":{"text":"Associated vector with given id. The vector is converted from .","name":"","type":"Vector","page":"Tool:GetLocalPos"}}}},
{"function":{"name":"GetPhys","parent":"Tool","type":"classfunc","description":{"text":"Retrieves an  previously stored using .\nSee also .","page":["PhysObj","Tool:SetObject","Tool:GetEnt"]},"realm":"Shared","file":{"text":"gamemode/sandbox/entities/weapons/gmod_tool/object.lua","line":"101"},"args":{"arg":{"text":"The id of the object which was set in .","name":"id","type":"number","page":"Tool:SetObject"}},"rets":{"ret":{"text":"Associated PhysObj with given id. If it wasn't specified, returns current  of associated Entity","name":"","type":"PhysObj","page":"PhysObj"}}}},
{"function":{"name":"GetOwner","parent":"Tool","type":"classfunc","description":"Returns the owner of this tool.","realm":"Shared","file":{"text":"gamemodes/sandbox/entities/weapons/gmod_tool/stool.lua","line":"103"},"rets":{"ret":{"text":"Player using the tool","name":"","type":"Entity"}}}},
{"function":{"name":"GetOperation","parent":"Tool","type":"classfunc","description":{"text":"Returns the current operation of the tool set by .","page":"Tool:SetOperation"},"realm":"Shared","file":{"text":"gamemodes/sandbox/entities/weapons/gmod_tool/object.lua","line":"28"},"rets":{"ret":{"text":"The current operation the tool is at.","name":"","type":"number"}}}},
{"function":{"name":"GetNormal","parent":"Tool","type":"classfunc","description":{"text":"Retrieves an normal vector previously stored using .","page":"Tool:SetObject"},"realm":"Shared","file":{"text":"gamemode/sandbox/entities/weapons/gmod_tool/object.lua","line":"85"},"args":{"arg":{"text":"The id of the object which was set in .","name":"id","type":"number","page":"Tool:SetObject"}},"rets":{"ret":{"text":"Associated normal vector with given id.","name":"","type":"Vector"}}}},
{"function":{"name":"GetMode","parent":"Tool","type":"classfunc","description":"Returns the name of the current tool mode.","realm":"Shared","file":{"text":"gamemodes/sandbox/entities/weapons/gmod_tool/stool.lua","line":"101"},"rets":{"ret":{"text":"The current tool mode.","name":"","type":"string"}}},"example":{"description":"The Toolgun weapon has a similar function, checking weapon class is strongly recommended as GetMode() is not available on all weapons.","code":"local wep = Entity( 1 ):GetActiveWeapon()\nif ( IsValid( wep ) && wep:GetClass() == \"gmod_tool\" ) then\n\tprint( wep:GetMode() )\nend","outputfixedwidth":"Fixed width","output":"remover"}},
{"function":{"name":"GetHelpText","parent":"Tool","type":"classfunc","description":"Returns a language key based on this tool's name and the current stage it is on.","realm":"Shared","file":{"text":"gamemodes/sandbox/entities/weapons/gmod_tool/object.lua","line":"163"},"rets":{"ret":{"text":"The returned language key, for example `\"#tool.weld.1\"`","name":"key","type":"string"}}}},
{"function":{"name":"GetLocalPos","parent":"Tool","type":"classfunc","description":{"text":"Retrieves an local vector previously stored using .\nSee also .","page":["Tool:SetObject","Tool:GetPos"]},"realm":"Shared","file":{"text":"gamemode/sandbox/entities/weapons/gmod_tool/object.lua","line":"76"},"args":{"arg":{"text":"The id of the object which was set in .","name":"id","type":"number","page":"Tool:SetObject"}},"rets":{"ret":{"text":"Associated local vector with given id.","name":"","type":"Vector"}}}},
{"function":{"name":"GetEnt","parent":"Tool","type":"classfunc","description":{"text":"Retrieves an Entity previously stored using .","page":"Tool:SetObject"},"realm":"Shared","file":{"text":"gamemodes/sandbox/entities/weapons/gmod_tool/object.lua","line":"48"},"args":{"arg":{"text":"The id of the object which was set in .","name":"id","type":"number","page":"Tool:SetObject"}},"rets":{"ret":{"text":"Associated Entity with given id.","name":"","type":"Entity"}}}},
{"function":{"name":"GetClientNumber","parent":"Tool","type":"classfunc","description":{"text":"Attempts to grab a clientside tool .","page":"ConVar"},"realm":"Shared","file":{"text":"gamemodes/sandbox/entities/weapons/gmod_tool/stool.lua","line":"84"},"args":{"arg":[{"text":"Name of the convar to retrieve. The function will automatically add the \"mytoolfilename_\" part to it.","name":"name","type":"string"},{"text":"The default value to return in case the lookup fails.","name":"default","type":"number","default":"0"}]},"rets":{"ret":{"text":"The value of the requested .","name":"","type":"number","page":"ConVar"}}}},
{"function":{"name":"GetClientInfo","parent":"Tool","type":"classfunc","description":{"text":"Attempts to grab a clientside tool .","page":"ConVar"},"realm":"Shared","file":{"text":"gamemodes/sandbox/entities/weapons/gmod_tool/stool.lua","line":"78"},"args":{"arg":{"text":"Name of the convar to retrieve. The function will automatically add the \"mytoolfilename_\" part to it.","name":"name","type":"string"}},"rets":{"ret":{"text":"The value of the requested .","name":"","type":"string","page":"ConVar"}}}},
{"function":{"name":"CreateConVars","parent":"Tool","type":"classfunc","description":{"text":"Creates clientside ConVars based on the ClientConVar table specified in the tool structure. Also creates the 'toolmode_allow_X' ConVar.","internal":"This is called automatically for all tools."},"realm":"Shared","file":{"text":"gamemodes/sandbox/entities/weapons/gmod_tool/stool.lua","line":"33"}}},
{"function":{"name":"GetBone","parent":"Tool","type":"classfunc","description":{"text":"Retrieves a physics bone number previously stored using .","page":"Tool:SetObject"},"realm":"Shared","file":{"text":"gamemodes/sandbox/entities/weapons/gmod_tool/object.lua","line":"81"},"args":{"arg":{"text":"The id of the object which was set in .","name":"id","type":"number","page":"Tool:SetObject"}},"rets":{"ret":{"text":"Associated physics bone with given id.","name":"","type":"number"}}}},
{"function":{"name":"Create","parent":"Tool","type":"classfunc","description":{"text":"Initializes the tool object","internal":"This is called automatically for all tools."},"realm":"Shared","file":{"text":"gamemodes/sandbox/entities/weapons/gmod_tool/stool.lua","line":"11"},"rets":{"ret":{"text":"The created tool object.","name":"tool","type":"Tool"}}}},
{"function":{"name":"ClearObjects","parent":"Tool","type":"classfunc","description":{"text":"Clears all objects previously set with .","page":"Tool:SetObject"},"realm":"Shared","file":{"text":"gamemodes/sandbox/entities/weapons/gmod_tool/object.lua","line":"34"}}},
{"function":{"name":"BuildConVarList","parent":"Tool","type":"classfunc","description":{"text":"Builds a list of all ConVars set via the ClientConVar variable on the  and their default values. This is used for the preset system.","page":"Structures/TOOL"},"realm":"Shared","file":{"text":"gamemodes/sandbox/entities/weapons/gmod_tool/stool.lua","line":"67"},"rets":{"ret":{"text":"A list of all convars and their default values.","name":"convars","type":"table"}}}},
{"function":{"name":"CheckObjects","parent":"Tool","type":"classfunc","description":{"text":"Checks all added objects to see if they're still valid, if not, clears the list of objects.","internal":"This is called automatically for most toolgun actions so you shouldn't need to use it."},"realm":"Shared","file":{"text":"gamemodes/sandbox/entities/weapons/gmod_tool/stool.lua","line":"117"}}},
{"function":{"name":"Allowed","parent":"Tool","type":"classfunc","description":{"text":"Checks whether the tool is allowed on the server. This will always return true clientside and will not be affected by .\n\nThis function uses **TOOL.AllowedCVar** which is a  object pointing to  **toolmode_allow_`*toolname***` convar.","page":["SANDBOX:CanTool","ConVar"]},"realm":"Shared","file":{"text":"gamemodes/sandbox/entities/weapons/gmod_tool/stool.lua","line":"90"},"rets":{"ret":{"text":"Returns true if the tool is allowed.","name":"","type":"boolean"}}}},
{"function":{"name":"Start_FName","parent":"Task","type":"classfunc","description":{"text":"Starts the AI task as an NPC method.","internal":""},"realm":"Server","file":{"text":"lua/includes/modules/ai_task.lua","line":"99"},"args":{"arg":{"text":"The NPC to start the task on.","name":"target","type":"NPC"}}}},
{"function":{"name":"Start","parent":"Task","type":"classfunc","description":"Starts the AI task.","realm":"Server","file":{"text":"lua/includes/modules/ai_task.lua","line":"83"},"args":{"arg":{"text":"The NPC to start the task on.","name":"target","type":"NPC"}}}},
{"function":{"name":"Run_FName","parent":"Task","type":"classfunc","description":{"text":"Runs the AI task as an NPC method. This requires the task to be of type `TYPE_FNAME`.","internal":""},"realm":"Server","file":{"text":"lua/includes/modules/ai_task.lua","line":"125"},"args":{"arg":{"text":"The NPC to run the task on.","name":"target","type":"NPC"}}}},
{"function":{"name":"Run","parent":"Task","type":"classfunc","description":"Runs the AI task.","realm":"Server","file":{"text":"lua/includes/modules/ai_task.lua","line":"112"},"args":{"arg":{"text":"The NPC to run the task on.","name":"target","type":"NPC"}}}},
{"function":{"name":"IsFNameType","parent":"Task","type":"classfunc","description":"Determines if the task is an NPC method-based task (`TYPE_FNAME`, 2).","realm":"Server","file":{"text":"lua/includes/modules/ai_task.lua","line":"75"}}},
{"function":{"name":"IsEngineType","parent":"Task","type":"classfunc","description":"Determines if the task is an engine task (`TYPE_ENGINE`, 1).","realm":"Server","file":{"text":"lua/includes/modules/ai_task.lua","line":"67"}}},
{"function":{"name":"InitFunctionName","parent":"Task","type":"classfunc","description":"Initialises the AI task as NPC method-based.","realm":"Server","file":{"text":"lua/includes/modules/ai_task.lua","line":"56"},"args":{"arg":[{"text":"The name of the NPC method to call on task start.","name":"startname","type":"string"},{"text":"The name of the NPC method to call on task run.","name":"runname","type":"string"},{"name":"taskdata","type":"number"}]}}},
{"function":{"name":"InitEngine","parent":"Task","type":"classfunc","description":"Initialises the AI task as an engine task.","realm":"Server","file":{"text":"lua/includes/modules/ai_task.lua","line":"44"},"args":{"arg":[{"text":"The name of the task.","name":"taskname","type":"string"},{"name":"taskdata","type":"number"}]}}},
{"function":{"name":"InitEngine","parent":"Task","type":"classfunc","description":"Initialises the AI task as an engine task.","realm":"Server","file":{"text":"lua/includes/modules/ai_task.lua","line":"44"},"args":{"arg":[{"text":"The name of the task.","name":"taskname","type":"string"},{"name":"taskdata","type":"number"}]}}},
{"function":{"name":"IsWater","parent":"SurfaceInfo","type":"classfunc","description":{"text":"Checks if the brush surface is water.","note":"This internally checks the SURFDRAW_WATER flag."},"realm":"Shared","rets":{"ret":{"text":"Returns true if the surface is water.","name":"","type":"boolean"}}}},
{"function":{"name":"IsSky","parent":"SurfaceInfo","type":"classfunc","description":{"text":"Checks if the brush surface is displaying the skybox.","note":"This internally checks the SURFDRAW_SKY flag."},"realm":"Shared","rets":{"ret":{"text":"Returns true if the surface is the sky.","name":"","type":"boolean"}}}},
{"function":{"name":"IsNoDraw","parent":"SurfaceInfo","type":"classfunc","description":{"text":"Checks if the brush surface is a nodraw surface, meaning it will not be drawn by the engine.","note":"This internally checks the SURFDRAW_NODRAW flag."},"realm":"Shared","rets":{"ret":{"text":"Returns true if this surface won't be drawn.","name":"","type":"boolean"}}}},
{"function":{"name":"GetMaterial","parent":"SurfaceInfo","type":"classfunc","description":"Returns the brush surface's material.","realm":"Shared","rets":{"ret":{"text":"Material of one portion of a brush model.","name":"","type":"IMaterial"}}}},
{"function":{"name":"GetMaterial","parent":"SurfaceInfo","type":"classfunc","description":"Returns the brush surface's material.","realm":"Shared","rets":{"ret":{"text":"Material of one portion of a brush model.","name":"","type":"IMaterial"}}}},
{"function":{"name":"Top","parent":"Stack","type":"classfunc","description":"Get the item at the top of the stack","realm":"Shared","file":{"text":"lua/includes/extensions/util.lua","line":"273"},"rets":{"ret":{"text":"The item at the top of the stack","name":"","type":"any"}}}},
{"function":{"name":"Size","parent":"Stack","type":"classfunc","description":"Returns the size of the stack","realm":"Shared","file":{"text":"lua/includes/extensions/util.lua","line":"285"},"rets":{"ret":{"text":"The size of the stack","name":"","type":"number"}}}},
{"function":{"name":"Pop","parent":"Stack","type":"classfunc","description":"Pop an item from the stack","realm":"Shared","file":{"text":"lua/includes/extensions/util.lua","line":"251"},"args":{"arg":{"text":"Amount of items you want to pop.","name":"amount","type":"number","default":"1"}}}},
{"function":{"name":"Push","parent":"Stack","type":"classfunc","description":"Push an item onto the stack","realm":"Shared","file":{"text":"lua/includes/extensions/util.lua","line":"238"},"args":{"arg":{"text":"The item you want to push","name":"object","type":"any"}}}},
{"function":{"name":"NumTasks","parent":"Schedule","type":"classfunc","description":"Returns the number of tasks in the schedule.","realm":"Server","rets":{"ret":{"text":"The number of tasks in this schedule.","name":"","type":"number"}}}},
{"function":{"name":"Init","parent":"Schedule","type":"classfunc","description":{"text":"Initialises the Schedule. Called by  when the Schedule is created.","internal":"","page":"ai_schedule.New"},"realm":"Server","args":{"arg":{"text":"The name passed from .","name":"debugName","type":"string","page":"ai_schedule.New"}}}},
{"function":{"name":"GetTask","parent":"Schedule","type":"classfunc","description":"Returns the task at the given index.","realm":"Server","args":{"arg":{"text":"Task index.","name":"num","type":"number"}}}},
{"function":{"name":"EngTask","parent":"Schedule","type":"classfunc","description":"Adds an engine task to the schedule.","realm":"Server","args":{"arg":[{"text":"Task name, see [ai_task.h](https://github.com/ValveSoftware/source-sdk-2013/blob/55ed12f8d1eb6887d348be03aee5573d44177ffb/mp/src/game/server/ai_task.h#L89-L502)","name":"taskname","type":"string"},{"text":"Task data, can be a float.","name":"taskdata","type":"number"}]}}},
{"function":{"name":"AddTaskEx","parent":"Schedule","type":"classfunc","description":{"text":"Adds a task to the schedule with completely custom function names.\n\nSee also .","page":"Schedule:AddTask"},"realm":"Server","args":{"arg":[{"text":"The full name of a function on the entity's table to be ran when the task is started.","name":"start","type":"string"},{"text":"The full name of a function on the entity's table to be ran when the task is continuously running.","name":"run","type":"string"},{"text":"Task data to be passed into the NPC's functions","name":"data","type":"number"}]}}},
{"function":{"name":"AddTask","parent":"Schedule","type":"classfunc","description":{"text":"Adds a task to the schedule. See also  if you wish to customize task start and run function names.\n\nSee also , , and .","page":["Schedule:AddTaskEx","ENTITY:StartSchedule","NPC:StartEngineTask","NPC:RunEngineTask"]},"realm":"Server","args":{"arg":[{"text":"Custom task name","name":"taskname","type":"string"},{"text":"Task data to be passed into the NPC's functions","name":"taskdata","type":"any"}]}},"example":{"description":"This creates a new schedule with a task named \"HelloWorld\" that is defined to print the taskdata passed in.","code":{"text":"local schdHello = ai_schedule.New( \"SayHello\" )\nschdHello:AddTask( \"HelloWorld\", \"HELLO\" )\n\n-- Called when the task is initiated (started)\nfunction ENT:TaskStart_HelloWorld( data )\n    print(data)\n\n    -- Set a variable that is 5 seconds in the future so the task can complete when we tick past it\n    self.TaskEndTime = CurTime() + 5\nend\n\n-- Called every think until the task is completed\nfunction ENT:Task_HelloWorld(data)\n    print( data, \"again\" )\n\n    -- Check if the 5 seconds have passed\n    if CurTime()","self.taskendtime":{"then":"","self:taskcomplete":"","end":"","ode":"ode","output":"Prints \"HELLO\" in the console, then prints \"HELLO again\" on every NPC think until 5 seconds have passed."}}}},
{"function":{"name":"Update","parent":"ProjectedTexture","type":"classfunc","description":"Updates the Projected Light and applies all previously set parameters.","realm":"Client"}},
{"function":{"name":"SetVerticalFOV","parent":"ProjectedTexture","type":"classfunc","description":{"text":"Sets the vertical angle of projection without affecting the horizontal angle.\n\nYou must call  after using this function for it to take effect.","page":"ProjectedTexture:Update"},"realm":"Client","args":{"arg":{"text":"The new vertical Field Of View for the projected texture. Must be in range between 0 and 180.","name":"vFOV","type":"number"}}}},
{"function":{"name":"SetTextureFrame","parent":"ProjectedTexture","type":"classfunc","description":{"text":"For animated textures, this will choose which frame in the animation will be projected.\n\nYou must call  after using this function for it to take effect.","page":"ProjectedTexture:Update"},"realm":"Client","args":{"arg":{"text":"The frame index to use.","name":"frame","type":"number"}}}},
{"function":{"name":"SetTexture","parent":"ProjectedTexture","type":"classfunc","description":{"text":"Sets the texture to be projected.\n\nYou must call  after using this function for it to take effect.","page":"ProjectedTexture:Update"},"realm":"Client","args":{"arg":{"text":"The name of the texture. Can also be an .","name":"texture","type":"string","page":"ITexture"}}}},
{"function":{"name":"SetQuadraticAttenuation","parent":"ProjectedTexture","type":"classfunc","description":{"text":"Sets the quadratic attenuation of the projected texture.\n\nSee also  and .\n\nYou must call  after using this function for it to take effect.","page":["ProjectedTexture:SetLinearAttenuation","ProjectedTexture:SetConstantAttenuation","ProjectedTexture:Update"]},"realm":"Client","args":{"arg":{"name":"quadAtten","type":"number"}}}},
{"function":{"name":"SetPos","parent":"ProjectedTexture","type":"classfunc","description":{"text":"Move the Projected Texture to the specified position.\n\nYou must call  after using this function for it to take effect.","page":"ProjectedTexture:Update"},"realm":"Client","args":{"arg":{"name":"position","type":"Vector"}}}},
{"function":{"name":"SetOrthographic","parent":"ProjectedTexture","type":"classfunc","description":{"text":"Changes the current projected texture between orthographic and perspective projection.\n\nYou must call  after using this function for it to take effect.","page":"ProjectedTexture:Update"},"realm":"Client","args":{"arg":[{"text":"When false, all other arguments are ignored and the texture is reset to perspective projection.","name":"orthographic","type":"boolean"},{"text":"The amount of units left from the projected texture's origin to project.","name":"left","type":"number"},{"text":"The amount of units upwards from the projected texture's origin to project.","name":"top","type":"number"},{"text":"The amount of units right from the projected texture's origin to project.","name":"right","type":"number"},{"text":"The amount of units downwards from the projected texture's origin to project.","name":"bottom","type":"number"}]}},"example":{"description":"Set the projected texture back to perspective projection.","code":"ProjectedTexture:SetOrthographic( false )\nProjectedTexture:Update()"}},
{"function":{"name":"SetNearZ","parent":"ProjectedTexture","type":"classfunc","description":{"text":"Sets the distance at which the projected texture begins its projection.\n\nYou must call  after using this function for it to take effect.","page":"ProjectedTexture:Update","note":["Setting this to 0 will disable the projected texture completely! This may be useful if you want to disable a projected texture without actually removing it","This seems to affect the rendering of shadows - a higher Near Z value will have shadows begin to render closer to their casting object. Comparing a low Near Z value (like 1) with a normal one (12) or high one (1000) is the easiest way to understand this artifact"]},"realm":"Client","args":{"arg":{"name":"nearZ","type":"number"}}}},
{"function":{"name":"SetLinearAttenuation","parent":"ProjectedTexture","type":"classfunc","description":{"text":"Sets the linear attenuation of the projected texture.\n\nSee also  and .\n\nThe default value of linear attenuation when the projected texture is created is 100. (others are 0, as you are not supposed to mix them)\n\nYou must call  after using this function for it to take effect.","page":["ProjectedTexture:SetConstantAttenuation","ProjectedTexture:SetQuadraticAttenuation","ProjectedTexture:Update"]},"realm":"Client","args":{"arg":{"name":"linearAtten","type":"number"}}}},
{"function":{"name":"SetHorizontalFOV","parent":"ProjectedTexture","type":"classfunc","description":{"text":"Sets the horizontal angle of projection without affecting the vertical angle.\n\nYou must call  after using this function for it to take effect.","page":"ProjectedTexture:Update"},"realm":"Client","args":{"arg":{"text":"The new horizontal Field Of View for the projected texture. Must be in range between 0 and 180.","name":"hFOV","type":"number"}}}},
{"function":{"name":"SetFarZ","parent":"ProjectedTexture","type":"classfunc","description":{"text":"Sets the distance at which the projected texture ends.\n\nYou must call  after using this function for it to take effect.","page":"ProjectedTexture:Update"},"realm":"Client","args":{"arg":{"name":"farZ","type":"number"}}}},
{"function":{"name":"SetFOV","parent":"ProjectedTexture","type":"classfunc","description":{"text":"Sets the angle of projection.\n\nYou must call  after using this function for it to take effect.","page":"ProjectedTexture:Update"},"realm":"Client","args":{"arg":{"text":"Must be higher than 0 and lower than 180","name":"fov","type":"number"}}}},
{"function":{"name":"SetEnableShadows","parent":"ProjectedTexture","type":"classfunc","description":{"text":"Enable or disable shadows cast from the projected texture.\n\n\n\nYou must call  after using this function for it to take effect.","note":{"text":"as with all types of projected textures (including the player's flashlight and env_projectedtexture), there can only be 8 projected textures with shadows enabled in total. This limit can be increased with the launch parameter: -numshadowtextures limit where limit is the new limit. Naturally, many projected lights with shadows enabled will drastically decrease framerate.","br":["",""]},"page":"ProjectedTexture:Update"},"realm":"Client","args":{"arg":{"name":"newState","type":"boolean"}}}},
{"function":{"name":"SetConstantAttenuation","parent":"ProjectedTexture","type":"classfunc","description":{"text":"Sets the constant attenuation of the projected texture.\n\nSee also  and .\n\nYou must call  after using this function for it to take effect.","page":["ProjectedTexture:SetLinearAttenuation","ProjectedTexture:SetQuadraticAttenuation","ProjectedTexture:Update"]},"realm":"Client","args":{"arg":{"name":"constAtten","type":"number"}}}},
{"function":{"name":"Remove","parent":"ProjectedTexture","type":"classfunc","description":{"text":"Removes the projected texture. After calling this,  will return false, and any hooks with the projected texture as the identifier will be automatically deleted.","page":"ProjectedTexture:IsValid"},"realm":"Client"}},
{"function":{"name":"SetColor","parent":"ProjectedTexture","type":"classfunc","description":{"text":"Sets the color of the projected texture.\n\nYou must call  after using this function for it to take effect.","page":"ProjectedTexture:Update"},"realm":"Client","args":{"arg":{"text":"Must be a .\n\nUnlike other projected textures, this color can only go up to 255.","name":"color","type":"table","page":"Color"}}}},
{"function":{"name":"SetAngles","parent":"ProjectedTexture","type":"classfunc","description":{"text":"Sets the angles (direction) of the projected texture.\n\nYou must call  after using this function for it to take effect.","page":"ProjectedTexture:Update"},"realm":"Client","args":{"arg":{"name":"angle","type":"Angle"}}}},
{"function":{"name":"SetBrightness","parent":"ProjectedTexture","type":"classfunc","description":{"text":"Sets the brightness of the projected texture.\n\nYou must call  after using this function for it to take effect.","page":"ProjectedTexture:Update"},"realm":"Client","args":{"arg":{"text":"The brightness to give the projected texture.","name":"brightness","type":"number"}}}},
{"function":{"name":"IsValid","parent":"ProjectedTexture","type":"classfunc","description":{"text":"Returns true if the projected texture is valid (i.e. has not been removed), false otherwise.\n\nInstead of calling this directly it's a good idea to call  in case the variable is nil.\n\n\n```\nIsValid( ptexture )\n```\n\n\nThis not only checks whether the projected texture is valid - but also checks whether it's nil.","page":"Global.IsValid"},"realm":"Client","rets":{"ret":{"text":"Whether the projected texture is valid.","name":"","type":"boolean"}}}},
{"function":{"name":"GetVerticalFOV","parent":"ProjectedTexture","type":"classfunc","description":{"text":"Returns the vertical FOV of the ProjectedTexture, which was previously set by  or","page":["ProjectedTexture:SetVerticalFOV","ProjectedTexture:SetFOV"]},"realm":"Client","rets":{"ret":{"text":"The vertical FOV of the ProjectedTexture.","name":"","type":"number"}}}},
{"function":{"name":"GetTextureFrame","parent":"ProjectedTexture","type":"classfunc","description":{"text":"Returns the texture frame of the ProjectedTexture, which was previously set by","page":"ProjectedTexture:SetTextureFrame"},"realm":"Client","rets":{"ret":{"text":"The texture frame.","name":"","type":"number"}}}},
{"function":{"name":"GetTexture","parent":"ProjectedTexture","type":"classfunc","description":{"text":"Returns the texture of the ProjectedTexture, which was previously set by","page":"ProjectedTexture:SetTexture"},"realm":"Client","rets":{"ret":{"text":"The texture of the ProjectedTexture.","name":"","type":"ITexture"}}}},
{"function":{"name":"GetPos","parent":"ProjectedTexture","type":"classfunc","description":{"text":"Returns the position of the ProjectedTexture, which was previously set by","page":"ProjectedTexture:SetPos"},"realm":"Client","rets":{"ret":{"text":"The position of the ProjectedTexture.","name":"","type":"Vector"}}}},
{"function":{"name":"GetQuadraticAttenuation","parent":"ProjectedTexture","type":"classfunc","description":{"text":"Returns the quadratic attenuation of the projected texture, which can also be set by .","page":"ProjectedTexture:SetQuadraticAttenuation"},"realm":"Client","rets":{"ret":{"text":"The quadratic attenuation","name":"","type":"number"}}}},
{"function":{"name":"GetQuadraticAttenuation","parent":"ProjectedTexture","type":"classfunc","description":{"text":"Returns the quadratic attenuation of the projected texture, which can also be set by .","page":"ProjectedTexture:SetQuadraticAttenuation"},"realm":"Client","rets":{"ret":{"text":"The quadratic attenuation","name":"","type":"number"}}}},
{"function":{"name":"GetOrthographic","parent":"ProjectedTexture","type":"classfunc","description":{"text":"Returns the current orthographic settings of the Projected Texture. To set these values, use .","page":"ProjectedTexture:SetOrthographic"},"realm":"Client","rets":{"ret":[{"text":"Whether or not this projected texture is orthographic. When false, nothing else is returned.","name":"","type":"boolean"},{"text":"left","name":"","type":"number"},{"text":"top","name":"","type":"number"},{"text":"right","name":"","type":"number"},{"text":"bottom","name":"","type":"number"}]}}},
{"function":{"name":"GetLinearAttenuation","parent":"ProjectedTexture","type":"classfunc","description":{"text":"Returns the linear attenuation of the projected texture, which can also be set by .","page":"ProjectedTexture:SetLinearAttenuation"},"realm":"Client","rets":{"ret":{"text":"The linear attenuation.","name":"","type":"number"}}}},
{"function":{"name":"GetHorizontalFOV","parent":"ProjectedTexture","type":"classfunc","description":{"text":"Returns the horizontal FOV of the ProjectedTexture, which was previously set by  or","page":["ProjectedTexture:SetHorizontalFOV","ProjectedTexture:SetFOV"]},"realm":"Client","rets":{"ret":{"text":"The horizontal FOV of the ProjectedTexture.","name":"","type":"number"}}}},
{"function":{"name":"GetHorizontalFOV","parent":"ProjectedTexture","type":"classfunc","description":{"text":"Returns the horizontal FOV of the ProjectedTexture, which was previously set by  or","page":["ProjectedTexture:SetHorizontalFOV","ProjectedTexture:SetFOV"]},"realm":"Client","rets":{"ret":{"text":"The horizontal FOV of the ProjectedTexture.","name":"","type":"number"}}}},
{"function":{"name":"GetEnableShadows","parent":"ProjectedTexture","type":"classfunc","description":{"text":"Returns whether shadows are enabled for this ProjectedTexture, which was previously set by","page":"ProjectedTexture:SetEnableShadows"},"realm":"Client","rets":{"ret":{"text":"Whether shadows are enabled.","name":"","type":"boolean"}}}},
{"function":{"name":"GetConstantAttenuation","parent":"ProjectedTexture","type":"classfunc","description":{"text":"Returns the constant attenuation of the projected texture, which can also be set by .","page":"ProjectedTexture:SetConstantAttenuation"},"realm":"Client","rets":{"ret":{"text":"The constant attenuation","name":"","type":"number"}}}},
{"function":{"name":"GetBrightness","parent":"ProjectedTexture","type":"classfunc","description":{"text":"Returns the brightness of the ProjectedTexture, which was previously set by","page":"ProjectedTexture:SetBrightness"},"realm":"Client","rets":{"ret":{"text":"The brightness of the ProjectedTexture.","name":"","type":"number"}}}},
{"function":{"name":"GetColor","parent":"ProjectedTexture","type":"classfunc","description":{"text":"Returns the color of the ProjectedTexture, which was previously set by .","page":"ProjectedTexture:SetColor","bug":{"text":"The returned color will not have the color metatable.","issue":"2407"}},"realm":"Client","rets":{"ret":{"text":", the color of the ProjectedTexture.","name":"","type":"table","page":"Color"}}}},
{"function":{"name":"GetAngles","parent":"ProjectedTexture","type":"classfunc","description":{"text":"Returns the angle of the ProjectedTexture, which were previously set by","page":"ProjectedTexture:SetAngles"},"realm":"Client","rets":{"ret":{"text":"The angles of the ProjectedTexture.","name":"","type":"Angle"}}}},
{"function":{"name":"ViewPunch","parent":"Player","type":"classfunc","description":"Simulates a push on the client's screen.","realm":"Shared","args":{"arg":{"text":"The angle in which to push the player's screen.","name":"PunchAngle","type":"Angle"}}},"example":{"description":"Knocks the player's camera upward","code":"player:ViewPunch(Angle(-10, 0, 0))"}},
{"function":{"name":"VoiceVolume","parent":"Player","type":"classfunc","description":"Returns the players voice volume, how loud the player's voice communication currently is, as a normal number. Doesn't work on local player unless the voice_loopback convar is set to 1.","realm":"Client","rets":{"ret":{"text":"The voice volume.","name":"","type":"number"}}}},
{"function":{"name":"UserID","parent":"Player","type":"classfunc","description":{"text":"Returns the player's ID.\nYou can use () to get the player by their ID.","page":"Global.Player"},"realm":"Shared","rets":{"ret":{"text":"The player's user ID","name":"","type":"number"}}}},
{"function":{"name":"ViewPunchReset","parent":"Player","type":"classfunc","description":{"text":"Resets the player's view punch (  ) effect back to normal.","page":"Player:ViewPunch"},"realm":"Shared","args":{"arg":{"text":"Reset all ViewPunch below this threshold.","name":"tolerance","type":"number","default":"0"}}}},
{"function":{"name":"UnLock","parent":"Player","type":"classfunc","description":{"text":"Unlocks the player movement if locked previously.\n\nWill disable godmode for the player if locked previously.","br":""},"realm":"Server"}},
{"function":{"name":"UnSpectate","parent":"Player","type":"classfunc","description":"Stops the player from spectating another entity.","realm":"Server"}},
{"function":{"name":"UniqueIDTable","parent":"Player","type":"classfunc","description":"Returns a table that will stay allocated for the specific player between connects until the server shuts down. Note, that this table is not synchronized between client and server.","realm":"Shared","args":{"arg":{"text":"Unique table key.","name":"key","type":"any"}},"rets":{"ret":{"text":"The table that contains any info you have put in it.","name":"","type":"table"}}},"example":{"description":"Example usage","code":"local table = Entity( 1 ):UniqueIDTable( \"mytable\" )\ntable.MyValue = \"test\"\n\n// Somewhere else\nlocal table = Entity( 1 ):UniqueIDTable( \"mytable\" )\nprint( table.MyValue )\nlocal table = Entity( 1 ):UniqueIDTable( \"mytable_other\" )\nprint( table.MyValue )","output":"\"test\"\n\nnil"}},
{"function":{"name":"UniqueID","parent":"Player","type":"classfunc","description":{"text":"Returns a 32 bit integer that remains constant for a player across joins/leaves and across different servers. This can be used when a string is inappropriate - e.g. in a database primary key.","warning":{"text":"**This function has collisions,** where more than one player has the same UniqueID. It is **highly** recommended to use ,  or  instead, which are guaranteed to be unique to each player.","page":["Player:AccountID","Player:SteamID","Player:SteamID64"]},"note":"In Singleplayer, this function will always return 1."},"realm":"Shared","rets":{"ret":{"text":"The player's Unique ID","name":"","type":"number"}}},"example":[{"description":"Gets the Unique ID of a player.","code":"Entity( 1 ):UniqueID()","output":"Something like 1592073762"},{"description":"Functional equivalent of this function.","code":"local ply = Entity( 1 )\nlocal uniqueid = util.CRC( \"gm_\" .. ply:SteamID() .. \"_gm\" )\nprint( uniqueid )","output":"Something like 1592073762"}]},
{"function":{"name":"UnfreezePhysicsObjects","parent":"Player","type":"classfunc","description":"Unfreezes all objects the player has frozen with their Physics Gun. Same as double pressing R while holding Physics Gun.","realm":"Shared"}},
{"function":{"name":"TranslateWeaponActivity","parent":"Player","type":"classfunc","description":{"text":"Translates  according to the holdtype of players currently held weapon.","page":"Enums/ACT"},"realm":"Shared","args":{"arg":{"text":"The initial","name":"act","type":"number","page":"Enums/ACT"}},"rets":{"ret":{"text":"Translated","name":"","type":"number","page":"Enums/ACT"}}}},
{"function":{"name":"TimeConnected","parent":"Player","type":"classfunc","description":{"text":"Returns the time in seconds since the player connected.","note":"Bots will always return value 0."},"realm":"Server","rets":{"ret":{"name":"connectTime","type":"number"}}}},
{"function":{"name":"TraceHullAttack","parent":"Player","type":"classfunc","description":{"text":"Performs a trace hull and applies damage to the entities hit, returns the first entity hit.","warning":{"text":"Hitting the victim entity with this function in  can cause infinite loops.","page":"ENTITY:OnTakeDamage"}},"realm":"Server","args":{"arg":[{"text":"The start position of the hull trace.","name":"startPos","type":"Vector"},{"text":"The end position of the hull trace.","name":"endPos","type":"Vector"},{"text":"The minimum coordinates of the hull.","name":"mins","type":"Vector"},{"text":"The maximum coordinates of the hull.","name":"maxs","type":"Vector"},{"text":"The damage to be applied.","name":"damage","type":"number"},{"text":"Bitflag specifying the damage type, see .","name":"damageFlags","type":"Vector","page":"Enums/DMG"},{"text":"The force to be applied to the hit object.","name":"damageForce","type":"number"},{"text":"Whether to apply damage to all hit NPCs or not.","name":"damageAllNPCs","type":"boolean"}]},"rets":{"ret":{"text":"The hit entity","name":"","type":"Entity"}}}},
{"function":{"name":"Team","parent":"Player","type":"classfunc","description":"Returns the player's team ID.\n\nReturns 0 clientside when the game is not fully loaded.","realm":"Shared","rets":{"ret":{"text":"The player's team's index number, as in the  or a custom team defined in .","name":"","type":"number","page":["Enums/TEAM","team.SetUp"]}}},"example":{"description":"Prints the name of the player's team","code":"print(team.GetName( Entity( 1 ):Team() ) )","output":"Something like \"Unassigned\" in console."}},
{"function":{"name":"SwitchToDefaultWeapon","parent":"Player","type":"classfunc","description":{"text":"Attempts to switch the player weapon to the one specified in the \"cl_defaultweapon\" convar, if the player does not own the specified weapon nothing will happen.\n\nIf you want to switch to a specific weapon, use:","page":"Player:SetActiveWeapon"},"realm":"Server","file":{"text":"lua/includes/extensions/player.lua","line":"195-L206"}}},
{"function":{"name":"SuppressHint","parent":"Player","type":"classfunc","description":{"text":"Prevents a hint from showing up.","note":"This function is only available in Sandbox and its derivatives"},"realm":"Server","args":{"arg":{"text":"Hint name/class/index to prevent from showing up","name":"name","type":"string"}}},"example":{"description":"Removes three default Sandbox hints (taken from the source code of the Sandbox gamemode):","code":"-- Hint type: Show opening menu hint\n-- ... Suppress this hint =>\nply:SuppressHint( \"OpeningMenu\" )\n\n-- Hint type: Tell them how to turn the hints off\n-- ... Suppress this hint =>\nply:SuppressHint( \"Annoy1\" )\nply:SuppressHint( \"Annoy2\" )\n\n-- Other default Hint types : PhysgunFreeze, PhysgunUse, VehicleView ..."}},
{"function":{"name":"StripWeapons","parent":"Player","type":"classfunc","description":"Removes all weapons from a certain player","realm":"Server"},"example":{"description":"Removes all the weapons from the player with the ID 1","code":"player.GetByID( 1 ):StripWeapons()","output":"Player 1 has no weapons anymore"}},
{"function":{"name":"StripWeapon","parent":"Player","type":"classfunc","description":"Removes the specified weapon class from a certain player","realm":"Server","args":{"arg":{"text":"The weapon class to remove","name":"weapon","type":"string"}}},"example":{"description":"Removes the crowbar from the player with the ID 1","code":"player.GetByID( 1 ):StripWeapon(\"weapon_crowbar\")","output":"Crowbar removed from player 1"}},
{"function":{"name":"StripAmmo","parent":"Player","type":"classfunc","description":"Removes all ammo from the player.","realm":"Server"}},
{"function":{"name":"StopZooming","parent":"Player","type":"classfunc","description":"Turns off the zoom mode of the player. (+zoom console command)\n\nBasically equivalent of entering \"-zoom\" into player's console.","realm":"Server"}},
{"function":{"name":"StopWalking","parent":"Player","type":"classfunc","description":{"text":"When used in a  hook, this function behaves unexpectedly by preventing the player from sprinting similar to .","deprecated":"This appears to be a direct binding to internal functionality that is overridden by the engine every frame so calling these functions may not have any or expected effect.","page":["GM:SetupMove","Player:StopSprinting"]},"realm":"Shared"},"example":{"description":"Disables Sprinting, not Walking.","code":"hook.Add( \"SetupMove\", \"TestFunc\", function( ply, mv, cmd )\n\tply:StopWalking()\nend )"}},
{"function":{"name":"StopSprinting","parent":"Player","type":"classfunc","description":{"text":"When used in a  hook, this function will prevent the player from sprinting.\n\nWhen +walk is engaged, the player will still be able to sprint to half speed (normal run speed) as opposed to full sprint speed without this function.","deprecated":"This appears to be a direct binding to internal functionality that is overridden by the engine every frame so calling these functions may not have any or expected effect.","page":"GM:SetupMove"},"realm":"Shared"},"example":{"description":"Example usage, disables sprinting at all times.","code":"hook.Add( \"SetupMove\", \"TestFunc\", function( ply, mv, cmd )\n\tply:StopSprinting()\nend )"}},
{"function":{"name":"SteamID64","parent":"Player","type":"classfunc","description":{"text":"Returns the player's 64bit SteamID aka CommunityID.\n\nIn singleplayer, this will return no value serverside.\n\nIn a multirun environment, this will return no value serverside for all \"copies\" of a player.\n\nFor bots, this will return 90071996842377216 (equivalent to STEAM_0:0:0) for the first bot to join.\n\n\nFor each additional bot, the number increases by 1. So the next bot will be 90071996842377217 (STEAM_0:1:0) then 90071996842377218 (STEAM_0:0:1) and so on.\n\nOn the client it returns no value for bots.\n\nUse  for a shorter version of the SteamID.","page":"Player:AccountID"},"realm":"Shared","rets":{"ret":{"text":"Player's 64bit SteamID aka CommunityID.","name":"","type":"string"}}},"example":{"description":"Prints the 64bit SteamID of player","code":"print(ply:SteamID64())","output":"64bit SteamID (about 20 digits)"}},
{"function":{"name":"SteamID","parent":"Player","type":"classfunc","description":{"text":"Returns the player's SteamID. In singleplayer, this will be STEAM_ID_PENDING serverside.\n\nFor Bots this will return \"BOT\" on the server and on the client it returns \"NULL\".\n\nUse  for a shorter version of the SteamID.","page":"Player:AccountID"},"realm":"Shared","rets":{"ret":{"text":"SteamID","name":"","type":"string"}}},"example":{"description":"Prints the EntityID, Name and SteamID of all players","code":"for k, v in pairs( player.GetAll() ) do\n     print( \"[\" .. v:EntIndex() .. \"]\", v:Name(), v:SteamID( ) )\nend","output":"A list consisting of every player's EntityID, Name & SteamID on the server."}},
{"function":{"name":"StartWalking","parent":"Player","type":"classfunc","description":{"text":"When used in a  hook, this function will force the player to walk, as well as preventing the player from sprinting.","deprecated":"This appears to be a direct binding to internal functionality that is overridden by the engine every frame so calling these functions may not have any or expected effect.","page":"GM:SetupMove"},"realm":"Shared"},"example":{"description":"Example usage, forces the player to walk. (+walk console command)","code":"hook.Add( \"SetupMove\", \"TestFunc\", function( ply, mv, cmd )\n\tply:StartWalking()\nend )"}},
{"function":{"name":"StartSprinting","parent":"Player","type":"classfunc","description":{"text":"Doesn't appear to do anything.","deprecated":"This appears to be a direct binding to internal functionality that is overridden by the engine every frame so calling these functions may not have any or expected effect."},"realm":"Shared"},"example":{"description":"An example alternative to this function.","code":{"text":"local vDelay = 0\nlocal prevDown = 0\nhook.Add( \"StartCommand\", \"TestFunc\", function( ply, cmd )\n    if ( cmd:KeyDown( IN_FORWARD ) and prevDown == false ) then\n        vDelay = CurTime() + 0.4\n    elseif ( cmd:KeyDown( IN_FORWARD ) ) then\n        if ( vDelay","curtime":{"then":"","cmd:setbuttons":"","bit.bor":"","cmd:getbuttons":"","in_speed":"","end":"","prevdown":"cmd:KeyDown(IN_FORWARD)","ode":"ode"}}}},
{"function":{"name":"SprintEnable","parent":"Player","type":"classfunc","description":{"text":"Enables the sprint on the player.","bug":{"text":"Not working - use  or  in a  hook, instead.","issue":"2390","page":["Player:SetRunSpeed","CMoveData:SetMaxSpeed","GM:Move"]}},"realm":"Server"},"example":{"description":{"text":"Allows the player with ID 1 to use the sprint ( by default) feature.","key":"SHIFT"},"code":"player.GetByID( 1 ):SprintEnable()","output":"None, but Player 1's sprint is enabled."}},
{"function":{"name":"SprintDisable","parent":"Player","type":"classfunc","description":{"text":"Disables the sprint on the player.","bug":{"text":"Not working - use  or  in a  hook, instead.","issue":"2390","page":["Player:SetRunSpeed","CMoveData:SetMaxSpeed","GM:Move"]}},"realm":"Server"},"example":{"description":"Stops and prevents player with ID 1 from sprinting","code":"player.GetByID( 1 ):SprintDisable()","output":"None, but Player 1's sprint is disabled."}},
{"function":{"name":"SpectateEntity","parent":"Player","type":"classfunc","description":{"text":"Makes the player spectate the entity\n\nTo get the applied spectated entity, use ().","page":"Player:GetObserverTarget","bug":{"text":"The player's position will not update while spectating, causing area portals and other map optimisations to not work properly. You can fix this by setting the player's position to the spectated entity's each tick.","issue":"3267"}},"realm":"Server","args":{"arg":{"text":"Entity to spectate.","name":"entity","type":"Entity"}}},"example":{"description":"Creates a entity, spectates it and after 5 seconds, stops spectating it.","code":"local ent = ents.Create( \"prop_physics\" )\nent:SetModel( \"models/hunter/misc/sphere025x025.mdl\" )\nent:SetPos( Vector( 0, 0, 0 ) )\nent:Spawn()\n \nfor _, ply in pairs( player.GetAll() ) do\n\tply:Spectate( OBS_MODE_CHASE )\n\tply:SpectateEntity( ent )\n\tply:StripWeapons()\n\n\ttimer.Simple( 5, function()\n\t\tply:UnSpectate()\n\t\tply:Spawn()\n\tend )\nend"}},
{"function":{"name":"SprayDecal","parent":"Player","type":"classfunc","description":"Makes a player spray their decal.","realm":"Server","args":{"arg":[{"text":"The location to spray from","name":"sprayOrigin","type":"Vector"},{"text":"The location to spray to","name":"sprayEndPos","type":"Vector"}]}},"example":{"description":"Makes the player spray their decal 5000 units away.","code":"ply:SprayDecal(ply:EyePos(),ply:EyePos() + ply:GetAimVector()*5000)"}},
{"function":{"name":"SprayDecal","parent":"Player","type":"classfunc","description":"Makes a player spray their decal.","realm":"Server","args":{"arg":[{"text":"The location to spray from","name":"sprayOrigin","type":"Vector"},{"text":"The location to spray to","name":"sprayEndPos","type":"Vector"}]}},"example":{"description":"Makes the player spray their decal 5000 units away.","code":"ply:SprayDecal(ply:EyePos(),ply:EyePos() + ply:GetAimVector()*5000)"}},
{"function":{"name":"SimulateGravGunPickup","parent":"Player","type":"classfunc","description":"Signals the entity that it was picked up by the gravity gun. This call is only required if you want to simulate the situation of picking up objects.","realm":"Server","args":{"arg":{"text":"The entity picked up","name":"ent","type":"Entity"}}}},
{"function":{"name":"ShowProfile","parent":"Player","type":"classfunc","description":"Opens the player steam profile page in the steam overlay browser.","realm":"Client"}},
{"function":{"name":"SimulateGravGunDrop","parent":"Player","type":"classfunc","description":"Signals the entity that it was dropped by the gravity gun.","realm":"Server","args":{"arg":{"text":"Entity that was dropped.","name":"ent","type":"Entity"}}}},
{"function":{"name":"ShouldDropWeapon","parent":"Player","type":"classfunc","description":{"text":"Sets whether the player's current weapon should drop on death.","note":{"text":"This is reset on spawn to the 's **DropWeaponOnDie** field by .","page":[",player classPlayer_Classes","player_manager.OnPlayerSpawn"]}},"realm":"Server","args":{"arg":{"text":"Whether to drop the player's current weapon or not","name":"drop","type":"boolean"}}}},
{"function":{"name":"ShouldDrawLocalPlayer","parent":"Player","type":"classfunc","description":"Polls the engine to request if the player should be drawn at the time the function is called.","realm":"Client","rets":{"ret":{"text":"shouldDraw","name":"","type":"boolean"}}}},
{"function":{"name":"SetWeaponColor","parent":"Player","type":"classfunc","description":"Sets the player weapon's color. The part of the model that is colored is determined by the model itself, and is different for each model.","realm":"Shared","args":{"arg":{"text":"This is the color to be set. The format is Vector(r,g,b), and each color should be between 0 and 1.","name":"Color","type":"Vector"}}},"example":{"description":"When a player spawns their weapon's color will be red.","code":"function GM:PlayerSpawn( ply )\n ply:SetWeaponColor( Vector(1,0,0) )\nend"}},
{"function":{"name":"SetViewPunchAngles","parent":"Player","type":"classfunc","description":{"text":"Sets client's view punch. See","page":"Player:ViewPunch"},"realm":"Shared","args":{"arg":{"text":"The angle to set.","name":"punchAngle","type":"Angle"}}}},
{"function":{"name":"SetWalkSpeed","parent":"Player","type":"classfunc","description":{"text":"Sets the player's normal walking speed. Not sprinting, not slow walking .\n\nThere currently is no way to modify the slow walking  speed.\n\nSee also , ,  and .","key":["+walk","+walk"],"page":["Player:GetWalkSpeed","Player:SetCrouchedWalkSpeed","Player:SetMaxSpeed","Player:SetRunSpeed"],"bug":{"text":"Using a speed of 0 can lead to prediction errors.","issue":"2030"}},"realm":"Shared","args":{"arg":{"text":"The new walk speed when sv_friction is below 10. Higher sv_friction values will result in slower speed.\n\nHas to be 7 or above or the player won't be able to move.","name":"walkSpeed","type":"number"}}}},
{"function":{"name":"SetViewOffsetDucked","parent":"Player","type":"classfunc","description":{"text":"Sets the **desired** view offset which equals the difference between the players actual position and their view when crouching.\n\nIf you want to set **actual** view offset, use \n\nSee also  for **desired** view offset when standing.","page":["Player:SetCurrentViewOffset","Player:SetViewOffset"]},"realm":"Shared","args":{"arg":{"text":"The new desired view offset when crouching.","name":"viewOffset","type":"Vector"}}}},
{"function":{"name":"SetViewOffset","parent":"Player","type":"classfunc","description":{"text":"Sets the **desired** view offset which equals the difference between the players actual position and their view when standing.\n\nIf you want to set **actual** view offset, use \n\nSee also  for **desired** view offset when crouching.","page":["Player:SetCurrentViewOffset","Player:SetViewOffsetDucked"]},"realm":"Shared","args":{"arg":{"text":"The new desired view offset when standing.","name":"viewOffset","type":"Vector"}}}},
{"function":{"name":"SetViewEntity","parent":"Player","type":"classfunc","description":"Attaches the players view to the position and angles of the specified entity.","realm":"Server","args":{"arg":{"text":"The entity to attach the player view to.","name":"viewEntity","type":"Entity"}}}},
{"function":{"name":"SetUserGroup","parent":"Player","type":"classfunc","description":"Sets the usergroup of the player.","realm":"Server","file":{"text":"lua/includes/extensions/player_auth.lua","line":"49-L55"},"args":{"arg":{"text":"The user group of the player.","name":"groupName","type":"string"}}},"example":{"description":"Make the player superadmin and print their group.","code":"Entity(1):SetUserGroup(\"superadmin\")\nprint(Entity(1):GetUserGroup())","outputfixedwidth":"Fixed width","output":"superadmin"}},
{"function":{"name":"SetupHands","parent":"Player","type":"classfunc","description":{"text":"Sets up the players view model hands. Calls  to set the model of the hands.","page":"GM:PlayerSetHandsModel"},"realm":"Server","file":{"text":"lua/includes/extensions/player.lua","line":"214-L229"},"args":{"arg":{"text":"If the player is spectating an entity, this should be the entity the player is spectating, so we can use its hands model instead.","name":"ent","type":"Entity"}}}},
{"function":{"name":"SetSuppressPickupNotices","parent":"Player","type":"classfunc","description":"Sets whenever to suppress the pickup notification for the player.","realm":"Shared","args":{"arg":{"text":"Whenever to suppress the notice or not.","name":"doSuppress","type":"boolean"}}}},
{"function":{"name":"SetUnDuckSpeed","parent":"Player","type":"classfunc","description":"Sets how quickly a player un-ducks","realm":"Shared","args":{"arg":{"text":"How quickly the player will un-duck","name":"UnDuckSpeed","type":"number"}}}},
{"function":{"name":"SetUnDuckSpeed","parent":"Player","type":"classfunc","description":"Sets how quickly a player un-ducks","realm":"Shared","args":{"arg":{"text":"How quickly the player will un-duck","name":"UnDuckSpeed","type":"number"}}}},
{"function":{"name":"SetSuitPower","parent":"Player","type":"classfunc","description":{"text":"Sets the player's HEV suit power.","bug":{"text":"This will only work for the local player when used clientside.","issue":"3449"}},"realm":"Shared","args":{"arg":{"text":"The new suit power.","name":"power","type":"number"}}}},
{"function":{"name":"SetStepSize","parent":"Player","type":"classfunc","description":"Sets the maximum height a player can step onto without jumping.","realm":"Shared","args":{"arg":{"text":"The new maximum height the player can step onto without jumping","name":"stepHeight","type":"number"}}}},
{"function":{"name":"SetSlowWalkSpeed","parent":"Player","type":"classfunc","description":{"text":"Sets the player's slow walking speed, which is activated via `+walk` keybind.\n\nSee  for normal walking speed,  for sprinting speed and  for ladder climb speed.","page":["Player:SetWalkSpeed","Player:SetRunSpeed","Player:SetLadderClimbSpeed"]},"added":"2020.03.17","realm":"Shared","args":{"arg":{"text":"The new slow walking speed.","name":"speed","type":"number"}}}},
{"function":{"name":"SetSlowWalkSpeed","parent":"Player","type":"classfunc","description":{"text":"Sets the player's slow walking speed, which is activated via `+walk` keybind.\n\nSee  for normal walking speed,  for sprinting speed and  for ladder climb speed.","page":["Player:SetWalkSpeed","Player:SetRunSpeed","Player:SetLadderClimbSpeed"]},"added":"2020.03.17","realm":"Shared","args":{"arg":{"text":"The new slow walking speed.","name":"speed","type":"number"}}}},
{"function":{"name":"SetRenderAngles","parent":"Player","type":"classfunc","description":"Sets the render angles of a player.","realm":"Shared","args":{"arg":{"text":"The new render angles to set","name":"ang","type":"Angle"}}}},
{"function":{"name":"SetPressedWidget","parent":"Player","type":"classfunc","description":"Sets the widget that is currently in use by the player's mouse.\n\nHaving a pressed widget stops the player from firing his weapon to allow input to be passed onto the widget.","realm":"Shared","args":{"arg":{"text":"The widget the player is currently using.","name":"pressedWidget","type":"Entity","default":"NULL"}}}},
{"function":{"name":"SetPlayerColor","parent":"Player","type":"classfunc","description":"Sets the player model's color. The part of the model that is colored is determined by the model itself, and is different for each model.","realm":"Shared","args":{"arg":{"text":"This is the color to be set. The format is Vector(r,g,b), and each color should be between 0 and 1.","name":"Color","type":"Vector"}}},"example":[{"description":"When a player spawns their color will be red.","code":"function GM:PlayerSpawn( ply )\n\tply:SetPlayerColor( Vector(1,0,0) )\nend"},{"description":{"text":"A function you could use to set the player's color to a  rather than a","page":["Global.Color","Vector"]},"code":"local function SetColor( ply, color )\n\tply:SetPlayerColor( Vector( color.r / 255, color.g / 255, color.b / 255 ) )\nend"}]},
{"function":{"name":"SetObserverMode","parent":"Player","type":"classfunc","description":{"text":"Sets the players observer mode. You must start the spectating first with .","page":"Player:Spectate"},"realm":"Shared","args":{"arg":{"text":"Spectator mode using .","name":"mode","type":"number","page":"Enums/OBS_MODE"}}}},
{"function":{"name":"SetPData","parent":"Player","type":"classfunc","description":{"text":"Writes a **P**layer **Data** key-value pair to the SQL database. (sv.db when called on server,  cl.db when called on client)\n\nInternally uses the .","page":"sql","warning":{"text":"This function internally uses , which can cause collisions (two or more players sharing the same PData entry). It's recommended that you don't use it. See the related wiki page for more information.","page":"Player:UniqueID"},"note":"PData is not networked from servers to clients!"},"realm":"Shared","file":{"text":"lua/includes/extensions/player.lua","line":"173-L182"},"args":{"arg":[{"text":"Name of the PData key","name":"key","type":"string"},{"text":"Value to write to the key (**must** be an SQL valid data type, such as a string or integer)","name":"value","type":"any"}]},"rets":{"ret":{"text":"Whether the operation was successful or not","name":"","type":"boolean"}}},"example":{"description":"Sets the key \"money\" from player 1's PData to 100","code":"player.GetByID( 1 ):SetPData( \"money\", 100 )"}},
{"function":{"name":"SetNoCollideWithTeammates","parent":"Player","type":"classfunc","description":{"text":"Sets whenever the player should not collide with their teammates.","bug":{"text":"This only works with  IDs 1-4. This also has major collision issues.","issue":"2757","page":"Player:Team"}},"realm":"Server","args":{"arg":{"text":"True to disable, false to enable collision.","name":"shouldNotCollide","type":"boolean"}}}},
{"function":{"name":"SetNoTarget","parent":"Player","type":"classfunc","description":{"text":"Sets the players visibility towards NPCs.\n\nInternally this toggles the  flag, which you can manually test for using","page":[",FL_NOTARGETEnums/FL","Entity:IsFlagSet"]},"realm":"Server","args":{"arg":{"text":"The visibility.","name":"visibility","type":"boolean"}}}},
{"function":{"name":"SetMuted","parent":"Player","type":"classfunc","description":"Sets if the player should be muted locally.","realm":"Client","args":{"arg":{"text":"Mute or unmute.","name":"mute","type":"boolean"}}},"example":{"description":"Mutes all players on the server","code":"for k, v in pairs(player.GetAll()) do\n\tv:SetMuted(true)\nend"}},
{"function":{"name":"SetMaxSpeed","parent":"Player","type":"classfunc","description":{"text":"Sets the maximum speed which the player can move at.","note":{"text":"This is called automatically by the engine. If you wish to limit player speed without setting their run/sprint speeds, see .","page":"CMoveData:SetMaxClientSpeed"}},"realm":"Shared","args":{"arg":{"text":"The maximum speed.","name":"walkSpeed","type":"number"}}}},
{"function":{"name":"SetLastHitGroup","parent":"Player","type":"classfunc","description":"Sets the hitgroup where the player was last hit.","realm":"Server","added":"2020.03.17","args":{"arg":{"text":"The hitgroup to set as the \"last hit\", see","name":"hitgroup","type":"number","page":"Enums/HITGROUP"}}}},
{"function":{"name":"SetLaggedMovementValue","parent":"Player","type":"classfunc","description":{"text":"Slows down the player movement simulation by the timescale, this is used internally in the HL2 weapon stripping sequence.\n\nIt achieves such behavior by multiplying the  by the specified timescale at the start of the movement simulation and then restoring it afterwards.","page":"Global.FrameTime","note":["This is reset to 1 on spawn",{"text":"There is no weapon counterpart to this, you'll have to hardcode the multiplier in the weapon or call  /  manually from a","page":["Weapon:SetNextPrimaryFire","Weapon:SetNextSecondaryFire"]}]},"realm":"Server","args":{"arg":{"text":"The timescale multiplier.","name":"timescale","type":"number"}}}},
{"function":{"name":"SetLadderClimbSpeed","parent":"Player","type":"classfunc","description":{"text":"Sets the player's ladder climbing speed.\n\nSee  for normal walking speed,  for sprinting speed and  for slow walking speed.","page":["Player:SetWalkSpeed","Player:SetRunSpeed","Player:SetSlowWalkSpeed"]},"added":"2020.03.17","realm":"Shared","args":{"arg":{"text":"The ladder climbing speed.","name":"speed","type":"number"}}}},
{"function":{"name":"SetJumpPower","parent":"Player","type":"classfunc","description":"Sets the jump power, eg. the velocity the player will applied to when he jumps.","realm":"Shared","args":{"arg":{"text":"The new jump velocity.","name":"jumpPower","type":"number"}}}},
{"function":{"name":"SetHullDuck","parent":"Player","type":"classfunc","description":"Sets the mins and maxs of the AABB of the players collision when ducked.","realm":"Shared","args":{"arg":[{"text":"The min coordinates of the hull.","name":"hullMins","type":"Vector"},{"text":"The max coordinates of the hull.","name":"hullMaxs","type":"Vector"}]}}},
{"function":{"name":"SetHoveredWidget","parent":"Player","type":"classfunc","description":"Sets the widget that is currently hovered by the player's mouse.","realm":"Shared","args":{"arg":{"text":"The widget entity that the player is hovering.","name":"widget","type":"Entity","default":"NULL"}}}},
{"function":{"name":"SetHoveredWidget","parent":"Player","type":"classfunc","description":"Sets the widget that is currently hovered by the player's mouse.","realm":"Shared","args":{"arg":{"text":"The widget entity that the player is hovering.","name":"widget","type":"Entity","default":"NULL"}}}},
{"function":{"name":"SetHands","parent":"Player","type":"classfunc","description":{"text":"Sets the hands entity of a player.\n\nThe hands entity is an entity introduced in Garry's Mod 13 and it's used to show the player's hands attached to the viewmodel.\nThis is similar to the approach used in L4D and CS:GO, for more information on how to implement this system in your gamemode visit .","page":"Using Viewmodel Hands"},"realm":"Shared","args":{"arg":{"text":"The hands entity to set","name":"hands","type":"Entity"}}}},
{"function":{"name":"SetFrags","parent":"Player","type":"classfunc","description":"Sets a player's frags (kills)","realm":"Server","args":{"arg":{"text":"Number of frags (positive or negative)","name":"fragcount","type":"number"}}},"example":{"description":"Sets the frags of player 1 to 9001","code":"player.GetByID( 1 ):SetFrags( 9001 )"}},
{"function":{"name":"SetFOV","parent":"Player","type":"classfunc","description":"Set a player's FOV (Field Of View) over a certain amount of time.","realm":"Shared","args":{"arg":[{"text":"the angle of perception (FOV). Set to 0 to return to default user FOV. ( Which is ranging from 75 to 90, depending on user settings )","name":"fov","type":"number"},{"text":"the time it takes to transition to the FOV expressed in a floating point.","name":"time","type":"number","default":"0"},{"text":"The requester or \"owner\" of the zoom event.","name":"requester","type":"Entity","default":"self","added":"2020.03.17"}]}}},
{"function":{"name":"SetEyeAngles","parent":"Player","type":"classfunc","description":"Sets the angle of the player's view (may rotate body too if angular difference is large)","realm":"Shared","args":{"arg":{"text":"Angle to set the view to","name":"angle","type":"Angle"}}},"example":{"description":"Points a player at Vector(0,0,0)","code":"local ply = LocalPlayer() // Or any player\nlocal vec1 = Vector(0,0,0) -- Where we're looking at\nlocal vec2 = ply:GetShootPos() -- The player's eye pos\nply:SetEyeAngles((vec1 - vec2):Angle()) -- Sets to the angle between the two vectors","output":"Local player will look at 0,0,0"}},
{"function":{"name":"SetDuckSpeed","parent":"Player","type":"classfunc","description":{"text":"Sets how quickly a player ducks.","bug":{"text":"This will not work for values >= 1.","issue":"2722"}},"realm":"Shared","args":{"arg":{"text":"How quickly the player will duck.","name":"duckSpeed","type":"number"}}}},
{"function":{"name":"SetDSP","parent":"Player","type":"classfunc","description":"Applies the specified sound filter to the player.","realm":"Shared","args":{"arg":[{"text":"The index of the sound filter to apply.\nPick from the [list of DSP's](https://developer.valvesoftware.com/wiki/Dsp_presets).","name":"soundFilter","type":"number"},{"text":"If set to true the sound filter will be removed faster.","name":"fastReset","type":"boolean"}]}}},
{"function":{"name":"SetDrivingEntity","parent":"Player","type":"classfunc","description":{"text":"Sets the driving entity and driving mode.\n\nUse  instead, see .","internal":"","page":["drive.PlayerStartDriving","Entity Driving"]},"realm":"Shared","args":{"arg":[{"text":"The entity the player should drive.","name":"drivingEntity","type":"Entity","default":"NULL"},{"text":"The driving mode index.","name":"drivingMode","type":"number"}]}}},
{"function":{"name":"SetCurrentViewOffset","parent":"Player","type":"classfunc","description":{"text":"Sets the **actual** view offset which equals the difference between the players actual position and their view when standing.\n\nDo not confuse with  and","page":["Player:SetViewOffset","Player:SetViewOffsetDucked"]},"realm":"Shared","args":{"arg":{"text":"The new view offset.","name":"viewOffset","type":"Vector"}}}},
{"function":{"name":"SetDeaths","parent":"Player","type":"classfunc","description":"Sets a player's death count","realm":"Server","args":{"arg":{"text":"Number of deaths (positive or negative)","name":"deathcount","type":"number"}}},"example":{"description":"Sets the deaths of player 1 to 5","code":"player.GetByID( 1 ):SetDeaths( 5 )","output":"None"}},
{"function":{"name":"SetClassID","parent":"Player","type":"classfunc","description":"Sets the player's class id.","realm":"Shared","args":{"arg":{"text":"The class id the player is being set with.","name":"classID","type":"number"}}}},
{"function":{"name":"SetCrouchedWalkSpeed","parent":"Player","type":"classfunc","description":{"text":"Sets the crouched walk speed multiplier.\n\nDoesn't work for values above 1.\n\nSee also  and .","page":["Player:SetWalkSpeed","Player:GetCrouchedWalkSpeed"]},"realm":"Shared","args":{"arg":{"text":"The walk speed multiplier that crouch speed should be.","name":"speed","type":"number"}}},"example":{"description":"Set the crouch speed to be as fast as the players walk speed.","code":"Entity(1):SetCrouchedWalkSpeed( 1 )","output":"The player will crouch-walk as fast as normal walking."}},
{"function":{"name":"SetCanZoom","parent":"Player","type":"classfunc","description":"Sets whether the player can use the HL2 suit zoom (\"+zoom\" bind) or not.","realm":"Server","args":{"arg":{"text":"Whether to make the player able or unable to zoom.","name":"canZoom","type":"boolean"}}}},
{"function":{"name":"SetCanWalk","parent":"Player","type":"classfunc","description":"Set if the player should be allowed to walk using the (default) alt key.","realm":"Shared","args":{"arg":{"text":"True allows the player to walk.","name":"abletowalk","type":"boolean"}}}},
{"function":{"name":"SetAvoidPlayers","parent":"Player","type":"classfunc","description":"Pushes the player away from another player whenever it's inside the other players bounding box.","realm":"Shared","args":{"arg":{"text":"Avoid or not avoid.","name":"avoidPlayers","type":"boolean"}}}},
{"function":{"name":"SetArmor","parent":"Player","type":"classfunc","description":"Sets the player armor to the argument.","realm":"Server","args":{"arg":{"text":"The amount that the player armor is going to be set to.","name":"Amount","type":"number"}}},"example":{"description":"Sets the player armor to 100 when he types \"GiveArmor\" at the console.","code":"concommand.Add( \"GiveArmor\", function( ply )\n ply:SetArmor( 100 )\nend )","output":"Sets the player armor to 100"}},
{"function":{"name":"SetAmmo","parent":"Player","type":"classfunc","description":"Sets the amount of the specified ammo for the player.","realm":"Shared","args":{"arg":[{"text":"The amount of ammunition to set.","name":"ammoCount","type":"number"},{"text":"The ammunition type. Can be either  ammo ID or  ammo name.","name":"ammoType","type":"any","page":["number","string"]}]}}},
{"function":{"name":"SetAllowWeaponsInVehicle","parent":"Player","type":"classfunc","description":{"text":"Allows player to use his weapons in a vehicle. You need to call this before entering a vehicle.","bug":[{"text":"Shooting in a vehicle fires two bullets.","issue":"1277"},{"text":"Weapon viewpunch does not decay while in a vehicle, leading to incorrect aim angles.","issue":"3261"}]},"realm":"Server","args":{"arg":{"text":"Show we allow player to use his weapons in a vehicle or not.","name":"allow","type":"boolean"}}}},
{"function":{"name":"SetAllowFullRotation","parent":"Player","type":"classfunc","description":"Set if the players' model is allowed to rotate around the pitch and roll axis.","realm":"Shared","args":{"arg":{"text":"Allowed to rotate","name":"Allowed","type":"boolean"}}}},
{"function":{"name":"SetActiveWeapon","parent":"Player","type":"classfunc","description":{"text":"Sets the player's active weapon. You should use  or , instead in most cases.","page":["CUserCmd:SelectWeapon","Player:SelectWeapon"],"note":[{"text":"This function will not trigger the weapon switch event or associated equip animations. You can achieve this using  with .","page":["Player:SelectWeapon","Entity:GetClass"]},{"text":"This will not call .","page":"GM:PlayerSwitchWeapon"}]},"realm":"Server","args":{"arg":{"text":"The weapon to equip.","name":"weapon","type":"Weapon"}}}},
{"function":{"name":"SendLua","parent":"Player","type":"classfunc","description":{"text":"Executes a simple Lua string on the player.","note":[{"text":"If you need to use this function more than once consider using  library. Send net message and make the entire code you want to execute in  on client.","page":["net","net.Receive"]},{"text":"The string is limited to 254 bytes. Consider using the  for more advanced server-client interaction.","page":",net libraryNet_Library_Usage"}]},"realm":"Server","args":{"arg":{"text":"The script to execute.","name":"script","type":"string"}}},"example":{"description":"Sends \"Hello World\" to the client's console.","code":"local pl = Entity( 1 )\npl:SendLua( \"print( 'Hello World' )\" )"}},
{"function":{"name":"SendHint","parent":"Player","type":"classfunc","description":{"text":"Sends a hint to a player.","note":{"text":"This function is only available in Sandbox and its derivatives. Since this adds `#Hint_` to the beginning of each message, you should only use it with default hint messages, or those cached with . For hints with custom text, look at","page":["language.Add","notification.AddLegacy"]}},"realm":"Server","args":{"arg":[{"text":"Name/class/index of the hint. The text of the hint will contain this value. ( \"#Hint_\" .. name ) An example is `PhysgunFreeze`.","name":"name","type":"string"},{"text":"Delay in seconds before showing the hint","name":"delay","type":"number"}]}}},
{"function":{"name":"SelectWeapon","parent":"Player","type":"classfunc","description":{"text":"Sets the active weapon of the player by its class name.","warning":{"text":"This will switch the weapon out of prediction, causing delay on the client and  to be called out of prediction. Try using  or , instead.","page":["WEAPON:Deploy","CUserCmd:SelectWeapon","input.SelectWeapon"]},"note":{"text":"This will trigger the weapon switch event and associated animations. To switch weapons silently, use .","page":"Player:SetActiveWeapon"}},"realm":"Server","args":{"arg":{"text":"The class name of the weapon to switch to.\n\nIf the player doesn't have the specified weapon, nothing will happen. You can use  to give the weapon first.","name":"className","type":"string","page":"Player:Give"}}},"example":[{"description":"Force the player to switch to toolgun","code":"Entity(1):SelectWeapon(\"gmod_tool\")"},{"description":"Selects a random weapon from the player's inventory and switches to it.","code":"local weapons = Entity( 1 ):GetWeapons()\nlocal weapon = weapons[ math.random( #weapons ) ]\n\nEntity( 1 ):SelectWeapon( weapon:GetClass() )"}]},
{"function":{"name":"ResetHull","parent":"Player","type":"classfunc","description":"Resets both normal and duck hulls to their default values.","realm":"Shared"}},
{"function":{"name":"ResetHull","parent":"Player","type":"classfunc","description":"Resets both normal and duck hulls to their default values.","realm":"Shared"}},
{"function":{"name":"ScreenFade","parent":"Player","type":"classfunc","description":"Fades the screen","realm":"Shared","args":{"arg":[{"text":"Fade flags defined with .","name":"flags","type":"number","page":"Enums/SCREENFADE"},{"text":"The color of the screenfade","name":"clr","type":"number","default":"color_white"},{"text":"Fade(in/out) effect transition time ( From no fade to full fade and vice versa )","name":"fadeTime","type":"number"},{"text":"Fade effect hold time","name":"fadeHold","type":"number"}]}},"example":{"description":"Flashes the screen red to nothing over 0.3 seconds when a player gets hurt.","code":"hook.Add( \"PlayerHurt\", \"hurt_effect_fade\", function( ply )\n\tply:ScreenFade( SCREENFADE.IN, Color( 255, 0, 0, 128 ), 0.3, 0 )\nend )"}},
{"function":{"name":"RemoveSuit","parent":"Player","type":"classfunc","description":"Strips the player's suit item.","realm":"Server"}},
{"function":{"name":"RemoveAllItems","parent":"Player","type":"classfunc","description":"Removes all weapons and ammo from the player.","realm":"Server"}},
{"function":{"name":"RemoveAmmo","parent":"Player","type":"classfunc","description":"Removes the amount of the specified ammo from the player.","realm":"Shared","args":{"arg":[{"text":"The amount of ammunition to remove.","name":"ammoCount","type":"number"},{"text":"The name of the ammunition to remove from. This can also be a  ammoID.","name":"ammoName","type":"string","page":"number"}]}}},
{"function":{"name":"RemovePData","parent":"Player","type":"classfunc","description":{"text":"Removes a **P**layer **Data** key-value pair from the SQL database. (sv.db when called on server,  cl.db when called on client)\n\nInternally uses the .","page":"sql","warning":{"text":"This function internally uses , which can cause collisions (two or more players sharing the same PData entry). It's recommended that you don't use it. See the related wiki page for more information.","page":"Player:UniqueID"}},"realm":"Shared","file":{"text":"lua/includes/extensions/player.lua","line":"184-L193"},"args":{"arg":{"text":"Key to remove","name":"key","type":"string"}},"rets":{"ret":{"text":"true is succeeded, false otherwise","name":"","type":"boolean"}}},"example":{"description":"Deletes the key \"money\" from player 1","code":"player.GetByID( 1 ):RemovePData( \"money\" )"}},
{"function":{"name":"RemoveAllAmmo","parent":"Player","type":"classfunc","description":"Removes all ammo from a certain player","realm":"Server"},"example":{"description":"A console command that removes ammo on the player that used it.","code":"concommand.Add( \"removeammo\", function( ply )\n\tply:RemoveAllAmmo()\nend )"}},
{"function":{"name":"PlayStepSound","parent":"Player","type":"classfunc","description":"Plays the correct step sound according to what the player is staying on.","realm":"Server","args":{"arg":{"text":"Volume for the sound, in range from 0 to 1","name":"volume","type":"number"}}}},
{"function":{"name":"PrintMessage","parent":"Player","type":"classfunc","description":{"text":"Displays a message either in their chat, console, or center of the screen. See also .","page":"Global.PrintMessage","note":[{"text":"When called serverside, this uses the archaic user message system (the ) and hence is limited to ≈250 characters.","page":"umsg"},"`HUD_PRINTCENTER` will not work when this is called clientside."]},"realm":"Shared","args":{"arg":[{"text":"Which type of message should be sent to the player ()","name":"type","type":"number","page":"Enums/HUD"},{"text":"Message to be sent to the player","name":"message","type":"string"}]}},"example":{"description":"Prints into the first players chat: \"I'm new here.\"","code":"Entity(1):PrintMessage(HUD_PRINTTALK, \"I'm new here.\")","output":"I'm new here."}},
{"function":{"name":"Ping","parent":"Player","type":"classfunc","description":"Returns the player's ping to server.","realm":"Shared","rets":{"ret":{"text":"The player's ping.","name":"","type":"number"}}}},
{"function":{"name":"PickupObject","parent":"Player","type":"classfunc","description":{"text":"This makes the player hold ( same as pressing  on a small prop ) the provided entity.","key":"E","note":["Don't get this confused with picking up items like ammo or health kits","This picks up the passed entity regardless of its mass or distance from the player"]},"realm":"Server","args":{"arg":{"text":"Entity to pick up.","name":"entity","type":"Entity"}}},"example":{"description":"An extra function to make sure the object isn't held before being picked up.","code":"function PlayerPickupObject(ply, obj)\n\tif ( obj:IsPlayerHolding() ) then return end\n\tply:PickupObject( obj )\nend"}},
{"function":{"name":"PhysgunUnfreeze","parent":"Player","type":"classfunc","description":"Unfreezes the props player is looking at. This is essentially the same as pressing reload with the physics gun, including double press for unfreeze all.","realm":"Shared","rets":{"ret":{"text":"Number of props unfrozen.","name":"","type":"number"}}}},
{"function":{"name":"PacketLoss","parent":"Player","type":"classfunc","description":"Returns the packet loss of the client. It is not networked so it only returns 0 when run clientside.","realm":"Shared","rets":{"ret":{"text":"Packets lost","name":"","type":"number"}}}},
{"function":{"name":"Nick","parent":"Player","type":"classfunc","description":"Returns the player's nickname.","realm":"Shared","rets":{"ret":{"text":"Player's Steam name","name":"","type":"string","bug":{"text":"This is limited to 31 characters even though Steam names can have 32.","issue":"3178"}}}},"example":{"description":"Prints the player's nickname","code":"print( Entity(1):Nick() )","output":"Ninja101"}},
{"function":{"name":"Name","parent":"Player","type":"classfunc","description":{"text":"Returns the players name. Identical to  and .","page":["Player:Nick","Player:GetName"]},"realm":"Shared","rets":{"ret":{"text":"Player's Steam name.","name":"","type":"string","bug":{"text":"This is limited to 31 characters even though Steam names can have 32.","issue":"3178"}}}},"example":{"description":"Prints the players name in console.","code":"print(Player(1):Name())","output":"YourNameHere"}},
{"function":{"name":"MotionSensorPos","parent":"Player","type":"classfunc","description":"Returns the position of a Kinect bone.","realm":"Shared","args":{"arg":{"text":"Bone to get the position of. Must be from 0 to 19.","name":"bone","type":"number"}},"rets":{"ret":{"text":"Position of the bone.","name":"","type":"Vector"}}}},
{"function":{"name":"Lock","parent":"Player","type":"classfunc","description":{"text":"Stops a player from using any inputs, such as moving, turning, or attacking. Key binds are still called. Similar to  but the player takes no damage.\n\nAdds the  and  flags to the player.","page":["Player:Freeze",",FL_FROZENEnums/FL",",FL_GODMODEEnums/FL"],"bug":"Frozen bots will still be able to look around."},"realm":"Server"}},
{"function":{"name":"LimitHit","parent":"Player","type":"classfunc","description":{"text":"Shows \"limit hit\" notification in sandbox.","note":"This function is only available in Sandbox and its derivatives"},"realm":"Shared","args":{"arg":{"text":"Type of hit limit","name":"type","type":"string"}}},"example":{"description":"Sends a fake \"limit hit\" notification","code":"for id, ply in pairs( player.GetAll() ) do\n       ply:LimitHit( \"test\" )\nend","output":"A notification pops up saying \"SBoxLimit_test\""}},
{"function":{"name":"LastHitGroup","parent":"Player","type":"classfunc","description":"Returns the hitgroup where the player was last hit.","realm":"Server","rets":{"ret":{"text":"Hitgroup, see","name":"","type":"number","page":"Enums/HITGROUP"}}}},
{"function":{"name":"KillSilent","parent":"Player","type":"classfunc","description":{"text":"Kills a player without notifying the rest of the server.\n\nThis will call  instead of .","page":["GM:PlayerSilentDeath","GM:PlayerDeath"]},"realm":"Server"},"example":{"description":"Silently kills the player.","code":"Player(2):KillSilent()"}},
{"function":{"name":"LagCompensation","parent":"Player","type":"classfunc","description":{"text":"This allows the server to mitigate the lag of the player by moving back all the entities that can be lag compensated to the time the player attacked with his weapon.\n\nThis technique is most commonly used on things that hit other entities instantaneously, such as traces.\n\n\n\nLag compensation only works for players and entities that have been enabled with \n\nDespite being defined shared, it can only be used server side in a .","note":{"text":"calls this function internally.","page":"Entity:FireBullets"},"page":"Entity:SetLagCompensated","warning":"This function NEEDS to be disabled after you're done with it or it will break the movement of the entities affected!","bug":{"text":"Lag compensation does not support pose parameters.","issue":"3683"}},"realm":"Shared","args":{"arg":{"text":"The state of the lag compensation, true to enable and false to disable.","name":"lagCompensation","type":"boolean"}}},"example":{"description":"Do a crowbar-like melee trace, enabling lag compensation before doing so.","code":"function SWEP:PrimaryAttack()\n\n\tlocal tracedata = {}\n\ttracedata.start = self.Owner:GetShootPos()\n\ttracedata.endpos = self.Owner:GetShootPos() + self.Owner:GetAimVector() * 75\n\ttracedata.filter = self.Owner\n\ttracedata.mins =  Vector( -8 , -8 , -8 )\n\ttracedata.maxs =  Vector( 8 , 8 , 8 )\n\t\n\t-- It is recommended to use an IsPlayer check in case the weapon is being used by an NPC.\n\tif ( self.Owner:IsPlayer() ) then\n\t\tself.Owner:LagCompensation( true )\n\tend\n\t\n\tlocal tr = util.TraceHull( tracedata )\n\t\n\tif ( self.Owner:IsPlayer() ) then\n\t\tself.Owner:LagCompensation( false )\n\tend\n\t\n\tif tr.Hit then\n\t\tprint( tr.Entity )\t--your code here\n\tend\n\t\n\tself:SetNextPrimaryFire( CurTime() + 0.5 )\nend"}},
{"function":{"name":"Kill","parent":"Player","type":"classfunc","description":{"text":"Kills a player and calls .","page":"GM:PlayerDeath"},"realm":"Server"},"example":{"description":"When the user types \"/respawn\" the user will be killed and then respawned.","code":"hook.Add( \"PlayerSay\", \"RespawnCommand\", function( ply, text, public )\n\tif ( string.lower( text ) == \"/respawn\" ) then\n\t\tply:Kill()\n\t\tply:Spawn()\n\t\treturn \"\"\n\tend\nend )"}},
{"function":{"name":"Kick","parent":"Player","type":"classfunc","description":{"text":"Kicks the player from the server.","note":{"text":"This can not be run before the player has fully joined in. Use  for that.","page":"game.KickID"}},"realm":"Server","args":{"arg":{"text":"Reason to show for disconnection.","name":"reason","type":"string","default":"No reason given","warning":"This will be shortened to ~512 chars, though this includes the command itself and the player index so will realistically be more around ~498. It is recommended to avoid going near the limit to avoid truncation."}}},"example":{"description":"Kick a player with reason \"Goodbye\"","code":"ply:Kick( \"Goodbye\" )"}},
{"function":{"name":"KeyPressed","parent":"Player","type":"classfunc","description":"Gets whether a key was just pressed this tick","realm":"Shared","args":{"arg":{"text":"Corresponds to an","name":"key","type":"number","page":"Enums/IN"}},"rets":{"ret":{"text":"Was pressed or not","name":"","type":"boolean"}}},"example":{"description":"Prints whenever the first player first starts pressing W","code":"hook.Add( \"Tick\", \"CheckPlayer1Forward\", function()\n   if( Entity( 1 ):KeyPressed( IN_FORWARD )) then\n        print( \"Ent1 just started moving forward!\" )\n    end\nend )"}},
{"function":{"name":"KeyDownLast","parent":"Player","type":"classfunc","description":"Gets whether a key was down one tick ago.","realm":"Shared","args":{"arg":{"text":"The key, see","name":"key","type":"number","page":"Enums/IN"}},"rets":{"ret":{"text":"Is key down","name":"","type":"boolean"}}},"example":{"description":"Prints whenever the first player stopped pressing W last tick","code":"hook.Add( \"Tick\", \"CheckPlayer1Forward\", function()\n   if ( !Entity( 1 ):KeyDown( IN_FORWARD ) ) and Entity( 1 ):KeyDownLast( IN_FORWARD ) then print( \"Ent1 is no longer holding W!\") end\nend )"}},
{"function":{"name":"KeyReleased","parent":"Player","type":"classfunc","description":"Gets whether a key was just released this tick","realm":"Shared","args":{"arg":{"text":"The key, see","name":"key","type":"number","page":"Enums/IN"}},"rets":{"ret":{"text":"Was released or not","name":"","type":"boolean"}}},"example":{"description":"Prints whenever the first player first stops pressing W","code":"hook.Add( \"Tick\", \"CheckPlayer1Forward\", function()\n   if Entity( 1 ):KeyReleased( IN_FORWARD ) then print(\"Ent1 just stopped moving forward!\") end\nend)"}},
{"function":{"name":"KeyDown","parent":"Player","type":"classfunc","description":"Gets whether a key is down. This is not networked to other players, meaning only the local client can see the keys they are pressing.","realm":"Shared","args":{"arg":{"text":"The key, see","name":"key","type":"number","page":"Enums/IN"}},"rets":{"ret":{"text":"isDown","name":"","type":"boolean"}}},"example":{"description":"Prints whenever the first player is holding forward key","code":"hook.Add(\"Tick\", \"KeyDown_Test\", function()\n    if (Entity(1):KeyDown(IN_FORWARD)) then\n        print(\"Player is pressing forward!\")\n    end\nend)","outputfixedwidth":"Fixed width","output":"Player is pressing forward!\nPlayer is pressing forward!\nPlayer is pressing forward!\nPlayer is pressing forward!"}},
{"function":{"name":"IsWorldClicking","parent":"Player","type":"classfunc","description":{"text":"Returns if the player is in the context menu.","note":"Although this is shared, it will only work properly on the CLIENT for the local player. Using this serverside or on other players will return false."},"realm":"Shared","rets":{"ret":{"text":"Is the player world clicking or not.","name":"","type":"boolean"}}}},
{"function":{"name":"IsTyping","parent":"Player","type":"classfunc","description":"Returns whether the player is typing in their chat.\n\nThis may not work properly if the server uses a custom chatbox.","realm":"Shared","rets":{"ret":{"text":"Whether the player is typing in their chat or not.","name":"","type":"boolean"}}}},
{"function":{"name":"IsVoiceAudible","parent":"Player","type":"classfunc","description":"Returns if the player can be heard by the local player.","realm":"Client","rets":{"ret":{"text":"isAudible","name":"","type":"boolean"}}}},
{"function":{"name":"IsUserGroup","parent":"Player","type":"classfunc","description":"Returns true/false if the player is in specified group or not.","realm":"Shared","file":{"text":"lua/includes/extensions/player_auth.lua","line":"24-L32"},"args":{"arg":{"text":"Group to check the player for.","name":"groupname","type":"string"}},"rets":{"ret":{"text":"isInUserGroup","name":"","type":"boolean"}}},"example":{"description":"Prints in the players console \"yes, I'm awesome!\" if he's in the superadmin group.","code":"if ( Player(2):IsUserGroup(\"superadmin\") ) then\n    print(\"Yes, I'm awesome!\")\nend","output":"\"Yes, I'm awesome!\" in console."}},
{"function":{"name":"IsTimingOut","parent":"Player","type":"classfunc","description":"Returns true if the player is timing out (i.e. is losing connection), false otherwise.","realm":"Server","rets":{"ret":{"text":"isTimingOut","name":"","type":"boolean"}}}},
{"function":{"name":"IsSuperAdmin","parent":"Player","type":"classfunc","description":"Returns whether the player is a superadmin.","realm":"Shared","file":{"text":"lua/includes/extensions/player_auth.lua","line":"16-L22"},"rets":{"ret":{"text":"True if the player is a superadmin.","name":"","type":"boolean"}}}},
{"function":{"name":"IsSuitEquipped","parent":"Player","type":"classfunc","description":{"text":"Returns whenever the player is equipped with the suit item.","bug":{"text":"This will only work for the local player when used clientside.","issue":"3449"}},"realm":"Shared","rets":{"ret":{"text":"Is the suit equipped or not.","name":"","type":"boolean"}}}},
{"function":{"name":"IsSprinting","parent":"Player","type":"classfunc","description":"Returns whether the player is currently sprinting or not.","realm":"Shared","rets":{"ret":{"text":"Is the player sprinting or not","name":"","type":"boolean"}}}},
{"function":{"name":"IsSpeaking","parent":"Player","type":"classfunc","description":"Returns whenever the player is heard by the local player.","realm":"Client","rets":{"ret":{"text":"isSpeaking","name":"","type":"boolean"}}}},
{"function":{"name":"IsPlayingTaunt","parent":"Player","type":"classfunc","description":"Returns true if the player is playing a taunt.","realm":"Shared","rets":{"ret":{"text":"Whether the player is playing a taunt.","name":"","type":"boolean"}}}},
{"function":{"name":"IsListenServerHost","parent":"Player","type":"classfunc","description":"Returns if a player is the host of the current session.","realm":"Server","rets":{"ret":{"text":"True if the player is the listen server host, false otherwise.\n\nThis will always be true in single player, and false on a dedicated server.","name":"","type":"boolean"}}}},
{"function":{"name":"IsMuted","parent":"Player","type":"classfunc","description":"Returns whether or not the player is muted locally.","realm":"Client","rets":{"ret":{"text":"whether or not the player is muted locally.","name":"","type":"boolean"}}}},
{"function":{"name":"IsFullyAuthenticated","parent":"Player","type":"classfunc","description":"Returns whether the player identity was confirmed by the steam network.","realm":"Server","rets":{"ret":{"text":"Whether the player has been fully authenticated or not.\n\nThis will always be true for singleplayer and the listen server host.\nThis will always be false for bots.","name":"","type":"boolean"}}}},
{"function":{"name":"IsFrozen","parent":"Player","type":"classfunc","description":{"text":"Returns whether the players movement is currently frozen, contolled by .","page":"Player:Freeze"},"realm":"Shared","file":{"text":"lua/includes/extensions/player.lua","line":"273-L281"},"rets":{"ret":{"text":"Whether the players movement is currently frozen or not.","name":"","type":"boolean"}}}},
{"function":{"name":"IsDrivingEntity","parent":"Player","type":"classfunc","description":"Used to find out if a player is currently 'driving' an entity (by which we mean 'right click > drive' ).","realm":"Shared","rets":{"ret":{"text":"A value representing whether or not the player is 'driving' an entity.","name":"","type":"boolean"}}},"example":{"description":"Kills every player currently 'driving' an entity.","code":"local plys = player.GetAll()\nfor _, ply in pairs( plys ) do\n    \n    if ( ply:IsDrivingEntity() ) then\n        ply:Kill()\n    end\n    \nend","output":"Every player 'driving' an entity will die a painful death."}},
{"function":{"name":"IsConnected","parent":"Player","type":"classfunc","description":"Returns true from the point when the player is sending client info but not fully in the game until they disconnect.","realm":"Server","rets":{"ret":{"text":"isConnected","name":"","type":"boolean"}}}},
{"function":{"name":"IsBot","parent":"Player","type":"classfunc","description":"Returns if the player is an bot or not","realm":"Shared","rets":{"ret":{"text":"True if the player is a bot.","name":"","type":"boolean"}}}},
{"function":{"name":"IPAddress","parent":"Player","type":"classfunc","description":"Returns the player's IP address and connection port in ip:port form","realm":"Server","rets":{"ret":{"text":"The player's IP address and connection port","name":"","type":"string"}}},"example":{"description":"Prints the player's IP and port","code":"print( Entity( 1 ):IPAddress() )","output":"192.168.1.101:27005"}},
{"function":{"name":"IPAddress","parent":"Player","type":"classfunc","description":"Returns the player's IP address and connection port in ip:port form","realm":"Server","rets":{"ret":{"text":"The player's IP address and connection port","name":"","type":"string"}}},"example":{"description":"Prints the player's IP and port","code":"print( Entity( 1 ):IPAddress() )","output":"192.168.1.101:27005"}},
{"function":{"name":"IsAdmin","parent":"Player","type":"classfunc","description":"Returns whether the player is an admin or not","realm":"Shared","file":{"text":"lua/includes/extensions/player_auth.lua","line":"5-L14"},"rets":{"ret":{"text":"True if the player is an admin","name":"","type":"boolean"}}},"example":{"description":"Every time a player spawns, print in the console whether they are an admin.<!-- Untested yet, will test in a few minutes -->","code":"hook.Add(\"PlayerSpawn\", \"PrintIfAdmin\", function( ply )\n    if ( ply:IsAdmin() ) then \n       print( \"It's true, \" .. ply:Nick() .. \" is an admin\")\n    else\n       print( \"It's false, \" .. ply:Nick() .. \" is not an admin\")\n    end\nend )","outputfixedwidth":"Fixed width","output":"It's true, Alice is an admin.\nIt's false, Bob is not an admin."}},
{"function":{"name":"HasWeapon","parent":"Player","type":"classfunc","description":"Returns if the player has the specified weapon","realm":"Shared","args":{"arg":{"text":"Class name of the weapon","name":"className","type":"string"}},"rets":{"ret":{"text":"True if the player has the weapon","name":"","type":"boolean"}}},"example":{"description":"prints if the player has the physgun","code":"print(player.GetByID(1):HasWeapon(\"weapon_physgun\"))","output":"\"true\" in console, if player 1 has Physics Gun."}},
{"function":{"name":"GodEnable","parent":"Player","type":"classfunc","description":"Enables god mode on the player.","realm":"Server","file":{"text":"lua/includes/extensions/player.lua","line":"251-L259"}},"example":{"description":"Enable god mode on all players","code":"for k, v in pairs(player.GetAll()) do\n    v:GodEnable()\nend"}},
{"function":{"name":"GodDisable","parent":"Player","type":"classfunc","description":"Disables god mode on the player.","realm":"Server","file":{"text":"lua/includes/extensions/player.lua","line":"261-L269"}},"example":{"description":"Disables god mode on all players.","code":"for _, v in pairs(player.GetAll()) do\n    v:GodDisable()\nend"}},
{"function":{"name":"HasGodMode","parent":"Player","type":"classfunc","description":{"text":"Returns whether the player has god mode or not, contolled by  and .","page":["Player:GodEnable","Player:GodDisable"],"bug":{"text":"This is not synced between the client and server. This will cause the client to always return false even in godmode.","issue":"2038"}},"realm":"Shared","file":{"text":"lua/includes/extensions/player.lua","line":"283-L291"},"rets":{"ret":{"text":"Whether the player has god mode or not.","name":"","type":"boolean"}}}},
{"function":{"name":"GiveAmmo","parent":"Player","type":"classfunc","description":"Gives ammo to a player","realm":"Server","args":{"arg":[{"text":"Amount of ammo","name":"amount","type":"number"},{"text":"Type of ammo.\n\nThis can also be a number for ammo ID, useful for custom ammo types.\n\nYou can find a list of default ammo types .","name":"type","type":"string","page":",hereDefault_Ammo_Types"},{"text":"Hide display popup when giving the ammo","name":"hidePopup","type":"boolean","default":"false"}]},"rets":{"ret":{"text":"Ammo given.","name":"","type":"number"}}},"example":{"description":"Give the player 200 rounds for the pistol, hiding the popup.","code":"player.GetByID(1):GiveAmmo( 200, \"Pistol\", true )"}},
{"function":{"name":"GetWeapons","parent":"Player","type":"classfunc","description":"Returns a table of the player's weapons.","realm":"Shared","rets":{"ret":{"text":"All the weapons the player currently has.","name":"","type":"table"}}},"example":{"description":"Prints how many weapons the player has.","code":"print( #Entity(1):GetWeapons() )","output":"The number of weapons the player has (e.g. 5)."}},
{"function":{"name":"Give","parent":"Player","type":"classfunc","description":{"text":"Gives the player a weapon.","note":"While this function is meant for weapons/pickupables only, it is **not** restricted to weapons. Any entity can be spawned using this function, including NPCs and SENTs."},"realm":"Server","args":{"arg":[{"text":"Class name of weapon to give the player","name":"weaponClassName","type":"string"},{"text":"Set to true to not give any ammo on weapon spawn. (Reserve ammo set by DefaultClip)","name":"bNoAmmo","type":"boolean","default":"false"}]},"rets":{"ret":{"text":"The weapon given to the player, if one was given. It will return NULL if the player already has the weapon, or the weapon entity (entity with given classname) doesn't exist.","name":"","type":"Weapon"}}},"example":[{"description":"Gives the player a toolgun","code":"Entity( 1 ):Give( \"gmod_tool\" )"},{"description":"Removes all weapons and ammo from a player and gives a weapon_base SWEP with no ammo in it.","code":"Entity( 1 ):StripWeapons()\nEntity( 1 ):StripAmmo()\n\nlocal w = Entity( 1 ):Give( \"weapon_base\", true )"}]},
{"function":{"name":"GetWeaponColor","parent":"Player","type":"classfunc","description":"Returns a player's weapon color. The part of the model that is colored is determined by the model itself, and is different for each model. The format is Vector(r,g,b), and each color should be between 0 and 1.","realm":"Shared","rets":{"ret":{"text":"color","name":"","type":"Vector"}}},"example":{"description":"Gets player 1's weapon color, and prints it to console","code":"print( player.GetByID( 1 ):GetWeaponColor() )","output":"Vector( 1, 1, 1 )"}},
{"function":{"name":"GetWeapon","parent":"Player","type":"classfunc","description":"Returns the weapon for the specified class","realm":"Shared","args":{"arg":{"text":"Class name of weapon","name":"className","type":"string"}},"rets":{"ret":{"text":"The weapon for the specified class.","name":"","type":"Weapon"}}},"example":{"description":"Prints the weapon if the player has the toolgun","code":"print( Entity(1):GetWeapon( \"gmod_tool\" ) )","output":"Something like \"Weapon [77]\" in console."}},
{"function":{"name":"GetViewPunchAngles","parent":"Player","type":"classfunc","description":"Returns players screen punch effect angle.","realm":"Shared","rets":{"ret":{"text":"The punch angle","name":"","type":"Angle"}}}},
{"function":{"name":"GetWalkSpeed","parent":"Player","type":"classfunc","description":{"text":"Returns the player's normal walking speed. Not sprinting, not slow walking. (+walk)\n\nSee also ,  and .","page":["Player:SetWalkSpeed","Player:GetMaxSpeed","Player:GetRunSpeed"]},"realm":"Shared","rets":{"ret":{"text":"The normal walking speed.","name":"","type":"number"}}},"example":{"description":"Gets player 1's walk speed, and prints it to console","code":"print( Entity( 1 ):GetWalkSpeed() )","output":"200 in console by default"}},
{"function":{"name":"GetViewOffsetDucked","parent":"Player","type":"classfunc","description":{"text":"Returns the view offset of the player which equals the difference between the players actual position and their view when ducked.\n\nSee also .","page":"Player:GetViewOffset"},"realm":"Shared","rets":{"ret":{"text":"New crouching view offset, must be local vector to players","name":"","type":"Vector","page":"Entity:GetPos"}}}},
{"function":{"name":"GetViewModel","parent":"Player","type":"classfunc","description":{"text":"Returns the player's view model entity by the index.\nEach player has 3 view models by default, but only the first one is used.\n\nTo use the other viewmodels in your SWEP, see .","page":"Entity:SetWeaponModel","note":{"text":"In the Client , other players' viewmodels are not available unless they are being spectated.","page":",realmStates"}},"realm":"Shared","args":{"arg":{"text":"optional index of the view model to return, can range from 0 to 2","name":"index","type":"number","default":"0"}},"rets":{"ret":{"text":"The view model entity","name":"","type":"Entity"}}}},
{"function":{"name":"GetViewModel","parent":"Player","type":"classfunc","description":{"text":"Returns the player's view model entity by the index.\nEach player has 3 view models by default, but only the first one is used.\n\nTo use the other viewmodels in your SWEP, see .","page":"Entity:SetWeaponModel","note":{"text":"In the Client , other players' viewmodels are not available unless they are being spectated.","page":",realmStates"}},"realm":"Shared","args":{"arg":{"text":"optional index of the view model to return, can range from 0 to 2","name":"index","type":"number","default":"0"}},"rets":{"ret":{"text":"The view model entity","name":"","type":"Entity"}}}},
{"function":{"name":"GetViewOffset","parent":"Player","type":"classfunc","description":{"text":"Returns the view offset of the player which equals the difference between the players actual position and their view.\n\nSee also .","page":"Player:GetViewOffsetDucked"},"realm":"Shared","rets":{"ret":{"text":"New view offset, must be local vector to players","name":"","type":"Vector","page":"Entity:GetPos"}}}},
{"function":{"name":"GetVehicle","parent":"Player","type":"classfunc","description":"Gets the vehicle the player is driving, returns NULL ENTITY if the player is not driving.","realm":"Shared","rets":{"ret":{"text":"vehicle","name":"","type":"Vehicle"}}}},
{"function":{"name":"GetUnDuckSpeed","parent":"Player","type":"classfunc","description":"Returns a player's unduck speed (in seconds)","realm":"Shared","rets":{"ret":{"text":"unduck speed","name":"","type":"number"}}},"example":{"description":"Gets player 1's unduck speed, and prints it to console","code":"print( player.GetByID( 1 ):GetUnDuckSpeed() )","output":"0.3 in console"}},
{"function":{"name":"GetTool","parent":"Player","type":"classfunc","description":"Returns TOOL table of players current tool, or of the one specified.","realm":"Shared","args":{"arg":{"text":"Classname of the tool to retrieve. ( Filename of the tool in gmod_tool/stools/ )","name":"mode","type":"string","default":"nil"}},"rets":{"ret":{"text":"TOOL table, or nil if the table wasn't found or the player doesn't have a tool gun.","name":"","type":"table"}}}},
{"function":{"name":"GetUserGroup","parent":"Player","type":"classfunc","description":"Returns the player's user group.","realm":"Shared","file":{"text":"lua/includes/extensions/player_auth.lua","line":"34-L40"},"rets":{"ret":{"text":"The user group of the player. This will return \"user\" if player has no user group.","name":"","type":"string"}}}},
{"function":{"name":"GetUserGroup","parent":"Player","type":"classfunc","description":"Returns the player's user group.","realm":"Shared","file":{"text":"lua/includes/extensions/player_auth.lua","line":"34-L40"},"rets":{"ret":{"text":"The user group of the player. This will return \"user\" if player has no user group.","name":"","type":"string"}}}},
{"function":{"name":"GetSuitPower","parent":"Player","type":"classfunc","description":{"text":"Returns the player's HEV suit power.","bug":{"text":"This will only work for the local player when used clientside.","issue":"3449"}},"realm":"Shared","rets":{"ret":{"text":"The current suit power.","name":"","type":"number"}}}},
{"function":{"name":"GetShootPos","parent":"Player","type":"classfunc","description":{"text":"Returns the position of a Player's view","note":{"text":"This is the same as calling  on the player.","page":"Entity:EyePos"}},"realm":"Shared","rets":{"ret":{"text":"aim pos","name":"","type":"Vector"}}},"example":[{"description":"Gets player 1's shoot position, and prints it to console","code":"print( player.GetByID( 1 ):GetShootPos() )","output":"A vector of the player's shooting position in the console."},{"description":"Prints the position of your player's camera, but using 3 different functions.\n\nThis example demonstrates that it doesn't matter whichever of these functions you use, you will get the SAME result.","code":"// run on client\nprint(LocalPlayer():GetEyeTrace().StartPos)\nprint(LocalPlayer():GetShootPos())\nprint(LocalPlayer():EyePos())","outputfixedwidth":"Fixed width","output":"94.856689 -115.472549 -83.981430\n94.856689 -115.472549 -83.981430\n94.856689 -115.472549 -83.981430"}]},
{"function":{"name":"GetStepSize","parent":"Player","type":"classfunc","description":"Returns the maximum height player can step onto.","realm":"Shared","rets":{"ret":{"text":"The maximum height player can get up onto without jumping, in hammer units.","name":"","type":"number"}}}},
{"function":{"name":"GetSlowWalkSpeed","parent":"Player","type":"classfunc","description":{"text":"Returns the player's slow walking speed, which is activated via `+walk` keybind.\n\nSee  for normal walking speed,  for sprinting speed and  for ladder climb speed.","page":["Player:GetWalkSpeed","Player:GetRunSpeed","Player:GetLadderClimbSpeed"]},"added":"2020.03.17","realm":"Shared","rets":{"ret":{"text":"The new slow walking speed.","name":"speed","type":"number"}}}},
{"function":{"name":"GetRunSpeed","parent":"Player","type":"classfunc","description":{"text":"Returns the player's sprint speed.\n\nSee also ,  and .","page":["Player:SetRunSpeed","Player:GetWalkSpeed","Player:GetMaxSpeed"]},"realm":"Shared","rets":{"ret":{"text":"The sprint speed","name":"","type":"number"}}},"example":{"description":"Prints the players run speed in the code.","code":"print( Entity( 1 ):GetRunSpeed() )","output":"500"}},
{"function":{"name":"GetRenderAngles","parent":"Player","type":"classfunc","description":"Returns the render angles for the player.","realm":"Shared","rets":{"ret":{"text":"The render angles of the player. Only **yaw** part of the angle seems to be present.","name":"","type":"Angle"}}}},
{"function":{"name":"GetRagdollEntity","parent":"Player","type":"classfunc","description":{"text":"Returns players death ragdoll. The ragdoll is created by .","page":"Player:CreateRagdoll"},"realm":"Shared","rets":{"ret":{"text":"The ragdoll.\n\nUnlike normal clientside ragdolls (C_ClientRagdoll), this will be a C_HL2MPRagdoll on the client, and hl2mp_ragdoll on the server.","name":"","type":"Entity"}}}},
{"function":{"name":"GetRagdollEntity","parent":"Player","type":"classfunc","description":{"text":"Returns players death ragdoll. The ragdoll is created by .","page":"Player:CreateRagdoll"},"realm":"Shared","rets":{"ret":{"text":"The ragdoll.\n\nUnlike normal clientside ragdolls (C_ClientRagdoll), this will be a C_HL2MPRagdoll on the client, and hl2mp_ragdoll on the server.","name":"","type":"Entity"}}}},
{"function":{"name":"GetPreviousWeapon","parent":"Player","type":"classfunc","description":"Returns the weapon the player previously had equipped.","realm":"Shared","rets":{"ret":{"text":"The previous weapon of the player.","name":"","type":"Entity","warning":{"text":"This is not guaranteed to be a weapon entity so it should be checked with  for safety.","page":"Entity:IsWeapon"}}}}},
{"function":{"name":"GetPressedWidget","parent":"Player","type":"classfunc","description":"Returns the widget entity the player is using.\n\nHaving a pressed widget stops the player from firing his weapon to allow input to be passed onto the widget.","realm":"Shared","rets":{"ret":{"text":"The pressed widget.","name":"","type":"Entity"}}}},
{"function":{"name":"GetPreferredCarryAngles","parent":"Player","type":"classfunc","description":{"text":"Returns the preferred carry angles of an object, if any are set.\n\nCalls  with the target entity and returns the carry angles.","page":"GM:GetPreferredCarryAngles"},"realm":"Server","args":{"arg":{"text":"Entity to retrieve the carry angles of.","name":"carryEnt","type":"Entity"}},"rets":{"ret":{"text":"Carry angles or nil if the entity has no preferred carry angles.","name":"","type":"Angle"}}}},
{"function":{"name":"GetPlayerInfo","parent":"Player","type":"classfunc","description":"Returns a table containing player information.","realm":"Client","rets":{"ret":{"text":"A table containing player information.","name":"","type":"table"}}},"example":{"description":"Example output for a bot and a player.","code":"PrintTable( Entity( 1 ):GetPlayerInfo() ) -- A player\nPrintTable( Entity( 2 ):GetPlayerInfo() ) -- A bot","output":"Player:\n```\nfriendname\t=\t\ncustomfiles:\n\t\t1\t=\t0912fb2c\n\t\t2\t=\t0912fb2c\n\t\t3\t=\t0912fb2c\n\t\t4\t=\t0912fb2c\nfakeplayer\t=\tfalse\nguid\t=\tSTEAM_0:0:18313012\nishltv\t=\tfalse\nfilesdownloaded\t=\t0\nfriendid\t=\t36626024\nname\t=\tRubat\nuserid\t=\t2\n```\n\nBot:\n```\nfriendname\t=\t\ncustomfiles:\n\t\t1\t=\t00000000\n\t\t2\t=\t00000000\n\t\t3\t=\t00000000\n\t\t4\t=\t00000000\nfakeplayer\t=\ttrue\nguid\t=\tBOT\nishltv\t=\tfalse\nfilesdownloaded\t=\t0\nfriendid\t=\t0\nname\t=\tBot01\nuserid\t=\t3\n```"}},
{"function":{"name":"GetPlayerColor","parent":"Player","type":"classfunc","description":"Returns a player model's color. The part of the model that is colored is determined by the model itself, and is different for each model. The format is Vector(r,g,b), and each color should be between 0 and 1.","realm":"Shared","rets":{"ret":{"text":"color","name":"","type":"Vector"}}},"example":{"description":"Gets player 1's model color, and prints it to console","code":"print( player.GetByID( 1 ):GetPlayerColor() )","output":"Vector( 1, 1, 1 )"}},
{"function":{"name":"GetObserverMode","parent":"Player","type":"classfunc","description":"Returns the the observer mode of the player","realm":"Shared","rets":{"ret":{"text":"Observe mode of that player, see .","name":"","type":"number","page":"Enums/OBS_MODE"}}}},
{"function":{"name":"GetObserverMode","parent":"Player","type":"classfunc","description":"Returns the the observer mode of the player","realm":"Shared","rets":{"ret":{"text":"Observe mode of that player, see .","name":"","type":"number","page":"Enums/OBS_MODE"}}}},
{"function":{"name":"GetObserverTarget","parent":"Player","type":"classfunc","description":{"text":"Returns the entity the player is currently observing.\n\nSet using .","page":"Player:SpectateEntity"},"realm":"Shared","rets":{"ret":{"text":"The entity the player is currently spectating, or  if the player has no target.","name":"","type":"Entity","page":",NULLGlobal_Variables"}}}},
{"function":{"name":"GetNoCollideWithTeammates","parent":"Player","type":"classfunc","description":"Returns whenever the player is set not to collide with their teammates.","realm":"Shared","rets":{"ret":{"text":"noCollideWithTeammates","name":"","type":"boolean"}}}},
{"function":{"name":"GetName","parent":"Player","type":"classfunc","description":{"text":"Returns the player's name, this is an alias of .","page":"Player:Nick","note":{"text":"This function overrides  (in the Lua metatable, not in c++), keep it in mind when dealing with  or any engine function which requires the mapping name.","page":["Entity:GetName","ents.FindByName"]}},"realm":"Shared","rets":{"ret":{"text":"The player's name.","name":"","type":"string","bug":{"text":"This is limited to 31 characters even though Steam names can have 32.","issue":"3178"}}}},"example":{"description":"Prints the player's name","code":"print( Entity(1):GetName() )","output":"Ninja101"}},
{"function":{"name":"GetMaxSpeed","parent":"Player","type":"classfunc","description":{"text":"Returns the player's maximum movement speed.\n\nSee also ,  and .","page":["Player:SetMaxSpeed","Player:GetWalkSpeed","Player:GetRunSpeed"]},"realm":"Shared","rets":{"ret":{"text":"The maximum movement speed the player can go at.","name":"","type":"number"}}}},
{"function":{"name":"GetLaggedMovementValue","parent":"Player","type":"classfunc","description":"Returns the timescale multiplier of the player movement.","realm":"Shared","rets":{"ret":{"text":"The timescale multiplier, defaults to 1.","name":"","type":"number"}}}},
{"function":{"name":"GetLadderClimbSpeed","parent":"Player","type":"classfunc","description":{"text":"Returns the player's ladder climbing speed.\n\nSee  for normal walking speed,  for sprinting speed and  for slow walking speed.","page":["Player:GetWalkSpeed","Player:GetRunSpeed","Player:GetSlowWalkSpeed"]},"added":"2020.03.17","realm":"Shared","rets":{"ret":{"text":"The ladder climbing speed.","name":"speed","type":"number"}}}},
{"function":{"name":"GetJumpPower","parent":"Player","type":"classfunc","description":"Returns the jump power of the player","realm":"Shared","rets":{"ret":{"text":"Jump power","name":"","type":"number"}}},"example":{"description":"Prints local player's jump power","code":"print( LocalPlayer():GetJumpPower() )","output":"200"}},
{"function":{"name":"GetInfoNum","parent":"Player","type":"classfunc","description":{"text":"Retrieves the numeric value of a client-side convar, returns nil if value is not convertible to a number. The  must have a  flag for this to work.","page":["ConVar",",FCVAR_USERINFOEnums/FCVAR"]},"realm":"Server","args":{"arg":[{"text":"The name of the  to query the value of","name":"cVarName","type":"string","page":"ConVar"},{"text":"Default value if we failed to retrieve the number.","name":"default","type":"number"}]},"rets":{"ret":{"text":"The value of the  or the default value","name":"","type":"number","page":"ConVar"}}},"example":[{"description":{"text":"Creates clientside  'Apple' and retrieves value of it.","page":"ConVar"},"code":"if CLIENT then\n\tCreateConVar( \"Apple\", \"1\", FCVAR_USERINFO )\nelse\n\tMsgN( Entity( 1 ):GetInfoNum( \"Apple\" ) )\nend","outputfixedwidth":"Fixed width","output":"1"},{"description":{"text":"Shows difference between  and .","page":["Player:GetInfo","Player:GetInfoNum"]},"code":"if CLIENT then\n\tCreateConVar( \"Apple\", \"1\", FCVAR_USERINFO )\nelse\n\tMsgN( type( Entity( 1 ):GetInfoNum( \"Apple\", 1 ) ) )\n\tMsgN( type( Entity( 1 ):GetInfo( \"Apple\" ) ) )\nend","outputfixedwidth":"Fixed width","output":"number\nstring"}]},
{"function":{"name":"GetInfo","parent":"Player","type":"classfunc","description":{"text":"Retrieves the value of a client-side . The  must have a  flag for this to work.","page":["ConVar","ConVar",",FCVAR_USERINFOEnums/FCVAR"],"warning":"The returned value is truncated to 31 bytes."},"realm":"Server","args":{"arg":{"text":"The name of the client-side","name":"cVarName","type":"string","page":"ConVar"}},"rets":{"ret":{"text":"The value of the","name":"","type":"string","page":"ConVar"}}},"example":{"description":{"text":"Creates clientside  'Apple' and retrieves value of it.","page":"ConVar"},"code":"if CLIENT then\n\tCreateConVar( \"Apple\", \"ILikeApples\", FCVAR_USERINFO )\nelse\n\tMsgN( Entity( 1 ):GetInfo( \"Apple\" ) )\nend","outputfixedwidth":"Fixed width","output":"ILikeApples"}},
{"function":{"name":"GetHullDuck","parent":"Player","type":"classfunc","description":"Gets the bottom base and the top base size of the player's crouch hull.","realm":"Shared","rets":{"ret":[{"text":"Player's crouch hull bottom base size","name":"","type":"Vector"},{"text":"Player's crouch hull top base size","name":"","type":"Vector"}]}},"example":{"description":"Prints bases' size of the crouch hull of all players.","code":"for k,v in pairs(player.GetAll()) do\n\n\tlocal bottom, top = v:GetHullDuck()\n\n\tprint(bottom)\n\n\tprint(top)\n\nend","output":"```\n-16.000000 -16.000000 0.000000\n16.000000 16.000000 36.000000\n```"}},
{"function":{"name":"GetHull","parent":"Player","type":"classfunc","description":"Gets the bottom base and the top base size of the player's hull.","realm":"Shared","rets":{"ret":[{"text":"Player's hull bottom base size","name":"","type":"Vector"},{"text":"Player's hull top base size","name":"","type":"Vector"}]}},"example":{"description":"Prints bases' size of the hull of all players.","code":"for k,v in pairs(player.GetAll()) do\n\n\tlocal bottom, top = v:GetHull()\n\n\tprint(bottom)\n\n\tprint(top)\n\nend","output":"```\n-16.000000 -16.000000 0.000000\n16.000000 16.000000 72.000000\n```"}},
{"function":{"name":"GetHands","parent":"Player","type":"classfunc","description":"Gets the hands entity of a player","realm":"Shared","rets":{"ret":{"text":"The hands entity if players has one","name":"","type":"Entity"}}}},
{"function":{"name":"GetHoveredWidget","parent":"Player","type":"classfunc","description":"Returns the widget the player is hovering with his mouse.","realm":"Shared","rets":{"ret":{"text":"The hovered widget.","name":"","type":"Entity"}}}},
{"function":{"name":"GetFriendStatus","parent":"Player","type":"classfunc","description":"Returns the steam \"relationship\" towards the player.","realm":"Client","rets":{"ret":{"text":"Should return one of four different things depending on their status on your friends list: \"friend\", \"blocked\", \"none\" or \"requested\".","name":"","type":"string"}}},"example":{"description":"Prints the steam relationship towards another player","code":"print(ply:GetFriendStatus())","output":"\"friend\""}},
{"function":{"name":"GetFOV","parent":"Player","type":"classfunc","description":"Returns the FOV of the player.","realm":"Shared","rets":{"ret":{"text":"Field of view as a float","name":"","type":"number"}}}},
{"function":{"name":"GetEyeTraceNoCursor","parent":"Player","type":"classfunc","description":{"text":"Returns the trace according to the players view direction, ignoring their mouse ( Holding C and moving the mouse in Sandbox ).\n\nThe results of this function are cached every frame.\n\nSee also","page":"Player:GetEyeTrace"},"realm":"Shared","rets":{"ret":{"text":"Trace result. See","name":"","type":"table","page":"Structures/TraceResult"}}}},
{"function":{"name":"GetEyeTrace","parent":"Player","type":"classfunc","description":{"text":"Returns a table with information of what the player is looking at.\n\nThe results of this function are cached every frame.\n\nSee also","page":"Player:GetEyeTraceNoCursor"},"realm":"Shared","rets":{"ret":{"text":"Trace information, see","name":"","type":"table","page":"Structures/TraceResult"}}},"example":{"description":"Prints the entity the player is looking at.","code":"print( Entity( 1 ):GetEyeTrace().Entity )","output":"\"Entity [0][worldspawn]\" in console, if you aim at world."}},
{"function":{"name":"GetEntityInUse","parent":"Player","type":"classfunc","description":"Returns the entity the player is currently using, like func_tank mounted turrets or +use prop pickups.","realm":"Shared","rets":{"ret":{"text":"Entity in use, or NULL entity otherwise. For +use prop pickups, this will be NULL clientside.","name":"","type":"Entity"}}}},
{"function":{"name":"GetDuckSpeed","parent":"Player","type":"classfunc","description":"Returns a player's duck speed (in seconds)","realm":"Shared","rets":{"ret":{"text":"duckspeed","name":"","type":"number"}}},"example":{"description":"Gets player 1's duck speed in seconds, and prints it to console","code":"print( player.GetByID( 1 ):GetDuckSpeed() )","output":"0.3 in console (tested)"}},
{"function":{"name":"GetDrivingEntity","parent":"Player","type":"classfunc","description":"Gets the entity the player is currently driving.","realm":"Shared","rets":{"ret":{"text":"DriveEntity","name":"","type":"Entity"}}}},
{"function":{"name":"GetDrivingMode","parent":"Player","type":"classfunc","description":{"text":"Returns driving mode of the player. See .","page":"Entity Driving"},"realm":"Shared","rets":{"ret":{"text":"The drive mode ID or 0 if player doesn't use the drive system.","name":"","type":"number"}}}},
{"function":{"name":"GetCurrentViewOffset","parent":"Player","type":"classfunc","description":{"text":"Gets the **actual** view offset which equals the difference between the players actual position and their view when standing.\n\nDo not confuse with  and","page":["Player:GetViewOffset","Player:GetViewOffsetDucked"]},"realm":"Shared","rets":{"ret":{"text":"The actual view offset.","name":"","type":"Vector"}}}},
{"function":{"name":"GetCurrentCommand","parent":"Player","type":"classfunc","description":{"text":"Returns the last command which was sent by the specified player. Can only be used in a .","note":{"text":"When called clientside in singleplayer during , it will return nothing as the hook is not technically predicted in that instance. See the note on the page.","page":"WEAPON:Think"},"bug":{"text":"This will fail in .","issue":"3302","page":"GM:StartCommand"}},"realm":"Shared","rets":{"ret":{"text":"Last user commands","name":"","type":"CUserCmd"}}}},
{"function":{"name":"GetCrouchedWalkSpeed","parent":"Player","type":"classfunc","description":{"text":"Returns the crouched walk speed multiplier.\n\nSee also  and .","page":["Player:GetWalkSpeed","Player:SetCrouchedWalkSpeed"]},"realm":"Shared","rets":{"ret":{"text":"The crouched walk speed multiplier.","name":"","type":"number"}}}},
{"function":{"name":"GetClassID","parent":"Player","type":"classfunc","description":"Returns the player's class id.","realm":"Shared","rets":{"ret":{"text":"The player's class id.","name":"","type":"number"}}}},
{"function":{"name":"GetCount","parent":"Player","type":"classfunc","description":"Gets total count of entities of same class.","realm":"Shared","args":{"arg":[{"text":"Entity type to get count of.","name":"type","type":"string"},{"text":"If specified, it will reduce the counter by this value. Works only serverside.","name":"minus","type":"number","default":"0"}]}}},
{"function":{"name":"GetCanZoom","parent":"Player","type":"classfunc","description":"Determines whenever the player is allowed to use the zoom functionality.","realm":"Shared","rets":{"ret":{"text":"canZoom","name":"","type":"boolean"}}}},
{"function":{"name":"GetCanWalk","parent":"Player","type":"classfunc","description":"Returns true if the player is able to walk using the (default) alt key.","realm":"Shared","rets":{"ret":{"text":"AbleToWalk","name":"","type":"boolean"}}}},
{"function":{"name":"GetAvoidPlayers","parent":"Player","type":"classfunc","description":"Gets if the player will be pushed out of nocollided players.","realm":"Shared","rets":{"ret":{"text":"pushed","name":"","type":"boolean"}}}},
{"function":{"name":"GetAmmoCount","parent":"Player","type":"classfunc","description":"Gets the amount of ammo the player has.","realm":"Shared","args":{"arg":{"text":"The ammunition type. Can be either  ammo ID or  ammo name.","name":"ammotype","type":"any","page":["number","string"]}},"rets":{"ret":{"text":"The amount of ammo player has in reserve.","name":"","type":"number"}}},"example":[{"description":"A function that returns the ammo for the weapon the player is currently holding.","code":"function GetAmmoForCurrentWeapon( ply )\n\tif ( !IsValid( ply ) ) then return -1 end\n\n\tlocal wep = ply:GetActiveWeapon()\n\tif ( !IsValid( wep ) ) then return -1 end\n \n\treturn ply:GetAmmoCount( wep:GetPrimaryAmmoType() )\nend","output":"31"},{"description":"Example usage. \"pistol\" ammo type has ID of 3.","code":"print(Entity(1):GetAmmoCount( 3 ))\nprint(Entity(1):GetAmmoCount( \"3\" ))\nprint(Entity(1):GetAmmoCount( \"pistol\" ) )","output":"```\n255\n0\n255\n```"}]},
{"function":{"name":"GetAmmo","parent":"Player","type":"classfunc","description":"Returns a table of all ammo the player has.","realm":"Shared","rets":{"ret":{"text":"Key: AmmoID to be used with functions like .\n Value: Amount of ammo the player has of this kind.","name":"","type":"table","page":["number","game.GetAmmoName","number"]}}},"example":{"description":"Output ammo table of the default Sandbox weapon loadout.","code":"PrintTable(player.GetByID(1):GetAmmo())","output":"```\n1\t=\t130\n2\t=\t6\n3\t=\t256\n4\t=\t256\n5\t=\t32\n6\t=\t36\n7\t=\t64\n8\t=\t3\n10\t=\t6\n```"}},
{"function":{"name":"GetAllowWeaponsInVehicle","parent":"Player","type":"classfunc","description":"Returns whether the player is allowed to use his weapons in a vehicle or not.","realm":"Shared","rets":{"ret":{"text":"Whether the player is allowed to use his weapons in a vehicle or not.","name":"","type":"boolean"}}}},
{"function":{"name":"GetAllowFullRotation","parent":"Player","type":"classfunc","description":"Returns true if the players' model is allowed to rotate around the pitch and roll axis.","realm":"Shared","rets":{"ret":{"text":"Allowed","name":"","type":"boolean"}}}},
{"function":{"name":"GetAimVector","parent":"Player","type":"classfunc","description":"Returns the direction that the player is aiming.","realm":"Shared","rets":{"ret":{"text":"The direction vector of players aim","name":"","type":"Vector"}}},"example":{"description":"Launches the player in the direction they're facing.","code":"local ply = Entity( 1 )\nply:SetVelocity( ply:GetAimVector() * 1000 )"}},
{"function":{"name":"GetActiveWeapon","parent":"Player","type":"classfunc","description":"Returns the player's active weapon.","realm":"Shared","rets":{"ret":{"text":"The weapon the player is currently has equipped.","name":"","type":"Weapon"}}},"example":{"description":"Prints the player's active weapon's class name.","code":"print(Entity( 1 ):GetActiveWeapon():GetClass())","output":"The active weapon's class. For example, if you are holding the tool gun then this will be \"gmod_tool\"."}},
{"function":{"name":"Frags","parent":"Player","type":"classfunc","description":"Returns the amount of kills a player has.","realm":"Shared","rets":{"ret":{"text":"kills","name":"","type":"number"}}},"example":{"description":"Prints the players frags in console.","code":"print(Entity( 1 ):Frags())","outputfixedwidth":"Fixed width","output":"0"}},
{"function":{"name":"Freeze","parent":"Player","type":"classfunc","description":{"text":"Freeze the player. Frozen players cannot move, look around, or attack. Key bindings are still called. Similar to  but the player can still take damage.\n\nAdds or removes the  flag from the player.","page":["Player:Lock",",FL_FROZENEnums/FL"],"bug":"Frozen bots will still be able to look around."},"realm":"Server","file":{"text":"lua/includes/extensions/player.lua","line":"237-L249"},"args":{"arg":{"text":"Whether the player should be frozen.","name":"frozen","type":"boolean","default":"false"}}},"example":{"description":"Freezes all players","code":"for k, v in pairs(player.GetAll()) do\n    v:Freeze( true )\nend"}},
{"function":{"name":"FlashlightIsOn","parent":"Player","type":"classfunc","description":"Returns true if the player's flashlight is on.","realm":"Shared","rets":{"ret":{"text":"Whether the player's flashlight is on.","name":"","type":"boolean"}}}},
{"function":{"name":"Flashlight","parent":"Player","type":"classfunc","description":"Enables/Disables the player's flashlight","realm":"Server","args":{"arg":{"text":"Turns the flashlight on/off","name":"isOn","type":"boolean"}}},"example":{"description":"Turns off and disables the player's flashlight","code":"Entity( 1 ):Flashlight(false)\nEntity( 1 ):AllowFlashlight(false)"}},
{"function":{"name":"ExitVehicle","parent":"Player","type":"classfunc","description":"Makes the player exit the vehicle if they're in one.","realm":"Server"},"example":{"description":"Make player 1 leave his vehicle if he's driving one.","code":"Entity(1):ExitVehicle()","output":"Player 1 will exit the the vehicle he's currently in."}},
{"function":{"name":"EquipSuit","parent":"Player","type":"classfunc","description":{"text":"Equips the player with the HEV suit.\n\nAllows the player to zoom, walk slowly, sprint, pickup armor batteries, use the health and armor stations and also shows the HUD.\nThe player also emits a flatline sound on death, which can be overridden with .\n\nThe player is automatically equipped with the suit on spawn, if you wish to stop that, use .","br":"","page":["GM:PlayerDeathSound","Player:RemoveSuit"]},"realm":"Server"}},
{"function":{"name":"EnterVehicle","parent":"Player","type":"classfunc","description":"Enters the player into specified vehicle","realm":"Server","args":{"arg":{"text":"Vehicle the player will enter","name":"vehicle","type":"Vehicle"}}},"example":{"description":"Enters the player into the vehicle they're looking at","code":"local jeep = Entity( 1 ):GetEyeTrace().Entity\nEntity( 1 ):EnterVehicle(jeep)"}},
{"function":{"name":"DropWeapon","parent":"Player","type":"classfunc","description":"Forces the player to drop the specified weapon","realm":"Server","args":{"arg":[{"text":"Weapon to be dropped. If unset, will default to the currently equipped weapon.","name":"weapon","type":"Weapon","default":"nil"},{"text":"If set, launches the weapon at given position. There is a limit to how far it is willing to throw the weapon. Overrides velocity argument.","name":"target","type":"Vector","default":"nil"},{"text":"If set and previous argument is unset, launches the weapon with given velocity. If the velocity is higher than 400, it will be clamped to 400.","name":"velocity","type":"Vector","default":"nil"}]}},"example":[{"description":"A console command that drops all the player's weapons","code":"concommand.Add( \"drop_weapons\", function( ply )\n\tif ( !IsValid( ply ) ) then return end\n\n\t-- Loop through all player weapons and drop them\n\tfor k, v in pairs( ply:GetWeapons() ) do\n\t\tply:DropWeapon( v )\n\tend\nend )"},{"description":"A console command that drops only the currently equipped weapon","code":"concommand.Add( \"drop_weapon\", function( ply )\n\tif ( !IsValid( ply ) ) then return end\n\n\t-- Dtop the currently equipped weapon\n\tply:DropWeapon( ply:GetActiveWeapon() )\nend )"}]},
{"function":{"name":"DropObject","parent":"Player","type":"classfunc","description":"Drops any object the player is currently holding with either gravitygun or +Use (E key)","realm":"Server"}},
{"function":{"name":"DrawWorldModel","parent":"Player","type":"classfunc","description":"Show/Hide the player's weapon's worldmodel.","realm":"Server","args":{"arg":{"text":"Should draw","name":"draw","type":"boolean"}}}},
{"function":{"name":"DropNamedWeapon","parent":"Player","type":"classfunc","description":"Drops the players' weapon of a specific class.","realm":"Server","args":{"arg":[{"text":"The class to drop.","name":"class","type":"string"},{"text":"If set, launches the weapon at given position. There is a limit to how far it is willing to throw the weapon. Overrides velocity argument.","name":"target","type":"Vector","default":"nil"},{"text":"If set and previous argument is unset, launches the weapon with given velocity. If the velocity is higher than 400, it will be clamped to 400.","name":"velocity","type":"Vector","default":"nil"}]}}},
{"function":{"name":"DrawViewModel","parent":"Player","type":"classfunc","description":"Show/Hide the player's weapon's viewmodel.","realm":"Shared","args":{"arg":[{"text":"Should draw","name":"draw","type":"boolean"},{"text":"Which view model to show/hide, 0-2.","name":"vm","type":"number","default":"0"}]}},"example":{"description":{"text":"Create a  object on the client realm to enable/disable the viewmodel.","page":"ConVar"},"code":"local cvarObject = CreateClientConVar(\"nogun\", \"1\", true, false, \"Hide the current viewmodel.\") -- Create the ConVar object\n\nhook.Add(\"HUDPaint\", \"draw_viewmodel\", function()\n\tLocalPlayer():DrawViewModel(cvarObject:GetBool()) -- Call ConVar:GetBool() inside the parameters of DrawViewModel\nend)"}},
{"function":{"name":"DoSecondaryAttack","parent":"Player","type":"classfunc","description":{"text":"Sends a third person secondary fire animation event to the player.\n\nSimilar to other animation event functions, calls  with  as the event and no extra data.","page":["GM:DoAnimationEvent",",PLAYERANIMEVENT_ATTACK_SECONDARYEnums/PLAYERANIMEVENT_"]},"realm":"Shared"}},
{"function":{"name":"DoReloadEvent","parent":"Player","type":"classfunc","description":{"text":"Sends a third person reload animation event to the player.\n\nSimilar to other animation event functions, calls  with  as the event and no extra data.","page":["GM:DoAnimationEvent",",PLAYERANIMEVENT_RELOADEnums/PLAYERANIMEVENT_"]},"realm":"Shared"}},
{"function":{"name":"DoAttackEvent","parent":"Player","type":"classfunc","description":{"text":"Starts the player's attack animation. The attack animation is determined by the weapon's HoldType.\n\nSimilar to other animation event functions, calls  with  as the event and no extra data.","page":["GM:DoAnimationEvent",",PLAYERANIMEVENT_ATTACK_PRIMARYEnums/PLAYERANIMEVENT_"]},"realm":"Shared"}},
{"function":{"name":"DoCustomAnimEvent","parent":"Player","type":"classfunc","description":{"text":"Sends a specified third person animation event to the player.\n\nCalls  with specified arguments.","page":"GM:DoAnimationEvent"},"realm":"Shared","args":{"arg":[{"text":"The event to send. See .","name":"event","type":"number","page":"Enums/PLAYERANIMEVENT"},{"text":"The data to send alongside the event.","name":"data","type":"number"}]}}},
{"function":{"name":"DoAnimationEvent","parent":"Player","type":"classfunc","description":{"text":"Sends a third person animation event to the player.\n\nCalls  with  as the event, data as the given data.","page":["GM:DoAnimationEvent",",PLAYERANIMEVENT_CUSTOM_GESTUREEnums/PLAYERANIMEVENT"]},"realm":"Shared","args":{"arg":{"text":"The data to send.","name":"data","type":"number"}}}},
{"function":{"name":"DetonateTripmines","parent":"Player","type":"classfunc","description":"Detonates all tripmines belonging to the player.","realm":"Server"}},
{"function":{"name":"DebugInfo","parent":"Player","type":"classfunc","description":"Prints the players' name and position to the console.","realm":"Server","file":{"text":"lua/includes/extensions/player.lua","line":"91-L101"}}},
{"function":{"name":"Deaths","parent":"Player","type":"classfunc","description":"Returns the player's death count","realm":"Shared","rets":{"ret":{"text":"The number of deaths the player has had.","name":"","type":"number"}}},"example":{"description":"If the player's deaths are over 10, then they cannot spawn.","code":"function GM:PlayerDeathThink( ply, ent, att )\n\n\tif ply:Deaths() >= 10 then\n\n\t\treturn false\n\n\tend\n\n   return true\n\nend","output":"The player will not be able to spawn after they've died 10 times."}},
{"function":{"name":"Crouching","parent":"Player","type":"classfunc","description":"Returns whether the player is crouching or not. (FL_DUCKING flag)","realm":"Shared","rets":{"ret":{"text":"Whether the player is crouching","name":"","type":"boolean"}}}},
{"function":{"name":"CrosshairEnable","parent":"Player","type":"classfunc","description":{"text":"Enables the player's crosshair, if it was previously disabled via .","page":"Player:CrosshairDisable"},"realm":"Server"},"example":{"description":"Enables crosshair of the first player on the server, if it was disabled.","code":"Entity( 1 ):CrosshairEnable()"}},
{"function":{"name":"CrosshairDisable","parent":"Player","type":"classfunc","description":{"text":"Disables the default player's crosshair. Can be reenabled with . This will affect .","page":["Player:CrosshairEnable","WEAPON:DoDrawCrosshair"]},"realm":"Server"},"example":{"description":"Disables crosshair of the first player on the server.","code":"Entity( 1 ):CrosshairDisable()"}},
{"function":{"name":"CreateRagdoll","parent":"Player","type":"classfunc","description":{"text":"Creates the player's death ragdoll entity and deletes the old one.\n\nThis is normally used when a player dies, to create their death ragdoll.\n\nThe ragdoll will be created with the player's properties such as , , ,  and .\n\nYou can retrieve the entity this creates with .","page":[",PositionEntity:GetPos",",AnglesEntity:GetAngles",",PlayerColorPlayer:GetPlayerColor",",VelocityEntity:GetVelocity",",ModelEntity:GetModel","Player:GetRagdollEntity"]},"realm":"Server"}},
{"function":{"name":"ConCommand","parent":"Player","type":"classfunc","description":{"text":"Runs the concommand on the player. This does not work on bots.\n\nIf you wish to directly modify the movement input of bots, use  instead.","page":"GM:StartCommand","note":{"text":"Some commands/convars are blocked from being ran/changed using this function, usually to prevent harm/annoyance to clients. For a list of blocked commands, see .","page":"Blocked ConCommands"}},"realm":"Shared","args":{"arg":{"text":"command to run","name":"command","type":"string"}}},"example":{"description":"Kills the player using the concommand","code":"Entity( 1 ):ConCommand(\"kill\")","output":"The Player1 dies."}},
{"function":{"name":"CheckLimit","parent":"Player","type":"classfunc","description":"Checks if the limit is hit or not. If it is, it will throw a notification saying so.","realm":"Shared","file":{"text":"gamemodes/sandbox/gamemode/player_extension.lua","line":"9-L24"},"args":{"arg":{"text":"Limit type. In unmodified Sandbox possible values are:\n* \"props\"\n* \"ragdolls\"\n* \"vehicles\"\n* \"effects\"\n* \"balloons\"\n* \"cameras\"\n* \"npcs\"\n* \"sents\"\n* \"dynamite\"\n* \"lamps\"\n* \"lights\"\n* \"wheels\"\n* \"thrusters\"\n* \"hoverballs\"\n* \"buttons\"\n* \"emitters\"","name":"limitType","type":"string"}},"rets":{"ret":{"text":"Returns true if limit is not hit, false if it is hit","name":"","type":"boolean"}}}},
{"function":{"name":"CanUseFlashlight","parent":"Player","type":"classfunc","description":{"text":"Returns true if the player's flashlight hasn't been disabled by .","page":"Player:AllowFlashlight","note":"This is not synchronized between clients and server automatically!"},"realm":"Shared","file":{"text":"lua/includes/extensions/player.lua","line":"212"},"rets":{"ret":{"text":"Whether the player can use flashlight.","name":"","type":"boolean"}}}},
{"function":{"name":"ChatPrint","parent":"Player","type":"classfunc","description":{"text":"Prints a string to the chatbox of the client.","warning":{"text":"Just like the , this function is affected by the 255 byte limit!","page":"usermessage"}},"realm":"Shared","args":{"arg":{"text":"String to be printed","name":"message","type":"string"}}},"example":{"description":"Prints \"Hello World\" to chat of all players","code":"for k, ply in pairs(player.GetAll()) do\n\tply:ChatPrint(\"Hello World\")\nend","output":"Hello World (In chatbox)"}},
{"function":{"name":"Ban","parent":"Player","type":"classfunc","description":"Bans the player from the server for a certain amount of minutes.","realm":"Server","args":{"arg":[{"text":"Duration of the ban in minutes (0 is permanent)","name":"minutes","type":"number"},{"text":"Whether to kick the player after banning them or not","name":"kick","type":"boolean","default":"false"}]}},"example":{"description":"Kicks and bans the player for a day.","code":"Entity(1):Ban( 1440, true )"}},
{"function":{"name":"Armor","parent":"Player","type":"classfunc","description":"Returns the player's armor.","realm":"Shared","rets":{"ret":{"text":"The player's armor.","name":"","type":"number"}}},"example":{"description":"Loops through all the players and checks if they have any armor, if they do not, then sets their armor to 100.","code":"for _, v in pairs( player.GetAll( ) ) do\n    if v:Armor( ) == 0 then\n         v:SetArmor( 100 )\n    end\nend"}},
{"function":{"name":"AnimSetGestureWeight","parent":"Player","type":"classfunc","description":"Sets the weight of the animation playing in the given gesture slot.","realm":"Shared","args":{"arg":[{"text":"The gesture slot. See","name":"slot","type":"number","page":"Enums/GESTURE_SLOT"},{"text":"The weight this slot should be set to. Value must be ranging from 0 to 1.","name":"weight","type":"number"}]}}},
{"function":{"name":"AnimSetGestureSequence","parent":"Player","type":"classfunc","description":"Sets the sequence of the animation playing in the given gesture slot.","realm":"Shared","args":{"arg":[{"text":"The gesture slot. See","name":"slot","type":"number","page":"Enums/GESTURE_SLOT"},{"text":"Sequence ID to set.","name":"sequenceID","type":"number"}]}}},
{"function":{"name":"AnimRestartMainSequence","parent":"Player","type":"classfunc","description":{"text":"Restarts the main animation on the player, has the same effect as calling ( 0 ).","page":"Entity:SetCycle"},"realm":"Shared"}},
{"function":{"name":"AnimResetGestureSlot","parent":"Player","type":"classfunc","description":"Resets player gesture in selected slot.","realm":"Shared","args":{"arg":{"text":"Slot to reset. See the .","name":"slot","type":"number","page":"Enums/GESTURE_SLOT"}}}},
{"function":{"name":"AnimRestartGesture","parent":"Player","type":"classfunc","description":{"text":"Restart a gesture on a player, within a gesture slot.","warning":"This is not automatically networked. This function has to be called on the client to be seen by said client."},"realm":"Shared","args":{"arg":[{"text":"Gesture slot using","name":"slot","type":"number","page":"Enums/GESTURE_SLOT"},{"text":"The activity ( see  ) or sequence that should be played","name":"activity","type":"number","page":"Enums/ACT"},{"text":"Whether the animation should be automatically stopped. true = stops the animation, false = the animation keeps playing/looping","name":"autokill","type":"boolean","default":"false"}]}},"example":{"description":"Defines part of a SWEP with pistol whipping functionality by using a pistol hold type and AnimRestartGesture for the melee attack animation.","code":"function SWEP:Initialize()\n\tself:SetHoldType(\"pistol\")\nend\n\nfunction SWEP:PrimaryAttack()\n\n\t-- Weapon attack delay\n\tself:SetNextPrimaryFire(CurTime()+0.5)\n\n\t-- Get entity in front of us\n\tlocal tr = util.TraceLine(util.GetPlayerTrace(self.Owner))\n\t\n\tlocal ent = tr.Entity\n\t\n\t-- If there's an enemy under 50 units in front of us\n\tif(IsValid(ent) && self.Owner:GetShootPos():Distance(tr.HitPos) < 50) then\n\t\n\t\t-- Play the melee attack animation\n\t\tself.Owner:AnimRestartGesture(GESTURE_SLOT_ATTACK_AND_RELOAD, ACT_HL2MP_GESTURE_RANGE_ATTACK_MELEE, true)\n\t\t\n\t\t-- Create damage info (server-side)\n\t\tif SERVER then\n\t\t\n\t\t\tlocal dmg = DamageInfo()\t\t\n\t\t\tdmg:SetDamage(math.random(5, 10))\n\t\t\tdmg:SetAttacker(self.Owner)\n\t\t\tdmg:SetInflictor(self)\n\t\t\tdmg:SetDamageForce(self.Owner:GetAimVector()*300)\n\t\t\tdmg:SetDamagePosition(tr.HitPos)\n\t\t\tdmg:SetDamageType(DMG_CLUB)\n\t\t\n\t\t\t-- Apply damage to enemy\n\t\t\tent:TakeDamageInfo(dmg)\n\t\t\t\n\t\tend\n\t\t\n\t\t-- Play impact sound\n\t\tent:EmitSound(\"physics/flesh/flesh_impact_bullet\"..math.random(1, 5)..\".wav\")\n\t\t\n\t\t-- Make viewmodel pistol whip effect\n\t\tself.Owner:ViewPunch(Angle(0, 45, 0))\n\t\t\n\telse\n\t\n\t\t-- Typical pistol shot code goes here\n\t\t-- Some can be found in 'weapon_base/shared.lua'\n\t\n\tend\n\t\nend"}},
{"function":{"name":"AllowImmediateDecalPainting","parent":"Player","type":"classfunc","description":"Lets the player spray his decal without delay","realm":"Server","args":{"arg":{"text":"Allow or disallow","name":"allow","type":"boolean"}}}},
{"function":{"name":"AllowFlashlight","parent":"Player","type":"classfunc","description":"Sets if the player can toggle his flashlight. Function exists on both the server and client but has no effect when ran on the client.","realm":"Shared","file":{"text":"lua/includes/extensions/player.lua","line":"211"},"args":{"arg":{"text":"True allows flashlight toggling","name":"canFlashlight","type":"boolean"}}}},
{"function":{"name":"Alive","parent":"Player","type":"classfunc","description":"Checks if the player is alive.","realm":"Shared","rets":{"ret":{"text":"Whether the player is alive","name":"","type":"boolean"}}},"example":{"description":"Loops through all the players and kills alive ones.","code":"for k, v in pairs( player.GetAll() ) do\n   if ( v:Alive() ) then\n      v:Kill()\n   end\nend"}},
{"function":{"name":"AddVCDSequenceToGestureSlot","parent":"Player","type":"classfunc","description":{"text":"Plays a sequence directly from a sequence number, similar to . This function has the advantage to play sequences that haven't been bound to an existing","page":["Player:AnimRestartGesture","Enums/ACT"]},"realm":"Shared","args":{"arg":[{"text":"Gesture slot using","name":"slot","type":"number","page":"Enums/GESTURE_SLOT"},{"text":"The sequence ID to play, can be retrieved with .","name":"sequenceId","type":"number","page":"Entity:LookupSequence"},{"text":"The cycle to start the animation at, ranges from 0 to 1.","name":"cycle","type":"number"},{"text":"If the animation should not loop. true = stops the animation, false = the animation keeps playing.","name":"autokill","type":"boolean","default":"false"}]}}},
{"function":{"name":"AddPlayerOption","parent":"Player","type":"classfunc","description":"Sets up the voting system for the player.\nThis is a really barebone system. By calling this a vote gets started, when the player presses 0-9 the callback function gets called along with the key the player pressed. Use the draw callback to draw the vote panel.","realm":"Client","args":{"arg":[{"text":"Name of the vote","name":"name","type":"string"},{"text":"Time until the vote expires","name":"timeout","type":"number"},{"text":"The function to be run when the player presses 0-9 while a vote is active.","name":"vote_callback","type":"function"},{"text":"Used to draw the vote panel.","name":"draw_callback","type":"function"}]}},"example":{"description":"Simple example. Prints player's choice in chat.","code":"function AfterChoice(num) -- This is callback after we press number (Argument #3)\n\tchat.AddText(\"Your rate is \"..num..\". Thanks!\") \n\treturn true -- Return true to close vote\nend\n\nfunction VisualVote() -- This is drawing function (Argument #4)\n    draw.RoundedBox(4,ScrW()/2-300,ScrH()/2-25,600,50,Color(0,0,0,200))\n    draw.SimpleText(\"Rate our server by scale of zero to nine. Use number line to vote.\",\"Trebuchet24\",ScrW()/2,ScrH()/2,Color(255,255,255),1,1)\nend\n\nLocalPlayer():AddPlayerOption(\"SelectWeapon\",30,AfterChoice,VisualVote) -- Creates new vote"}},
{"function":{"name":"AddFrags","parent":"Player","type":"classfunc","description":"Add a certain amount to the player's frag count (or kills count)","realm":"Server","args":{"arg":{"text":"number of frags to add","name":"count","type":"number"}}},"example":{"description":"Adds 2 frags to player","code":"Entity( 1 ):AddFrags( 2 )","output":"Player1 has 2 extra frags on the scoreboard relative to his old score."}},
{"function":{"name":"AddFrozenPhysicsObject","parent":"Player","type":"classfunc","description":"Adds a entity to the players list of frozen objects.","realm":"Server","args":{"arg":[{"text":"Entity","name":"ent","type":"Entity"},{"text":"Physics object belonging to ent","name":"physobj","type":"PhysObj"}]}}},
{"function":{"name":"AddDeaths","parent":"Player","type":"classfunc","description":"Add a certain amount to the player's death count","realm":"Server","args":{"arg":{"text":"number of deaths to add","name":"count","type":"number"}}},"example":{"description":"Adds 2 deaths to player","code":"Entity( 1 ):AddDeaths( 2 )","output":"Player1 has 2 extra deaths on the scoreboard relative to his old score."}},
{"function":{"name":"AddCount","parent":"Player","type":"classfunc","description":"Adds an entity to the total count of entities of same class.","realm":"Shared","args":{"arg":[{"text":"Entity type","name":"str","type":"string"},{"text":"Entity","name":"ent","type":"Entity"}]}}},
{"function":{"name":"AccountID","parent":"Player","type":"classfunc","description":"Returns the player's AccountID aka SteamID3.\n\nFor bots and in singleplayer, this will return no value.","realm":"Shared","rets":{"ret":{"text":"Player's SteamID3 aka AccountID.","name":"","type":"number"}}}},
{"function":{"name":"AddCleanup","parent":"Player","type":"classfunc","description":"Adds an entity to the players clean up list.","realm":"Shared","args":{"arg":[{"text":"Cleanup type","name":"type","type":"string"},{"text":"Entity to add","name":"ent","type":"Entity"}]}}},
{"function":{"name":"WorldToLocalVector","parent":"PhysObj","type":"classfunc","description":{"text":"Rotate a vector from the world frame to the local frame of the physics object.","note":"This function only rotates the vector, without any translation operation."},"realm":"Shared","args":{"arg":{"text":"A vector in the world frame","name":"WorldVec","type":"Vector"}},"rets":{"ret":{"text":"The corresponding vector relative to the PhysObj","name":"","type":"Vector"}}}},
{"function":{"name":"WorldToLocal","parent":"PhysObj","type":"classfunc","description":"Converts a vector to a relative to the physics object coordinate system.","realm":"Shared","args":{"arg":{"text":"The vector in world space coordinates.","name":"vec","type":"Vector"}},"rets":{"ret":{"text":"The vector local to .","name":"","type":"Vector","page":"PhysObj:GetPos"}}}},
{"function":{"name":"Wake","parent":"PhysObj","type":"classfunc","description":{"text":"Wakes the physics object.\n\nSee  for more information.","page":"PhysObj:Sleep"},"realm":"Shared"}},
{"function":{"name":"UpdateShadow","parent":"PhysObj","type":"classfunc","description":{"text":"Unlike  and , this allows the movement of a physobj while leaving physics interactions intact.\nThis is used internally by the motion controller of the Gravity Gun , the +use pickup and the Physics Gun, and entities such as the crane.","page":["PhysObj:SetPos","PhysObj:SetAngles"],"br":"","note":{"text":"This is the ideal function to move a physics shadow created with  or .","page":["Entity:PhysicsInitShadow","Entity:MakePhysicsObjectAShadow"]}},"realm":"Shared","args":{"arg":[{"text":"The position we should move to.","name":"targetPosition","type":"Vector"},{"text":"The angle we should rotate towards.","name":"targetAngles","type":"Angle"},{"text":"The frame time to use for this movement, can be generally filled with  or  with the deltaTime. \n\nCan be set to 0 when you need to update the physics object just once.","name":"frameTime","type":"number","page":["Global.FrameTime","ENTITY:PhysicsSimulate"]}]}}},
{"function":{"name":"Sleep","parent":"PhysObj","type":"classfunc","description":{"text":"Makes the physics object \"sleep\".\n\nThe physics object will no longer be moving unless it is \"woken up\" by either a collision with another moving object, or by . This is an optimization feature of the physics engine.","page":"PhysObj:Wake"},"realm":"Shared"}},
{"function":{"name":"SetVelocityInstantaneous","parent":"PhysObj","type":"classfunc","description":"Sets the velocity of the physics object.","realm":"Shared","args":{"arg":{"text":"The new velocity of the physics object.","name":"velocity","type":"Vector"}}}},
{"function":{"name":"SetVelocity","parent":"PhysObj","type":"classfunc","description":"Sets the velocity of the physics object for the next iteration.","realm":"Shared","args":{"arg":{"text":"The new velocity of the physics object.","name":"velocity","type":"Vector"}}}},
{"function":{"name":"SetPos","parent":"PhysObj","type":"classfunc","description":"Sets the position of the physobject.","realm":"Shared","args":{"arg":[{"text":"The new position of the physobject.","name":"position","type":"Vector"},{"name":"teleport","type":"boolean","default":"false"}]}}},
{"function":{"name":"SetMass","parent":"PhysObj","type":"classfunc","description":"Sets the mass of the physics object.","realm":"Shared","args":{"arg":{"text":"The mass in kilograms.","name":"mass","type":"number"}}}},
{"function":{"name":"SetInertia","parent":"PhysObj","type":"classfunc","description":"Sets the directional inertia.","realm":"Shared","args":{"arg":{"text":"The directional inertia of the object.\nA value of Vector(0,0,0) makes the physobject go invalid.","name":"directionalInertia","type":"Vector","br":""}}}},
{"function":{"name":"SetMaterial","parent":"PhysObj","type":"classfunc","description":{"text":"Sets the material of the physobject.","note":"Impact sounds will only change if this is called on client"},"realm":"Shared","args":{"arg":{"text":"The name of the phys material to use. From this list: [Valve Developer](https://developer.valvesoftware.com/wiki/Material_surface_properties)","name":"materialName","type":"string"}}},"example":{"description":"Randomize the physical properties of an entity","code":"local tbl = {\n\t\"gmod_ice\", -- Makes the entity slide around\n\t\"gmod_bouncy\", -- Makes the entity bouncy\n\t\"gmod_silent\", -- Makes the entity not play sounds on impact\n\t\"flesh\" -- Makes the entity play flesh sounds on impact\n}\n\nlocal phys = SomeEntity:GetPhysicsObject()\n\nif ( IsValid( phys ) ) then\n\n\tphys:SetMaterial( table.Random( tbl ) )\n\nend"}},
{"function":{"name":"SetDragCoefficient","parent":"PhysObj","type":"classfunc","description":"Modifies how much drag (air resistance) affects the object.","realm":"Shared","args":{"arg":{"text":"The drag coefficient\nIt can be positive or negative.","name":"drag","type":"number"}}}},
{"function":{"name":"SetDamping","parent":"PhysObj","type":"classfunc","description":"Sets the linear and angular damping of the physics object.","realm":"Shared","args":{"arg":[{"text":"Linear damping.","name":"linearDamping","type":"number"},{"text":"Angular damping.","name":"angularDamping","type":"number"}]}}},
{"function":{"name":"SetContents","parent":"PhysObj","type":"classfunc","description":{"text":"Sets the contents flag of the .","page":"PhysObj"},"realm":"Shared","args":{"arg":{"text":"The .","name":"contents","type":"number","page":"Enums/CONTENTS"}}}},
{"function":{"name":"SetBuoyancyRatio","parent":"PhysObj","type":"classfunc","description":"Sets the buoyancy ratio of the physics object. (How well it floats in water)","realm":"Shared","args":{"arg":{"text":"Buoyancy ratio, where 0 is not buoyant at all (like a rock), and 1 is very buoyant (like wood)","name":"buoyancy","type":"number"}}}},
{"function":{"name":"SetAngles","parent":"PhysObj","type":"classfunc","description":"Sets the angles of the physobject.","realm":"Shared","args":{"arg":{"text":"The new angles of the physobject.","name":"angles","type":"Angle"}}}},
{"function":{"name":"SetAngleDragCoefficient","parent":"PhysObj","type":"classfunc","description":"Sets the amount of [drag](https://en.wikipedia.org/wiki/Drag_(physics)) to apply to a physics object when attempting to rotate.","realm":"Shared","args":{"arg":{"text":"[Drag coefficient](https://en.wikipedia.org/wiki/Drag_coefficient). The bigger this value is, the slower the angles will change.","name":"coefficient","type":"number"}}}},
{"function":{"name":"RecheckCollisionFilter","parent":"PhysObj","type":"classfunc","description":"Call this when the collision filter conditions change due to this object's state (e.g. changing solid type or collision group)","realm":"Shared"}},
{"function":{"name":"RotateAroundAxis","parent":"PhysObj","type":"classfunc","description":{"text":"A convinience function for .","page":"Angle:RotateAroundAxis"},"realm":"Shared","args":{"arg":[{"text":"Direction, around which we will rotate","name":"dir","type":"Vector"},{"text":"Amount of rotation, in degrees","name":"ang","type":"number"}]},"rets":{"ret":{"text":"The resulting angle","name":"","type":"Angle"}}},"example":{"description":{"text":"Shows that it is the same as .","page":"Angle:RotateAroundAxis"},"code":"local phys = Entity(1):GetEyeTrace().Entity:GetPhysicsObject() -- Our physics object\n\nprint( phys:RotateAroundAxis( Vector( 1, 0, 0 ), 20 ) )\n\nlocal a = phys:GetAngles()\na:RotateAroundAxis( Vector( 1, 0, 0 ), 20 )\nprint( a )","output":"Two exactly the same angles\n\n```\n-27.179 133.246 -23.236\n-27.179 133.246 -23.236\n```"}},
{"function":{"name":"OutputDebugInfo","parent":"PhysObj","type":"classfunc","description":"Prints debug info about the state of the physics object to the console.","realm":"Shared"},"example":{"description":"Outputs physics info about the entity the player is looking at to the console.","code":"Entity(1):GetEyeTrace().Entity:GetPhysicsObject():OutputDebugInfo()","output":"```\n-----------------\nObject: models/props_borealis/bluebarrel001.mdl\nMass: 60.0 (inv 0.017)\nInertia: 8.69, 8.69, 2.46 (inv 0.115, 0.115, 0.406)\nVelocity: 0.00, 0.00, -0.00 \nAng Velocity: 0.00, 0.00, -0.00 \nDamping 0.00 linear, 0.00 angular\nLinear Drag: 0.02, 0.01, 0.01 (factor 1.00)\nAngular Drag: 0.01, 0.02, 0.01 (factor 1.00)\nattached to 5 controllers\n4) sys:friction\n3) sys:friction\n2) sys:friction\n1) vphysics:drag\n0) sys:gravity\nState: Asleep, Collision Enabled, Motion Enabled, Flags 1127 (game 0000, index 0)\nMaterial: plastic_barrel : density(500.0), thickness(0.25), friction(0.80), elasticity(0.01)\nCollisionModel: Compact Surface: 1 convex pieces no outer hull\n```"}},
{"function":{"name":"LocalToWorldVector","parent":"PhysObj","type":"classfunc","description":{"text":"Rotate a vector from the local frame of the physics object to world frame.","note":"This function only rotates the vector, without any translation operation."},"realm":"Shared","args":{"arg":{"text":"A vector in the physics object's local frame","name":"LocalVec","type":"Vector"}},"rets":{"ret":{"text":"The corresponding vector in world frame","name":"","type":"Vector"}}},"example":{"description":"Given the angle of the physics object is angle ( 0.045, 89.952, 89.99 ) ( This can be derived by PhysObj:GetAngles() ), convert the vector ( 1 ,2, 3 ) in this physics object's local frame into world frame.","code":"print( \"Angle of the PhysObj: \", PhysObj:GetAngles() )\nprint( \"Vector in world frame: \", PhysObj:LocalToWorld( Vector( 1, 2, 3 ) ) )","output":"Angle of the PhysObj: 0.045 89.952 89.993;\nVector in world frame: 3.000585 0.999039 1.999603;"}},
{"function":{"name":"LocalToWorld","parent":"PhysObj","type":"classfunc","description":{"text":"Mapping a vector in local frame of the physics object to world frame.","note":"this function does translation and rotation, with translation done first."},"realm":"Shared","args":{"arg":{"text":"A vector in the physics object's local frame","name":"LocalVec","type":"Vector"}},"rets":{"ret":{"text":"The corresponding vector in world frame","name":"","type":"Vector"}}}},
{"function":{"name":"IsValid","parent":"PhysObj","type":"classfunc","description":"Returns if the physics object is valid/not NULL.","realm":"Shared","rets":{"ret":{"text":"isValid","name":"","type":"boolean"}}}},
{"function":{"name":"IsPenetrating","parent":"PhysObj","type":"classfunc","description":"Returns whenever the physics object is penetrating another physics object.\n\nThis is internally implemented as `PhysObj:HasGameFlag( FVPHYSICS_PENETRATING )` and thus is only updated for non-static physics objects.","realm":"Shared","rets":{"ret":{"text":"Whether the physics object is penetrating another object.","name":"","type":"boolean"}}}},
{"function":{"name":"IsMoveable","parent":"PhysObj","type":"classfunc","description":"Returns whenever the entity is able to move.","realm":"Shared","rets":{"ret":{"text":"movable","name":"","type":"boolean"}}}},
{"function":{"name":"IsMotionEnabled","parent":"PhysObj","type":"classfunc","description":"Returns if the physics object can move itself (by velocity, acceleration)","realm":"Shared","rets":{"ret":{"text":"motionEnabled","name":"","type":"boolean"}}}},
{"function":{"name":"IsDragEnabled","parent":"PhysObj","type":"classfunc","description":"Returns whenever the entity is affected by drag.","realm":"Shared","rets":{"ret":{"text":"dragEnabled","name":"","type":"boolean"}}}},
{"function":{"name":"IsGravityEnabled","parent":"PhysObj","type":"classfunc","description":"Returns whenever the entity is affected by gravity.","realm":"Shared","rets":{"ret":{"text":"gravitated","name":"","type":"boolean"}}}},
{"function":{"name":"IsCollisionEnabled","parent":"PhysObj","type":"classfunc","description":"Returns whenever the entity is able to collide or not.","realm":"Shared","rets":{"ret":{"text":"isCollisionEnabled","name":"","type":"boolean"}}}},
{"function":{"name":"IsAsleep","parent":"PhysObj","type":"classfunc","description":{"text":"Returns whether the physics object is \"sleeping\".\n\nSee  for more information.","page":"PhysObj:Sleep"},"realm":"Shared","rets":{"ret":{"text":"Whether the physics object is sleeping.","name":"","type":"boolean"}}}},
{"function":{"name":"GetVolume","parent":"PhysObj","type":"classfunc","description":"Returns the volume in source units³. Or nil if the PhysObj is a generated sphere or box.","realm":"Shared","rets":{"ret":{"text":"The volume or nil if the PhysObj is a generated sphere or box.","name":"","type":"number"}}}},
{"function":{"name":"HasGameFlag","parent":"PhysObj","type":"classfunc","description":"Returns whenever the specified flag(s) is/are set.","realm":"Shared","args":{"arg":{"text":"Bitflag, see .","name":"flags","type":"number","page":"Enums/FVPHYSICS"}},"rets":{"ret":{"text":"If flag was set or not","name":"","type":"boolean"}}}},
{"function":{"name":"GetVelocity","parent":"PhysObj","type":"classfunc","description":"Returns the absolute directional velocity of the physobject.","realm":"Shared","rets":{"ret":{"text":"velocity","name":"","type":"Vector"}}}},
{"function":{"name":"GetSurfaceArea","parent":"PhysObj","type":"classfunc","description":"Returns the surface area of the physics object in source-units². Or nil if the PhysObj is a generated sphere or box.","realm":"Shared","rets":{"ret":{"text":"The surface area or nil if the PhysObj is a generated sphere or box.","name":"","type":"number"}}}},
{"function":{"name":"GetVelocityAtPoint","parent":"PhysObj","type":"classfunc","description":"Returns the world velocity of a point in world coordinates about the object.","realm":"Shared","args":{"arg":{"name":"point","type":"Vector"}},"rets":{"ret":{"name":"","type":"Vector"}}}},
{"function":{"name":"GetStress","parent":"PhysObj","type":"classfunc","description":"Returns the stress of the entity.","realm":"Server","rets":{"ret":{"text":"exertedStress","name":"","type":"number"}}}},
{"function":{"name":"GetSpeedDamping","parent":"PhysObj","type":"classfunc","description":"Returns the speed damping of the physics object.","realm":"Shared","rets":{"ret":{"text":"speedDamping","name":"","type":"number"}}}},
{"function":{"name":"GetShadowPos","parent":"PhysObj","type":"classfunc","description":{"text":"Returns the position of the  shadow. See .","page":["PhysObj","PhysObj:UpdateShadow"]},"realm":"Shared","rets":{"ret":{"text":"The position of the  shadow.","name":"","type":"Vector","page":"PhysObj"}}}},
{"function":{"name":"GetRotDamping","parent":"PhysObj","type":"classfunc","description":"Returns the rotation damping of the physics object.","realm":"Shared","rets":{"ret":{"text":"The rotation damping","name":"","type":"number"}}}},
{"function":{"name":"GetShadowAngles","parent":"PhysObj","type":"classfunc","description":{"text":"Returns the angles of the  shadow. See .","page":["PhysObj","PhysObj:UpdateShadow"]},"realm":"Shared","rets":{"ret":{"text":"The angles of the  shadow.","name":"","type":"Angle","page":"PhysObj"}}}},
{"function":{"name":"GetPositionMatrix","parent":"PhysObj","type":"classfunc","description":{"text":"Returns the position and angle of the physics object as a 3x4 matrix ( is 4x4 so the fourth row goes unused). The first three columns store the angle as a [rotation matrix](https://en.wikipedia.org/wiki/Rotation_matrix), and the fourth column stores the position vector.","page":"VMatrix"},"realm":"Shared","rets":{"ret":{"text":"The position and angle matrix.","name":"","type":"VMatrix"}}}},
{"function":{"name":"GetPos","parent":"PhysObj","type":"classfunc","description":"Returns the position of the physics object.","realm":"Shared","rets":{"ret":{"text":"The position","name":"","type":"Vector"}}}},
{"function":{"name":"GetName","parent":"PhysObj","type":"classfunc","description":"Returns the name of the physics object.","realm":"Shared","rets":{"ret":{"text":"The name of the physics object.","name":"","type":"string"}}}},
{"function":{"name":"GetMeshConvexes","parent":"PhysObj","type":"classfunc","description":{"text":"Returns all convex physics meshes of the object. See  for more information.","page":"Entity.PhysicsInitMultiConvex"},"realm":"Shared","rets":{"ret":{"text":"Table of s where each  is an independent convex mesh and each three vertices represent a triangle. Returns nil if the physics object is a sphere.","name":"","type":"table","page":["Structures/MeshVertex","Structures/MeshVertex"]}}}},
{"function":{"name":"GetMaterial","parent":"PhysObj","type":"classfunc","description":"Returns the physical material of the physics object.","realm":"Shared","rets":{"ret":{"text":"The physical material","name":"","type":"string"}}}},
{"function":{"name":"GetMesh","parent":"PhysObj","type":"classfunc","description":"Returns the physics mesh of the object which is used for physobj-on-physobj collision.","realm":"Shared","rets":{"ret":{"text":"Table of s where each three vertices represent a triangle. Returns nil if the physics object is a sphere.","name":"","type":"table","page":"Structures/MeshVertex"}}}},
{"function":{"name":"GetMassCenter","parent":"PhysObj","type":"classfunc","description":"Returns the center of mass of the physics object as a local vector.","realm":"Shared","rets":{"ret":{"text":"The center of mass of the physics object.","name":"","type":"Vector"}}}},
{"function":{"name":"GetMass","parent":"PhysObj","type":"classfunc","description":"Returns the mass of the physics object.","realm":"Shared","rets":{"ret":{"text":"The mass in kilograms.","name":"","type":"number"}}}},
{"function":{"name":"GetInvMass","parent":"PhysObj","type":"classfunc","description":"Returns 1 divided by the physics object's mass.","realm":"Shared","rets":{"ret":{"text":"The inverted mass.","name":"","type":"number"}}}},
{"function":{"name":"GetInertia","parent":"PhysObj","type":"classfunc","description":"Returns the directional inertia of the physics object.","realm":"Shared","rets":{"ret":{"text":"directionalInertia","name":"","type":"Vector"}}}},
{"function":{"name":"GetInvInertia","parent":"PhysObj","type":"classfunc","description":"Returns 1 divided by the inertia.","realm":"Shared","rets":{"ret":{"text":"The inverted inertia","name":"","type":"number"}}}},
{"function":{"name":"GetFrictionSnapshot","parent":"PhysObj","type":"classfunc","description":"Returns the friction snapshot of this physics object. This is useful for determining if an object touching ground for example.","realm":"Server","added":"2020.03.17","rets":{"ret":{"text":"A table of tables containing the following data:\n*  Other - The other physics object we came in contact with\n*  EnergyAbsorbed - \n*  FrictionCoefficient - \n*  NormalForce - \n*  Normal - Direction of the friction event\n*  ContactPoint - Contact point of the friction event\n*  Material - Surface Property ID of our physics obj\n*  MaterialOther - Surface Property ID of the physics obj we came in contact with","name":"","type":"table","page":["PhysObj","number","number","number","Vector","Vector","number","number"]}}}},
{"function":{"name":"GetEntity","parent":"PhysObj","type":"classfunc","description":"Returns the parent entity of the physics object.","realm":"Shared","rets":{"ret":{"text":"parent","name":"","type":"Entity"}}}},
{"function":{"name":"GetDamping","parent":"PhysObj","type":"classfunc","description":"Returns the linear and angular damping of the physics object.","realm":"Shared","rets":{"ret":[{"text":"The linear damping","name":"","type":"number"},{"text":"The angular damping","name":"","type":"number"}]}}},
{"function":{"name":"GetEnergy","parent":"PhysObj","type":"classfunc","description":"Returns the kinetic energy of the physobject.","realm":"Shared","rets":{"ret":{"text":"The kinetic energy","name":"","type":"number"}}}},
{"function":{"name":"GetContents","parent":"PhysObj","type":"classfunc","description":{"text":"Returns the contents flag of the .","page":"PhysObj"},"realm":"Shared","rets":{"ret":{"text":"The .","name":"","type":"number","page":"Enums/CONTENTS"}}}},
{"function":{"name":"GetAngleVelocity","parent":"PhysObj","type":"classfunc","description":"Gets the angular velocity of the object in degrees per second.","realm":"Shared","rets":{"ret":{"text":"The angular velocity","name":"","type":"Vector"}}}},
{"function":{"name":"GetAngles","parent":"PhysObj","type":"classfunc","description":"Returns the angles of the physics object.","realm":"Shared","rets":{"ret":{"text":"The angles of the physics object.","name":"","type":"Angle"}}}},
{"function":{"name":"EnableMotion","parent":"PhysObj","type":"classfunc","description":{"text":"Sets whether the physobject should be able to move or not.\n\nThis is the exact method the Physics Gun uses to freeze props. If a motion-disabled physics object is grabbed with the physics gun, the object will be able to move again. To disallow this, use .","page":"GM:PhysgunPickup"},"realm":"Shared","args":{"arg":{"text":"True to enable, false to disable.","name":"enable","type":"boolean"}}}},
{"function":{"name":"GetAABB","parent":"PhysObj","type":"classfunc","description":"Returns the mins and max of the physics object.","realm":"Shared","rets":{"ret":[{"text":"Mins","name":"","type":"Vector"},{"text":"Maxs","name":"","type":"Vector"}]}}},
{"function":{"name":"EnableGravity","parent":"PhysObj","type":"classfunc","description":"Sets whether the PhysObject should be affected by gravity","realm":"Shared","args":{"arg":{"text":"True to enable, false to disable.","name":"enable","type":"boolean"}}}},
{"function":{"name":"EnableDrag","parent":"PhysObj","type":"classfunc","description":"Sets whenever the physics object should be affected by drag.","realm":"Shared","args":{"arg":{"text":"True to enable, false to disable.","name":"enable","type":"boolean"}}}},
{"function":{"name":"EnableCollisions","parent":"PhysObj","type":"classfunc","description":{"text":"Sets whether the physics object should collide with anything or not, including world.","warning":{"text":"This function currently has major problems with player collisions, and as such should be avoided at all costs.\n\n\n\nA better alternative to this function would be using ( COLLISION_GROUP_WORLD ).","page":"Entity:SetCollisionGroup"}},"realm":"Shared","args":{"arg":{"text":"True to enable, false to disable.","name":"enable","type":"boolean"}}}},
{"function":{"name":"ComputeShadowControl","parent":"PhysObj","type":"classfunc","description":"Allows you to move a PhysObj to a point and angle in 3D space.","realm":"Shared","args":{"arg":{"text":"The parameters for the shadow. See example code to see how its used.","name":"shadowparams","type":"table"}}},"example":{"description":"Move a PhysObj to vector 0 0 0 with angles 0 0 0.","code":"function ENT:Initialize()\n \n\tself:StartMotionController()\n\tself.ShadowParams = {}\n \nend\nfunction ENT:PhysicsSimulate( phys, deltatime )\n \n\tphys:Wake()\n \n\tself.ShadowParams.secondstoarrive = 1 // How long it takes to move to pos and rotate accordingly - only if it could move as fast as it want - damping and max speed/angular will make this invalid (Cannot be 0! Will give errors if you do)\n\tself.ShadowParams.pos = Vector( 0, 0, 0 ) // Where you want to move to\n\tself.ShadowParams.angle = Angle( 0, 0, 0 ) // Angle you want to move to\n\tself.ShadowParams.maxangular = 5000 //What should be the maximal angular force applied\n\tself.ShadowParams.maxangulardamp = 10000 // At which force/speed should it start damping the rotation\n\tself.ShadowParams.maxspeed = 1000000 // Maximal linear force applied\n\tself.ShadowParams.maxspeeddamp = 10000// Maximal linear force/speed before  damping\n\tself.ShadowParams.dampfactor = 0.8 // The percentage it should damp the linear/angular force if it reaches it's max amount\n\tself.ShadowParams.teleportdistance = 200 // If it's further away than this it'll teleport (Set to 0 to not teleport)\n\tself.ShadowParams.deltatime = deltatime // The deltatime it should use - just use the PhysicsSimulate one\n \n\tphys:ComputeShadowControl(self.ShadowParams)\n \nend"}},
{"function":{"name":"ClearGameFlag","parent":"PhysObj","type":"classfunc","description":"Removes one of more specified flags.","realm":"Shared","args":{"arg":{"text":"Bitflag, see .","name":"flags","type":"number","page":"Enums/FVPHYSICS"}}}},
{"function":{"name":"CalculateVelocityOffset","parent":"PhysObj","type":"classfunc","description":{"text":"Calculates the linear and angular velocities on the center of mass for an offset force impulse. The outputs can be directly passed to  and , respectively.","page":["PhysObj:AddVelocity","PhysObj:AddAngleVelocity"]},"realm":"Shared","args":{"arg":[{"text":"The initial force","name":"force","type":"Vector"},{"text":"The location of the force in world coordinates","name":"pos","type":"Vector"}]},"rets":{"ret":[{"text":"The calculated linear velocity from the force on the physics object's center of mass","name":"","type":"Vector"},{"text":"The calculated angular velocity from the force on the physics object's center of mass","name":"","type":"Vector"}]}}},
{"function":{"name":"CalculateForceOffset","parent":"PhysObj","type":"classfunc","description":{"text":"Calculates the force and torque on the center of mass for an offset force impulse. The outputs can be directly passed to  and , respectively.","page":["PhysObj:ApplyForceCenter","PhysObj:ApplyTorqueCenter"]},"realm":"Shared","args":{"arg":[{"text":"The initial force","name":"force","type":"Vector"},{"text":"The location of the force in world coordinates","name":"pos","type":"Vector"}]},"rets":{"ret":[{"text":"The calculated force on the physics object's center of mass","name":"","type":"Vector"},{"text":"The calculated torque on the physics object's center of mass","name":"","type":"Vector"}]}}},
{"function":{"name":"ApplyTorqueCenter","parent":"PhysObj","type":"classfunc","description":"Applies specified torque to the physics object.","realm":"Shared","args":{"arg":{"text":"The torque to be applied in kg * degrees / s.","name":"torque","type":"Vector"}}}},
{"function":{"name":"ApplyForceOffset","parent":"PhysObj","type":"classfunc","description":"Applies the specified force on the physics object at the specified position","realm":"Shared","args":{"arg":[{"text":"The force to be applied.","name":"force","type":"Vector"},{"text":"The position in world coordinates where the force is applied to the physics object.","name":"position","type":"Vector"}]}},"example":{"description":"Pull what the player is looking at towards him.","code":"local tr = Entity(1):GetEyeTrace()\nif IsValid(tr.Entity) then\n\tlocal phys = tr.Entity:GetPhysicsObjectNum(tr.PhysicsBone)\n\t\n\tlocal pushvec = tr.Normal * -100000\n\tlocal pushpos = tr.HitPos\n\t\n\tphys:ApplyForceOffset(pushvec, pushpos)\nend"}},
{"function":{"name":"ApplyForceCenter","parent":"PhysObj","type":"classfunc","description":{"text":"Applies the specified force to the physics object. (in Newtons)","note":{"text":"This will not work on players, use  instead.","page":"Entity:SetVelocity"}},"realm":"Shared","args":{"arg":{"text":"The force to be applied.","name":"force","type":"Vector"}}},"example":{"description":{"text":"An entity that Simulates it's own gravity by applying a force downward on the entity based on the force equation.\n\n(Force = mass * acceleration)\n\nSince, by default, entities already have gravity. The default gravity must be turned off by adding \"phys:EnableGravity(false)\" in the entities Initialize function so that the default gravity doesn't interfere with our custom gravity.\n\nNOTE: We can get the mass of the entity by using the GetMass() function.","note":"-9.80665 (meters / second^2)  Is the approximate acceleration of objects on Earth due to gravity. (It is negative because gravity pushes things downwards.)"},"code":"function ENT:Initialize()\n    self:SetModel(\"models/hunter/blocks/cube1x1x1.mdl\")\n\tself:PhysicsInit(SOLID_VPHYSICS)\n\tself:SetSolid(SOLID_VPHYSICS)\n\tself:SetMoveType(MOVETYPE_VPHYSICS)\n\n    if phys:IsValid() then\n        phys:EnableGravity(false) -- This is required. Since we are creating our own gravity.\n        phys:Wake()\n    end\nend\n\nfunction ENT:PhysicsUpdate(phys)\n    local phys = self:GetPhysicsObject()\n    phys:ApplyForceCenter(Vector(0,0,phys:GetMass()*-9.80665))\nend"}},
{"function":{"name":"AlignAngles","parent":"PhysObj","type":"classfunc","description":"Rotates the object so that it's angles are aligned to the ones inputted.","realm":"Shared","args":{"arg":[{"name":"from","type":"Angle"},{"name":"to","type":"Angle"}]},"rets":{"ret":{"name":"","type":"Angle"}}}},
{"function":{"name":"AddVelocity","parent":"PhysObj","type":"classfunc","description":"Adds the specified velocity to the current.","realm":"Shared","args":{"arg":{"text":"Additional velocity.","name":"velocity","type":"Vector"}}}},
{"function":{"name":"AddGameFlag","parent":"PhysObj","type":"classfunc","description":"Adds one or more bit flags.","realm":"Shared","args":{"arg":{"text":"Bitflag, see .","name":"flags","type":"number","page":"Enums/FVPHYSICS"}}}},
{"function":{"name":"AddAngleVelocity","parent":"PhysObj","type":"classfunc","description":"Adds the specified velocity to the current.","realm":"Shared","args":{"arg":{"text":"Additional velocity.","name":"angularVelocity","type":"Vector"}}}},
{"function":{"name":"TraceBox","parent":"PhysCollide","type":"classfunc","description":"Performs a trace against this PhysCollide with the given parameters. This can be used for both line traces and box traces.","realm":"Shared","args":{"arg":[{"text":"The origin for the PhysCollide during the trace","name":"origin","type":"Vector"},{"text":"The angles for the PhysCollide during the trace","name":"angles","type":"Angle"},{"text":"The start position of the trace","name":"rayStart","type":"Vector"},{"text":"The end position of the trace","name":"rayEnd","type":"Vector"},{"text":"The mins of the trace's bounds","name":"rayMins","type":"Vector"},{"text":"The maxs of the trace's bounds","name":"rayMaxs","type":"Vector"}]},"rets":{"ret":[{"text":"Hit position of the trace. This is false if the trace did not hit.","name":"","type":"Vector"},{"text":"Hit normal of the trace","name":"","type":"Vector"},{"text":"Fraction of the trace. This is calculated from the distance between startPos, hitPos, and endPos.","name":"","type":"number"}]}}},
{"function":{"name":"SetMinLookAheadDistance","parent":"PathFollower","type":"classfunc","description":"Sets minimum range movement goal must be along path","realm":"Server","args":{"arg":{"text":"The minimum look ahead distance","name":"mindist","type":"number"}}}},
{"function":{"name":"IsValid","parent":"PhysCollide","type":"classfunc","description":{"text":"Checks whether this  object is valid or not.\n\nYou should just use  instead.","page":["PhysCollide","Global.IsValid"]},"realm":"Shared","rets":{"ret":{"text":"Is valid or not.","name":"","type":"boolean"}}}},
{"function":{"name":"SetGoalTolerance","parent":"PathFollower","type":"classfunc","description":"How close we can get to the goal to call it done","realm":"Server","args":{"arg":{"text":"The distance we're setting it to","name":"distance","type":"number"}}}},
{"function":{"name":"ResetAge","parent":"PathFollower","type":"classfunc","description":{"text":"Resets the age which is retrieved by  to 0.","page":"PathFollower:GetAge"},"realm":"Server"}},
{"function":{"name":"MoveCursorToStart","parent":"PathFollower","type":"classfunc","description":"Moves the cursor to the end of the path","realm":"Server"}},
{"function":{"name":"MoveCursorToEnd","parent":"PathFollower","type":"classfunc","description":"Moves the cursor to the end of the path","realm":"Server"}},
{"function":{"name":"MoveCursorToClosestPosition","parent":"PathFollower","type":"classfunc","description":"Moves the cursor of the path to the closest position compared to given vector.","realm":"Server","args":{"arg":[{"name":"pos","type":"Vector"},{"text":"Seek type\n\n\n0 = SEEK_ENTIRE_PATH - Search the entire path length\n\n\n1 = SEEK_AHEAD - Search from current cursor position forward toward end of path\n\n\n2 = SEEK_BEHIND - Search from current cursor position backward toward path start","name":"type","type":"number","default":"0"},{"name":"alongLimit","type":"number","default":"0"}]}}},
{"function":{"name":"MoveCursorTo","parent":"PathFollower","type":"classfunc","description":{"text":"Sets the cursor position to given distance.\n\nFor relative distance, see .","page":"PathFollower:MoveCursor"},"realm":"Server","args":{"arg":{"text":"The distance to move the cursor (in world units)","name":"distance","type":"number"}}}},
{"function":{"name":"MoveCursor","parent":"PathFollower","type":"classfunc","description":{"text":"Moves the cursor by give distance.\n\nFor a function that sets the distance, see .","page":"PathFollower:MoveCursorTo"},"realm":"Server","args":{"arg":{"text":"The distance to move the cursor (in relative world units)","name":"distance","type":"number"}}}},
{"function":{"name":"LastSegment","parent":"PathFollower","type":"classfunc","description":"Returns the last segment of the path.","realm":"Server","rets":{"ret":{"text":"A table with .","name":"","type":"table","page":"Structures/PathSegment"}}}},
{"function":{"name":"IsValid","parent":"PathFollower","type":"classfunc","description":"Returns true if the path is valid","realm":"Server","rets":{"ret":{"text":"Wether the path is valid or not.","name":"","type":"boolean"}}}},
{"function":{"name":"Invalidate","parent":"PathFollower","type":"classfunc","description":"Invalidates the current path","realm":"Server"}},
{"function":{"name":"GetStart","parent":"PathFollower","type":"classfunc","description":"Returns the path start position","realm":"Server","rets":{"ret":{"text":"The start position","name":"","type":"Vector"}}}},
{"function":{"name":"GetPositionOnPath","parent":"PathFollower","type":"classfunc","description":"Returns the vector position of distance along path","realm":"Server","args":{"arg":{"text":"The distance along the path to query","name":"distance","type":"number"}},"rets":{"ret":{"text":"The position","name":"","type":"Vector"}}},"example":{"description":{"text":"Gets the current position on the path as a .","page":"Vector"},"code":"path:GetPositionOnPath( path:GetCursorPosition() )"}},
{"function":{"name":"GetMinLookAheadDistance","parent":"PathFollower","type":"classfunc","description":"Returns the minimum range movement goal must be along path.","realm":"Server","rets":{"ret":{"text":"The minimum look ahead distance","name":"","type":"number"}}}},
{"function":{"name":"GetLength","parent":"PathFollower","type":"classfunc","description":"Returns the total length of the path","realm":"Server","rets":{"ret":{"text":"The length of the path","name":"","type":"number"}}}},
{"function":{"name":"GetHindrance","parent":"PathFollower","type":"classfunc","realm":"Server","rets":{"ret":{"name":"","type":"Entity"}}}},
{"function":{"name":"Destroy","parent":"PhysCollide","type":"classfunc","description":{"text":"Destroys the  object.","page":"PhysCollide"},"realm":"Shared"}},
{"function":{"name":"GetGoalTolerance","parent":"PathFollower","type":"classfunc","description":"Returns how close we can get to the goal to call it done.","realm":"Server","rets":{"ret":{"text":"The distance we're setting it to","name":"","type":"number"}}}},
{"function":{"name":"GetEnd","parent":"PathFollower","type":"classfunc","description":"Returns the path end position","realm":"Server","rets":{"ret":{"text":"The end position","name":"","type":"Vector"}}}},
{"function":{"name":"GetCursorPosition","parent":"PathFollower","type":"classfunc","description":"Returns the current progress along the path","realm":"Server","rets":{"ret":{"text":"The current progress","name":"","type":"number"}}}},
{"function":{"name":"GetCursorData","parent":"PathFollower","type":"classfunc","description":"Returns the cursor data","realm":"Server","rets":{"ret":{"text":"A table with 3 keys:\n curvature\n\n\n forward\n\n\n pos","name":"","type":"table","page":["number","Vector","Vector"]}}}},
{"function":{"name":"GetCurrentGoal","parent":"PathFollower","type":"classfunc","description":{"text":"Returns the current goal data. Can return nil if the current goal is invalid, for example immediately after .","page":"PathFollower:Update"},"realm":"Server","rets":{"ret":{"text":"A table with .","name":"","type":"table","page":"Structures/PathSegment"}}}},
{"function":{"name":"GetClosestPosition","parent":"PathFollower","type":"classfunc","description":"The closest position along the path to a position","realm":"Server","args":{"arg":{"text":"The point we're querying for","name":"position","type":"Vector"}},"rets":{"ret":{"text":"The closest position on the path","name":"","type":"Vector"}}}},
{"function":{"name":"GetClosestPosition","parent":"PathFollower","type":"classfunc","description":"The closest position along the path to a position","realm":"Server","args":{"arg":{"text":"The point we're querying for","name":"position","type":"Vector"}},"rets":{"ret":{"text":"The closest position on the path","name":"","type":"Vector"}}}},
{"function":{"name":"GetAge","parent":"PathFollower","type":"classfunc","description":"Returns the age since the path was built","realm":"Server","rets":{"ret":{"text":"Path age","name":"","type":"number"}}}},
{"function":{"name":"Draw","parent":"PathFollower","type":"classfunc","description":"Draws the path. This is meant for debugging - and uses debug overlay.","realm":"Server"}},
{"function":{"name":"FirstSegment","parent":"PathFollower","type":"classfunc","description":"Returns the first segment of the path.","realm":"Server","rets":{"ret":{"text":"A table with .","name":"","type":"table","page":"Structures/PathSegment"}}}},
{"function":{"name":"Compute","parent":"PathFollower","type":"classfunc","description":"Compute shortest path from bot to 'goal' via A* algorithm.","realm":"Server","args":{"arg":[{"text":"The nextbot we're generating for","name":"from","type":"NextBot"},{"text":"To point","name":"to","type":"Vector"},{"text":"A funtion that allows you to alter the path generation. See example below for the default function.","name":"generator","type":"function","default":"nil"}]},"rets":{"ret":{"text":"* If returns true, path was found to the goal position.\n* If returns false, path may either be invalid (use IsValid() to check), or valid but doesn't reach all the way to the goal.","name":"","type":"boolean"}}},"example":{"description":"The default path generator. You **do not have** to provide the PathFollower.Compute any generator functions if you want to use the default generator.","code":"path:Compute( self, pos, function( area, fromArea, ladder, elevator, length )\n\tif ( !IsValid( fromArea ) ) then\n\n\t\t// first area in path, no cost\n\t\treturn 0\n\t\n\telse\n\t\n\t\tif ( !self.loco:IsAreaTraversable( area ) ) then\n\t\t\t// our locomotor says we can't move here\n\t\t\treturn -1\n\t\tend\n\n\t\t// compute distance traveled along path so far\n\t\tlocal dist = 0\n\n\t\tif ( IsValid( ladder ) ) then\n\t\t\tdist = ladder:GetLength()\n\t\telseif ( length > 0 ) then\n\t\t\t// optimization to avoid recomputing length\n\t\t\tdist = length\n\t\telse\n\t\t\tdist = ( area:GetCenter() - fromArea:GetCenter() ):GetLength()\n\t\tend\n\n\t\tlocal cost = dist + fromArea:GetCostSoFar()\n\n\t\t// check height change\n\t\tlocal deltaZ = fromArea:ComputeAdjacentConnectionHeightChange( area )\n\t\tif ( deltaZ >= self.loco:GetStepHeight() ) then\n\t\t\tif ( deltaZ >= self.loco:GetMaxJumpHeight() ) then\n\t\t\t\t// too high to reach\n\t\t\t\treturn -1\n\t\t\tend\n\n\t\t\t// jumping is slower than flat ground\n\t\t\tlocal jumpPenalty = 5\n\t\t\tcost = cost + jumpPenalty * dist\n\t\telseif ( deltaZ < -self.loco:GetDeathDropHeight() ) then\n\t\t\t// too far to drop\n\t\t\treturn -1\n\t\tend\n\n\t\treturn cost\n\tend\nend )"}},
{"function":{"name":"Chase","parent":"PathFollower","type":"classfunc","description":{"text":"If you created your path with type \"Chase\" this functions should be used in place of  to cause the bot to chase the specified entity.","page":"PathFollower:Update"},"realm":"Server","args":{"arg":[{"text":"The bot to update along the path","name":"bot","type":"NextBot"},{"text":"The entity we want to chase","name":"ent","type":"Entity"}]}}},
{"function":{"name":"Valid","parent":"Panel","type":"classfunc","description":{"text":"Returns if a given panel is valid or not.","deprecated":{"text":"Use  instead.","page":"Panel:IsValid"}},"realm":"Client","rets":{"ret":{"text":"Whether the panel is valid or not, true being it is, false being it isn't.","name":"","type":"boolean"}}}},
{"function":{"name":"UpdateHTMLTexture","parent":"Panel","type":"classfunc","description":{"text":"Forcibly updates the panels' HTML Material, similar to when Paint is called on it.This is only useful if the panel is not normally visible, i.e the panel exists purely for its HTML Material.","br":"","note":[{"text":"Only works on with panels that have a HTML Material. See  for more details.","page":"Panel:GetHTMLMaterial"},{"text":"A good place to call this is in the  hook","page":"GM:PreRender"}]},"realm":"Client"}},
{"function":{"name":"Undo","parent":"Panel","type":"classfunc","description":{"text":"Restores the last saved state (caret position and the text inside) of a . Should act identically to pressing CTRL+Z in a .\n\nSee also .","page":["TextEntry","TextEntry","Panel:SaveUndoState"]},"realm":"Client"}},
{"function":{"name":"Undo","parent":"Panel","type":"classfunc","description":{"text":"Restores the last saved state (caret position and the text inside) of a . Should act identically to pressing CTRL+Z in a .\n\nSee also .","page":["TextEntry","TextEntry","Panel:SaveUndoState"]},"realm":"Client"}},
{"function":{"name":"ToggleSelection","parent":"Panel","type":"classfunc","description":{"text":"Toggles the selected state of a selectable panel object. This functionality is set with  and checked with . To check whether the object is selected or not,  is used.","page":["Panel:SetSelectable","Panel:IsSelectable","Panel:IsSelected"]},"realm":"Client"}},
{"function":{"name":"ToggleVisible","parent":"Panel","type":"classfunc","description":"Toggles the visibility of a panel and all its children.","realm":"Client"}},
{"function":{"name":"StretchToParent","parent":"Panel","type":"classfunc","description":"Sets the dimensions of the panel to fill its parent. It will only stretch in directions that aren't nil.","realm":"Client","args":{"arg":[{"text":"The left offset to the parent.","name":"offsetLeft","type":"number"},{"text":"The top offset to the parent.","name":"offsetTop","type":"number"},{"text":"The right offset to the parent.","name":"offsetRight","type":"number"},{"text":"The bottom offset to the parent.","name":"offsetBottom","type":"number"}]}}},
{"function":{"name":"Stop","parent":"Panel","type":"classfunc","description":"Stops all panel animations by clearing its animation list. This also clears all delayed animations.","realm":"Client"}},
{"function":{"name":"StretchRightTo","parent":"Panel","type":"classfunc","description":"Resizes the panel object's width so that its right edge is aligned with the left of the passed panel. An offset greater than zero will reduce the panel's width to leave a gap between it and the passed panel.","realm":"Client","args":{"arg":[{"text":"The panel to align the right edge of this one with.","name":"tgtPanel","type":"Panel"},{"text":"The gap to leave between this and the passed panel. Negative values will cause the panel's width to increase, forming an overlap.","name":"offset","type":"number","default":"0"}]}}},
{"function":{"name":"StretchBottomTo","parent":"Panel","type":"classfunc","description":"Resizes the panel object's height so that its bottom is aligned with the top of the passed panel. An offset greater than zero will reduce the panel's height to leave a gap between it and the passed panel.","realm":"Client","args":{"arg":[{"text":"The panel to align the bottom of this one with.","name":"tgtPanel","type":"Panel"},{"text":"The gap to leave between this and the passed panel. Negative values will cause the panel's height to increase, forming an overlap.","name":"offset","type":"number","default":"0"}]}}},
{"function":{"name":"StartBoxSelection","parent":"Panel","type":"classfunc","description":{"text":"Begins a box selection, enables mouse capture for the panel object, and sets the start point of the selection box to the mouse cursor's position, relative to this object. For this to work, either the object or its parent must be enabled as a selection canvas. This is set using .","page":"Panel:SetSelectionCanvas"},"realm":"Client"}},
{"function":{"name":"SlideDown","parent":"Panel","type":"classfunc","description":"Slides the panel in from above.","realm":"Client","args":{"arg":{"text":"Time to complete the animation.","name":"Length","type":"number"}}}},
{"function":{"name":"SlideUp","parent":"Panel","type":"classfunc","description":"Slides the panel out to the top.","realm":"Client","args":{"arg":{"text":"Time to complete the animation.","name":"Length","type":"number"}}}},
{"function":{"name":"SizeToContents","parent":"Panel","type":"classfunc","description":{"text":"Resizes the panel so that its width and height fit all of the content inside.","note":{"text":"Only works on  derived panels such as  by default, and on any panel that manually implemented the  method, such as  and .","page":["Label","DLabel","Panel:SizeToContents","DNumberWang","DImage"]},"warning":"You must call this function **AFTER** setting text/font, adjusting child panels or otherwise altering the panel."},"realm":"Client"}},
{"function":{"name":"SizeToContentsX","parent":"Panel","type":"classfunc","description":{"text":"Resizes the panel object's width to accommodate all child objects/contents.\n\nOnly works on  derived panels such as  by default, and on any panel that manually implemented  method.","page":["Label","DLabel","Panel:GetContentSize"],"note":"You must call this function **AFTER** setting text/font or adjusting child panels."},"realm":"Client","args":{"arg":{"text":"The number of extra pixels to add to the width. Can be a negative number, to reduce the width.","name":"addVal","type":"number","default":"0"}}}},
{"function":{"name":"SizeToContentsY","parent":"Panel","type":"classfunc","description":{"text":"Resizes the panel object's height to accommodate all child objects/contents.\n\nOnly works on  derived panels such as  by default, and on any panel that manually implemented  method.","page":["Label","DLabel","Panel:GetContentSize"],"note":"You must call this function **AFTER** setting text/font or adjusting child panels."},"realm":"Client","args":{"arg":{"text":"The number of extra pixels to add to the height.","name":"addVal","type":"number","default":"0"}}}},
{"function":{"name":"SizeToChildren","parent":"Panel","type":"classfunc","description":{"text":"Resizes the panel to fit the bounds of its children.","note":[{"text":"Your panel must have its layout updated () for this function to work properly.","page":"Panel:InvalidateLayout"},"The sizeW and sizeH parameters are false by default. Therefore, calling this function with no arguments will result in a no-op."]},"realm":"Client","args":{"arg":[{"text":"Resize with width of the panel.","name":"sizeW","type":"boolean","default":"false"},{"text":"Resize the height of the panel.","name":"sizeH","type":"boolean","default":"false"}]}},"example":{"description":{"text":"Using","page":"Panel:InvalidateLayout"},"code":"local Frame = vgui.Create( \"DFrame\" )\nFrame:SetSize( 300, 400 )\nFrame:Center()\nFrame:MakePopup()\nFrame:SetSizable( true )\n\n-- with :InvalidateLayout(true)\nlocal backgroundPanel = vgui.Create( \"DPanel\", Frame )\nbackgroundPanel:Dock( TOP )\nbackgroundPanel:DockPadding( 4, 4, 4, 4 )\nbackgroundPanel:DockMargin( 0, 0, 0, 4 )\n\nlocal button1 = vgui.Create( \"DButton\", backgroundPanel )\nbutton1:Dock( TOP )\nbutton1:DockMargin( 0, 0, 0, 4 )\nbutton1:SetTall( 60 )\nbutton1:SetText( \"c1\" )\n\nlocal button2 = vgui.Create( \"DButton\", backgroundPanel )\nbutton2:Dock( TOP )\nbutton2:SetTall( 60 )\nbutton2:SetText( \"c2\" )\n\nbackgroundPanel:InvalidateLayout( true )\nbackgroundPanel:SizeToChildren( false, true )\n\n\n-- now w/o :InvalidateLayout\nlocal backgroundPanel = vgui.Create( \"DPanel\", Frame )\nbackgroundPanel:Dock( TOP )\nbackgroundPanel:DockPadding( 4, 4, 4, 4 )\n\nlocal button1 = vgui.Create( \"DButton\", backgroundPanel )\nbutton1:Dock( TOP )\nbutton1:DockMargin( 0, 0, 0, 4 )\nbutton1:SetTall( 60 )\nbutton1:SetText( \"c1\" )\n\nlocal button2 = vgui.Create( \"DButton\", backgroundPanel )\nbutton2:Dock( TOP )\nbutton2:SetTall( 60 )\nbutton2:SetText( \"c2\" )\n\nbackgroundPanel:SizeToChildren( false, true )","output":{"image":{"src":"panel_stc_invalidation_ex1.png"}}}},
{"function":{"name":"Show","parent":"Panel","type":"classfunc","description":"Makes a panel visible.","realm":"Client"}},
{"function":{"name":"SizeTo","parent":"Panel","type":"classfunc","description":"Uses animation to resize the panel to the specified size.","realm":"Client","args":{"arg":[{"text":"The target width of the panel. Use -1 to retain the current width.","name":"sizeW","type":"number","default":"0"},{"text":"The target height of the panel. Use -1 to retain the current height.","name":"sizeH","type":"number","default":"0"},{"text":"The time to perform the animation within.","name":"time","type":"number"},{"text":"The delay before the animation starts.","name":"delay","type":"number","default":"0"},{"text":"Easing of the start and/or end speed of the animation. See  for how this works.","name":"ease","type":"number","default":"-1","page":"Panel:NewAnimation"},{"text":"The function to be called once the animation finishes. Arguments are:\n*  animData - The \n*  pnl - The panel object that was resized.","name":"callback","type":"function","page":["table","AnimationData that was used.","Panel"]}]}}},
{"function":{"name":"SetZPos","parent":"Panel","type":"classfunc","description":{"text":"Sets the panels z position which determines the rendering order.\n\nPanels with lower z positions appear behind panels with higher z positions.\n\nThis also controls in which order panels docked with  appears.","page":"Panel:Dock"},"realm":"Client","args":{"arg":{"text":"The z position of the panel. \nCan't be lower than -32768 or higher than 32767.","name":"zIndex","type":"number","br":""}}}},
{"function":{"name":"SetWrap","parent":"Panel","type":"classfunc","description":{"text":"Sets whether text wrapping should be enabled or disabled on  and  panels.\nUse  to automatically correct vertical size;  will not set the correct height.","page":["Label","DLabel","DLabel:SetAutoStretchVertical","Panel:SizeToContents"]},"realm":"Client","args":{"arg":{"text":"True to enable text wrapping, false otherwise.","name":"wrap","type":"boolean"}}},"example":{"description":"Creates two labels in a panel and sets the text wrapping to false and true respectively.","code":"-- Background panel\nBGPanel = vgui.Create(\"DPanel\")\nBGPanel:SetSize(300, 130)\nBGPanel:Center()\nBGPanel:SetBackgroundColor(Color(0, 0, 0))\n\t\t\n-- Label with no text wrapping\nlocal lbl_nowrap = vgui.Create(\"DLabel\", BGPanel)\nlbl_nowrap:SetPos(10, 10)\nlbl_nowrap:SetSize(280, 50)\t\t\nlbl_nowrap:SetFont(\"GModNotify\")\nlbl_nowrap:SetText(\"This is a label that has text wrapping disabled.\")\n\nlbl_nowrap:SetWrap(false)\n\n-- Label with text wrapping\nlocal lbl_wrap = vgui.Create(\"DLabel\", BGPanel)\nlbl_wrap:SetPos(10, 70)\nlbl_wrap:SetSize(280, 50)\nlbl_wrap:SetFont(\"GModNotify\")\nlbl_wrap:SetText(\"This is a label that has text wrapping enabled.\")\n\nlbl_wrap:SetWrap(true)","output":{"image":{"src":"Panel_SetWrap_example1.png"}}}},
{"function":{"name":"SetWorldClicker","parent":"Panel","type":"classfunc","description":{"text":"This makes it so that when you're hovering over this panel you can `click` on the world. Your viewmodel will aim etc. This is primarily used for the Sandbox context menu.","bug":{"text":"This function doesn't scale with custom FOV specified by  or .","issue":"3467","page":["GM:CalcView","WEAPON:TranslateFOV"]}},"realm":"Client","args":{"arg":{"name":"enabled","type":"boolean"}}}},
{"function":{"name":"SetWidth","parent":"Panel","type":"classfunc","description":{"text":"Sets the width of the panel.\n\nCalls  and marks this panel for layout ().\n\n\nSee also .","page":["PANEL:OnSizeChanged","Panel:InvalidateLayout","Panel:SetSize"]},"realm":"Client","args":{"arg":{"text":"The new width of the panel.","name":"width","type":"number"}}}},
{"function":{"name":"SetWide","parent":"Panel","type":"classfunc","description":{"text":"Sets width of a panel. An alias of .","page":"Panel:SetWidth"},"realm":"Client","args":{"arg":{"text":"Desired width to set","name":"width","type":"number"}}}},
{"function":{"name":"SetVisible","parent":"Panel","type":"classfunc","description":"Sets the \"visibility\" of the panel.","realm":"Client","args":{"arg":{"text":"The visibility of the panel.","name":"visible","type":"boolean"}}}},
{"function":{"name":"SetVerticalScrollbarEnabled","parent":"Panel","type":"classfunc","description":{"text":"Sets the visibility of the vertical scrollbar.\n\nWorks for  and .","page":["RichText","TextEntry"]},"realm":"Client","args":{"arg":{"text":"True to display the vertical text scroll bar, false to hide it.","name":"display","type":"boolean","default":"false"}}}},
{"function":{"name":"SetURL","parent":"Panel","type":"classfunc","description":{"text":"Sets the URL of a link-based panel such as .","page":"DLabelURL"},"realm":"Client","args":{"arg":{"text":"The URL to set. This **must** begin with `http://`.","name":"url","type":"string"}}}},
{"function":{"name":"SetUnderlineFont","parent":"Panel","type":"classfunc","description":{"text":"Sets the underlined font for use by clickable text in a . See also \n\nThis function will only work on  panels.","page":["RichText","Panel:InsertClickableTextStart","RichText"]},"realm":"Client","added":"2020.03.17","args":{"arg":{"text":"The name of the font.\n\nSee  for a list of existing fonts.\nAlternatively, use  to create your own custom font.","name":"fontName","type":"string","page":[",hereDefault_Fonts","surface.CreateFont"]}}}},
{"function":{"name":"SetTooltipPanel","parent":"Panel","type":"classfunc","description":{"text":"Sets the panel to be displayed as a tooltip when a player hovers over the panel object with their cursor. Note that it will not override the default  panel.","page":"DTooltip","note":{"text":"will override this functionality.","page":"Panel:SetTooltip"},"warning":[{"text":"Calling this from  is too late! The tooltip will not be displayed or be updated.","page":"PANEL:OnCursorEntered"},"Given panel or the previously set one will NOT be automatically removed."]},"realm":"Client","args":{"arg":{"text":"The panel to use as the tooltip.","name":"tooltipPanel","type":"Panel","default":"nil"}}},"example":{"description":"Example usage of this function","code":"local pnl = vgui.Create( \"DFrame\" )\npnl:SetSize( 500, 500 )\npnl:Center()\npnl:MakePopup()\n\nlocal p = vgui.Create( \"Panel\" )\np:SetSize( 100, 100 )\np:SetVisible( false )\np.Paint = function( s, w, h ) draw.RoundedBox( 0, 0, 0, w, h, Color( 255, 0, 0 ) ) end\n\nlocal c = vgui.Create( \"DButton\", p )\nc:SetText( \"test\" )\nc:SetSize( 50, 50 )\nc:SetPos( 5, 5 )\n\nlocal b = pnl:Add( \"DButton\" )\nb:Dock( TOP )\n--b:SetTooltip( \"test\" ) -- This will stop SetTooltipPanel from working.\nb:SetTooltipPanel( p )"}},
{"function":{"name":"SetTooltip","parent":"Panel","type":"classfunc","description":"Sets the tooltip to be displayed when a player hovers over the panel object with their cursor.","realm":"Client","args":{"arg":{"text":"The text to be displayed in the tooltip. Set false to disable it.","name":"str","type":"string"}}},"example":{"description":"To disable tooltip set first argument to false","code":"local frame = vgui.Create(\"DFrame\")\nframe:SetSize(96, 96)\nframe:Center()\nframe:MakePopup(true)\n\nlocal icon = frame:Add(\"SpawnIcon\")\nicon:SetPos(0, 20)\nicon:SetSize(64, 64)\nicon:SetModel(\"models/props_junk/watermelon01.mdl\")\nicon:SetTooltip(false) -- disable tooltip for this panel"}},
{"function":{"name":"SetToFullHeight","parent":"Panel","type":"classfunc","description":{"text":"Sets the height of a  element to accommodate the text inside.","page":"RichText","note":{"text":"This function internally relies on , so it should be called at least a couple frames after modifying the text using","page":["Panel:GetNumLines","Panel:AppendText"]}},"realm":"Client"},"example":{"description":{"text":"Creates a  panel with no set height. The proper height is applied 2 seconds after being created in order to show the difference.","page":"RichText"},"code":"-- Create a window frame\nTextFrame = vgui.Create(\"DFrame\")\nTextFrame:SetSize(250, 210)\nTextFrame:Center()\nTextFrame:SetTitle(\"No set height\")\nTextFrame:MakePopup()\n\n-- RichText panel\nlocal richtext = vgui.Create(\"RichText\", TextFrame)\nrichtext:SetPos(10, 30)\nrichtext:SetWidth(230)\n\n-- Block of text\nrichtext:AppendText(\"#ServerBrowser_ServerWarning_MaxPlayers\")\n\nfunction richtext:PerformLayout() self:SetBGColor(Color(0, 0, 0)) end\n\n-- Set to full height after 2 seconds\ntimer.Simple(2, function()\n\n\trichtext:SetToFullHeight()\n\t\n\tTextFrame:SetTitle(\"Full set height\")\n\t\nend)","output":{"image":{"src":"RichText_SetToFullHeight_example1.gif"}}}},
{"function":{"name":"SetTextInset","parent":"Panel","type":"classfunc","description":{"text":"Sets the left and top text margins of a text-based panel object, such as a  or .","page":["DButton","DLabel"]},"realm":"Client","args":{"arg":[{"text":"The left margin for the text, in pixels. This will only affect centered text if the margin is greater than its x-coordinate.","name":"insetX","type":"number"},{"text":"The top margin for the text, in pixels.","name":"insetY","type":"number"}]}}},
{"function":{"name":"SetText","parent":"Panel","type":"classfunc","description":{"text":"Sets the text value of a panel object containing text, such as a ,  or   and their derivatives, such as ,  or .","page":["Label","TextEntry","RichText","DLabel","DTextEntry","DButton"],"warning":{"text":"When used on a  or its derivatives (  and  ), it will automatically call , meaning that you should avoid running this function every frame on these panels to avoid unnecessary performance loss.","page":["Label","DLabel","DButton","Panel:InvalidateLayout"]}},"realm":"Client","args":{"arg":{"text":"The text value to set.","name":"text","type":"string"}}},"example":{"description":{"text":"Creates a  element and sets the text to a localized string; the default VAC rejection message.","page":"RichText"},"code":"-- Window frame for the RichText\nTextFrame = vgui.Create(\"DFrame\")\nTextFrame:SetSize(250, 150)\nTextFrame:Center()\nTextFrame:SetTitle(\"#VAC_ConnectionRefusedTitle\") -- Results in \"Connection Refused - VAC\"\n\n-- RichText panel\nlocal richtext = vgui.Create(\"RichText\", TextFrame)\nrichtext:Dock(FILL)\n\n-- Set the text to the message you get when VAC banned\nrichtext:SetText(\"#VAC_ConnectionRefusedDetail\")","output":{"image":{"src":"RichText_SetText_example1.png"}}}},
{"function":{"name":"SetTerm","parent":"Panel","type":"classfunc","description":{"text":"Removes the panel after given time in seconds.","note":{"text":"This function will not work if  is overridden, unless  is called every frame.","page":["PANEL:AnimationThink","Panel:AnimationThinkInternal"]}},"realm":"Client","args":{"arg":{"text":"Delay in seconds after which the panel should be removed.","name":"delay","type":"number"}}}},
{"function":{"name":"SetTall","parent":"Panel","type":"classfunc","description":{"text":"Sets height of a panel. An alias of .","page":"Panel:SetHeight"},"realm":"Client","args":{"arg":{"text":"Desired height to set","name":"height","type":"number"}}}},
{"function":{"name":"SetTabPosition","parent":"Panel","type":"classfunc","description":"When TAB is pressed, the next selectable panel in the number sequence is selected.","realm":"Client","args":{"arg":{"name":"position","type":"number"}}},"example":{"description":"Creates a menu to put information in with SetTablePosition application.","code":"local Panel = vgui.Create(\"DFrame\")\nPanel:SetSize(500,250)\nPanel:Center()\nPanel:SetText(\"My Information\")\nPanel:MakePopup()\n\nlocal FirstName = vgui.Create(\"DTextEntry\", Panel)\nFirstName:SetSize(400,35)\nFirstName:SetPos(50, 50)\nFirstName:SetPlaceholderText(\"First Name\")\nFirstName:SetTabPosition( 1 )\n\nlocal LastName = vgui.Create(\"DTextEntry\", Panel)\nLastName:SetSize(400,35)\nLastName:SetPos(50, 100)\nLastName:SetPlaceholderText(\"Last Name\")\nLastName:SetTabPosition( 2 )\n\nlocal FavoriteColor = vgui.Create(\"DTextEntry\", Panel)\nFavoriteColor:SetSize(400,35)\nFavoriteColor:SetPos(50, 150)\nFavoriteColor:SetPlaceholderText(\"Favorite Color\")\nFavoriteColor:SetTabPosition( 3 )\n\nlocal CompletedButton = vgui.Create(\"DButton\", Panel)\nCompletedButton:SetSize(200,35)\nCompletedButton:SetPos(150, 200)\nCompletedButton:SetText(\"Done\")\nfunction CompletedButton:DoClick()\n    LocalPlayer():ConCommand(\"say My name is \" .. FirstName:GetText() .. \" \" .. LastName:GetText() .. \" and my favorite color is \" .. FavoriteColor:GetText() .. \"!\")\n    Panel:Remove()\nend","output":"A Panel with a functional TAB Button."}},
{"function":{"name":"SetSteamID","parent":"Panel","type":"classfunc","description":{"text":"Used by  panels to load an avatar by its 64-bit Steam ID (community ID).","page":"AvatarImage"},"realm":"Client","args":{"arg":[{"text":"The 64bit SteamID of the player to load avatar of","name":"steamid","type":"string"},{"text":"The size of the avatar to use. Acceptable sizes are 32, 64, 184.","name":"size","type":"number"}]}},"example":{"description":"Creates a grid of randomly generated Steam avatars which link to their corresponding Steam user pages.","code":"-- Returns a random 64-bit Steam ID between STEAM_0:0:1 and STEAM_0:1:100000000\nfunction GetRandomSteamID()\n\treturn \"7656119\"..tostring(7960265728+math.random(1, 200000000))\nend\n\n-- Create the Steam User Grid\n-- Arg1: the size of each avatar\n-- Arg2: the size to load each avatar (16, 32, 64, 84, 128, 184)\nfunction CreateSteamUserGrid(av_size, av_res)\n\n\t-- Remove this block of code if you do not mind loading thousands of avatars\n\tif(av_size < 64) then\n\t\tError(\"Avatar size cannot be less than 64 square pixels.\\n\")\n\t\treturn\n\tend\n\t\n\t-- Delete existing grid\n\tif(SteamUserGrid) then SteamUserGrid:Remove() end\n\t\n\t-- The amount of avatars we can fit width-wise and height-wise\n\tlocal w_count = math.floor(ScrW()/av_size)\n\tlocal h_count = math.floor((ScrH()-25)/av_size)\t-- 25 = frame header size\n\t\t\n\t-- Container panel\n\tSteamUserGrid = vgui.Create(\"DFrame\")\n\tSteamUserGrid:SetSize(w_count*av_size, (h_count*av_size)+25)\n\tSteamUserGrid:Center()\n\tSteamUserGrid:SetTitle(\"Randomly Generated Grid of Steam Users\")\n\tSteamUserGrid:MakePopup()\n\t\n\t-- Loop variables\n\tlocal avatar, random_id\n\t\n\t-- Create enough avatars to fill up screen without overflowing\n\tfor i = 0, (w_count*h_count)-1 do\n\t\n\t\trandom_id = GetRandomSteamID()\n\t\t\n\t\t-- Add avatar to container panel\n\t\tavatar = vgui.Create(\"AvatarImage\", SteamUserGrid)\n\t\t\n\t\t-- Layout the avatars in a grid\n\t\tavatar:SetPos((i%w_count)*av_size, 25+math.floor(i/w_count)*av_size)\n\t\t\n\t\t-- Load the avatar image\n\t\tavatar:SetSteamID(random_id, av_res)\n\n\t\tavatar:SetSize(av_size, av_size)\n\t\t\n\t\t-- Open user's Steam page on avatar click\n\t\tavatar.OnMousePressed = function(self)\n\t\t\t\n\t\t\tlocal url = \"http://steamcommunity.com/profiles/\"..random_id\n\t\t\t\n\t\t\tgui.OpenURL(url)\n\t\t\t\n\t\tend\n\t\t\n\tend\n\t\nend","output":{"text":"`CreateSteamUserGrid(64, 64)`\n\n\n\n\n\n\n\n\n\nThe white question mark avatars mean no custom icon used or the user hasn't set up a community profile. The blue question mark avatars mean the user doesn't exist.","image":{"src":"AvatarImage_SetSteamID_example1.png"}}}},
{"function":{"name":"SetSpawnIcon","parent":"Panel","type":"classfunc","description":{"text":"Sets the .png image to be displayed on a   or the panel it is based on .\n\nOnly .png images can be used with this function.","page":["SpawnIcon","ModelImage"]},"realm":"Client","args":{"arg":{"text":"A path to the .png material, for example one of the  shipped with the game.","name":"icon","type":"string","page":"Silkicons"}}}},
{"function":{"name":"SetSkin","parent":"Panel","type":"classfunc","description":{"text":"Sets the derma skin that the panel object will use, and refreshes all panels with .","page":"derma.RefreshSkins"},"realm":"Client","args":{"arg":{"text":"The name of the skin to use. The default derma skin is `Default`.","name":"skinName","type":"string"}}}},
{"function":{"name":"SetSize","parent":"Panel","type":"classfunc","description":{"text":"Sets the size of the panel.\n\nCalls  and marks this panel for layout ().\n\n\nSee also  and .","page":["PANEL:OnSizeChanged","Panel:InvalidateLayout","Panel:SetWidth","Panel:SetHeight"],"note":{"text":"If you wish to position and re-size panels without much guesswork and have them look good on different screen resolutions, you may find  useful","page":"Panel:Dock"}},"realm":"Client","args":{"arg":[{"text":"The width of the panel.","name":"width","type":"number"},{"text":"The height of the panel.","name":"height","type":"number"}]}}},
{"function":{"name":"SetSelected","parent":"Panel","type":"classfunc","description":{"text":"Sets the selected state of a selectable panel object. This functionality is set with  and checked with .","page":["Panel:SetSelectable","Panel:IsSelectable"]},"realm":"Client","args":{"arg":{"text":"Whether the object should be selected or deselected.  can be used to determine the selected state of the object.","name":"selected","type":"boolean","default":"false","page":"Panel:IsSelected"}}}},
{"function":{"name":"SetSelectionCanvas","parent":"Panel","type":"classfunc","description":"Enables the panel object for selection (much like the spawn menu).","realm":"Client","args":{"arg":{"text":"Any value other than `nil` or `false` will enable the panel object for selection. It is recommended to pass `true`.","name":"selCanvas","type":"any"}}}},
{"function":{"name":"SetSelectable","parent":"Panel","type":"classfunc","description":{"text":"Sets whether the panel object can be selected or not (like icons in the Spawn Menu, holding ). If enabled, this will affect the function of a  whilst  is pressed.  can be used to select/deselect the object.","key":["Shift","Shift"],"page":["DButton","Panel:SetSelected"]},"realm":"Client","args":{"arg":{"text":"Whether the panel object should be selectable or not.","name":"selectable","type":"boolean"}}}},
{"function":{"name":"SetRenderInScreenshots","parent":"Panel","type":"classfunc","description":"Sets whenever the panel should be rendered in the next screenshot.","realm":"Client","args":{"arg":{"text":"Whenever to render or not.","name":"renderInScreenshot","type":"boolean"}}}},
{"function":{"name":"SetPos","parent":"Panel","type":"classfunc","description":{"text":"Sets the position of the panel's top left corner.\n\nThis will trigger . You should avoid calling this function in  to avoid infinite loops.","page":["PANEL:PerformLayout","PANEL:PerformLayout"],"note":{"text":"If you wish to position and re-size panels without much guesswork and have them look good on different screen resolutions, you may find  useful","page":"Panel:Dock"}},"realm":"Client","args":{"arg":[{"text":"The x coordinate of the position.","name":"posX","type":"number"},{"text":"The y coordinate of the position.","name":"posY","type":"number"}]}}},
{"function":{"name":"SetPopupStayAtBack","parent":"Panel","type":"classfunc","description":{"text":"If this panel object has been made a popup with , this method will prevent it from drawing in front of other panels when it receives input focus.","page":"Panel:MakePopup"},"realm":"Client","args":{"arg":{"text":"If `true`, the popup panel will not draw in front of others when it gets focus, for example when it is clicked.","name":"stayAtBack","type":"boolean"}}}},
{"function":{"name":"SetPlayer","parent":"Panel","type":"classfunc","description":{"text":"Used by  to load an avatar for given player.","page":"AvatarImage"},"realm":"Client","args":{"arg":[{"text":"The player to use avatar of.","name":"player","type":"Player"},{"text":"The size of the avatar to use. Acceptable sizes are 32, 64, 184.","name":"size","type":"number"}]}}},
{"function":{"name":"SetParent","parent":"Panel","type":"classfunc","description":"Sets the parent of the panel.","realm":"Client","args":{"arg":{"text":"The new parent of the panel.","name":"parent","type":"Panel"}}}},
{"function":{"name":"SetPaintFunction","parent":"Panel","type":"classfunc","description":{"text":"This function does nothing.","deprecated":"This function does nothing."},"realm":"Client"}},
{"function":{"name":"SetPaintBorderEnabled","parent":"Panel","type":"classfunc","description":"Sets whenever all the default border of the panel should be drawn or not.","realm":"Client","args":{"arg":{"text":"Whenever to draw the border or not.","name":"paintBorder","type":"boolean"}}}},
{"function":{"name":"SetPaintedManually","parent":"Panel","type":"classfunc","description":{"text":"Enables or disables painting of the panel manually with .","page":"Panel:PaintManual"},"realm":"Client","args":{"arg":{"text":"True if the panel should be painted manually.","name":"paintedManually","type":"boolean"}}}},
{"function":{"name":"SetPaintBackgroundEnabled","parent":"Panel","type":"classfunc","description":"Sets whenever all the default background of the panel should be drawn or not.","realm":"Client","args":{"arg":{"text":"Whenever to draw the background or not.","name":"paintBackground","type":"boolean"}}}},
{"function":{"name":"SetMouseInputEnabled","parent":"Panel","type":"classfunc","description":"Enables or disables the mouse input for the panel.","realm":"Client","args":{"arg":{"text":"Whenever to enable or disable mouse input.","name":"mouseInput","type":"boolean"}}}},
{"function":{"name":"SetName","parent":"Panel","type":"classfunc","description":"Sets the internal name of the panel.","realm":"Client","args":{"arg":{"text":"The new name of the panel.","name":"name","type":"string"}}}},
{"function":{"name":"SetModel","parent":"Panel","type":"classfunc","description":{"text":"Sets the model to be displayed by .","page":"SpawnIcon","note":"This must be called after setting size if you wish to use a different size spawnicon"},"realm":"Client","args":{"arg":[{"text":"The path of the model to set","name":"ModelPath","type":"string"},{"text":"The skin to set","name":"skin","type":"number","default":"0"},{"text":"The body groups to set. Each single-digit number in the string represents a separate bodygroup, **up to 9 in total**.","name":"bodygroups","type":"string","default":""}]}}},
{"function":{"name":"SetMinimumSize","parent":"Panel","type":"classfunc","description":"Sets the minimum dimensions of the panel or object.\n\nYou can restrict either or both values.\n\nCalling the function without arguments will remove the minimum size.","realm":"Client","args":{"arg":[{"text":"The minimum width of the object.","name":"minW","type":"number","default":"nil"},{"text":"The minimum height of the object.","name":"minH","type":"number","default":"nil"}]}},"example":{"description":"Restricting height but not width","code":"local frame = vgui.Create( \"DFrame\" )\nframe:SetSize( 800, 600 )\nframe:SetSizable( true )\nframe:SetMinimumSize( nil, 300 )\nframe:MakePopup()"}},
{"ambig":{"text":"You might be looking for the SetKeyboardInputEnabled, which has the same name but it's not deprecated.","page":"Panel:SetKeyboardInputEnabled(lowercase)"},"function":{"name":"SetKeyBoardInputEnabled","parent":"Panel","type":"classfunc","description":{"text":"Enables or disables the keyboard input for the panel.","deprecated":{"text":"Alias of","page":",Panel:SetKeyboardInputEnabledPanel:SetKeyboardInputEnabled(lowercase)"}},"realm":"Client","args":{"arg":{"text":"Whether to enable or disable keyboard input.","name":"keyboardInput","type":"boolean"}}}},
{"function":{"name":"SetMaximumCharCount","parent":"Panel","type":"classfunc","description":{"text":"Sets the maximum character count this panel should have.\n\nThis function will only work on  and  panels and their derivatives.","page":["RichText","TextEntry"]},"realm":"Client","added":"2020.03.17","args":{"arg":{"text":"The new maximum amount of characters this panel is allowed to contain.","name":"maxChar","type":"number"}}}},
{"function":{"name":"SetHTML","parent":"Panel","type":"classfunc","description":"Allows you to set HTML code within a panel.","realm":"Client","args":{"arg":{"text":"The code to set.","name":"HTML code","type":"string"}}},"example":{"code":{"text":"local HTML = vgui.Create( \"HTML\", DPanel )\nHTML:SetHTML( \"\" )\nHTML:SetSize( 390, 400 )","p":"Put HTML code here"}}},
{"function":{"name":"SetHeight","parent":"Panel","type":"classfunc","description":{"text":"Sets the height of the panel.\n\nCalls  and marks this panel for layout ().\n\n\nSee also .","page":["PANEL:OnSizeChanged","Panel:InvalidateLayout","Panel:SetSize"]},"realm":"Client","args":{"arg":{"text":"The height to be set.","name":"height","type":"number"}}}},
{"function":{"name":"SetFontInternal","parent":"Panel","type":"classfunc","description":{"text":"Sets the font used to render this panel's text.\n\nTo retrieve the font used by a panel, call .","page":"Panel:GetFont"},"realm":"Client","args":{"arg":{"text":"The name of the font.\n\nSee  for a list of existing fonts.\nAlternatively, use  to create your own custom font.","name":"fontName","type":"string","page":[",hereDefault_Fonts","surface.CreateFont"]}}},"example":{"description":{"text":"Sets the font of a  element to match the chat box font.","page":"RichText"},"code":"-- Create a window frame\nTextFrame = vgui.Create(\"DFrame\")\nTextFrame:SetSize(200, 100)\nTextFrame:Center()\nTextFrame:SetTitle(\"This is a font test\")\nTextFrame:MakePopup()\n\n-- RichText panel\nlocal richtext = vgui.Create(\"RichText\", TextFrame)\nrichtext:Dock(FILL)\n\n-- Sample text\nrichtext:SetText(\"This is a sample of text using the chat box font.\")\n\n-- Ensure font and text color changes are applied\nfunction richtext:PerformLayout()\n\n\tself:SetFontInternal(\"ChatFont\")\n\tself:SetFGColor(Color(255, 255, 255))\n\t\nend","output":{"image":{"src":"RichText_SetFontInternal_example1.png"}}}},
{"function":{"name":"SetFocusTopLevel","parent":"Panel","type":"classfunc","description":"Sets the panel that owns this FocusNavGroup to be the root in the focus traversal hierarchy.","realm":"Client","args":{"arg":{"name":"state","type":"boolean"}}}},
{"function":{"name":"SetFGColorEx","parent":"Panel","type":"classfunc","description":{"text":"Sets the foreground color of the panel.\n\nFor labels, this is the color of their text.","internal":""},"realm":"Client","args":{"arg":[{"text":"The red channel of the color.","name":"r","type":"number"},{"text":"The green channel of the color.","name":"g","type":"number"},{"text":"The blue channel of the color.","name":"b","type":"number"},{"text":"The alpha channel of the color.","name":"a","type":"number"}]}}},
{"function":{"name":"SetExpensiveShadow","parent":"Panel","type":"classfunc","description":"Adds a shadow falling to the bottom right corner of the panel's text. This has no effect on panels that do not derive from Label.","realm":"Client","args":{"arg":[{"text":"The distance of the shadow from the panel.","name":"distance","type":"number"},{"text":"The color of the shadow. Uses the .","name":"Color","type":"table","page":"Color"}]}}},
{"function":{"name":"SetFGColor","parent":"Panel","type":"classfunc","description":{"text":"Sets the foreground color of a panel.\n\nFor a  or , this is the color of its text.\n\nThis function calls  internally.","page":["Label","RichText","Panel:SetFGColorEx"],"note":{"text":"This doesn't apply to all VGUI elements (such as ) and its function varies between them","page":"DLabel"}},"realm":"Client","args":{"arg":[{"text":"The red channel of the color, or a . If you pass the latter, the following three arguments are ignored.","name":"r or color","type":"number","page":"Color"},{"text":"The green channel of the color.","name":"g","type":"number"},{"text":"The blue channel of the color.","name":"b","type":"number"},{"text":"The alpha channel of the color.","name":"a","type":"number"}]}},"example":[{"description":{"text":"Creates a  and sets its text color to white.","page":"Label"},"code":"local label = vgui.Create( \"Label\" )\n\nlabel:SetFGColor( Color( 255, 255, 255, 255 ) )"},{"description":{"text":"Sets the foreground color of a  to match the chat box format.","page":"RichText"},"code":"-- Create a window frame\nTextFrame = vgui.Create(\"DFrame\")\nTextFrame:SetSize(200, 50)\nTextFrame:Center()\nTextFrame:SetTitle(\"This is a color test\")\nTextFrame:MakePopup()\n\n-- RichText panel\nlocal richtext = vgui.Create(\"RichText\", TextFrame)\nrichtext:Dock(FILL)\n\n-- Sample text\nrichtext:SetText(\"Here is some light green text.\")\n\n-- When the panel is ready for layout, make the text light green\nfunction richtext:PerformLayout()\n\tself:SetFGColor(Color(153, 255, 153))\nend","output":{"image":{"src":"RichText_SetFGColor_example1.png"}}}]},
{"function":{"name":"SetEnabled","parent":"Panel","type":"classfunc","description":{"text":"Sets the enabled state of a disable-able panel object, such as a  or .\n\nSee  for a function that retrieves the \"enabled\" state of a panel.","page":["DButton","DTextEntry","Panel:IsEnabled"]},"realm":"Client","args":{"arg":{"text":"Whether to enable or disable the panel object.","name":"enable","type":"boolean"}}}},
{"function":{"name":"SetDropTarget","parent":"Panel","type":"classfunc","description":{"text":"Sets the target area for dropping when an object is being dragged around this panel using the . \n\nThis draws a target box of the specified size and position, until  is called. It uses  to draw this area.","page":["dragndrop","Panel:DragHoverEnd","Panel:DrawDragHover"]},"realm":"Client","args":{"arg":[{"text":"The x coordinate of the top-left corner of the drop area.","name":"x","type":"number"},{"text":"The y coordinate of the top-left corner of the drop area.","name":"y","type":"number"},{"text":"The width of the drop area.","name":"width","type":"number"},{"text":"The height of the drop area.","name":"height","type":"number"}]}}},
{"function":{"name":"SetDrawOnTop","parent":"Panel","type":"classfunc","description":{"text":"Makes the panel render in front of all others, including the spawn menu and main menu.\n\nPriority is given based on the last call, so of two panels that call this method, the second will draw in front of the first.","note":"This only makes the panel **draw** above other panels. If there's another panel that would have otherwise covered it, users will not be able to interact with it."},"realm":"Client","args":{"arg":{"text":"Whether or not to draw the panel in front of all others.","name":"drawOnTop","type":"boolean","default":"false"}}}},
{"function":{"name":"SetDrawLanguageIDAtLeft","parent":"Panel","type":"classfunc","description":{"text":"Sets where to draw the language selection box.\n\nSee  for a function that hides or shows the language selection box.","page":"Panel:SetDrawLanguageID"},"realm":"Client","args":{"arg":{"text":"true = left, false = right","name":"left","type":"boolean"}}}},
{"function":{"name":"SetDrawLanguageID","parent":"Panel","type":"classfunc","description":{"text":"Sets the visibility of the language selection box in a TextEntry when typing in non-English mode.\n\nSee  for a function that changes the position of the language selection box.","page":"Panel:SetDrawLanguageIDAtLeft"},"realm":"Client","args":{"arg":{"text":"true to make it visible, false to hide it.","name":"visible","type":"boolean"}}}},
{"function":{"name":"SetDragParent","parent":"Panel","type":"classfunc","description":"Sets the drag parent.\n\nDrag parent means that when we start to drag this panel, we'll really start dragging the defined parent.","realm":"Client","file":{"text":"lua/includes/extensions/client/panel/dragdrop.lua","line":"327"},"args":{"arg":{"text":"The panel to set as drag parent.","name":"parent","type":"Panel"}}},"example":{"description":"Example usage.","code":"local function DoDrop( self, panels, bDoDrop, Command, x, y )\n\tif ( bDoDrop ) then\n\t\tfor k, v in pairs( panels ) do\n\t\t\tself:AddItem( v )\n\t\tend\n\tend\nend\n\nconcommand.Add( \"test2\", function()\n\n\tlocal frame = vgui.Create( \"DFrame\" )\n\tframe:SetSize( 500, 300 )\n\tframe:SetTitle( \"Frame\" )\n\tframe:MakePopup()\n\tframe:Center()\n\n\tlocal left = vgui.Create( \"DScrollPanel\", frame )\n\tleft:Dock( LEFT )\n\tleft:SetWidth( frame:GetWide() / 2 - 7 )\n\tleft:SetPaintBackground( true )\n\tleft:DockMargin( 0, 0, 4, 0 )\n\tleft:Receiver( \"myDNDname\", DoDrop ) -- Make the panel a receiver for drag and drop events\n\n\tlocal right = vgui.Create( \"DScrollPanel\", frame )\n\tright:Dock( FILL )\n\tright:SetPaintBackground( true )\n\tright:Receiver( \"myDNDname\", DoDrop )\n\n\tfor i = 1, 30 do\n\t\tlocal but = vgui.Create( \"DButton\" )\n\t\tbut:SetText( \"button text \" .. i )\n\t\tbut:SetSize( 36, 24 )\n\t\tbut:Dock( TOP )\n\t\tbut:Droppable( \"myDNDname\" ) -- make the panel be able to be drag'n'dropped onto other panels\n\t\tright:AddItem( but )\n\t\t\n\t\tlocal mdl = vgui.Create( \"DModelPanel\", but ) -- Put another panel over the draggable button\n\t\tmdl:Dock( FILL )\n\t\tmdl:SetModel( \"models/alyx.mdl\" )\n\t\tmdl:SetDragParent( but ) -- The magic bit. Without it, you would not be able to drag the button at all\n\tend\n\nend )"}},
{"function":{"name":"SetCursor","parent":"Panel","type":"classfunc","description":"Sets the appearance of the cursor.","realm":"Client","args":{"arg":{"text":"The cursor to be set. Can be one of the following:\n\n* arrow\n* beam\n* hourglass\n* waitarrow\n* crosshair\n* up\n* sizenwse\n* sizenesw\n* sizewe\n* sizens\n* sizeall\n* no\n* hand\n* blank\n\nSet to anything else to set it to \"none\", the default fallback. Do note that a value of \"none\" does not, as one might assume, result in no cursor being drawn - hiding the cursor requires a value of \"blank\" instead.","name":"cursor","type":"string"}}}},
{"function":{"name":"SetCookieName","parent":"Panel","type":"classfunc","description":{"text":"Sets the panel's cookie name. Calls  if defined.","page":"PANEL:LoadCookies"},"realm":"Client","args":{"arg":{"text":"The panel's cookie name. Used as prefix for","name":"name","type":"string","page":"Panel:SetCookie"}}}},
{"function":{"name":"SetCookie","parent":"Panel","type":"classfunc","description":{"text":"Stores a string in the named cookie using  as prefix.\n\nYou can also retrieve and modify this cookie by using the . Cookies are stored in this format:\n\n```\npanelCookieName.cookieName\n```","page":["Panel:GetCookieName","cookie"],"warning":{"text":"The panel's cookie name MUST be set for this function to work. See .","page":"Panel:SetCookieName"}},"realm":"Client","args":{"arg":[{"text":"The unique name used to retrieve the cookie later.","name":"cookieName","type":"string"},{"text":"The value to store in the cookie. This can be retrieved later as a  or .","name":"value","type":"string","page":["string","number"]}]}}},
{"function":{"name":"SetConVar","parent":"Panel","type":"classfunc","description":{"text":"Sets this panel's convar. When the convar changes this panel will update automatically.\n\nFor developer implementation, see .","warning":["This function does not exist on all panels","This function cannot interact with serverside convars unless you are host"],"note":{"text":"Blocked convars will not work with this, see","page":"Blocked ConCommands"},"page":"Global.Derma_Install_Convar_Functions"},"realm":"Client","args":{"arg":{"text":"The console variable to check.","name":"convar","type":"string"}}},"example":{"description":"Makes a checkbox linked to the **cl_drawhud** convar.","code":"local DermaPanel = vgui.Create( \"DFrame\" )\nDermaPanel:SetPos( 100, 100 )\nDermaPanel:SetSize( 300, 200 )\nDermaPanel:SetTitle( \"My new Derma frame\" )\nDermaPanel:SetDraggable( true )\nDermaPanel:MakePopup()\n\nlocal Checkbox = vgui.Create( \"DCheckBoxLabel\", DermaPanel )\nCheckbox:SetConVar( \"cl_drawhud\" )\nCheckbox:SetText( \"Enable HUD?\" )\nCheckbox:SetPos( 5, 25 )\nCheckbox:SizeToContents()","output":{"image":{"src":"panel_setcvar.png"}}}},
{"function":{"name":"SetContentAlignment","parent":"Panel","type":"classfunc","description":"Sets the alignment of the contents.","realm":"Client","args":{"arg":{"text":"The direction of the content, based on the number pad.\n\n: **bottom-left** \n: **bottom-center** \n: **bottom-right** \n: **middle-left** \n: **center** \n: **middle-right** \n: **top-left** \n: **top-center** \n: **top-right**","name":"alignment","type":"number","key":["1","2","3","4","5","6","7","8","9"],"br":["","","","","","","","",""],"image":{"src":"DLabel_SetContentAlignment.gif"}}}}},
{"function":{"name":"SetCaretPos","parent":"Panel","type":"classfunc","description":"Sets the position of the caret (or text cursor) in a text-based panel object.","realm":"Client","args":{"arg":{"text":"Caret position/offset from the start of text. A value of `0` places the caret before the first character.","name":"offset","type":"number"}}}},
{"function":{"name":"SetCommand","parent":"Panel","type":"classfunc","description":{"text":"Sets the action signal command that's fired when a  is clicked. The hook  is called as the click response.\n\nThis has no effect on buttons unless it has had its `AddActionSignalTarget` method called (an internal function not available by default in Garry's Mod LUA).\n\nA better alternative is calling  when a  is clicked.","page":["Button","PANEL:ActionSignal","Panel:Command","DButton"]},"realm":"Client"},"example":{"description":{"text":"Creates an engine-based  panel and changes the command that's fired when you click the white close button (by default the command is set to \"Close\").","page":"Frame"},"code":"-- Create a regular Frame panel\nTestFrame = vgui.Create(\"Frame\")\nTestFrame:SetSize(200, 200)\nTestFrame:Center()\nTestFrame:MakePopup()\nTestFrame:SetVisible(true)\n\nlocal lbl = vgui.Create(\"DLabel\", TestFrame)\nlbl:Dock(FILL)\nlbl:DockMargin(10, 10, 10, 10)\nlbl:SetText(\"Click the white button in the upper right corner of this window.\")\nlbl:SetFont(\"ChatFont\")\nlbl:SetWrap(true)\n\n-- Create a background panel so we can see the Frame's internal buttons\nlocal bg = vgui.Create(\"DPanel\", TestFrame)\nbg:Dock(FILL)\nbg:SetBackgroundColor(Color(64, 64, 64, 192))\nbg:MoveToBack()\n\n-- Loop through Frame's internal components\nfor _, child in pairs(TestFrame:GetChildren()) do\n\n\t-- Disable frame sizing\n\tif(string.find(child:GetName(), \"Grip\")) then\n\t\n\t\tchild:SetMouseInputEnabled(false)\n\t\t\n\t-- Fire the \"Testing\" command when we click the white button\n\telseif(child:GetName() == \"frame_close\") then\n\t\n\t\tchild:SetCommand(\"Testing\")\n\t\t\n\tend\n\t\nend\n\nfunction TestFrame:ActionSignal(signalName, signalValue)\n\t\n\t-- Show the signal name\n\tlbl:SetText(\"Received command: \\\"\"..signalName..\"\\\"\")\n\nend","output":{"image":{"src":"Panel_SetCommand_example1.gif"}}}},
{"function":{"name":"SetBGColorEx","parent":"Panel","type":"classfunc","description":{"text":"Sets the background color of the panel.","internal":""},"realm":"Client","args":{"arg":[{"text":"The red channel of the color.","name":"r","type":"number"},{"text":"The green channel of the color.","name":"g","type":"number"},{"text":"The blue channel of the color.","name":"b","type":"number"},{"text":"The alpha channel of the color.","name":"a","type":"number"}]}}},
{"function":{"name":"SetAutoDelete","parent":"Panel","type":"classfunc","description":"Sets whenever the panel should be removed if the parent was removed.","realm":"Client","args":{"arg":{"text":"Whenever to delete if the parent was removed or not.","name":"autoDelete","type":"boolean"}}}},
{"function":{"name":"SetBGColor","parent":"Panel","type":"classfunc","description":{"text":"Sets the background color of a panel such as a ,  or .\n\n\n\nFor  elements, you must use ( true ) before applying the color.\n\nThis will not work on setup of the panel - you should use this function in a hook like  or .","page":["RichText","Label","DColorCube","DLabel","Panel:SetPaintBackgroundEnabled","PANEL:ApplySchemeSettings","PANEL:PerformLayout"],"note":"This doesn't apply to all VGUI elements and its function varies between them"},"realm":"Client","args":{"arg":[{"text":"The red channel of the color, or a . If you pass the latter, the following three arguments are ignored.","name":"r or color","type":"number","page":"Color"},{"text":"The green channel of the color.","name":"g","type":"number"},{"text":"The blue channel of the color.","name":"b","type":"number"},{"text":"The alpha channel of the color.","name":"a","type":"number"}]}},"example":{"description":"Creates a RichText panel that mimics a [blue screen of death](http://en.wikipedia.org/wiki/Blue_Screen_of_Death).","code":"-- Create a window frame\nTextFrame = vgui.Create(\"DFrame\")\nTextFrame:SetSize(300, 100)\nTextFrame:Center()\nTextFrame:SetTitle(\"Windows XP Blue Screen\")\nTextFrame:MakePopup()\n\n-- RichText panel\nlocal richtext = vgui.Create(\"RichText\", TextFrame)\nrichtext:Dock(FILL)\n\n-- Sample text\nrichtext:SetText(\"A problem has been detected and Windows has been shut down to prevent damage to your computer.\\n\\nMOTHERBOARD_FRIED\")\n\n-- When the panel is ready for layout, set the background color to blue\nfunction richtext:PerformLayout()\n\t\n\tself:SetBGColor(Color(0, 0, 255))\n\t\nend","output":{"image":{"src":"RichText_SetBGColor_example1.png"}}}},
{"function":{"name":"SetAnimationEnabled","parent":"Panel","type":"classfunc","description":{"text":"Enables or disables animations for the panel object by overriding the  hook to nil and back.","page":"PANEL:AnimationThink"},"realm":"Client","args":{"arg":{"text":"Whether to enable or disable animations.","name":"enable","type":"boolean"}}}},
{"function":{"name":"SetAlpha","parent":"Panel","type":"classfunc","description":"Sets the alpha multiplier for the panel","realm":"Client","args":{"arg":{"text":"The alpha value in the range of 0-255.","name":"alpha","type":"number"}}}},
{"function":{"name":"SetAllowNonAsciiCharacters","parent":"Panel","type":"classfunc","description":"Configures a text input to allow user to type characters that are not included in the US-ASCII (7-bit ASCII) character set.\n\nCharacters not included in US-ASCII are multi-byte characters in UTF-8. They can be accented characters, non-Latin characters and special characters.","realm":"Client","args":{"arg":{"text":"Set to true in order not to restrict input characters.","name":"allowed","type":"boolean"}}},"example":{"description":"Replaces the default vgui.Create() function to always allow non US-ASCII characters for text inputs.","code":"if vgui.CreateStdRestrict == nil then\n\tvgui.CreateStdRestrict = vgui.Create\nend\nfunction vgui.Create( classname, parent, name )\n\tlocal vgui_elt = vgui.CreateStdRestrict(classname, parent, name)\n\tif classname == \"DTextEntry\" or classname == \"RichText\" or classname == \"TextEntry\" then\n\t\tvgui_elt:SetAllowNonAsciiCharacters(true)\n\tend\n\treturn vgui_elt\nend"}},
{"function":{"name":"SetActionFunction","parent":"Panel","type":"classfunc","description":{"text":"Used in  to call a function when the button is clicked and in  when the value changes.","deprecated":"Does nothing at all.","page":["Button","Slider"]},"realm":"Client","args":{"arg":{"text":"Function to call when the  is clicked or the  value is changed.\n\nArguments given are:\n*  self - The panel itself\n*  action - \"Command\" on button press, \"SliderMoved\" on slider move.\n*  val - The new value of the . Will always equal 0 for buttons.\n*  zed - Always equals 0.","name":"func","type":"function","page":["Button","Slider","Panel","string","number","Slider","number"]}}}},
{"function":{"name":"SetAchievement","parent":"Panel","type":"classfunc","description":{"text":"Sets the achievement to be displayed by .","page":"AchievementIcon"},"realm":"Client","args":{"arg":{"text":"Achievement number ID","name":"id","type":"number"}}}},
{"function":{"name":"SelectNone","parent":"Panel","type":"classfunc","description":"Deselects all items in a panel object. For text-based objects, this will deselect all text.","realm":"Client"}},
{"function":{"name":"SelectAllText","parent":"Panel","type":"classfunc","description":{"text":"Selects all the text in a panel object. Will not select non-text items; for this, use .","page":"Panel:SelectAll"},"realm":"Client"}},
{"function":{"name":"SelectAllOnFocus","parent":"Panel","type":"classfunc","description":"If called on a text entry, clicking the text entry for the first time will automatically select all of the text ready to be copied by the user.","realm":"Client"}},
{"function":{"name":"SelectAll","parent":"Panel","type":"classfunc","description":"Selects all items within a panel or object. For text-based objects, selects all text.","realm":"Client"}},
{"function":{"name":"Update","parent":"PathFollower","type":"classfunc","description":"Move the bot along the path.","realm":"Server","args":{"arg":{"text":"The bot to update along the path","name":"bot","type":"NextBot"}}}},
{"function":{"name":"ScreenToLocal","parent":"Panel","type":"classfunc","description":{"text":"Translates global screen coordinate to coordinates relative to the panel.\n\nSee also .","page":"Panel:LocalToScreen","warning":{"text":"This function uses a cached value for the screen position of the panel, computed at the end of the last VGUI Think/Layout pass, so inaccurate results may be returned if the panel or any of its ancestors have been re-positioned outside of  or  within the last frame.","page":["PANEL:Think","PANEL:PerformLayout"]}},"realm":"Client","args":{"arg":[{"text":"The x coordinate of the screen position to be translated.","name":"screenX","type":"number"},{"text":"The y coordinate of the screed position be to translated.","name":"screenY","type":"number"}]},"rets":{"ret":[{"text":"Relativeposition X","name":"","type":"number"},{"text":"Relativeposition Y","name":"","type":"number"}]}}},
{"function":{"name":"SaveUndoState","parent":"Panel","type":"classfunc","description":{"text":"Saves the current state (caret position and the text inside) of a  as an undo state.\n\nSee also .","page":["TextEntry","Panel:Undo"]},"realm":"Client"}},
{"function":{"name":"RunJavascript","parent":"Panel","type":"classfunc","realm":"Client","description":{"text":"Runs/Executes a string as JavaScript code in a panel.","note":{"text":"This function does **NOT** evaluate expression (i.e. allow you to pass variables from JavaScript (JS) to Lua context).Because a return value is nil/no value (a.k.a. void).If you wish to pass/return values from JS to Lua, you may want to use  function to accomplish that job.","br":["",""],"page":"DHTML:AddFunction"}},"args":{"arg":{"text":"Specify JavaScript code to be executed.","name":"js","type":"string"}}},"example":{"description":"Shows how to change [document.body.innerHTML](http://www.w3schools.com/jsref/prop_html_innerhtml.asp) property by calling this function on  panel.","code":"-- First we create a container, in this case it is a full-screen Derma Frame window.\nlocal dframe = vgui.Create( 'DFrame' )\ndframe:SetSize( ScrW(), ScrH() )\ndframe:SetTitle( \"Garry's Mod Wiki\" )\ndframe:Center()\ndframe:MakePopup() -- Enable keyboard and mouse interaction for DFrame panel.\n\n-- Create a new DHTML panel as a child of dframe, and dock-fill it.\nlocal dhtml = vgui.Create( 'DHTML', dframe )\ndhtml:Dock( FILL )\n-- Navigate to Garry's Mod wikipedia website.\ndhtml:OpenURL( 'https://wiki.garrysmod.com/index.php' )\n-- Run JavaScript code.\ndhtml:RunJavascript( [[document.body.innerHTML = 'HTML changed from Lua using JavaScript!';]] )\n\n-- This does not throw an error/exception, but instead returns nil/no value.\n-- That means you can't pass/return values from JavaScript back to Lua context using this function.\nlocal number = dhtml:Call( '22;' )\nprint( number )","output":"Inner HTML of document body in DHTML panel is now set to \"HTML changed from Lua using JavaScript!\"."}},
{"function":{"name":"RequestFocus","parent":"Panel","type":"classfunc","description":"Attempts to obtain focus for this panel.","realm":"Client"}},
{"function":{"name":"Remove","parent":"Panel","type":"classfunc","description":{"text":"Marks a panel for deletion so it will be deleted on the next frame.\n\nWill automatically call .","page":"Panel:InvalidateParent"},"realm":"Client"}},
{"function":{"name":"ResetAllFades","parent":"Panel","type":"classfunc","description":{"text":"Resets all text fades in a  element made with .","page":["RichText","Panel:InsertFade"]},"realm":"Client","args":{"arg":[{"text":"True to reset fades, false otherwise.","name":"hold","type":"boolean"},{"text":"Any value equating to `true` will reset fades only on text segments that are completely faded out.","name":"expiredOnly","type":"boolean"},{"text":"The new sustain value of each faded text segment. Set to -1 to keep the old sustain value.","name":"newSustain","type":"number"}]}},"example":{"description":"Creates a RichText panel where two text segments slowly fade out and get reset to full alpha 5 seconds after being created.","code":"-- Window frame\nTextFrame = vgui.Create(\"DFrame\")\nTextFrame:SetSize(200, 100)\nTextFrame:Center()\nTextFrame:SetTitle(\"ResetAllFades\")\nTextFrame:MakePopup()\n\n-- Rich Text panel\nlocal richtext = vgui.Create(\"RichText\", TextFrame)\nrichtext:Dock(FILL)\n\n-- Append text and start fading a few frames after creation (won't work otherwise)\ntimer.Simple(0.05, function()\n\n\trichtext:SetBGColor(Color(32, 32, 32))\n\trichtext:SetFontInternal(\"GModNotify\")\n\n\trichtext:AppendText(\"This is \")\n\trichtext:InsertFade(5, 2)\n\t\n\trichtext:AppendText(\"a test...\")\n\trichtext:InsertFade(5, 1)\n\t\nend)\n\n-- 5 seconds after creation, reset all the fades\ntimer.Simple(5, function()\n\n\trichtext:ResetAllFades(true, false, -1)\n\nend)","output":{"image":{"src":"RichText_ResetAllFades_example1.gif"}}}},
{"function":{"name":"Refresh","parent":"Panel","type":"classfunc","description":"Refreshes the HTML panel's current page.","realm":"Client","args":{"arg":{"text":"If true, the refresh will ignore cached content similar to \"ctrl+f5\" in most browsers.","name":"ignoreCache","type":"boolean","default":"false"}}}},
{"function":{"name":"RebuildSpawnIcon","parent":"Panel","type":"classfunc","description":{"text":"Causes a  to rebuild its model image.","page":"SpawnIcon"},"realm":"Client"}},
{"function":{"name":"RebuildSpawnIconEx","parent":"Panel","type":"classfunc","description":{"text":"Re-renders a spawn icon with customized cam data.\n\n can be used to easily calculate the necessary camera parameters.","page":"Global.PositionSpawnIcon","note":{"text":"This function does **not** accept the standard .","page":"Structures/CamData"}},"realm":"Client","args":{"arg":{"text":"A four-membered table containing the information needed to re-render:\n*  cam_pos - The relative camera position the model is viewed from.\n*  cam_ang - The camera angle the model is viewed from.\n*  cam_fov - The camera's field of view (FOV).\n*  ent - The entity object of the model.\nSee the example below for how to retrieve these values.","name":"data","type":"table","page":["Vector","Angle","number","Entity"]}}},"example":{"description":{"text":"The `RenderIcon` method used by . `SpawnIcon` is a  and `ModelPanel` is a .","page":["IconEditor","SpawnIcon","DAdjustableModelPanel"]},"code":"function PANEL:RenderIcon()\n\t\n\tlocal ent = self.ModelPanel:GetEntity()\n\t\n\tlocal tab = {}\n\ttab.ent\t\t= ent\n\ttab.cam_pos = self.ModelPanel:GetCamPos()\n\ttab.cam_ang = self.ModelPanel:GetLookAng()\n\ttab.cam_fov = self.ModelPanel:GetFOV()\n\n\tself.SpawnIcon:RebuildSpawnIconEx( tab )\nend"}},
{"function":{"name":"Receiver","parent":"Panel","type":"classfunc","description":"Allows the panel to receive drag and drop events. Can be called multiple times with different names to receive multiple different draggable panel events.","realm":"Client","file":{"text":"lua/includes/extensions/client/panel/dragdrop.lua","line":"311"},"args":{"arg":[{"text":"Name of DnD panels to receive. This is set on the drag'n'drop-able panels via","name":"name","type":"string","page":"Panel:Droppable"},{"text":"This function is called whenever a panel with valid name is hovering above and dropped on this panel. It has next arguments:\n*  pnl - The receiver panel\n*  tbl - A table of panels dropped onto receiver panel\n*  dropped - False if hovering over, true if dropped onto\n*  menuIndex - Index of clicked menu item from third argument of \n*  x - Cursor pos, relative to the receiver\n*  y - Cursor pos, relative to the receiver","name":"func","type":"function","page":["Panel","table","boolean","number","Panel:Receiver","number","number"]},{"text":"A table of strings that will act as a menu if drag'n'drop was performed with a right click","name":"menu","type":"table"}]}},"example":{"description":{"text":"A very simple drag'n'drop example without using .","page":"DDragBase"},"code":"local function DoDrop( self, panels, bDoDrop, Command, x, y )\n\tif ( bDoDrop ) then\n\t\tfor k, v in pairs( panels ) do\n\t\t\tself:AddItem( v )\n\t\tend\n\tend\nend\n\nconcommand.Add( \"test2\", function()\n\n\tlocal frame = vgui.Create( \"DFrame\" )\n\tframe:SetSize( 500, 300 )\n\tframe:SetTitle( \"Frame\" )\n\tframe:MakePopup()\n\tframe:Center()\n\n\tlocal left = vgui.Create( \"DScrollPanel\", frame )\n\tleft:Dock( LEFT )\n\tleft:SetWidth( frame:GetWide() / 2 - 7 )\n\tleft:SetPaintBackground( true )\n\tleft:DockMargin( 0, 0, 4, 0 )\n\tleft:Receiver( \"myDNDname\", DoDrop ) -- Make the panel a receiver for drag and drop events\n\n\tlocal right = vgui.Create( \"DScrollPanel\", frame )\n\tright:Dock( FILL )\n\tright:SetPaintBackground( true )\n\tright:Receiver( \"myDNDname\", DoDrop )\n\n\tfor i = 1, 30 do\n\t\tlocal but = vgui.Create( \"DButton\" )\n\t\tbut:SetText( i )\n\t\tbut:SetSize( 36, 24 )\n\t\tbut:Dock( TOP )\n\t\tbut:Droppable( \"myDNDname\" ) -- make the panel be able to be drag'n'dropped onto other panels\n\t\tright:AddItem( but )\n\tend\n\nend )"}},
{"function":{"name":"Queue","parent":"Panel","type":"classfunc","description":{"text":"Enables the queue for panel animations. If enabled, the next new animation will begin after all current animations have ended. This must be called before  to work, and only applies to the next new animation. If you want to queue many, you must call this before each.","page":"Panel:NewAnimation"},"realm":"Client"}},
{"function":{"name":"Prepare","parent":"Panel","type":"classfunc","description":{"text":"Installs Lua defined functions into the panel.","internal":""},"realm":"Client"}},
{"function":{"name":"PostMessage","parent":"Panel","type":"classfunc","description":{"text":"Sends a command to the panel.","deprecated":"Only used in deprecated Derma controls."},"realm":"Client","args":{"arg":[{"text":"The name of the message.","name":"messageName","type":"string"},{"text":"The type of the variable to post.","name":"valueType","type":"string"},{"text":"The value to post.","name":"value","type":"string"}]}}},
{"function":{"name":"Paste","parent":"Panel","type":"classfunc","description":{"text":"Only works for TextEntries.\n\nPastes the contents of the clipboard into the TextEntry.","warning":"Due to privacy concerns, this function has been disabled","note":"Tab characters will be dropped from the pasted text"},"realm":"Client"}},
{"function":{"name":"ParentToHUD","parent":"Panel","type":"classfunc","description":"Parents the panel to the HUD.\nMakes it invisible on the escape-menu and disables controls.","realm":"Client"},"example":{"code":"Panel:ParentToHUD()"}},
{"function":{"name":"PositionLabel","parent":"Panel","type":"classfunc","description":{"text":"Sets the width and position of a  and places the passed panel object directly to the right of it. Returns the `y` value of the bottom of the tallest object. The panel on which this method is run is not relevant; only the passed objects are affected.","page":"DLabel"},"realm":"Client","args":{"arg":[{"text":"The width to set the label to.","name":"lblWidth","type":"number"},{"text":"The horizontal (x) position at which to place the label.","name":"x","type":"number"},{"text":"The vertical (y) position at which to place the label.","name":"y","type":"number"},{"text":"The label to resize and position.","name":"lbl","type":"Panel"},{"text":"The panel object to place to the right of the label.","name":"panelObj","type":"Panel"}]},"rets":{"ret":{"text":"The distance from the top of the parent panel to the bottom of the tallest object (the `y` position plus the height of the label or passed panel, depending on which is tallest).","name":"","type":"number"}}}},
{"function":{"name":"PaintManual","parent":"Panel","type":"classfunc","description":{"text":"Paints the panel at its current position. To use this you must call (true).","page":"Panel:SetPaintedManually"},"realm":"Client"},"example":{"description":"Paints a simple panel inside a 3D rendering context.","code":"local frame = vgui.Create( \"DFrame\" )\nframe:SetTitle( \"PaintManual Test\" )\nframe:SetSize( 500, 500 )\nframe:SetPaintedManually( true )\n\nhook.Add( \"PostDrawTranslucentRenderables\", \"PaintManual Test\", function()\n\tif IsValid(frame) then\n\t\tlocal eyePos = Entity(1):EyePos()\n\t\tlocal forward = Entity(1):GetForward()\n\t\tlocal forwardAngle = forward:Angle()\n\n\t\tcam.Start3D2D(eyePos + (forward * 250), Angle(0, forwardAngle.y - 90, forwardAngle.r + 90), 0.2)\n\t\t\tframe:PaintManual()\n\t\tcam.End3D2D()\n\tend\nend )","output":{"text":"The panel will be drawn facing the player located on the player's crosshair.","image":{"src":"panel_paintmanual_example1_output.png","alt":"left"}}}},
{"function":{"name":"PaintAt","parent":"Panel","type":"classfunc","description":"Paints a ghost copy of the panel at the given position.","realm":"Client","args":{"arg":[{"text":"The x coordinate to draw the panel from.","name":"posX","type":"number"},{"text":"The y coordinate to draw the panel from.","name":"posY","type":"number"}]}}},
{"function":{"name":"OpenURL","parent":"Panel","type":"classfunc","description":"Instructs a HTML control to download and parse a HTML script using the passed URL.","realm":"Client","args":{"arg":{"text":"URL to open","name":"URL","type":"string"}}},"example":[{"description":"Displays the Garry's Mod wiki page.","code":"local frame = vgui.Create( \"DFrame\" )\nframe:SetTitle( \"HTML Example\" )\nframe:SetSize( ScrW() * 0.75, ScrH() * 0.75 )\nframe:Center()\nframe:MakePopup()\n\nlocal html = vgui.Create( \"HTML\", frame )\nhtml:Dock( FILL )\nhtml:OpenURL( \"wiki.garrysmod.com\" )"},{"description":"Displays the default loading screen from the html folder.","code":"local frame = vgui.Create( \"DFrame\" )\nframe:SetTitle( \"HTML Example\" )\nframe:SetSize( ScrW() * 0.75, ScrH() * 0.75 )\nframe:Center()\nframe:MakePopup()\n\nlocal html = vgui.Create( \"HTML\", frame )\nhtml:Dock( FILL )\nhtml:OpenURL( \"asset://garrysmod/html/loading.html\" )","output":{"image":{"src":"html_openurl_example.png","alt":"800px"}}}]},
{"function":{"name":"OpenURL","parent":"Panel","type":"classfunc","description":"Instructs a HTML control to download and parse a HTML script using the passed URL.","realm":"Client","args":{"arg":{"text":"URL to open","name":"URL","type":"string"}}},"example":[{"description":"Displays the Garry's Mod wiki page.","code":"local frame = vgui.Create( \"DFrame\" )\nframe:SetTitle( \"HTML Example\" )\nframe:SetSize( ScrW() * 0.75, ScrH() * 0.75 )\nframe:Center()\nframe:MakePopup()\n\nlocal html = vgui.Create( \"HTML\", frame )\nhtml:Dock( FILL )\nhtml:OpenURL( \"wiki.garrysmod.com\" )"},{"description":"Displays the default loading screen from the html folder.","code":"local frame = vgui.Create( \"DFrame\" )\nframe:SetTitle( \"HTML Example\" )\nframe:SetSize( ScrW() * 0.75, ScrH() * 0.75 )\nframe:Center()\nframe:MakePopup()\n\nlocal html = vgui.Create( \"HTML\", frame )\nhtml:Dock( FILL )\nhtml:OpenURL( \"asset://garrysmod/html/loading.html\" )","output":{"image":{"src":"html_openurl_example.png","alt":"800px"}}}]},
{"function":{"name":"NoClipping","parent":"Panel","type":"classfunc","description":{"text":"Sets whether this panel's drawings should be clipped within the parent panel's bounds.\n\nSee also  and .","page":["Global.DisableClipping","surface.DisableClipping"]},"realm":"Client","args":{"arg":{"text":"Whether to clip or not.","name":"clip","type":"boolean"}}}},
{"function":{"name":"NewObjectCallback","parent":"Panel","type":"classfunc","description":{"internal":""},"realm":"Client","args":{"arg":[{"name":"objectName","type":"string"},{"name":"callbackName","type":"string"}]}}},
{"function":{"name":"NewObject","parent":"Panel","type":"classfunc","description":{"internal":""},"realm":"Client","args":{"arg":{"name":"objectName","type":"string"}}}},
{"function":{"name":"MoveToFront","parent":"Panel","type":"classfunc","description":{"text":"Moves the panel in front of all other panels on screen. Unless the panel has been made a pop-up using , it will still draw behind any that have.","page":"Panel:MakePopup"},"realm":"Client"},"example":{"description":"Creates two frame panels where one acts normal and the other acts as a persistent warning window that will move in front of all other panels until it is closed.","code":"-- Regular message\nlocal popup1 = vgui.Create(\"DFrame\")\npopup1:SetSize(400, 300)\npopup1:Center()\npopup1:MakePopup()\npopup1:SetTitle(\"This is a normal window.\")\n\n-- Warning message\nlocal popup2 = vgui.Create(\"DFrame\")\npopup2:SetSize(300, 100)\npopup2:Center()\npopup2:MakePopup()\npopup2:SetTitle(\"Warning!\")\n\n-- Warning label\nlocal warning = vgui.Create(\"DLabel\", popup2)\nwarning:SetSize(280, 80)\nwarning:Center()\nwarning:SetText(\"The server will be shutting down in 5 minutes!\")\nwarning:SetFont(\"GModNotify\")\nwarning:SetWrap(true)\n\n-- Move the warning message to front constantly\nfunction popup2:Think()\n\tself:MoveToFront()\nend","output":{"image":{"src":"Panel_MoveToFront_example1.gif"}}}},
{"function":{"name":"NewAnimation","parent":"Panel","type":"classfunc","description":{"text":"Creates a new animation for the panel object.\n\nMethods that use this function:\n* \n* \n* \n* \n* \n* \n* \n*","page":["Panel:MoveTo","Panel:SizeTo","Panel:SlideUp","Panel:SlideDown","Panel:ColorTo","Panel:AlphaTo","Panel:MoveBy","Panel:LerpPositions"]},"realm":"Client","file":{"text":"lua/includes/extensions/client/panel/animation.lua","line":"100-L135"},"args":{"arg":[{"text":"The length of the animation in seconds.","name":"length","type":"number"},{"text":"The delay before the animation starts.","name":"delay","type":"number","default":"0"},{"text":"The power/index to use for easing.\n* Positive values greater than 1 will ease in; the higher the number, the sharper the curve's gradient (less linear).\n* A value of 1 removes all easing.\n* Positive values between 0 and 1 ease out; values closer to 0 increase the curve's gradient (less linear).\n* A value of 0 will break the animation and should be avoided.\n* Any value less than zero will ease in/out; the value has no effect on the gradient.","name":"ease","type":"number","default":"-1"},{"text":"The function to be called when the animation ends. Arguments passed are:\n*  animTable - The \n*  tgtPanel - The panel object that was animated.","name":"callback","type":"function","default":"nil","page":["table","AnimationData that was used.","Panel"]}]},"rets":{"ret":{"text":"Partially filled  with members: \n*  EndTime - Equal to `length` and `delay` arguments added together, plus either the \n*  StartTime - Equal to the `delay` argument, plus either the \n*  Ease - Equal to the `ease` argument.\n*  OnEnd - Equal to the `callback` argument.","name":"","type":"table","page":["Structures/AnimationData","number","Global.SysTime if there is no other animation queued or the end time of the last animation in the queue.","number","Global.SysTime if there is no other animation queued or the end time of the last animation in the queue.","number","function"]}}},"example":{"description":"Example on how to use this function, makes a button go around in a circle in a DFrame.","code":"local frame = vgui.Create( \"DFrame\" )\nframe:SetSize( 500, 500 )\nframe:Center()\nframe:MakePopup()\n\nlocal butt = frame:Add( \"DButton\" )\nbutt:SetPos( 5, 30 )\nbutt:SetSize( 100, 40 )\n\nfunction butt:doAnim()\n\tlocal anim = self:NewAnimation( 10, 0, 1, function( anim, pnl )\n\t\tself:doAnim()\n\tend )\n\n\tanim.Think = function( anim, pnl, fraction )\n\t\tlocal radius = 200\n\t\tpnl:SetPos( 250 + math.sin( Lerp( fraction, -math.pi, math.pi ) ) * radius - pnl:GetWide() / 2,\n\t\t\t\t\t250 + math.cos( Lerp( fraction, -math.pi, math.pi ) ) * radius - pnl:GetTall() / 2 )\n\n\t\tpnl:SetText( \"Frac: \" .. fraction .. \"\\nTime: \" .. ( SysTime() - anim.StartTime ) )\n\tend\nend\nbutt:doAnim()"}},
{"function":{"name":"MoveToBefore","parent":"Panel","type":"classfunc","description":{"text":"Moves this panel object behind the specified sibling (child of the same parent) in the render order, and shuffles up the  of siblings now in front.","page":"Panel:SetZPos"},"realm":"Client","args":{"arg":{"text":"The panel to move this one behind. Must be a child of the same parent panel.","name":"siblingPanel","type":"Panel"}},"rets":{"ret":{"text":"`false` if the passed panel is not a sibling, otherwise `nil`.","name":"","type":"boolean"}}}},
{"function":{"name":"MoveToBack","parent":"Panel","type":"classfunc","description":{"text":"Moves the panel object behind all other panels on screen. If the panel has been made a pop-up with , it will still draw in front of any panels that haven't.","page":"Panel:MakePopup"},"realm":"Client"}},
{"function":{"name":"MoveToAfter","parent":"Panel","type":"classfunc","description":"Moves this panel object in front of the specified sibling (child of the same parent) in the render order, and shuffles up the Z-positions of siblings now behind.","realm":"Client","args":{"arg":{"text":"The panel to move this one in front of. Must be a child of the same parent panel.","name":"siblingPanel","type":"Panel"}},"rets":{"ret":{"text":"`false` if the passed panel is not a sibling, otherwise `nil`.","name":"","type":"boolean"}}}},
{"function":{"name":"MoveRightOf","parent":"Panel","type":"classfunc","description":"Places the panel right to the passed panel with the specified offset.","realm":"Client","args":{"arg":[{"text":"Panel to position relatively to.","name":"panel","type":"Panel"},{"text":"The align offset.","name":"offset","type":"number","default":"0"}]}}},
{"function":{"name":"MoveTo","parent":"Panel","type":"classfunc","description":"Moves the panel to the specified position using animation.","realm":"Client","args":{"arg":[{"text":"The target x coordinate of the panel.","name":"posX","type":"number"},{"text":"The target y coordinate of the panel.","name":"posY","type":"number"},{"text":"The time to perform the animation within.","name":"time","type":"number"},{"text":"The delay before the animation starts.","name":"delay","type":"number","default":"0"},{"text":"The easing of the start and/or end speed of the animation. See  for how this works.","name":"ease","type":"number","default":"-1","page":"Panel:NewAnimation"},{"text":"The function to be called once the animation finishes. Arguments are:\n*  animData - The \n*  pnl - The panel object that was moved.","name":"callback","type":"function","page":["table","AnimationData that was used.","Panel"]}]}},"example":{"description":"Move panel to center","code":"local frame = vgui.Create(\"DFrame\")\nframe:SetSize(ScrW() / 4, ScrH() / 4)\nframe:SetPos(ScrW() / 4, ScrH() / 2)\nframe:SetTitle(\"MoveTo Example\")\n\nlocal btn = vgui.Create(\"DButton\", frame)\nbtn:SetSize(frame:GetWide() / 2, frame:GetTall() / 3)\nbtn:Center()\nbtn:SetText(\"Move !\")\nbtn.DoClick = function(self)\n\tframe:MoveTo(ScrW() / 2 - frame:GetWide() / 2, ScrH() / 2 - frame:GetTall() / 2, 1, 0, -1, function()\n\t\tself:SetText(\"Yeah !\")\n\tend)\nend"}},
{"function":{"name":"MoveLeftOf","parent":"Panel","type":"classfunc","description":"Places the panel left to the passed panel with the specified offset.","realm":"Client","args":{"arg":[{"text":"Panel to position relatively to.","name":"panel","type":"Panel"},{"text":"The align offset.","name":"offset","type":"number","default":"0"}]}}},
{"function":{"name":"MoveBy","parent":"Panel","type":"classfunc","description":"Moves the panel by the specified coordinates using animation.","realm":"Client","args":{"arg":[{"text":"The number of pixels to move by in the horizontal (x) direction.","name":"moveX","type":"number"},{"text":"The number of pixels to move by in the vertical (y) direction.","name":"moveY","type":"number"},{"text":"The time (in seconds) in which to perform the animation.","name":"time","type":"number"},{"text":"The delay (in seconds) before the animation begins.","name":"delay","type":"number","default":"0"},{"text":"The easing of the start and/or end speed of the animation. See  for how this works.","name":"ease","type":"number","default":"-1","page":"Panel:NewAnimation"},{"text":"The function to be called once the animation is complete. Arguments are:\n*  animData - The \n*  pnl - The panel object that was moved.","name":"callback","type":"function","default":"nil","page":["table","AnimationData that was used.","Panel"]}]}}},
{"function":{"name":"MoveBelow","parent":"Panel","type":"classfunc","description":"Places the panel below the passed panel with the specified offset.","realm":"Client","args":{"arg":[{"text":"Panel to position relatively to.","name":"panel","type":"Panel"},{"text":"The align offset.","name":"offset","type":"number","default":"0"}]}}},
{"function":{"name":"MoveAbove","parent":"Panel","type":"classfunc","description":"Places the panel above the passed panel with the specified offset.","realm":"Client","args":{"arg":[{"text":"Panel to position relatively to.","name":"panel","type":"Panel"},{"text":"The align offset.","name":"offset","type":"number","default":"0"}]}}},
{"function":{"name":"MouseCapture","parent":"Panel","type":"classfunc","description":"Allows the panel to receive mouse input even if the mouse cursor is outside the bounds of the panel.","realm":"Client","args":{"arg":{"text":"Set to true to enable, set to false to disable.","name":"doCapture","type":"boolean"}}}},
{"function":{"name":"MakePopup","parent":"Panel","type":"classfunc","description":{"text":"Focuses the panel and enables it to receive input.\n\nThis automatically calls  and  and sets them to true.","page":["Panel:SetMouseInputEnabled","Panel:SetKeyboardInputEnabled"],"note":{"text":"Panels derived from  will not work properly with this function. Due to this, any children will not be intractable with keyboard. Derive from  instead.","page":["Panel","EditablePanel"]}},"realm":"Client"}},
{"function":{"name":"LocalToScreen","parent":"Panel","type":"classfunc","description":{"text":"Gets the absolute screen position of the position specified relative to the panel.\n\nSee also .","page":"Panel:ScreenToLocal","warning":{"text":"This function uses a cached value for the screen position of the panel, computed at the end of the last VGUI Think/Layout pass, so inaccurate results may be returned if the panel or any of its ancestors have been re-positioned outside of  or  within the last frame.","page":["PANEL:Think","PANEL:PerformLayout"]},"note":{"text":"If the panel uses , this function will return 0, 0 when the panel was created. The position will be updated in the next frame.","page":"Panel:Dock"}},"realm":"Client","args":{"arg":[{"text":"The X coordinate of the position on the panel to translate.","name":"posX","type":"number"},{"text":"The Y coordinate of the position on the panel to translate.","name":"posY","type":"number"}]},"rets":{"ret":[{"text":"The X coordinate relative to the screen.","name":"","type":"number"},{"text":"The Y coordinate relative to the screen.","name":"","type":"number"}]}}},
{"function":{"name":"LocalCursorPos","parent":"Panel","type":"classfunc","description":"Returns the cursor position local to the position of the panel (usually the upper-left corner).","realm":"Client","rets":{"ret":[{"text":"The x coordinate","name":"","type":"number"},{"text":"The y coordinate","name":"","type":"number"}]}},"example":{"description":"Create and center a label panel and update its text with the local cursor position.","code":"TestLabel = vgui.Create(\"DLabel\")\nTestLabel:SetSize(100, 20)\nTestLabel:Center()\nTestLabel:SetPaintBackgroundEnabled(true)\nTestLabel:SetColor(Color(255, 0, 0))\n\nlocal x, y = 0, 0\n\nfunction TestLabel:PerformLayout()\n\n\tx, y = self:LocalCursorPos()\n\n\tself:SetText(\" X: \"..x..\" , Y: \"..y)\n\t\nend","output":{"image":{"src":"Panel_LocalCursorPos_example1.gif"}}}},
{"function":{"name":"LoadGWENString","parent":"Panel","type":"classfunc","description":"Loads controls for the panel from a JSON string.","realm":"Client","args":{"arg":{"text":"JSON string containing information about controls to create.","name":"str","type":"string"}}}},
{"function":{"name":"LoadGWENFile","parent":"Panel","type":"classfunc","description":{"text":"Loads a .gwen file (created by GWEN Designer) and calls  with the contents of the loaded file.\n\nUsed to load panel controls from a file.","page":"Panel:LoadGWENString"},"realm":"Client","args":{"arg":[{"text":"The file to open. The path is relative to garrysmod/garrysmod/.","name":"filename","type":"string"},{"text":"The path used to look up the file.\n\n* \"GAME\" Structured like base folder (garrysmod/), searches all the mounted content (main folder, addons, mounted games etc)\n* \"LUA\" or \"lsv\" - All Lua folders (lua/) including gamesmodes and addons\n* \"DATA\" Data folder (garrysmod/data)\n* \"MOD\" Strictly the game folder (garrysmod/), ignores mounting.","name":"path","type":"string","default":"GAME"}]}}},
{"function":{"name":"LoadControlsFromString","parent":"Panel","type":"classfunc","description":{"text":"Loads controls(positions, etc) from given data. This is what the default options menu uses.","deprecated":"","internal":""},"realm":"Client","args":{"arg":{"text":"The data to load controls from. Format unknown.","name":"data","type":"string"}}}},
{"function":{"name":"LoadControlsFromFile","parent":"Panel","type":"classfunc","description":{"text":"Similar to  but loads controls from a file.","deprecated":"","internal":"","page":"Panel:LoadControlsFromString"},"realm":"Client","args":{"arg":{"text":"The path to load the controls from.","name":"path","type":"string"}}}},
{"function":{"name":"LerpPositions","parent":"Panel","type":"classfunc","description":{"text":"Redefines the panel object's  method to operate using frame-by-frame linear interpolation (Lerp). When the panel's position is changed, it will move to the target position at the speed defined. You can undo this with .\n\nUnlike the other panel animation functions, such as , this animation method will not operate whilst the game is paused. This is because it relies on .","page":["Panel:SetPos","Panel:DisableLerp","Panel:MoveTo","Global.FrameTime"]},"realm":"Client","args":{"arg":[{"text":"The speed at which to move the panel. This is affected by the value of `easeOut`. Recommended values are:\n* **0.1 - 10** when `easeOut` is `false`.\n* **0.1 - 1** when `easeOut` is `true`.","name":"speed","type":"number"},{"text":"This causes the panel object to 'jump' at the target, slowing as it approaches. This affects the `speed` value significantly, see above.","name":"easeOut","type":"boolean"}]}}},
{"function":{"name":"KillFocus","parent":"Panel","type":"classfunc","description":"Remove the focus from the panel.","realm":"Client"}},
{"function":{"name":"IsWorldClicker","parent":"Panel","type":"classfunc","description":{"text":"Returns if a panel allows world clicking set by .","page":"Panel:SetWorldClicker"},"realm":"Client","rets":{"ret":{"text":"If the panel allows world clicking.","name":"","type":"boolean"}}}},
{"function":{"name":"IsVisible","parent":"Panel","type":"classfunc","description":"Returns if the panel is visible.","realm":"Client","rets":{"ret":{"text":"isVisible","name":"","type":"boolean"}}}},
{"function":{"name":"IsValid","parent":"Panel","type":"classfunc","description":"Returns if the panel is valid and not marked for deletion.","realm":"Client","rets":{"ret":{"text":"True if the object is valid.","name":"","type":"boolean"}}}},
{"function":{"name":"IsSelectionCanvas","parent":"Panel","type":"classfunc","description":{"text":"Determines if the panel object is a selection canvas or not. This is set with .","page":"Panel:SetSelectionCanvas"},"realm":"Client","rets":{"ret":{"text":"The value (if any) set by .","name":"","type":"any","page":"Panel:SetSelectionCanvas"}}}},
{"function":{"name":"IsSelected","parent":"Panel","type":"classfunc","description":{"text":"Returns if the panel object is selected (like icons in the Spawn Menu, holding ). This can be set in Lua using .","key":"Shift","page":"Panel:SetSelected"},"realm":"Client","rets":{"ret":{"text":"Whether the panel object is selected or not. Always returns false if the object is not selectable. This can be modified using .","name":"","type":"boolean","page":"Panel:SetSelectable"}}}},
{"function":{"name":"IsSelectable","parent":"Panel","type":"classfunc","description":{"text":"Determines if the panel object is selectable (like icons in the Spawn Menu, holding ). This is set with .","key":"Shift","page":"Panel:SetSelectable"},"realm":"Client","rets":{"ret":{"text":"Whether the panel is selectable or not.","name":"","type":"boolean"}}}},
{"function":{"name":"IsOurChild","parent":"Panel","type":"classfunc","description":"Returns whether the panel contains the given panel, recursively.","realm":"Client","args":{"arg":{"name":"childPanel","type":"Panel"}},"rets":{"ret":{"text":"True if the panel contains childPanel.","name":"","type":"boolean"}}}},
{"function":{"name":"IsMouseInputEnabled","parent":"Panel","type":"classfunc","description":"Returns true if the panel can receive mouse input.","realm":"Client","rets":{"ret":{"text":"mouseInputEnabled","name":"","type":"boolean"}}}},
{"function":{"name":"IsMarkedForDeletion","parent":"Panel","type":"classfunc","description":"Returns if the panel is going to be deleted in the next frame.","realm":"Client","rets":{"ret":{"text":"markedForDeletion","name":"","type":"boolean"}}}},
{"function":{"name":"IsLoading","parent":"Panel","type":"classfunc","description":{"text":"Determines whether or not a  or  element is currently loading a page.","page":["HTML","DHTML"]},"realm":"Client","rets":{"ret":{"text":"Whether or not the (D)HTML object is loading.","name":"","type":"boolean"}}}},
{"function":{"name":"IsKeyboardInputEnabled","parent":"Panel","type":"classfunc","description":"Returns true if the panel can receive keyboard input.","realm":"Client","rets":{"ret":{"text":"keyboardInputEnabled","name":"","type":"boolean"}}}},
{"function":{"name":"IsHovered","parent":"Panel","type":"classfunc","description":{"text":"Returns whether the mouse cursor is hovering over this panel or not\n\nUses  internally.\n\nRequires  to be set to true.","page":["vgui.GetHoveredPanel","Panel:SetMouseInputEnabled"]},"realm":"Client","rets":{"ret":{"text":"true if the panel is hovered","name":"","type":"boolean"}}}},
{"function":{"name":"IsEnabled","parent":"Panel","type":"classfunc","description":{"text":"Returns whether the the panel is enabled or disabled.\n\nSee  for a function that makes the panel enabled or disabled.","page":"Panel:SetEnabled"},"realm":"Client","rets":{"ret":{"text":"Whether the panel is enabled or disabled.","name":"","type":"boolean"}}}},
{"function":{"name":"IsDragging","parent":"Panel","type":"classfunc","description":"Returns whether this panel is currently being dragged or not.","realm":"Client","file":{"text":"lua/includes/extensions/client/panel/dragdrop.lua","line":"363"},"rets":{"ret":{"text":"Whether this panel is currently being dragged or not.","name":"","type":"boolean"}}}},
{"function":{"name":"IsDraggable","parent":"Panel","type":"classfunc","description":"Returns whether this panel is draggable ( if user is able to drag it ) or not.","realm":"Client","file":{"text":"lua/includes/extensions/client/panel/dragdrop.lua","line":"357"},"rets":{"ret":{"text":"Whether this panel is draggable ( if user is able to drag it ) or not.","name":"","type":"boolean"}}}},
{"function":{"name":"IsChildHovered","parent":"Panel","type":"classfunc","description":{"text":"Determines whether the mouse cursor is hovered over one of this panel object's children. This is a reverse process using , and looks upward to find the parent.","page":"vgui.GetHoveredPanel"},"realm":"Client","args":{"arg":{"text":"Set to true to check only the immediate children of given panel ( first level )","name":"immediate","type":"boolean","default":"false"}},"rets":{"ret":{"text":"Whether or not one of this panel object's children is being hovered over.","name":"","type":"boolean"}}}},
{"function":{"name":"InvalidateParent","parent":"Panel","type":"classfunc","description":{"text":"Invalidates the layout of the parent of this panel object. This will cause it to re-layout, calling .","page":"PANEL:PerformLayout"},"realm":"Client","args":{"arg":{"text":"If `true`, the re-layout will occur immediately, otherwise it will be performed in the next frame.","name":"layoutNow","type":"boolean","default":"false"}}}},
{"function":{"name":"InvalidateLayout","parent":"Panel","type":"classfunc","description":{"text":"Causes the panel to re-layout in the next frame. During the layout process   will be called on the target panel.\n\nYou should avoid calling this function every frame.","page":"PANEL:PerformLayout","bug":{"text":"Using this on a panel after clicking on a docked element will cause docked elements to reorient themselves incorrectly. This can be fixed by assigning a unique  to each docked element.","issue":"2574","page":"Panel.SetZPos"}},"realm":"Client","args":{"arg":{"text":"If true the panel will re-layout instantly and not wait for the next frame.","name":"layoutNow","type":"boolean","default":"false"}}}},
{"function":{"name":"InvalidateChildren","parent":"Panel","type":"classfunc","description":{"text":"Invalidates the layout of this panel object and all its children. This will cause these objects to re-layout immediately, calling . If you want to perform the layout in the next frame, you will have loop manually through all children, and call  on each.","page":["PANEL:PerformLayout","Panel:InvalidateLayout"]},"realm":"Client","args":{"arg":{"text":"If `true`, the method will recursively invalidate the layout of all children. Otherwise, only immediate children are affected.","name":"recursive","type":"boolean","default":"false"}}}},
{"function":{"name":"InsertFade","parent":"Panel","type":"classfunc","description":{"text":"Begins a text fade for a  element where the last appended text segment is fully faded out after a specific amount of time, at a specific speed.\n\nThe alpha of the text at any given time is determined by the text's base alpha * ((`sustain` - ) / `length`) where  is added to `sustain` when this method is called.","page":["RichText","Global.CurTime","Global.CurTime"]},"realm":"Client","args":{"arg":[{"text":"The number of seconds the text remains visible.","name":"sustain","type":"number"},{"text":"The number of seconds it takes the text to fade out.\n\nIf set **lower** than `sustain`, the text will not begin fading out until (`sustain` - `length`) seconds have passed.\n\nIf set **higher** than `sustain`, the text will begin fading out immediately at a fraction of the base alpha.\n\nIf set to **-1**, the text doesn't fade out.","name":"length","type":"number"}]}},"example":[{"description":"Creates a Rich Text panel that sustains visibility for 6 seconds with a 2 second long fade-out.","code":"-- Create a window frame\nTextFrame = vgui.Create(\"DFrame\")\nTextFrame:SetSize(200, 200)\nTextFrame:Center()\nTextFrame:SetTitle(\"Fading Text\")\nTextFrame:MakePopup()\n\n-- RichText panel\nlocal richtext = vgui.Create(\"RichText\", TextFrame)\nrichtext:Dock(FILL)\n\n-- Sample text\nrichtext:SetText(\"This is an example of a Rich Text panel using a fade-out with:\\n\\n6 seconds of sustain\\n\\n2 second fade-out length\")\n\t\n-- When the panel is ready for layout, begin the fade\nfunction richtext:PerformLayout()\n\t\n\tself:SetFontInternal(\"Trebuchet18\")\n\tself:SetBGColor(Color(64, 64, 92))\n\t\n\t-- Wait 6 seconds, then fade out in 2 seconds\n\tself:InsertFade(6, 2)\n\t\nend","output":{"text":"Some identical example outputs are shown below, only with different `length` values swapped in.","image":[{"src":"RichText_InsertFade_output1.gif"},{"src":"RichText_InsertFade_output2.gif"},{"src":"RichText_InsertFade_output3.gif"}]}},{"description":"Create a Rich Text panel where Dr. Kleiner reads a fading message in sync with text.","code":"-- Create a window frame\nTextFrame = vgui.Create(\"DFrame\")\nTextFrame:SetSize(350, 100)\nTextFrame:Center()\nTextFrame:SetTitle(\"Kleiner says:\")\nTextFrame:MakePopup()\n\n-- RichText panel\nlocal richtext = vgui.Create(\"RichText\", TextFrame)\nrichtext:Dock(FILL)\t\n\n-- Red text\nrichtext:InsertColorChange(200, 60, 32, 255)\nrichtext:SetVerticalScrollbarEnabled(false)\n\t\nlocal words = {\"There's\", \"only\", \"one\", \"hedy...\"}\nlocal delay = 0\n\n-- Display each word in half second interval\nfor w, txt in pairs(words) do\n\n\tif(w == 1) then delay = 0.2\n\telse delay = (w-1)*0.45 end\n\n\ttimer.Simple(delay, function()\n\t\n\t\trichtext:AppendText(txt..\" \")\n\t\trichtext:InsertFade(2, 1)\t-- Sustain for 2 seconds while fading out after 1 second\n\t\t\n\t\trichtext:SetBGColor(Color(0, 0, 0))\n\t\trichtext:SetFontInternal(\"DermaLarge\")\n\t\n\tend)\n\nend\n\n-- Kleiner read along\nLocalPlayer():EmitSound(\"vo/k_lab2/kl_onehedy.wav\")","output":{"image":{"src":"RichText_InsertFade_example2.gif"}}}]},
{"function":{"name":"InsertColorChange","parent":"Panel","type":"classfunc","description":{"text":"Inserts a color change in a  element, which affects the color of all text added with  until another color change is applied.","page":["RichText","Panel:AppendText"]},"realm":"Client","args":{"arg":[{"text":"The red value (0 - 255).","name":"r","type":"number"},{"text":"The green value (0 - 255).","name":"g","type":"number"},{"text":"The blue value (0 - 255).","name":"b","type":"number"},{"text":"The alpha value (0 - 255).","name":"a","type":"number"}]}},"example":[{"description":"Creates a RichText panel with color coding on certain segments of text.","code":"-- Create a window frame\nTextFrame = vgui.Create(\"DFrame\")\nTextFrame:SetSize(200, 200)\nTextFrame:Center()\nTextFrame:SetTitle(\"Colored text\")\nTextFrame:MakePopup()\n\n-- RichText panel\nlocal richtext = vgui.Create(\"RichText\", TextFrame)\nrichtext:Dock(FILL)\nrichtext:SetVerticalScrollbarEnabled(false)\n\n-- Text blocks\nrichtext:InsertColorChange(255, 255, 192, 255)\nrichtext:AppendText(\"This is an example of \")\n\nrichtext:InsertColorChange(0, 255, 0, 255)\nrichtext:AppendText(\"color coding \")\n\nrichtext:InsertColorChange(255, 255, 192, 255)\nrichtext:AppendText(\"different segments of text throughout a \")\n\nrichtext:InsertColorChange(255, 200, 0, 255)\nrichtext:AppendText(\"Rich Text panel.\\n\\n\")\n\nrichtext:InsertColorChange(64, 0, 255, 255)\nrichtext:AppendText(\"Here is another line of text shown in the color \")\n\nrichtext:InsertColorChange(128, 0, 255, 255)\nrichtext:AppendText(\"purple.\")\n\n-- When the panel is ready for layout, apply font and background color\nfunction richtext:PerformLayout()\n\t\n\tself:SetFontInternal(\"Trebuchet18\")\n\tself:SetBGColor(Color(0, 16, 32))\n\t\nend","output":{"image":{"src":"RichText_InsertColorChange_example1.png"}}},{"description":{"text":"Word by word coloring using  and random colors.","page":"string.Explode"},"code":"-- Create a window frame\nTextFrame = vgui.Create(\"DFrame\")\nTextFrame:SetSize(300, 200)\nTextFrame:Center()\nTextFrame:SetTitle(\"Randomly Colored Words\")\nTextFrame:MakePopup()\n\n-- RichText panel\nlocal richtext = vgui.Create(\"RichText\", TextFrame)\nrichtext:Dock(FILL)\nrichtext:SetVerticalScrollbarEnabled(false)\n\nlocal txt = \"Here's a fun example involving word by word text coloring. \"..\n\"Each word is separated by a space, colored, and appended to the Rich Text panel individually. \"..\n\"The colors are randomly generated shades of red, orange, yellow, and pink.\"\n\nlocal txt_tbl = string.Explode(\" \", txt, false)\n\nfor _, word in pairs(txt_tbl) do\n\n\trichtext:InsertColorChange(255, math.random(0, 255), math.random(0, 255), 255)\n\trichtext:AppendText(word..\" \")\n\nend\n\nfunction richtext:PerformLayout()\n\t\n\tself:SetFontInternal(\"GModNotify\")\n\tself:SetBGColor(Color(32, 16, 0))\n\t\nend","output":{"image":{"src":"RichText_InsertColorChange_example2.png"}}}]},
{"function":{"name":"InsertClickableTextStart","parent":"Panel","type":"classfunc","description":{"text":"Starts the insertion of clickable text for a  element. Any text appended with  between this call and  will become clickable text.\n\nThe hook  is called when the text is clicked, with \"TextClicked\" as the signal name and `signalValue` as the signal value.","page":["RichText","Panel:AppendText","Panel:InsertClickableTextEnd","PANEL:ActionSignal"],"note":"The clickable text is a separate Derma panel which will not inherit the current font from the `RichText`."},"realm":"Client","args":{"arg":{"text":"The text passed as the action signal's value.","name":"signalValue","type":"string"}}},"example":{"description":{"text":"Creates a panel with some information on Rich Text panels along with a click-able link to the  page.","page":"RichText"},"code":"-- Create a window frame\nTextFrame = vgui.Create(\"DFrame\")\nTextFrame:SetSize(250, 150)\nTextFrame:Center()\nTextFrame:SetTitle(\"RichText\")\nTextFrame:MakePopup()\n\n-- RichText panel\nlocal richtext = vgui.Create(\"RichText\", TextFrame)\nrichtext:Dock( FILL )\n\n-- First segment\nrichtext:InsertColorChange(255, 255, 255, 255)\nrichtext:AppendText(\"This is a Rich Text panel — a panel used in Source MP's default chat box and developer console.\\n\\nSee the \")\n\n-- Second segment\nrichtext:InsertColorChange(192, 192, 255, 255)\nrichtext:InsertClickableTextStart(\"OpenWiki\")\t-- Make incoming text fire the \"OpenWiki\" value when clicked\nrichtext:AppendText(\"Garry's Mod Wiki\")\nrichtext:InsertClickableTextEnd()\t-- End clickable text here\n\n-- Third segment\nrichtext:InsertColorChange(255, 255, 255, 255)\nrichtext:AppendText(\" for information on how to use a Rich Text panel.\")\n\n-- Background color\nfunction richtext:PerformLayout() self:SetBGColor(Color(32, 32, 46)) end\n\n-- Handle any commands we get from the panel\nfunction richtext:ActionSignal(signalName, signalValue)\n\n\t-- Some clickable text was clicked\n\tif ( signalName == \"TextClicked\" ) then\n\t\n\t\t-- Open the wiki\n\t\tif ( signalValue == \"OpenWiki\" ) then\n\t\t\n\t\t\tgui.OpenURL( \"https://wiki.facepunch.com/gmod/Panel:InsertClickableTextStart\" ) \n\t\t\n\t\tend\n\t\n\tend\n\nend","output":{"image":{"src":"RichText_InsertClickableText_example.png"}}}},
{"function":{"name":"InsertClickableTextEnd","parent":"Panel","type":"classfunc","description":{"text":"Marks the end of a clickable text segment in a  element, started with .","page":["RichText","Panel:InsertClickableTextStart"]},"realm":"Client"},"example":{"description":{"text":"Creates a panel with some information on RichText panels along with a click-able link to the  page.","page":"RichText"},"code":"-- Create a window frame\nTextFrame = vgui.Create(\"DFrame\")\nTextFrame:SetSize(250, 150)\nTextFrame:Center()\nTextFrame:SetTitle(\"RichText\")\nTextFrame:MakePopup()\n\n-- RichText panel\nlocal richtext = vgui.Create(\"RichText\", TextFrame)\nrichtext:Dock(FILL)\n\n-- First segment\nrichtext:InsertColorChange(255, 255, 255, 255)\nrichtext:AppendText(\"This is a Rich Text panel — a panel used in Source MP's default chat box and developer console.\\n\\nSee the \")\n\n-- Second segment\nrichtext:InsertColorChange(192, 192, 255, 255)\nrichtext:InsertClickableTextStart(\"OpenWiki\")\t-- Make incoming text fire the \"OpenWiki\" value when clicked\nrichtext:AppendText(\"Garry's Mod Wiki\")\nrichtext:InsertClickableTextEnd()\t-- End clickable text here\n\n-- Third segment\nrichtext:InsertColorChange(255, 255, 255, 255)\nrichtext:AppendText(\" for information on how to use a Rich Text panel.\")\n\n-- Background color\nfunction richtext:PerformLayout() self:SetBGColor(Color(32, 32, 46)) end\n\n-- Handle any commands we get from the panel\nfunction richtext:ActionSignal(signalName, signalValue)\n\n\t-- Some clickable text was clicked\n\tif(signalName == \"TextClicked\") then\n\t\n\t\t-- Open the wiki\n\t\tif(signalValue == \"OpenWiki\") then\n\t\t\n\t\t\tgui.OpenURL(\"/Category:RichText\")\n\t\n\t\tend\n\t\n\tend\n\nend","output":{"image":{"src":"RichText_InsertClickableText_example.png"}}}},
{"function":{"name":"Hide","parent":"Panel","type":"classfunc","description":"Makes a panel invisible.","realm":"Client"}},
{"function":{"name":"HasParent","parent":"Panel","type":"classfunc","description":"Returns whether the panel is a descendent of the given panel.","realm":"Client","args":{"arg":{"name":"parentPanel","type":"Panel"}},"rets":{"ret":{"text":"True if the panel is contained within parentPanel.","name":"","type":"boolean"}}}},
{"function":{"name":"HasHierarchicalFocus","parent":"Panel","type":"classfunc","description":"Returns if the panel or any of its children(sub children and so on) has the focus.","realm":"Client","rets":{"ret":{"text":"hasHierarchicalFocus","name":"","type":"boolean"}}}},
{"function":{"name":"HasFocus","parent":"Panel","type":"classfunc","description":"Returns if the panel is focused.","realm":"Client","rets":{"ret":{"text":"hasFocus","name":"","type":"boolean"}}}},
{"function":{"name":"HasChildren","parent":"Panel","type":"classfunc","description":"Returns whenever the panel has child panels.","realm":"Client","rets":{"ret":{"text":"hasChilds","name":"","type":"boolean"}}}},
{"function":{"name":"GWEN_SetText","parent":"Panel","type":"classfunc","description":{"text":"Used by  to apply the `Text` property to a panel.","internal":"","page":"Panel:ApplyGWEN"},"realm":"Client","args":{"arg":{"text":"The text to be applied to the panel.","name":"txt","type":"string"}}}},
{"function":{"name":"GWEN_SetSize","parent":"Panel","type":"classfunc","description":{"text":"Used by  to apply the `Size` property to a  panel object. This calls .","internal":"","page":["Panel:ApplyGWEN","Panel:SetSize"]},"realm":"Client","args":{"arg":{"text":"A two-membered table containing the width and heights as numbers:\n*  w - The width.\n*  h - The height.","name":"size","type":"table","page":["number","number"]}}}},
{"function":{"name":"GWEN_SetPosition","parent":"Panel","type":"classfunc","description":{"text":"Used by  to apply the `Position` property to a  panel object. This calls .","internal":"","page":["Panel:ApplyGWEN","Panel:SetPos"]},"realm":"Client","args":{"arg":{"text":"A two-membered table containing the x and y coordinates as numbers:\n*  x - The x coordinate.\n*  y - The y coordinate.","name":"pos","type":"table","page":["number","number"]}}}},
{"function":{"name":"GWEN_SetMin","parent":"Panel","type":"classfunc","description":{"text":"Used by  to apply the `Min` property to a  , ,  or . This calls `SetMin` on one of the previously listed methods.","internal":"","page":["Panel:ApplyGWEN","DNumberWang","Slider","DNumSlider","DNumberScratch"]},"realm":"Client","args":{"arg":{"text":"The minimum value the element is to permit.","name":"minValue","type":"number"}}}},
{"function":{"name":"GWEN_SetMax","parent":"Panel","type":"classfunc","description":{"text":"Used by  to apply the `Max` property to a  , ,  or . This calls `SetMax` on one of the previously listed methods.","internal":"","page":["Panel:ApplyGWEN","DNumberWang","Slider","DNumSlider","DNumberScratch"]},"realm":"Client","args":{"arg":{"text":"The maximum value the element is to permit.","name":"maxValue","type":"number"}}}},
{"function":{"name":"GWEN_SetHorizontalAlign","parent":"Panel","type":"classfunc","description":{"text":"Used by  to apply the `HorizontalAlign` property to a  panel object. This calls .","internal":"","page":["Panel:ApplyGWEN","Panel:SetContentAlignment"]},"realm":"Client","args":{"arg":{"text":"The alignment, as a string, to pass to . Accepts:\n* `Right`: Align mid-right.\n* `Left`: Align mid-left.\n* `Center`: Align mid-center.","name":"hAlign","type":"string","page":"Panel:SetContentAlignment"}}}},
{"function":{"name":"GWEN_SetMargin","parent":"Panel","type":"classfunc","description":{"text":"Used by  to apply the `Margin` property to a  panel object. This calls .","internal":"","page":["Panel:ApplyGWEN","Panel:DockMargin"]},"realm":"Client","args":{"arg":{"text":"A four-membered table containing the margins as numbers:\n*  left - The left margin.\n*  top - The top margin.\n*  right - The right margin.\n*  bottom - The bottom margin.","name":"margins","type":"table","page":["number","number","number","number"]}}}},
{"function":{"name":"GWEN_SetDock","parent":"Panel","type":"classfunc","description":{"text":"Used by  to apply the `Dock` property to a  panel object. This calls .","internal":"","page":["Panel:ApplyGWEN","Panel:Dock"]},"realm":"Client","args":{"arg":{"text":"The dock mode to pass to the panel's `Dock` method. This reads a string and applies the approriate .\n* `Right`: Dock right.\n* `Left`: Dock left.\n* `Bottom`: Dock at the bottom.\n* `Top`: Dock at the top.\n* `Fill`: Fill the parent panel.","name":"dockState","type":"string","page":"Enums/DOCK"}}}},
{"function":{"name":"GWEN_SetControlName","parent":"Panel","type":"classfunc","description":{"text":"Used by  to apply the `ControlName` property to a panel. This calls .","internal":"","page":["Panel:ApplyGWEN","Panel:SetName"]},"realm":"Client","args":{"arg":{"text":"The new name to apply to the panel.","name":"name","type":"string"}}}},
{"function":{"name":"GotoTextStart","parent":"Panel","type":"classfunc","description":{"text":"Causes a  element to scroll to the top of its text.","page":"RichText","bug":{"text":"This does not work on the same frame as .","issue":"2239","page":"Panel:SetText"}},"realm":"Client"},"example":{"description":"Creates a RichText panel with a \"Back to Top\" button which scrolls the text to the start.","code":"-- Create a window frame\nTextFrame = vgui.Create(\"DFrame\")\nTextFrame:SetSize(250, 200)\nTextFrame:Center()\nTextFrame:SetTitle(\"#ServerBrowser_ServerWarningTitle\")\nTextFrame:MakePopup()\n\n-- RichText panel\nlocal richtext = vgui.Create(\"RichText\", TextFrame)\nrichtext:Dock(FILL)\n\n-- Yellow colored localized text about player capacity\nrichtext:InsertColorChange(255, 255, 192, 255)\nrichtext:AppendText(\"#ServerBrowser_ServerWarning_MaxPlayers\")\n\n-- Create a button that moves the text back to the start\nlocal topbutton = vgui.Create(\"DButton\", richtext)\ntopbutton:SetSize(60, 20)\ntopbutton:SetPos(160, 146)\ntopbutton:SetText(\"Back to Top\")\n\n-- When clicked, go to the start of the text\ntopbutton.DoClick = function() richtext:GotoTextStart()\tend\n\n-- Apply background color and font\nfunction richtext:PerformLayout()\n\t\n\tself:SetFontInternal(\"Trebuchet18\")\n\tself:SetBGColor(Color(64, 64, 84))\n\t\nend","output":{"image":{"src":"RichText_GotoTextStart_example1.gif"}}}},
{"function":{"name":"GWEN_SetCheckboxText","parent":"Panel","type":"classfunc","description":{"text":"Used by  to apply the `CheckboxText` property to a . This does exactly the same as , but exists to cater for the seperate GWEN properties.","internal":"","page":["Panel:ApplyGWEN","DCheckBoxLabel","Panel:GWEN_SetText"]},"realm":"Client","args":{"arg":{"text":"The text to be applied to the DCheckBoxLabel.","name":"txt","type":"string"}}}},
{"function":{"name":"GotoTextEnd","parent":"Panel","type":"classfunc","description":{"text":"Causes a  element to scroll to the bottom of its text.","page":"RichText"},"realm":"Client"}},
{"function":{"name":"GoToHistoryOffset","parent":"Panel","type":"classfunc","description":"Goes to the page in the HTML panel's history at the specified relative offset.","realm":"Client","args":{"arg":{"text":"The offset in the panel's back/forward history, relative to the current page, that you would like to skip to. Because this is relative, 0 = current page while negative goes back and positive goes forward. For example, -2 will go back 2 pages in the history.","name":"offset","type":"number"}}}},
{"function":{"name":"GoForward","parent":"Panel","type":"classfunc","description":"Goes forward one page in the HTML panel's history if available.","realm":"Client"}},
{"function":{"name":"GoBack","parent":"Panel","type":"classfunc","description":"Goes back one page in the HTML panel's history if available.","realm":"Client"}},
{"function":{"name":"GetZPos","parent":"Panel","type":"classfunc","description":"Returns the Z position of the panel.","realm":"Client","rets":{"ret":{"text":"The Z order position of the panel.","name":"","type":"number"}}}},
{"function":{"name":"GetValue","parent":"Panel","type":"classfunc","description":{"text":"Returns the value the panel holds.\n\nIn engine is only implemented for ,  and  as a string.","page":["CheckButton","Label","TextEntry"],"note":{"text":"This function is limited to 8092 Bytes. If using , use  for unlimited bytes.","page":["DTextEntry","Panel:GetText"]}},"realm":"Client","rets":{"ret":{"text":"The value the panel holds.","name":"","type":"any"}}},"example":{"description":"Returns the string typed in a TextEntry.","code":"local TextEntry = vgui.Create( \"TextEntry\" )\nTextEntry:SetText( \"Hello world!\" )\nprint( TextEntry:GetValue() )","output":"\"Hello world!\""}},
{"function":{"name":"GetValidReceiverSlot","parent":"Panel","type":"classfunc","description":"Gets valid receiver slot of currently dragged panel.","realm":"Client","file":{"text":"lua/includes/extensions/client/panel/dragdrop.lua","line":"331"},"rets":{"ret":[{"text":"The panel this was called on if a valid receiver slot exists, otherwise false.","name":"","type":"Panel"},{"text":"The slot table.","name":"","type":"table"}]}}},
{"function":{"name":"GetWide","parent":"Panel","type":"classfunc","description":"Returns the width of the panel.","realm":"Client","rets":{"ret":{"text":"width","name":"","type":"number"}}}},
{"function":{"name":"GetTextSize","parent":"Panel","type":"classfunc","description":{"text":"Gets the size of the text within a  derived panel.","page":"Label","bug":{"text":"This can return 0 incorrectly.","issue":"2576"}},"realm":"Client","rets":{"ret":[{"text":"The width of the text in the DLabel.","name":"","type":"number"},{"text":"The height of the text in the DLabel.","name":"","type":"number"}]}}},
{"function":{"name":"GetTall","parent":"Panel","type":"classfunc","description":"Returns the height of the panel.","realm":"Client","rets":{"ret":{"text":"height","name":"","type":"number"}}}},
{"function":{"name":"GetTextInset","parent":"Panel","type":"classfunc","description":{"text":"Gets the left and top text margins of a text-based panel object, such as a  or . This is set with .","page":["DButton","DLabel","Panel:SetTextInset"]},"realm":"Client","rets":{"ret":[{"text":"The left margin of the text, in pixels.","name":"","type":"number"},{"text":"The top margin of the text, in pixels.","name":"","type":"number"}]}}},
{"function":{"name":"GetText","parent":"Panel","type":"classfunc","description":{"text":"Returns the panel's text (where applicable).\n\nThis method returns a maximum of 1023 bytes, except for .","page":"DTextEntry"},"realm":"Client","rets":{"ret":{"text":"The panel's text.","name":"","type":"string"}}}},
{"function":{"name":"GetTable","parent":"Panel","type":"classfunc","description":"Returns the internal Lua table of the panel.","realm":"Client","rets":{"ret":{"text":"A table containing all the members of given panel object.","name":"","type":"table"}}}},
{"function":{"name":"GetSkin","parent":"Panel","type":"classfunc","description":"Returns the table for the derma skin currently being used by this panel object.","realm":"Client","rets":{"ret":{"text":"The derma skin table currently being used by this object.","name":"","type":"table"}}}},
{"function":{"name":"GetSelectionCanvas","parent":"Panel","type":"classfunc","description":{"text":"Returns the panel object (`self`) if it has been enabled as a selection canvas. This is achieved using .","page":"Panel:SetSelectionCanvas"},"realm":"Client","rets":{"ret":{"text":"The panel object this method was called on if enabled as a selection canvas, otherwise `nil`.","name":"","type":"Panel"}}}},
{"function":{"name":"GetSize","parent":"Panel","type":"classfunc","description":{"text":"Returns the size of the panel.\n\nIf you require both the panel's position and size, consider using  instead.","page":"Panel:GetBounds"},"realm":"Client","rets":{"ret":[{"text":"width","name":"","type":"number"},{"text":"height","name":"","type":"number"}]}}},
{"function":{"name":"GetSelectedTextRange","parent":"Panel","type":"classfunc","description":{"text":"Returns the currently selected range of text.\n\nThis function will only work on  and  panels and their derivatives.","page":["RichText","TextEntry"]},"realm":"Client","added":"2020.03.17","rets":{"ret":[{"text":"The start of the range. If no text is selected it may be 0 and/or equal to the end range.","name":"start","type":"number"},{"text":"The end of the range. If no text is selected it may be 0 and/or equal to the start range.","name":"endrange","type":"number"}]}}},
{"function":{"name":"GetSelectedChildren","parent":"Panel","type":"classfunc","description":{"text":"Returns a table of all children of the panel object that are selected. This is recursive, and the returned table will include tables for any child objects that also have children. This means that not all first-level members in the returned table will be of type .","page":"Panel"},"realm":"Client","rets":{"ret":{"text":"A table of any child objects that are selected, including tables for children of the child objects (These tables may also contain table members, as the method is recursive).","name":"","type":"table"}}}},
{"function":{"name":"GetPos","parent":"Panel","type":"classfunc","description":{"text":"Returns the position of the panel relative to its .\n\nIf you require the panel's position **and** size, consider using  instead.\n\n\nIf you need the position in screen space, see .","page":["Panel:GetParent","Panel:GetBounds","Panel:LocalToScreen"]},"realm":"Client","rets":{"ret":[{"text":"X coordinate, relative to this panels parents top left corner.","name":"","type":"number"},{"text":"Y coordinate, relative to this panels parents top left corner.","name":"","type":"number"}]}}},
{"function":{"name":"GetParent","parent":"Panel","type":"classfunc","description":"Returns the parent of the panel, returns nil if there is no parent.","realm":"Client","rets":{"ret":{"text":"The parent of given panel","name":"","type":"Panel"}}}},
{"function":{"name":"GetName","parent":"Panel","type":"classfunc","description":"Returns the internal name of the panel.","realm":"Client","rets":{"ret":{"text":"name","name":"","type":"string"}}}},
{"function":{"name":"GetNumLines","parent":"Panel","type":"classfunc","description":{"text":"Returns the number of lines in a . You must wait a couple frames before calling this after using  or , otherwise it will return the number of text lines before the text change.","page":["RichText","Panel:AppendText","Panel:SetText"],"note":{"text":"Even though this function can be called on any panel, it will only work with","page":"RichText"}},"realm":"Client","rets":{"ret":{"text":"The number of lines.","name":"","type":"number"}}},"example":{"description":"Creates a rich text panel with a block of text and prints out the number of text lines before and after `PerformLayout` is called.","code":"-- Create a window frame\nTextFrame = vgui.Create(\"DFrame\")\nTextFrame:SetSize(200, 224)\nTextFrame:Center()\nTextFrame:SetTitle(\"Generic Frame\")\n\n-- RichText panel\nlocal richtext = vgui.Create(\"RichText\", TextFrame)\nrichtext:Dock(FILL)\n\n-- Throw some text in the panel\nrichtext:SetText(\"This is a block of text demonstrating how line wrapping and panel size relates to the number of lines shown inside of a RichText panel.\")\n\n-- Keep track of PerformLayout calls\nrichtext.layoutCount = 0\n\n-- Custom function for this example\nfunction richtext:NumLinesExample()\n\tprint(\"PerformLayout called \"..self.layoutCount..\" times: \"..richtext:GetNumLines()..\" line(s) returned\")\t\nend\n\n-- Print # of lines before any layouts\nrichtext:NumLinesExample()\n\n-- Render update\nfunction richtext:PerformLayout()\n\n\tself.layoutCount = self.layoutCount + 1\n\tself:NumLinesExample()\t-- Print current # of lines\n\nend","output":{"text":"The panel shows 5 lines of text, but the number 5 isn't returned until PerformLayout has been called 2 times.\n\n```\nPerformLayout called 0 times: 1 line(s) returned\nPerformLayout called 1 times: 1 line(s) returned\nPerformLayout called 2 times: 5 line(s) returned\n```","image":{"src":"RichText_GetNumLines_example1.png"}}}},
{"function":{"name":"GetMaximumCharCount","parent":"Panel","type":"classfunc","description":{"text":"Returns the current maximum character count.\n\nThis function will only work on  and  panels and their derivatives.","page":["RichText","TextEntry"]},"realm":"Client","added":"2020.03.17","rets":{"ret":{"text":"The maximum amount of characters this panel is allowed to contain.","name":"maxChar","type":"number"}}}},
{"function":{"name":"GetHTMLMaterial","parent":"Panel","type":"classfunc","description":{"text":"Returns the panel's HTML material. Only works with ,  and  panels that have been fully loaded.","page":["Awesomium","HTML","DHTML"]},"realm":"Client","rets":{"ret":{"text":"The HTML material used by the panel. Typically starts with \"__vgui_texture_\" followed by an incremental number.","name":"","type":"IMaterial"}}},"example":{"description":"Defines a new entity which can display a web page on a TV screen.","code":"AddCSLuaFile()\n\nENT.Type = \"anim\"\nENT.Base = \"base_entity\"\n\nENT.PrintName = \"Web Screen\"\nENT.Author = \"Microflash\"\nENT.Spawnable = true\n\nif ( CLIENT ) then\n\tENT.Mat = nil\n\tENT.Panel = nil\nend\n\nfunction ENT:Initialize()\n\n\tif ( SERVER ) then\n\t\t\n\t\tself:SetModel(\"models/props_phx/rt_screen.mdl\")\n\t\tself:SetMoveType(MOVETYPE_VPHYSICS)\n\t\tself:SetSolid(SOLID_VPHYSICS)\n\t\t\n\t\tself:PhysicsInit(SOLID_VPHYSICS)\n\t\t\n\t\tself:Freeze()\n\t\t\n\telse\n\t\n\t\t-- Reset material and panel and load DHTML panel\n\t\tself.Mat = nil\n\t\tself.Panel = nil\n\t\tself:OpenPage()\n\t\t\n\tend\n\t\nend\n\nfunction ENT:Freeze()\n\tlocal phys = self:GetPhysicsObject()\n\tif (IsValid(phys)) then phys:EnableMotion(false) end\nend\n\n-- Load the DHTML reference panel\nfunction ENT:OpenPage()\n\n\t-- Iff for some reason a panel is already loaded, delete it\n\tif(self.Panel) then\n\t\n\t\tself.Panel:Remove()\n\t\tself.Panel = nil\n\t\n\tend\n\n\t-- Create a web page panel and fill the entire screen\n\tself.Panel = vgui.Create(\"DHTML\")\n\tself.Panel:Dock(FILL)\n\t\n\t-- Wiki page URL\n\tlocal url = \"https://wiki.facepunch.com/gmod/Material\"\n\t\n\t-- Load the wiki page\n\tself.Panel:OpenURL(url)\n\t\n\t-- Hide the panel\n\tself.Panel:SetAlpha(0)\n\tself.Panel:SetMouseInputEnabled(false)\n\t\n\t-- Disable HTML messages\n\tfunction self.Panel:ConsoleMessage(msg) end\n\nend\n\nfunction ENT:Draw()\n\n\t-- Iff the material has already been grabbed from the panel\n\tif(self.Mat) then\n\t\t\n\t\t-- Apply it to the screen/model\n\t\tif(render.MaterialOverrideByIndex) then\n\t\t\trender.MaterialOverrideByIndex(1, self.Mat)\n\t\telse\n\t\t\trender.ModelMaterialOverride(self.Mat)\n\t\tend\n\t\t\n\t-- Otherwise, check that the panel is valid and the HTML material is finished loading\n\telseif(self.Panel && self.Panel:GetHTMLMaterial()) then\n\n\t\t-- Get the html material\n\t\tlocal html_mat = self.Panel:GetHTMLMaterial()\n\t\t\n\t\t-- Used to make the material fit the model screen\n\t\t-- May need to be changed iff using a different model\n\t\t-- For the multiplication number it goes in segments of 512\n\t\t-- Based off the players screen resolution\n\t\tlocal scale_x, scale_y = ScrW()/2048, ScrH()/1024\n\t\t\n\t\t-- Create a new material with the proper scaling and shader\n\t\tlocal matdata =\n\t\t{\n\t\t\t[\"$basetexture\"]=html_mat:GetName(),\n\t\t\t[\"$basetexturetransform\"]=\"center 0 0 scale \"..scale_x..\" \"..scale_y..\" rotate 0 translate 0 0\",\n\t\t\t[\"$model\"]=1\n\t\t}\n\t\t-- Unique ID used for material name\n\t\tlocal uid = string.Replace(html_mat:GetName(), \"__vgui_texture_\", \"\")\n\t\t\n\t\t-- Create the model material\n\t\tself.Mat = CreateMaterial(\"WebMaterial_\"..uid, \"VertexLitGeneric\", matdata)\n\t\n\tend\n\n\t-- Render the model\n\tself:DrawModel()\n\t\n\t-- Reset the material override or else everything will have a HTML material!\n\trender.ModelMaterialOverride(nil)\n\nend\n\nfunction ENT:OnRemove()\n\t-- Make sure the panel is removed too\n\tif(self.Panel) then self.Panel:Remove() end\nend","output":{"image":{"src":"Panel_GetHTMLMaterial_example1.gif"}}}},
{"function":{"name":"GetFGColor","parent":"Panel","type":"classfunc","description":{"text":"Returns the foreground color of the panel.\n\nFor a  or , this is the color of its text.","page":["Label","RichText"],"note":{"text":"This doesn't apply to all VGUI elements (such as ) and its function varies between them","page":"DLabel"}},"added":"2020.03.17","realm":"Client","rets":{"ret":{"text":"A color structure. See","name":"color","type":"table","page":"Color"}}}},
{"function":{"name":"GetFont","parent":"Panel","type":"classfunc","description":{"text":"Returns the name of the font that the panel renders its text with.\n\nThis is the same font name set with .","page":"Panel:SetFontInternal"},"realm":"Client","rets":{"ret":{"text":"fontName","name":"","type":"string"}}}},
{"function":{"name":"GetDockPadding","parent":"Panel","type":"classfunc","description":{"text":"Returns the docked padding of the panel. (set by )","page":"Panel:DockPadding"},"realm":"Client","rets":{"ret":[{"text":"Left padding.","name":"","type":"number"},{"text":"Top padding.","name":"","type":"number"},{"text":"Right padding.","name":"","type":"number"},{"text":"Bottom padding.","name":"","type":"number"}]}}},
{"function":{"name":"GetDock","parent":"Panel","type":"classfunc","description":"Returns a dock enum for the panel's current docking type.","realm":"Client","rets":{"ret":{"text":"The dock enum for the panel. See .","name":"","type":"number","page":"Enums/DOCK"}}}},
{"function":{"name":"GetDock","parent":"Panel","type":"classfunc","description":"Returns a dock enum for the panel's current docking type.","realm":"Client","rets":{"ret":{"text":"The dock enum for the panel. See .","name":"","type":"number","page":"Enums/DOCK"}}}},
{"function":{"name":"GetCookieNumber","parent":"Panel","type":"classfunc","description":{"text":"Gets the value of a cookie stored by the panel object, as a number. This can also be done with , using the panel's cookie name, a fullstop, and then the actual name of the cookie.\n\nMake sure the panel's cookie name has not changed since writing, or the cookie will not be accessible. This can be done with  and .","page":["cookie.GetNumber","Panel:GetCookieName","Panel:SetCookieName"]},"realm":"Client","args":{"arg":[{"text":"The name of the cookie from which to retrieve the value.","name":"cookieName","type":"string"},{"text":"The default value to return if the cookie does not exist.","name":"default","type":"number"}]},"rets":{"ret":{"text":"The number value of the stored cookie, or the default value should the cookie not exist.","name":"","type":"number"}}}},
{"function":{"name":"GetCookieName","parent":"Panel","type":"classfunc","description":{"text":"Gets the name the panel uses to store cookies. This is set with .","page":"Panel:SetCookieName"},"realm":"Client","rets":{"ret":{"text":"The name the panel uses when reading or writing cookies. The format used is as follows: \n```\npanelCookieName.individualCookieName\n```","name":"","type":"string"}}}},
{"function":{"name":"GetContentSize","parent":"Panel","type":"classfunc","description":{"text":"Gets the size of the content/children within a panel object.\n\nOnly works with  derived panels by default such as .\n\n\nWill also work on any panel that manually implements this method.","page":["Label","DLabel"]},"realm":"Client","rets":{"ret":[{"text":"The content width of the object.","name":"","type":"number"},{"text":"The content height of the object.","name":"","type":"number"}]}},"example":{"description":"Demonstrates how to implement this function in your own panel.","code":"local PANEL = {}\n\nfunction PANEL:GetContentSize()\n\tsurface.SetFont( self:GetFont() )\n\treturn surface.GetTextSize( self:GetText() )\nend\n\nvgui.Register( \"DTextEntry_Edit\", PANEL, \"DTextEntry\" )\n\n-- Somewhere else, to test the newly created panel\nlocal frame = vgui.Create( \"DFrame\" )\nframe:SetSize( 500, 200 )\nframe:Center()\nframe:MakePopup()\n\nlocal txt = vgui.Create( \"DTextEntry_Edit\", frame )\ntxt:SetPos( 5, 25 )\ntxt:SetSize( 100, 10 )\ntxt:SetText( \"Really long string that is bigger than 100 pixels\" )\ntxt:SizeToContentsX( 5 ) -- Must be called after setting the text\ntxt:SizeToContentsY( 5 ) -- These two functions will not have effect on a normal DTextEntry"}},
{"function":{"name":"GetCookie","parent":"Panel","type":"classfunc","description":{"text":"Gets the value of a cookie stored by the panel object. This can also be done with , using the panel's cookie name, a fullstop, and then the actual name of the cookie.\n\nMake sure the panel's cookie name has not changed since writing, or the cookie will not be accessible. This can be done with  and .","page":["cookie.GetString","Panel:GetCookieName","Panel:SetCookieName"]},"realm":"Client","args":{"arg":[{"text":"The name of the cookie from which to retrieve the value.","name":"cookieName","type":"string"},{"text":"The default value to return if the cookie does not exist.","name":"default","type":"string"}]},"rets":{"ret":{"text":"The value of the stored cookie, or the default value should the cookie not exist.","name":"","type":"string"}}}},
{"function":{"name":"GetClosestChild","parent":"Panel","type":"classfunc","description":"Returns the child of this panel object that is closest to the specified point. The point is relative to the object on which the method is called. The distance the child is from this point is also returned.","realm":"Client","args":{"arg":[{"text":"The horizontal (x) position of the point.","name":"x","type":"number"},{"text":"The vertical (y) position of the point.","name":"y","type":"number"}]},"rets":{"ret":[{"text":"The child object that was closest to the specified point.","name":"","type":"Panel"},{"text":"The distance that this child was from the point.","name":"","type":"number"}]}}},
{"function":{"name":"GetClassName","parent":"Panel","type":"classfunc","description":"Returns the class name of the panel.","realm":"Client","rets":{"ret":{"text":"className","name":"","type":"string"}}}},
{"function":{"name":"GetChildren","parent":"Panel","type":"classfunc","description":"Returns a table with all the child panels of the panel.","realm":"Client","rets":{"ret":{"text":"children","name":"","type":"table"}}},"example":{"description":"Print the classnames of the children on the panel","code":"for i, v in ipairs(panel:GetChildren()) do\n    print(v:GetClassName())\nend"}},
{"function":{"name":"GetChildPosition","parent":"Panel","type":"classfunc","description":"Gets a child object's position relative to this panel object. The number of levels is not relevant; the child may have many parents between itself and the object on which the method is called.","realm":"Client","args":{"arg":{"text":"The panel to get the position of.","name":"pnl","type":"Panel"}},"rets":{"ret":[{"text":"The horizontal (x) position of the child relative to this panel object.","name":"","type":"number"},{"text":"The vertical (y) position of the child relative to this panel object.","name":"","type":"number"}]}}},
{"function":{"name":"GetChildrenInRect","parent":"Panel","type":"classfunc","description":"Returns a table of all visible, selectable children of the panel object that lie at least partially within the specified rectangle.","realm":"Client","args":{"arg":[{"text":"The horizontal (x) position of the top-left corner of the rectangle, relative to the panel object.","name":"x","type":"number"},{"text":"The vertical (y) position of the top-left corner of the rectangle, relative to the panel object.","name":"y","type":"number"},{"text":"The width of the rectangle.","name":"w","type":"number"},{"text":"The height of the rectangle.","name":"h","type":"number"}]},"rets":{"ret":{"text":"A table of panel objects that lie at least partially within the specified rectangle.","name":"","type":"table"}}}},
{"function":{"name":"GetChild","parent":"Panel","type":"classfunc","description":"Gets a child by its index.","realm":"Client","args":{"arg":{"text":"The index of the child to get.","name":"childIndex","type":"number","note":{"text":"This index starts at 0, except when you use this on a .","page":"DMenu"}}}}},
{"function":{"name":"GetCaretPos","parent":"Panel","type":"classfunc","description":"Returns the position/offset of the caret (or text cursor) in a text-based panel object.","realm":"Client","rets":{"ret":{"text":"The caret position/offset from the start of the text. A value of `0` means the caret sits before the first character.","name":"","type":"number"}}}},
{"function":{"name":"GetBounds","parent":"Panel","type":"classfunc","description":{"text":"Returns the position and size of the panel.\n\nThis is equivalent to calling  and  together.","page":["Panel:GetPos","Panel:GetSize"]},"realm":"Client","rets":{"ret":[{"text":"The x coordinate of the panel, relative to its parent's top left.","name":"","type":"number"},{"text":"The y coordinate of the panel, relative to its parent's top left.","name":"","type":"number"},{"text":"The width of the panel.","name":"","type":"number"},{"text":"The height of the panel.","name":"","type":"number"}]}}},
{"function":{"name":"GetBGColor","parent":"Panel","type":"classfunc","description":{"text":"Returns the background color of a panel such as a ,  or .","page":["RichText","Label","DColorCube"],"note":"This doesn't apply to all VGUI elements and its function varies between them"},"realm":"Client","added":"2020.03.17","rets":{"ret":{"text":"The  structure","name":"color","type":"number","page":"Color"}}}},
{"function":{"name":"GetAlpha","parent":"Panel","type":"classfunc","description":"Returns the alpha multiplier for this panel.","realm":"Client","rets":{"ret":{"text":"alphaMul","name":"","type":"number"}}}},
{"function":{"name":"FocusPrevious","parent":"Panel","type":"classfunc","description":"Focuses the previous panel in the focus queue.","realm":"Client"}},
{"function":{"name":"FocusNext","parent":"Panel","type":"classfunc","description":"Focuses the next panel in the focus queue.","realm":"Client"}},
{"function":{"name":"Find","parent":"Panel","type":"classfunc","description":"Finds a panel in its children(and sub children) with the given name.","realm":"Client","args":{"arg":{"text":"The name of the panel that should be found.","name":"panelName","type":"string"}},"rets":{"ret":{"text":"foundPanel","name":"","type":"Panel"}}}},
{"function":{"name":"EndBoxSelection","parent":"Panel","type":"classfunc","description":"Completes a box selection. If the end point of the selection box is within the selection canvas, mouse capture is disabled for the panel object, and the selected state of each child object within the selection box is toggled.","realm":"Client","rets":{"ret":{"text":"Whether the end point of the selection box was within the selection canvas.","name":"","type":"boolean"}}}},
{"function":{"name":"Exec","parent":"Panel","type":"classfunc","description":{"text":"Used to run commands within a  window.","internal":"","page":"DHTML"},"realm":"Client","args":{"arg":{"text":"The command to be run.","name":"cmd","type":"string"}}}},
{"function":{"name":"Droppable","parent":"Panel","type":"classfunc","description":{"text":"Makes this panel droppable. This is used with  to create drag and drop events.\n\nCan be called multiple times with different names allowing to be dropped onto different receivers.","page":"Panel:Receiver"},"realm":"Client","file":{"text":"lua/includes/extensions/client/panel/dragdrop.lua","line":"298"},"args":{"arg":{"text":"Name of your droppable panel","name":"name","type":"string"}},"rets":{"ret":{"text":"Blank table stored on the panel itself under pnl.m_DragSlot[ name ]. Is reset every time this function is called and does not appear to be used or exposed anywhere else.","name":"","type":"table"}}}},
{"function":{"name":"DrawTexturedRect","parent":"Panel","type":"classfunc","description":{"text":"Draws a textured rectangle to fill the panel object this method is called on. The texture is set using  or . This should only be called within the object's  or  hooks, as a shortcut for .","page":["surface.SetTexture","surface.SetMaterial","PANEL:Paint","PANEL:PaintOver","surface.DrawTexturedRect"]},"realm":"Client"}},
{"function":{"name":"DrawSelections","parent":"Panel","type":"classfunc","description":{"text":"Used to draw the magenta highlight colour of a panel object when it is selected. This should be called in the object's  hook. Once this is implemented, the highlight colour will be displayed only when the object is selectable and selected. This is achieved using  and  respectively.","page":["PANEL:PaintOver","Panel:SetSelectable","Panel:SetSelected"]},"realm":"Client"}},
{"function":{"name":"DrawTextEntryText","parent":"Panel","type":"classfunc","description":{"text":"Used to draw the text in a  within a derma skin. This should be called within the  skin hook.","page":["DTextEntry","SKIN:PaintTextEntry"]},"realm":"Client","args":{"arg":[{"text":"The colour of the main text.","name":"textCol","type":"table"},{"text":"The colour of the selection highlight (when selecting text).","name":"highlightCol","type":"table"},{"text":"The colour of the text cursor (or caret).","name":"cursorCol","type":"table"}]}},"example":{"description":"The paint function used in the default derma skin.","code":"function SKIN:PaintTextEntry( panel, w, h )\n\n\tif ( panel.m_bBackground ) then\n\t\n\t\tif ( panel:GetDisabled() ) then\n\t\t\tself.tex.TextBox_Disabled( 0, 0, w, h )\n\t\telseif ( panel:HasFocus() ) then\n\t\t\tself.tex.TextBox_Focus( 0, 0, w, h )\n\t\telse\n\t\t\tself.tex.TextBox( 0, 0, w, h )\n\t\tend\n\t\n\tend\n\t\n\tpanel:DrawTextEntryText( panel.m_colText, panel.m_colHighlight, panel.m_colCursor )\n\t\nend"}},
{"function":{"name":"DrawOutlinedRect","parent":"Panel","type":"classfunc","description":{"text":"Draws a hollow rectangle the size of the panel object this method is called on, with a border width of 1 px. The border colour is set using . This should only be called within the object's  or  hooks, as a shortcut for .","page":["surface.SetDrawColor","PANEL:Paint","PANEL:PaintOver","surface.DrawOutlinedRect"]},"realm":"Client"}},
{"function":{"name":"DrawFilledRect","parent":"Panel","type":"classfunc","description":{"text":"Draws a coloured rectangle to fill the panel object this method is called on. The colour is set using . This should only be called within the object's  or  hooks, as a shortcut for .","page":["surface.SetDrawColor","PANEL:Paint","PANEL:PaintOver","surface.DrawRect"]},"realm":"Client"}},
{"function":{"name":"DrawDragHover","parent":"Panel","type":"classfunc","description":{"text":"Called to draw the drop target when an object is being dragged across another. See .","internal":"","page":"Panel:SetDropTarget"},"realm":"Client","args":{"arg":[{"text":"The x coordinate of the top-left corner of the drop area.","name":"x","type":"number"},{"text":"The y coordinate of the top-left corner of the drop area.","name":"y","type":"number"},{"text":"The width of the drop area.","name":"width","type":"number"},{"text":"The height of the drop area.","name":"height","type":"number"}]}}},
{"function":{"name":"DragMouseRelease","parent":"Panel","type":"classfunc","description":{"text":"Called to inform the  that a mouse button has been depressed on a panel object.","page":"dragndrop"},"realm":"Client","args":{"arg":{"text":"The code for the mouse button pressed, passed by, for example, . See the .","name":"mouseCode","type":"number","page":["PANEL:OnMouseReleased","Enums/MOUSE"]}},"rets":{"ret":{"text":"`true` if an object was being dragged, otherwise `false`.","name":"","type":"boolean"}}}},
{"function":{"name":"DragMousePress","parent":"Panel","type":"classfunc","description":{"text":"Called to inform the  that a mouse button is being held down on a panel object.","page":"dragndrop"},"realm":"Client","args":{"arg":{"text":"The code for the mouse button pressed, passed by, for example, . See the .","name":"mouseCode","type":"number","page":["PANEL:OnMousePressed","Enums/MOUSE"]}}}},
{"function":{"name":"DragHoverEnd","parent":"Panel","type":"classfunc","description":{"text":"Called to end a drag and hover action. This resets the panel's  method, and is primarily used by .","internal":"","page":["PANEL:PaintOver","dragndrop.StopDragging"]},"realm":"Client"}},
{"function":{"name":"DragHover","parent":"Panel","type":"classfunc","description":{"text":"Called by  to perform actions on an object that is dragged and hovered over another.","internal":"","page":"dragndrop.HoverThink"},"realm":"Client","file":{"text":"lua/includes/extensions/client/panel/dragdrop.lua","line":"502-L525"},"args":{"arg":{"text":"If this time is greater than 0.1,  is called, passing it as an argument.","name":"HoverTime","type":"number","page":"PANEL:DragHoverClick"}}}},
{"function":{"name":"DragClick","parent":"Panel","type":"classfunc","description":{"text":"Called by  when a user clicks one mouse button whilst dragging with another.","internal":"","page":"Panel:DragMouseRelease"},"realm":"Client","rets":{"ret":{"text":"Always returns `true`.","name":"","type":"boolean"}}}},
{"function":{"name":"DoModal","parent":"Panel","type":"classfunc","description":{"text":"Makes the panel \"lock\" the screen until it is removed. It will silently fail if used while cursor is not visible. Call  before calling this function.","page":"Panel:MakePopup","bug":{"text":"You can still click in the world even if locked.","issue":"3457"}},"realm":"Client"}},
{"function":{"name":"DockPadding","parent":"Panel","type":"classfunc","description":"Sets the dock padding of the panel.\n\nThe dock padding is the extra space that will be left around the edge when child elements are docked inside this element.","realm":"Client","args":{"arg":[{"text":"The left padding to the parent.","name":"paddingLeft","type":"number"},{"text":"The top padding to the parent.","name":"paddingTop","type":"number"},{"text":"The right padding to the parent.","name":"paddingRight","type":"number"},{"text":"The bottom padding to the parent.","name":"paddingBottom","type":"number"}]}},"example":{"description":"Example showing the effects of DockMargin and DockPadding","code":"local frame = vgui.Create(\"DFrame\")\nframe:SetSize(600, 300)\nframe:SetTitle(\"Docking Demonstration\")\nframe:Center()\nframe:MakePopup(true)\n\nlocal panel = vgui.Create(\"DPanel\", frame)\npanel:DockMargin(10, 20, 30, 40)\npanel:DockPadding(40, 30, 20, 10)\npanel:Dock(FILL)\n\nlocal button = vgui.Create(\"DButton\", panel)\nbutton:SetText(\"Lopsided proportions!\")\nbutton:Dock(FILL)","output":{"image":{"src":"panel_dockmargin_dockpadding.png"}}}},
{"function":{"name":"DockMargin","parent":"Panel","type":"classfunc","description":"Sets the dock margin of the panel.\n\nThe dock margin is the extra space that will be left around the edge when this element is docked inside its parent element.","realm":"Client","args":{"arg":[{"text":"The left margin to the parent.","name":"marginLeft","type":"number"},{"text":"The top margin to the parent.","name":"marginTop","type":"number"},{"text":"The right margin to the parent.","name":"marginRight","type":"number"},{"text":"The bottom margin to the parent.","name":"marginBottom","type":"number"}]}},"example":{"description":"Example showing the effects of DockMargin and DockPadding","code":"local frame = vgui.Create(\"DFrame\")\nframe:SetSize(600, 300)\nframe:SetTitle(\"Docking Demonstration\")\nframe:Center()\nframe:MakePopup(true)\n\nlocal panel = vgui.Create(\"DPanel\", frame)\npanel:DockMargin(10, 20, 30, 40)\npanel:DockPadding(40, 30, 20, 10)\npanel:Dock(FILL)\n\nlocal button = vgui.Create(\"DButton\", panel)\nbutton:SetText(\"Lopsided proportions!\")\nbutton:Dock(FILL)","output":{"image":{"src":"panel_dockmargin_dockpadding.png"}}}},
{"function":{"name":"Dock","parent":"Panel","type":"classfunc","description":{"text":"Sets the dock type of the panel.","note":{"text":"After using this function, if you want to get the correct panel's bounds (position, size), use  (use **true** as argument if you need to update immediately)","page":"Panel:InvalidateParent"}},"realm":"Client","args":{"arg":{"text":"Dock type using .","name":"dockType","type":"number","page":"Enums/DOCK"}}},"example":[{"description":"Example docking including DockMargin. Provided by Walrus Viking in [this](http://facepunch.com/showthread.php?t=1439021&p=47095061&viewfull=1#post47095061) Facepunch post.","code":"local f = vgui.Create( \"DFrame\" )\nf:SetTitle( \"Dock Test\" )\nf:SetSize( 256, 256 )\nf:Center()\nf:MakePopup()\n\nlocal p = vgui.Create( \"DPanel\", f )\np:Dock( FILL )\np:DockMargin( 0, 0, 0, 0 )\n\nfor i = 0, 10, 1 do\n\tlocal l = vgui.Create( \"DLabel\", p )\n\tl:Dock( TOP )\n\tl:DockMargin( 4, 0, 0, 0 ) -- shift to the right\n\tl:SetColor( color_black )\n\tl:SetText( \"Hi! I'm a label!\" )\nend","output":{"image":{"src":"panel_dock_example1.png"}}},{"description":"Example showing how multiple docked elements behave.","code":"local frame = vgui.Create(\"DFrame\")\nframe:SetSize(600, 300)\nframe:SetTitle(\"Docking Demonstration\")\nframe:Center()\nframe:MakePopup(true)\n\nlocal panel = vgui.Create(\"DPanel\", frame) --Create a panel on the left\npanel:SetSize(300, 0) --Height doesn't matter since we're docking it to the left anyways\npanel:Dock(LEFT)\nlocal fill = vgui.Create(\"DButton\", panel) --Create a button and dock it\nfill:SetText(\"FILL\")\nfill:Dock(FILL)\nlocal left = vgui.Create(\"DButton\", panel)\nleft:SetText(\"LEFT\")\nleft:Dock(LEFT)\nlocal right = vgui.Create(\"DButton\", panel)\nright:SetText(\"RIGHT\")\nright:Dock(RIGHT)\nlocal top = vgui.Create(\"DButton\", panel)\ntop:SetText(\"TOP\")\ntop:Dock(TOP)\nlocal bottom = vgui.Create(\"DButton\", panel)\nbottom:SetText(\"BOTTOM\")\nbottom:Dock(BOTTOM)\n\nlocal panel = vgui.Create(\"DPanel\", frame) --Do the same thing on the right, but this time with top and bottom before left and right\npanel:SetSize(300, 0)\npanel:Dock(RIGHT)\nlocal fill = vgui.Create(\"DButton\", panel)\nfill:SetText(\"FILL\")\nfill:Dock(FILL)\nlocal top = vgui.Create(\"DButton\", panel)\ntop:SetText(\"TOP\")\ntop:Dock(TOP)\nlocal bottom = vgui.Create(\"DButton\", panel)\nbottom:SetText(\"BOTTOM\")\nbottom:Dock(BOTTOM)\nlocal left = vgui.Create(\"DButton\", panel)\nleft:SetText(\"LEFT\")\nleft:Dock(LEFT)\nlocal right = vgui.Create(\"DButton\", panel)\nright:SetText(\"RIGHT\")\nright:Dock(RIGHT)","output":{"image":{"src":"panel_dock_example_2.png"}}}]},
{"function":{"name":"DistanceFrom","parent":"Panel","type":"classfunc","description":{"text":"Returns the distance between the centre of this panel object and a specified point (local to the parent panel).","bug":"Broken, do not use"},"realm":"Client","args":{"arg":[{"text":"The horizontal (x) position in pixels of the point to compare with. Local to the parent panel, or container.","name":"posX","type":"number"},{"text":"The vertical (y) position in pixels of the point to compare with. Local to the parent panel, or container.","name":"posY","type":"number"}]},"rets":{"ret":{"text":"The linear (straight-line) distance between the specified point and the centre of the panel object.","name":"","type":"number"}}}},
{"function":{"name":"Distance","parent":"Panel","type":"classfunc","description":{"text":"Returns the linear distance from the centre of this panel object and another.","bug":"Completely broken, do not use."},"realm":"Client","args":{"arg":{"text":"The target object with which to compare position.","name":"tgtPanel","type":"Panel"}},"rets":{"ret":{"text":"The linear (straight-line) distance between the centres of the two objects.","name":"","type":"number"}}}},
{"function":{"name":"DisableLerp","parent":"Panel","type":"classfunc","description":{"text":"Resets the panel object's  method and removes its animation table (`Panel.LerpAnim`). This effectively undoes the changes made by .\n\nIn order to use Lerp animation again, you must call  before setting its `SetPosReal` property to 'nil'. See the example below.","page":["Panel:SetPos","Panel:LerpPositions","Panel:Stop"]},"realm":"Client"},"example":{"description":"Creates a function for changing the Lerp animation speed of a panel.","code":"function ChangeLerpSpeed( pnl, newSpeed, ease )\n\t\n\tif !ispanel(pnl) or !IsValid(pnl) then return end -- Make sure panel is valid\n\t\n\tpnl:DisableLerp()\n\tpnl:Stop()\n\tpnl.SetPosReal = nil\n\t\n\tpnl:LerpPositions( newSpeed, ease )\n\t\nend"}},
{"function":{"name":"DeleteCookie","parent":"Panel","type":"classfunc","description":{"text":"Deletes a cookie value using the panel's cookie name (  ) and the passed extension.","page":"Panel:GetCookieName"},"realm":"Client","args":{"arg":{"text":"The unique cookie name to delete.","name":"cookieName","type":"string"}}}},
{"function":{"name":"CutSelected","parent":"Panel","type":"classfunc","description":"Performs the \"CONTROL + X\" ( delete text and copy it to clipboard buffer ) action on selected text.","realm":"Client"}},
{"function":{"name":"CursorPos","parent":"Panel","type":"classfunc","description":{"text":"Returns the cursor position relative to the top left of the panel.\n\nThis is equivalent to calling  and then .","page":["gui.MousePos","Panel:ScreenToLocal"],"warning":{"text":"This function uses a cached value for the screen position of the panel, computed at the end of the last VGUI Think/Layout pass.\n\nie. inaccurate results may be returned if the panel or any of its ancestors have been repositioned outside of  or  within the last frame.","page":["PANEL:Think","PANEL:PerformLayout"]}},"realm":"Client","rets":{"ret":[{"text":"X coordinate of the cursor, relative to the top left of the panel.","name":"","type":"number"},{"text":"Y coordinate of the cursor, relative to the top left of the panel.","name":"","type":"number"}]}}},
{"function":{"name":"CopyWidth","parent":"Panel","type":"classfunc","description":"Copies the width of the panel.","realm":"Client","args":{"arg":{"text":"Panel to copy the width from.","name":"base","type":"Panel"}}}},
{"function":{"name":"CopySelected","parent":"Panel","type":"classfunc","description":"Performs the \"CONTROL + C\" key combination effect ( Copy selection to clipboard ) on selected text.","realm":"Client"}},
{"function":{"name":"CopyPos","parent":"Panel","type":"classfunc","description":"Copies the position of the panel.","realm":"Client","args":{"arg":{"text":"Panel to position the width from.","name":"base","type":"Panel"}}}},
{"function":{"name":"CopyHeight","parent":"Panel","type":"classfunc","description":"Copies the height of the panel.","realm":"Client","args":{"arg":{"text":"Panel to copy the height from.","name":"base","type":"Panel"}}}},
{"function":{"name":"CopyBounds","parent":"Panel","type":"classfunc","description":"Copies position and size of the panel.","realm":"Client","args":{"arg":{"text":"The panel to copy size and position from.","name":"base","type":"Panel"}}}},
{"function":{"name":"CopyBase","parent":"Panel","type":"classfunc","description":"Gets the size, position and dock state of the passed panel object, and applies it to this one.","realm":"Client","args":{"arg":{"text":"The panel to copy the boundary and dock settings from.","name":"srcPanel","type":"Panel"}}}},
{"function":{"name":"ConVarStringThink","parent":"Panel","type":"classfunc","description":{"text":"A think hook for  using ConVars as a value. Call it in the Think hook. Sets the panel's value should the convar change.\n\nThis function is best for: text inputs, read-only inputs, dropdown selects\n\nFor a number alternative, see .\n\n`Important`: Make sure your Panel has a SetValue function, else you may get errors.","page":[",panelsPanel","Panel:ConVarNumberThink"]},"realm":"Client"},"example":{"description":"How it should be implemented into your input.","code":"function PANEL:Think()\n\tself:ConVarStringThink()\nend","output":"Panel's value is changed when the convar changes."}},
{"function":{"name":"ConVarNumberThink","parent":"Panel","type":"classfunc","description":{"text":"A think hook for s using ConVars as a value. Call it in the Think hook. Sets the panel's value should the convar change.\n\nThis function is best for: checkboxes, sliders, number wangs\n\nFor a string alternative, see .\n\n`Important`: Make sure your Panel has a SetValue function, else you may get errors.","page":["Panel","Panel:ConVarStringThink"]},"realm":"Client"},"example":{"description":"How it should be implemented into your input.","code":"function PANEL:Think()\n\tself:ConVarNumberThink()\nend","output":"Panel's value is changed when the convar changes."}},
{"function":{"name":"ConVarChanged","parent":"Panel","type":"classfunc","description":{"text":"Updates a panel object's associated console variable. This must first be set up with , and have a ConVar set using .","page":["Global.Derma_Install_Convar_Functions","Panel:SetConVar"]},"realm":"Client","args":{"arg":{"text":"The new value to set the associated console variable to.","name":"newValue","type":"string"}}}},
{"function":{"name":"Clear","parent":"Panel","type":"classfunc","description":"Marks all of the panel's children for deletion.","realm":"Client"}},
{"function":{"name":"Command","parent":"Panel","type":"classfunc","description":{"text":"Sends an action command signal to the panel. The response is handled by .","page":"PANEL:ActionSignal"},"realm":"Client","args":{"arg":{"text":"The command to send to the panel.","name":"command","type":"string"}}},"example":{"description":{"text":"Defines a function which displays a dialog box that asks the player if they want to leave the server. Clicking the buttons fire panel commands that call the  which handles what action should be taken.","page":"PANEL:ActionSignal"},"code":"function DisconnectDialog()\n\n\t-- Remove existing dialog box\n\tif(DialogBox) then DialogBox:Remove() end\n\t\n\t-- Font and message\n\tlocal font = \"ChatFont\"\n\tlocal msg = \"Would you like to disconnect?\"\n\t\n\t-- Get the size of the text\n\tsurface.SetFont(font)\n\tlocal msg_w, msg_h = surface.GetTextSize(msg)\n\t\n\t-- Padding and button size\n\tlocal padding = 15\n\tlocal btn_w, btn_h = 35, 25\n\t\n\t-- Calculate dialog box size\n\tlocal dialog_w = msg_w+(padding*2)\n\tlocal dialog_h = msg_h+(padding*3)+btn_h\n\t\n\t-- Create the dialog box\n\tDialogBox = vgui.Create(\"DPanel\")\n\tDialogBox:SetSize(dialog_w, dialog_h)\n\tDialogBox:Center()\n\tDialogBox:SetBackgroundColor(Color(64, 64, 92, 255))\n\t\n\t-- Message\n\tlocal lbl = vgui.Create(\"DLabel\", DialogBox)\n\tlbl:SetPos(padding, padding)\n\tlbl:SetSize(msg_w, msg_h)\n\tlbl:SetText(msg)\n\tlbl:SetFont(font)\n\t\n\t-- Yes button\n\tlocal yes = vgui.Create(\"DButton\", DialogBox)\n\tyes:SetPos((dialog_w/2)-btn_w-20, msg_h+padding*2)\n\tyes:SetSize(btn_w, btn_h)\n\tyes:SetText(\"Yes\")\n\tyes:SetFont(font)\n\tyes.DoClick = function() DialogBox:Command(\"yes\") end\n\t\n\t-- No button\n\tlocal no = vgui.Create(\"DButton\", DialogBox)\n\tno:SetPos((dialog_w/2)+20, msg_h+padding*2)\n\tno:SetSize(btn_w, btn_h)\n\tno:SetText(\"No\")\n\tno:SetFont(font)\n\tno.DoClick = function() DialogBox:Command(\"no\") end\n\t\n\t-- Force mouse input\n\tDialogBox:MakePopup()\n\t\n\t-- Hook fired when DialogBox:Command is used\n\tfunction DialogBox:ActionSignal(signalName, signalValue)\n\t\n\t\t-- Thank the player and disconnect after 2 seconds\n\t\tif(signalName == \"yes\") then\n\t\t\n\t\t\tchat.AddText(Color(192, 192, 224), \"Thanks for playing \"..LocalPlayer():Nick()..\", come back soon!\")\n\t\t\t\n\t\t\ttimer.Simple(2.0, function()\n\t\t\t\tRunConsoleCommand(\"disconnect\")\n\t\t\tend)\n\t\t\t\n\t\t\tself:Remove()\n\t\t\n\t\t-- Remove the dialog box\n\t\telseif(signalName == \"no\") then\n\t\t\n\t\t\tself:Remove()\n\t\t\n\t\tend\n\t\n\tend\n\t\nend","output":{"image":{"src":"Panel_Command_example1.gif"}}}},
{"function":{"name":"ColorTo","parent":"Panel","type":"classfunc","description":"Fades panels color to specified one. It won't work unless panel has SetColor function.","realm":"Client","args":{"arg":[{"text":"The color to fade to","name":"color","type":"table"},{"text":"Length of the animation","name":"length","type":"number"},{"text":"Delay before start fading","name":"delay","type":"number"},{"text":"Function to execute when finished","name":"callback","type":"function"}]}}},
{"function":{"name":"ChildrenSize","parent":"Panel","type":"classfunc","description":"Returns the width and height of the space between the position of the panel (upper-left corner) and the max bound of the children panels (farthest reaching lower-right corner).","realm":"Client","rets":{"ret":[{"text":"The children size width.","name":"","type":"number"},{"text":"The children size height.","name":"","type":"number"}]}},"example":{"description":"Creates a recursively generated box of panels where the size of each panel is determined by the parent panel's children size + 10x10 pixels.\n\nAlso they flash bluish colors, just for good measure.","code":"-- Parent panel\nBGPanel = vgui.Create(\"DPanel\")\nBGPanel:SetSize(200, 200)\nBGPanel:Center()\n\nlocal panel, child_size_w, child_size_h = nil, 0, 0\n\n-- Create increasingly large blocks until children size exceeds the size of the panel\nwhile(BGPanel:ChildrenSize() < BGPanel:GetSize()) do\n\n\tchild_w, child_h = BGPanel:ChildrenSize()\n\n\tpanel = vgui.Create(\"DPanel\", BGPanel)\n\tpanel:SetPos(0, 0)\n\t\n\t-- Increase size based on the children size\n\tpanel:SetSize(child_w+10, child_h+10)\n\t\n\t-- Random bluish color every frame\n\tfunction panel:PerformLayout()\n\t\tself:InvalidateLayout()\t-- Call this again next frame\n\t\tself:SetBackgroundColor(Color(math.random(0, 255), 255, math.random(0, 255)))\n\tend\n\t\n\t-- Move to back so we can see the effect\n\tpanel:MoveToBack()\n\t\nend","output":{"image":{"src":"Panel_ChildrenSize_example1.gif"}}}},
{"function":{"name":"ChildCount","parent":"Panel","type":"classfunc","description":"Returns the amount of children of the of panel.","realm":"Client","rets":{"ret":{"text":"The amount of children the panel has.","name":"","type":"number"}}}},
{"function":{"name":"CenterHorizontal","parent":"Panel","type":"classfunc","description":"Centers the panel horizontally with specified fraction.","realm":"Client","args":{"arg":{"text":"The center fraction.","name":"fraction","type":"number","default":"0.5"}}}},
{"function":{"name":"CenterVertical","parent":"Panel","type":"classfunc","description":"Centers the panel vertically with specified fraction.","realm":"Client","args":{"arg":{"text":"The center fraction.","name":"fraction","type":"number","default":"0.5"}}}},
{"function":{"name":"Center","parent":"Panel","type":"classfunc","description":"Centers the panel on its parent.","realm":"Client"}},
{"function":{"name":"AppendText","parent":"Panel","type":"classfunc","description":{"text":"Appends text to a  element. This does not automatically add a new line.","page":"RichText"},"realm":"Client","args":{"arg":{"text":"The text to append (add on).","name":"txt","type":"string"}}}},
{"function":{"name":"AnimTail","parent":"Panel","type":"classfunc","description":{"text":"Returns the  value when all animations for this panel object will end.","page":"Global.SysTime"},"realm":"Client","rets":{"ret":{"text":"The system time value when all animations will end for this panel.","name":"","type":"number"}}}},
{"function":{"name":"ApplyGWEN","parent":"Panel","type":"classfunc","description":{"text":"Used by  and  to apply a GWEN controls table to a panel object.\n\nYou can do this manually using  and  to import and create a GWEN table structure from a `.gwen` file. This method can then be called, passing the GWEN table's `Controls` member.","page":["Panel:LoadGWENFile","Panel:LoadGWENString","file.Read","util.JSONToTable"]},"realm":"Client","args":{"arg":{"text":"The GWEN controls table to apply to the panel.","name":"GWENTable","type":"table"}}}},
{"function":{"name":"AnimationThinkInternal","parent":"Panel","type":"classfunc","description":{"text":"Performs the per-frame operations required for panel animations.\n\nThis is called every frame by .","internal":"","page":"PANEL:AnimationThink"},"realm":"Client"}},
{"function":{"name":"AlignRight","parent":"Panel","type":"classfunc","description":"Aligns the panel on the right of its parent with the specified offset.","realm":"Client","args":{"arg":{"text":"The align offset.","name":"offset","type":"number","default":"0"}}}},
{"function":{"name":"AlignTop","parent":"Panel","type":"classfunc","description":"Aligns the panel on the top of its parent with the specified offset.","realm":"Client","args":{"arg":{"text":"The align offset.","name":"offset","type":"number","default":"0"}}}},
{"function":{"name":"AlphaTo","parent":"Panel","type":"classfunc","description":"Uses animation to transition the current alpha value of a panel to a new alpha, over a set period of time and after a specified delay.","realm":"Client","args":{"arg":[{"text":"The alpha value (0-255) to approach.","name":"alpha","type":"number"},{"text":"The time in seconds it should take to reach the alpha.","name":"duration","type":"number"},{"text":"The delay before the animation starts.","name":"delay","type":"number","default":"0"},{"text":"The function to be called once the animation finishes. Arguments are:\n*  animData - The \n*  pnl - The panel object whose alpha was changed.","name":"callback","type":"function","page":["table","AnimationData that was used.","Panel"]}]}}},
{"function":{"name":"AlignLeft","parent":"Panel","type":"classfunc","description":"Aligns the panel on the left of its parent with the specified offset.","realm":"Client","args":{"arg":{"text":"The align offset.","name":"offset","type":"number","default":"0"}}}},
{"function":{"name":"AlignBottom","parent":"Panel","type":"classfunc","description":"Aligns the panel on the bottom of its parent with the specified offset.","realm":"Client","args":{"arg":{"text":"The align offset.","name":"offset","type":"number","default":"0"}}}},
{"function":{"name":"AddText","parent":"Panel","type":"classfunc","description":{"text":"This function does nothing.","deprecated":"Does nothing"},"realm":"Client"}},
{"function":{"name":"Add","parent":"Panel","type":"classfunc","description":"Adds the specified object to the panel.","realm":"Client","args":{"arg":{"text":"The panel to be added (parented). Can also be:\n*  Class Name - creates panel with the specified name and adds it to the panel.\n*  PANEL table - creates a panel from table and adds it to the panel.","name":"object","type":"Panel","page":["string","table"]}},"rets":{"ret":{"text":"New panel","name":"","type":"Panel"}}}},
{"function":{"name":"UseNoBehavior","parent":"NPC","type":"classfunc","description":"Undoes the other Use*Behavior functions.\n\nOnly usable on \"ai\" base entities.","realm":"Server"}},
{"function":{"name":"UseLeadBehavior","parent":"NPC","type":"classfunc","realm":"Server","rets":{"ret":{"name":"","type":"boolean"}}}},
{"function":{"name":"UseFuncTankBehavior","parent":"NPC","type":"classfunc","realm":"Server","rets":{"ret":{"name":"","type":"boolean"}}}},
{"function":{"name":"UseFollowBehavior","parent":"NPC","type":"classfunc","description":"Only usable on \"ai\" base entities.","realm":"Server","rets":{"ret":{"text":"If we succeeded setting the behavior.","name":"","type":"boolean"}}}},
{"function":{"name":"UseAssaultBehavior","parent":"NPC","type":"classfunc","realm":"Server","rets":{"ret":{"name":"","type":"boolean"}}}},
{"function":{"name":"UseActBusyBehavior","parent":"NPC","type":"classfunc","description":"Only usable on \"ai\" base entities.","realm":"Server","rets":{"ret":{"text":"If we succeeded setting the behavior.","name":"","type":"boolean"}}}},
{"function":{"name":"UpdateEnemyMemory","parent":"NPC","type":"classfunc","description":"Force the NPC to update information on the supplied enemy, as if it had line of sight to it.","realm":"Server","args":{"arg":[{"text":"The enemy to update.","name":"enemy","type":"Entity"},{"text":"The last known position of the enemy.","name":"pos","type":"Vector"}]}}},
{"function":{"name":"TaskFail","parent":"NPC","type":"classfunc","description":{"text":"Marks the current NPC task as failed.\n\nThis is meant to be used alongside  to complete or fail custom Lua defined tasks. ()","page":["NPC:TaskComplete","Schedule:AddTask"]},"realm":"Server","args":{"arg":{"text":"A string most likely defined as a Source Task, for more information on Tasks go to https://developer.valvesoftware.com/wiki/Task","name":"task","type":"string"}}}},
{"function":{"name":"TaskComplete","parent":"NPC","type":"classfunc","description":{"text":"Marks the current NPC task as completed.\n\nThis is meant to be used alongside  to complete or fail custom Lua defined tasks. ()","page":["NPC:TaskFail","Schedule:AddTask"]},"realm":"Server"}},
{"function":{"name":"TargetOrder","parent":"NPC","type":"classfunc","description":{"text":"Cancels  basically.\n\nOnly works on Citizens (npc_citizen) and is a part of the Half-Life 2 squad system.\n\nThe NPC **must** be in the player's squad for this to work.","page":"NPC:MoveOrder"},"realm":"Server","args":{"arg":{"text":"Must be a player, does nothing otherwise.","name":"target","type":"Entity"}}},"example":{"description":"A console command that once used cancels Move Orders and makes the NPCs return to the player.","code":"concommand.Add( \"targetnpcs\", function( ply )\n\tfor id, npc in pairs( ents.FindByClass( \"npc_citizen\" ) ) do\n\t\tnpc:TargetOrder( ply )\n\tend\nend )"}},
{"function":{"name":"StopMoving","parent":"NPC","type":"classfunc","description":"Resets the NPC's movement animation and velocity. Does not actually stop the NPC from moving.","realm":"Server"}},
{"function":{"name":"SetTarget","parent":"NPC","type":"classfunc","description":"Sets the NPC's target. This is used in some engine schedules.","realm":"Server","args":{"arg":{"text":"The target of the NPC.","name":"entity","type":"Entity"}}},"example":{"description":"Sets the NPC's target to first player.","code":"npc:SetTarget( Entity( 1 ) )"}},
{"function":{"name":"StartEngineTask","parent":"NPC","type":"classfunc","description":"Forces the NPC to start an engine task, this has different results for every NPC.","realm":"Server","args":{"arg":[{"text":"The id of the task to start, see [ai_task.h](https://github.com/ValveSoftware/source-sdk-2013/blob/55ed12f8d1eb6887d348be03aee5573d44177ffb/mp/src/game/server/ai_task.h#L89-L502)","name":"task","type":"number"},{"text":"The task data as a float, not all tasks make use of it.","name":"taskData","type":"number"}]}}},
{"function":{"name":"SetSchedule","parent":"NPC","type":"classfunc","description":"Sets the NPC's current schedule.","realm":"Server","args":{"arg":{"text":"The NPC schedule, see .","name":"schedule","type":"number","page":"Enums/SCHED"}}},"example":{"description":"Function which forces an NPC to walk to an entity.","code":"function NPCMoveTo(npc, ent)\n\n\tif(!IsValid(npc) or !IsValid(ent)) then return end\n\t\t\n\tnpc:SetSaveValue(\"m_vecLastPosition\", ent:GetPos())\n\tnpc:SetSchedule(SCHED_FORCED_GO)\n\t\nend"}},
{"function":{"name":"SetNPCState","parent":"NPC","type":"classfunc","description":"Sets the state the NPC is in to help it decide on a ideal schedule.","realm":"Server","args":{"arg":{"text":"New NPC state, see","name":"state","type":"number","page":"Enums/NPC_STATE"}}}},
{"function":{"name":"SetMovementSequence","parent":"NPC","type":"classfunc","description":"Sets the sequence the NPC navigation path uses for speed calculation. Doesn't seem to have any visible effect on NPC movement.","realm":"Server","args":{"arg":{"text":"The movement sequence index","name":"sequenceId","type":"number"}}}},
{"function":{"name":"SetMaxRouteRebuildTime","parent":"NPC","type":"classfunc","description":"Sets how how long to try rebuilding path before failing task.","realm":"Server","args":{"arg":{"text":"How long to try rebuilding path before failing task","name":"time","type":"number"}}}},
{"function":{"name":"SetMovementActivity","parent":"NPC","type":"classfunc","description":"Sets the activity the NPC uses when it moves.","realm":"Server","args":{"arg":{"text":"The movement activity, see .","name":"activity","type":"number","page":"Enums/ACT"}}},"example":{"description":"Makes all NPCs walk instead of run.","code":"function GM:Think()\n\t\n\tfor _, npc in pairs(ents.FindByClass(\"npc_*\")) do\n\n\t\tif(IsValid(npc) && npc:IsNPC() && npc:GetMovementActivity() != ACT_WALK) then\n\t\t\tnpc:SetMovementActivity(ACT_WALK)\n\t\tend\n\n\tend\n\t\nend"}},
{"function":{"name":"SetLastPosition","parent":"NPC","type":"classfunc","description":{"text":"Sets the last registered or memorized position for an npc. When using scheduling, the NPC will focus on navigating to the last position via nodes.","note":"The navigation requires ground nodes to function properly, otherwise the NPC could only navigate in a small area. (https://developer.valvesoftware.com/wiki/Info_node)"},"realm":"Server","args":{"arg":{"text":"Where the NPC's last position will be set.","name":"Position","type":"Vector"}}},"example":{"description":"Make an NPC chase a player","code":"function NPCGoGoRun(npc, ply)\n\tnpc:SetLastPosition( ply:GetPos() )\n\tnpc:SetSchedule( SCHED_FORCED_GO_RUN )\nend","output":"The NPC will chase the player."}},
{"function":{"name":"SetHullType","parent":"NPC","type":"classfunc","description":"Sets the hull type for the NPC.","realm":"Server","args":{"arg":{"text":"Hull type. See","name":"hullType","type":"number","page":"Enums/HULL"}}}},
{"function":{"name":"SetHullSizeNormal","parent":"NPC","type":"classfunc","description":{"text":"Updates the NPC's hull and physics hull in order to match its model scale.  seems to take care of this regardless.","page":"Entity:SetModelScale"},"realm":"Server"}},
{"function":{"name":"SetExpression","parent":"NPC","type":"classfunc","description":{"text":"Sets the NPC's .vcd expression. Similar to  except the scene is looped until it's interrupted by default NPC behavior or .","page":["Entity:PlayScene","NPC:ClearExpression"]},"realm":"Server","args":{"arg":{"text":"The expression filepath.","name":"expression","type":"string"}},"rets":{"ret":{"name":"","type":"number"}}},"example":{"description":"Function which makes the NPC whom the player is looking at repeat an annoying scene.","code":"function GrenadesScene(ply)\n\n\tif(!IsValid(ply)) then return end\n\t\n\tlocal npc = ply:GetEyeTrace().Entity\n\t\n\tif(IsValid(npc) && npc:IsNPC()) then\n\t\tnpc:SetExpression(\"scenes/streetwar/sniper/ba_nag_grenade0\"..math.random(1, 5)..\".vcd\")\n\tend\n\t\nend"}},
{"function":{"name":"SetEnemy","parent":"NPC","type":"classfunc","description":"Sets the target for an NPC.","realm":"Server","args":{"arg":[{"text":"The enemy that the NPC should target","name":"enemy","type":"Entity"},{"text":"Calls (COND_NEW_ENEMY) if the new enemy is valid and not equal to the last enemy.","name":"newenemy","type":"boolean","default":"true","page":"NPC:SetCondition"}]}},"example":{"description":{"text":"If an NPC has no specific target, they will start to target the closest player they are hostile to, or nothing if there are none. This is run every tick on the server and can be a bottleneck if player and/or entity counts are high, so consider adding a  cooldown if you plan on using this in-game.","page":"Global.CurTime"},"code":{"text":"hook.Add( \"Think\", \"NPCAutoSeekPlayer\", function()\n\tlocal npcs = ents.GetAll()\n\tlocal plys = player.GetAll()\n\tlocal plyCount = #plys\n\n\t-- No point trying to give NPCs a player when there are none\n\tif ( plyCount == 0 ) then\n\t\treturn\n\tend\n\n\t-- Loop over all entities and check for NPCs\n\tfor i = 1, #npcs do\n\t\tlocal npc = npcs[ i ]\n\n\t\t-- If this entity is an NPC without an enemy, give them one\n\t\tif ( npc:IsNPC() && !IsValid( npc:GetEnemy() ) ) then\n\t\t\tlocal curPly = nil\t\t\t-- Closest player\n\t\t\tlocal curPlyPos = nil\t\t-- Position of closest player\n\t\t\tlocal curDist = math.huge\t-- Lowest distance between npc and player\n\t\t\t\n\t\t\tlocal npcPos = npc:GetPos()\t-- Position of the NPC\n\n\t\t\t-- Loop over all players to check their distance from the NPC\n\t\t\tfor i = 1, plyCount do\n\t\t\t\tlocal ply = plys[ i ]\n\n\t\t\t\t-- Only consider players that this NPC hates\n\t\t\t\tif ( npc:Disposition( ply ) == D_HT ) then\n\t\t\t\t\t-- TODO: You can optimise looking up each player's position (constant)\n\t\t\t\t\t-- for every NPC by generating a table of:\n\t\t\t\t\t--- key = player identifier (entity object, UserID, EntIndex, etc.)\n\t\t\t\t\t--- value = player's position vector\n\t\t\t\t\t-- for the first NPC that passes to this part of the code,\n\t\t\t\t\t-- then reuse it for other NPCs\n\t\t\t\t\tlocal plyPos = ply:GetPos()\n\t\t\t\t\t\n\t\t\t\t\t-- Use DistToSqr for distance comparisons since\n\t\t\t\t\t-- it's more efficient than Distance, and the\n\t\t\t\t\t-- non-squared distance isn't needed for anything\n\t\t\t\t\tlocal dist = npcPos:DistToSqr( plyPos )\n\n\t\t\t\t\t-- If the new distance is lower, update the player information\n\t\t\t\t\tif ( dist","curdist":{"then":"","curply":["ply",""],"curplypos":["plyPos",""],"curdist":"dist","end":"","is":"","guarenteed":"","to":"","be":"","valid":"","since":"","this":"","code":"","will":"","only":"","run":"","if":"","there":"","at":"","least":"","one":"","player":"","npc:setenemy":"","npc:updateenemymemory":"","ode":"ode"}}}},
{"function":{"name":"SetCurrentWeaponProficiency","parent":"NPC","type":"classfunc","description":"Sets the weapon proficiency of an NPC (how skilled an NPC is with its current weapon).","realm":"Server","args":{"arg":{"text":"The proficiency for the NPC's current weapon. See .","name":"proficiency","type":"number","page":"Enums/WEAPON_PROFICIENCY"}}},"example":{"description":"Makes all NPCs suck at using their current weapons.","code":"for _, v in pairs( ents.FindByClass( \"npc_*\" ) ) do\n    v:SetCurrentWeaponProficiency( WEAPON_PROFICIENCY_POOR )\nend"}},
{"function":{"name":"SetCondition","parent":"NPC","type":"classfunc","description":"Sets an NPC condition.","realm":"Server","args":{"arg":{"text":"The condition index, see .","name":"condition","type":"number","page":"Enums/COND"}}},"example":{"description":"Freezes an NPC for a period of time.","code":"COND_NPC_UNFREEZE = 68\t-- Delete this line when COND_ enums are added\n\nfunction FreezeNPCTemporarily(npc, delay)\n\t\n\tif(!IsValid(npc)) then return end\n\t\n\tdelay = delay or 1\n\t\n\tnpc:SetSchedule(SCHED_NPC_FREEZE)\n\n\ttimer.Simple(delay, function()\n\t\tif(IsValid(npc)) then npc:SetCondition(COND_NPC_UNFREEZE) end\n\tend)\n\t\nend"}},
{"function":{"name":"SetArrivalSpeed","parent":"NPC","type":"classfunc","description":"","realm":"Server"}},
{"function":{"name":"SetArrivalSequence","parent":"NPC","type":"classfunc","description":"","realm":"Server"}},
{"function":{"name":"SetArrivalDistance","parent":"NPC","type":"classfunc","description":"Sets the distance to goal at which the NPC should stop moving and continue to other business such as doing the rest of their tasks in a schedule.","realm":"Server","args":{"arg":{"text":"The distance to goal that is close enough for the NPC","name":"dist","type":"number"}}}},
{"function":{"name":"SetArrivalDirection","parent":"NPC","type":"classfunc","description":"","realm":"Server"}},
{"function":{"name":"SetArrivalActivity","parent":"NPC","type":"classfunc","realm":"Server","args":{"arg":{"name":"act","type":"number"}}}},
{"function":{"name":"SentenceStop","parent":"NPC","type":"classfunc","description":"Stops any sounds (speech) the NPC is currently palying.\n\nEquivalent to `Entity:EmitSound( \"AI_BaseNPC.SentenceStop\" )`","realm":"Server"}},
{"function":{"name":"RunEngineTask","parent":"NPC","type":"classfunc","description":{"text":"Starts an engine task.\n\nUsed internally by the .","page":"ai_task"},"realm":"Server","args":{"arg":[{"text":"The task ID, see [ai_task.h](https://github.com/ValveSoftware/source-sdk-2013/blob/55ed12f8d1eb6887d348be03aee5573d44177ffb/mp/src/game/server/ai_task.h#L89-L502)","name":"taskID","type":"number"},{"text":"The task data.","name":"taskData","type":"number"}]}}},
{"function":{"name":"RemoveMemory","parent":"NPC","type":"classfunc","description":{"text":"This function crashes the game no matter how it is used and will be removed in a future update.\n\nUse  instead.","deprecated":"","page":"NPC:ClearEnemyMemory"},"realm":"Server"}},
{"function":{"name":"PlaySentence","parent":"NPC","type":"classfunc","description":"Forces the NPC to play a sentence from scripts/sentences.txt","realm":"Server","args":{"arg":[{"text":"The sentence string to speak.","name":"sentence","type":"string"},{"text":"Delay in seconds until the sentence starts playing.","name":"delay","type":"number"},{"text":"The volume of the sentence, from 0 to 1.","name":"volume","type":"number"}]},"rets":{"ret":{"text":"Returns the sentence index, -1 if the sentence couldn't be played.","name":"","type":"number"}}}},
{"function":{"name":"NavSetWanderGoal","parent":"NPC","type":"classfunc","description":"Sets a goal in x, y offsets for the npc to wander to","realm":"Server","args":{"arg":[{"text":"X offset","name":"xoffset","type":"number"},{"text":"Y offset","name":"yoffset","type":"number"}]}},"example":{"description":"Given an npc makes them wander to a location 100 units in both the x and y directions","code":"if npc:IsValid() then\n    npc:NavSetWanderGoal(100, 100)\n    npc:SetSchedule(SCHED_IDLE_WANDER)\nend"}},
{"function":{"name":"NavSetRandomGoal","parent":"NPC","type":"classfunc","description":"Creates a random path of specified minimum length between a closest start node and random node in the specified direction.","realm":"Server","args":{"arg":[{"text":"Minimum length of path in units","name":"minPathLength","type":"number"},{"text":"Unit vector pointing in the direction of the target random node","name":"dir","type":"Vector"}]}}},
{"function":{"name":"NavSetGoalTarget","parent":"NPC","type":"classfunc","description":"Set the goal target for an NPC.","realm":"Server","args":{"arg":[{"text":"The targeted entity to set the goal to.","name":"target","type":"Entity"},{"text":"The offset to apply to the targeted entity's position.","name":"offset","type":"Vector"}]}}},
{"function":{"name":"NavSetGoal","parent":"NPC","type":"classfunc","description":"Sets the goal position for the NPC.","realm":"Server","args":{"arg":{"text":"The position to set as the goal","name":"position","type":"Vector"}}}},
{"function":{"name":"MoveOrder","parent":"NPC","type":"classfunc","description":{"text":"Makes the NPC walk toward the given position. The NPC will return to the player after amount of time set by **player_squad_autosummon_time** .\n\nOnly works on Citizens (npc_citizen) and is a part of the Half-Life 2 squad system.\n\nThe NPC **must** be in the player's squad for this to work.","page":"ConVar"},"realm":"Server","args":{"arg":{"text":"The target position for the NPC to walk to.","name":"position","type":"Vector"}}},"example":{"description":"A console command that makes all Citizens on the map (if they are in the player's squad) try to go to where the player is looking at.","code":"concommand.Add( \"movenpcs\", function( ply )\n\tfor id, npc in pairs( ents.FindByClass( \"npc_citizen\" ) ) do\n\t\tnpc:MoveOrder( ply:GetEyeTrace().HitPos )\n\tend\nend )"}},
{"function":{"name":"MarkEnemyAsEluded","parent":"NPC","type":"classfunc","description":"Causes the NPC to temporarily forget the current enemy and switch on to a better one.","realm":"Server"}},
{"function":{"name":"MaintainActivity","parent":"NPC","type":"classfunc","description":"Tries to achieve our ideal animation state, playing any transition sequences that we need to play to get there.","realm":"Server"}},
{"function":{"name":"LostEnemySound","parent":"NPC","type":"classfunc","description":"Force an NPC to play his LostEnemy sound.","realm":"Server"}},
{"function":{"name":"IsUnreachable","parent":"NPC","type":"classfunc","description":"Returns whether the entity given can be reached by this NPC.","realm":"Server","args":{"arg":{"text":"The entity to test.","name":"testEntity","type":"Entity"}},"rets":{"ret":{"text":"If the entity is reachable or not.","name":"","type":"boolean"}}}},
{"function":{"name":"IsRunningBehavior","parent":"NPC","type":"classfunc","realm":"Server","description":"Checks if the NPC is running an **ai_goal**. ( e.g. An npc_citizen NPC following the Player. )","rets":{"ret":{"text":"Returns true if running an ai_goal, otherwise returns false.","name":"","type":"boolean"}}}},
{"function":{"name":"IsMoving","parent":"NPC","type":"classfunc","description":"Returns whether the NPC is moving or not.","realm":"Server","rets":{"ret":{"text":"Whether the NPC is moving or not.","name":"","type":"boolean"}}}},
{"function":{"name":"IsCurrentSchedule","parent":"NPC","type":"classfunc","description":"Returns whether or not the NPC is performing the given schedule.","realm":"Server","args":{"arg":{"text":"The schedule number, see .","name":"schedule","type":"number","page":"Enums/SCHED"}},"rets":{"ret":{"text":"True if the NPC is performing the given schedule, false otherwise.","name":"","type":"boolean"}}},"example":{"description":"Function which returns the schedule an NPC is performing.","code":"function GetNPCSchedule(npc)\n\n\tif(!IsValid(npc)) then return end\n\t\n\tfor s = 0, LAST_SHARED_SCHEDULE-1 do\n\t\tif(npc:IsCurrentSchedule(s)) then return s end\n\tend\n\t\n\treturn 0\n\t\nend"}},
{"function":{"name":"IdleSound","parent":"NPC","type":"classfunc","description":"Force an NPC to play his Idle sound.","realm":"Server"}},
{"function":{"name":"Give","parent":"NPC","type":"classfunc","description":"Used to give a weapon to an already spawned NPC.","realm":"Server","args":{"arg":{"text":"Class name of the weapon to equip to the NPC.","name":"weapon","type":"string"}},"rets":{"ret":{"text":"The weapon entity given to the NPC.","name":"","type":"Weapon"}}}},
{"function":{"name":"HasCondition","parent":"NPC","type":"classfunc","description":"Returns whether or not the NPC has the given condition.","realm":"Server","args":{"arg":{"text":"The condition index, see .","name":"condition","type":"number","page":"Enums/COND"}},"rets":{"ret":{"text":"True if the NPC has the given condition, false otherwise.","name":"","type":"boolean"}}},"example":{"description":"Function that prints a list of conditions an NPC has.","code":"function ListConditions(npc)\n\t\n\tif(!IsValid(npc)) then return end\n\t\n\tprint(npc:GetClass()..\" (\"..npc:EntIndex()..\") has conditions:\")\n\t\n\tfor c = 0, 100 do\n\t\n\t\tif(npc:HasCondition(c)) then\n\t\t\n\t\t\tprint(npc:ConditionName(c))\n\t\t\t\n\t\tend\n\t\t\n\tend\n\t\nend","output":"(To server console):\n\n\nnpc_antlion (120) has conditions:\n\n\nCOND_IN_PVS\n\n\nCOND_NO_WEAPON\n\n\nCOND_HAVE_ENEMY_LOS\n\n\nCOND_TOO_FAR_TO_ATTACK\n\n\nCOND_NO_HEAR_DANGER\n\n\nCOND_FLOATING_OFF_GROUND"}},
{"function":{"name":"GetTarget","parent":"NPC","type":"classfunc","description":{"text":"Returns the NPC's current target set by .","page":"NPC:SetTarget","bug":{"text":"This returns nil if the NPC has no target. You should use  (which accounts for nil and NULL) on the return to verify validity of the target.","issue":"3132","page":"Global.IsValid"}},"realm":"Server","rets":{"ret":{"text":"Target entity","name":"","type":"Entity"}}}},
{"function":{"name":"GetShootPos","parent":"NPC","type":"classfunc","description":{"text":"Returns the shooting position of the NPC.","note":{"text":"This only works properly when called on an NPC that can hold weapons, otherwise it will return the same value as .","page":"Entity:GetPos"}},"realm":"Server","rets":{"ret":{"text":"The NPC's shooting position.","name":"","type":"Vector"}}}},
{"function":{"name":"GetPathDistanceToGoal","parent":"NPC","type":"classfunc","realm":"Server","description":"Returns the distance the NPC is from Target Goal.","rets":{"ret":{"text":"The number of hammer units the NPC is away from the Goal.","name":"","type":"number"}}}},
{"function":{"name":"GetPathTimeToGoal","parent":"NPC","type":"classfunc","realm":"Server","description":"Returns the amount of time it will take for the NPC to get to its Target Goal.","rets":{"ret":{"text":"The amount of time to get to the target goal.","name":"","type":"number"}}}},
{"function":{"name":"GetNPCState","parent":"NPC","type":"classfunc","description":"Returns the NPC's state.","realm":"Server","rets":{"ret":{"text":"The NPC's current state, see .","name":"","type":"number","page":"Enums/NPC_STATE"}}},"example":{"description":"Function which prints out a list of idle NPCs to the server console.","code":"function ReportIdleNPCs()\n\n\tfor _, npc in pairs(ents.FindByClass(\"npc_*\")) do\n\t\n\t\tif(IsValid(npc) && npc:IsNPC() &&\n\t\t\tnpc:GetNPCState() == NPC_STATE_IDLE) then\n\t\t\n\t\t\tprint(\"Ent #\"..npc:EntIndex()..\": \"..npc:GetClass()..\" is idle.\")\n\t\t\t\n\t\tend\n\t\t\n\tend\n\nend","output":"(To server console)\n\n\nEnt #111: npc_citizen is idle.\n\n\nEnt #120: npc_citizen is idle.\n\n\nEnt #122: npc_citizen is idle.\n\n\nEnt #124: npc_citizen is idle."}},
{"function":{"name":"GetNextWaypointPos","parent":"NPC","type":"classfunc","description":"Gets the NPC's next waypoint position, where NPC will be moving after reaching current waypoint, if any is available.","realm":"Server","added":"2020.03.17","rets":{"ret":{"text":"The position of the next NPC waypoint.","name":"","type":"Vector"}}}},
{"function":{"name":"GetMovementActivity","parent":"NPC","type":"classfunc","description":"Returns the NPC's current movement activity.","realm":"Server","rets":{"ret":{"text":"Current NPC movement activity, see .","name":"","type":"number","page":"Enums/ACT"}}}},
{"function":{"name":"GetMovementSequence","parent":"NPC","type":"classfunc","description":"Returns the index of the sequence the NPC uses to move.","realm":"Server","rets":{"ret":{"text":"The movement sequence index","name":"","type":"number"}}}},
{"function":{"name":"GetExpression","parent":"NPC","type":"classfunc","description":"Returns the expression file the NPC is currently playing.","realm":"Server","rets":{"ret":{"text":"The file path of the expression.","name":"","type":"string"}}}},
{"function":{"name":"GetHullType","parent":"NPC","type":"classfunc","description":{"text":"Returns NPCs hull type set by .","page":"NPC:SetHullType"},"realm":"Server","rets":{"ret":{"text":"Hull type, see","name":"","type":"number","page":"Enums/HULL"}}}},
{"function":{"name":"GetCurWaypointPos","parent":"NPC","type":"classfunc","description":"Gets the NPC's current waypoint position (where NPC is currently moving towards), if any is available.","realm":"Server","added":"2020.03.17","rets":{"ret":{"text":"The position of the current NPC waypoint.","name":"","type":"Vector"}}}},
{"function":{"name":"GetEnemy","parent":"NPC","type":"classfunc","description":{"text":"Returns the entity that this NPC is trying to fight.","bug":{"text":"This returns nil if the NPC has no enemy. You should use  (which accounts for nil and NULL) on the return to verify validity of the enemy.","issue":"3132","page":"Global.IsValid"}},"realm":"Server","rets":{"ret":{"text":"Enemy NPC.","name":"","type":"NPC"}}},"example":[{"description":"Kill any npc that sets the first player as its enemy.","code":"local function Think( )\n\tfor k, v in pairs( ents.GetAll( ) ) do\n\t\tif v:IsNPC( ) and v:GetEnemy( ) == Entity( 1 ) then\n\t\t\tv:TakeDamage( 999 )\n\t\tend\n\tend\nend\n\nhook.Add( \"Think\", \"Kill My Enemies\", Think )","output":"Any npc that sets their enemy to Entity( 1 ) dies."},{"description":{"text":"Make every NPC that does not have an enemy (and preferably a  relationship agains Players) start attacking a random Player. This code is copied from the gamemode [My Base Defence](https://steamcommunity.com/sharedfiles/filedetails/?id=1647345157):","page":",D_HTEnums/D"},"code":"-- ...\nlocal function _SetRandomPlayerTargetForNPC(npc)\n\tif (npc:IsNPC()) then\n\t\tif (!IsValid(npc:GetEnemy())) then\n\t\t\tlocal _allPlayers\t= player.GetAll()\n\t\t\tlocal _winnerPlNr\t= math.random(1, #_allPlayers)\n\n\t\t\ttimer.Simple(0.15, function()\n\t\t\t\tlocal __Player = _allPlayers[_winnerPlNr]\n\t\t\t\t--\n\t\t\t\t--- Set the enemy for the NPC, so it does not just stand there doing nothing\n\t\t\t\t-- lika young lazy teen or something\n\t\t\t\tif (!npc:IsValid() or !__Player:IsValid()) then return end\n\t\t\t\tnpc:SetEnemy(__Player)\n\t\t\t\tnpc:UpdateEnemyMemory(__Player, __Player:GetPos())\n\t\t\t\tnpc:SetSchedule(SCHED_SHOOT_ENEMY_COVER)\n\t\t\tend)\n\t\tend\n\tend\nend\n-- - - ---\n-- --\n-- Make every NPC that might not have a target, recive one random Player..:>>\n-- (..you can place this loop inside an interval timer or something...)\nfor _, v in pairs(ents.GetAll('npc_*')) do\n\tif v:IsValid() then _SetRandomPlayerTargetForNPC(v) end\nend","output":"All NPCs on the SERVER will get their memory updated if they don't already have an enemy, and start moving to the last know position of the enemy and try to attack. This enemy will be a random Player. They will also try and shoot enemy cover."}]},
{"function":{"name":"GetCurrentWeaponProficiency","parent":"NPC","type":"classfunc","description":"Returns how proficient (skilled) an NPC is with its current weapon.","realm":"Server","rets":{"ret":{"text":"NPC's proficiency for current weapon. See .","name":"","type":"number","page":"Enums/WEAPON_PROFICIENCY"}}}},
{"function":{"name":"GetCurrentSchedule","parent":"NPC","type":"classfunc","description":"Returns the NPC's current schedule.","realm":"Server","rets":{"ret":{"text":"The NPCs schedule, see  or -1 if we failed for some reason","name":"","type":"number","page":"Enums/SCHED"}}}},
{"function":{"name":"GetBlockingEntity","parent":"NPC","type":"classfunc","description":"Returns the entity blocking the NPC along its path.","realm":"Server","rets":{"ret":{"text":"Blocking entity","name":"","type":"Entity"}}}},
{"function":{"name":"GetArrivalSequence","parent":"NPC","type":"classfunc","description":"Returns the sequence to be played when the NPC arrives at its goal.","realm":"Server","rets":{"ret":{"text":"Sequence ID to be played, or -1 if there's no sequence.","name":"","type":"number"}}}},
{"function":{"name":"GetArrivalActivity","parent":"NPC","type":"classfunc","description":"Returns the activity to be played when the NPC arrives at its goal","realm":"Server","rets":{"ret":{"name":"","type":"number"}}}},
{"function":{"name":"GetAimVector","parent":"NPC","type":"classfunc","description":{"text":"Returns the aim vector of the NPC. NPC alternative of .","page":"Player:GetAimVector"},"realm":"Server","rets":{"ret":{"text":"The aim direction of the NPC.","name":"","type":"Vector"}}}},
{"function":{"name":"GetActivity","parent":"NPC","type":"classfunc","description":"Returns the NPC's current activity.","realm":"Server","rets":{"ret":{"text":"Current activity, see .","name":"","type":"number","page":"Enums/ACT"}}}},
{"function":{"name":"GetActiveWeapon","parent":"NPC","type":"classfunc","description":{"text":"Returns the weapon the NPC is currently carrying, or .","page":",NULLGlobal_Variables"},"realm":"Shared","rets":{"ret":{"text":"The NPCs current weapon","name":"","type":"Entity"}}}},
{"function":{"name":"FoundEnemySound","parent":"NPC","type":"classfunc","description":"Force an NPC to play its FoundEnemy sound.","realm":"Server"}},
{"function":{"name":"FearSound","parent":"NPC","type":"classfunc","description":"Force an NPC to play his Fear sound.","realm":"Server"}},
{"function":{"name":"ExitScriptedSequence","parent":"NPC","type":"classfunc","description":"Makes an NPC exit a scripted sequence, if one is playing.","realm":"Server"}},
{"function":{"name":"DropWeapon","parent":"NPC","type":"classfunc","description":"Forces the NPC to drop the specified weapon.","realm":"Server","args":{"arg":[{"text":"Weapon to be dropped. If unset, will default to the currently equipped weapon.","name":"weapon","type":"Weapon","default":"nil"},{"text":"If set, launches the weapon at given position. There is a limit to how far it is willing to throw the weapon. Overrides velocity argument.","name":"target","type":"Vector","default":"nil"},{"text":"If set and previous argument is unset, launches the weapon with given velocity. If the velocity is higher than 400, it will be clamped to 400.","name":"velocity","type":"Vector","default":"nil"}]}},"example":{"description":"A console command that makes all NPCs on the map throw their weapons at the player who executed the console command","code":"concommand.Add( \"dropall\",function( ply )\n\tfor id, ent in pairs( ents.GetAll() ) do\n\t\tif ( ent:IsNPC() ) then\n\t\t\t-- Some NPCs on some maps delete their weapons when the weapon is dropped, we don't want that.\n\t\t\tent:SetKeyValue( \"spawnflags\", bit.band( ent:GetSpawnFlags(), bit.bnot( SF_NPC_NO_WEAPON_DROP ) ) )\n\t\t\tent:DropWeapon( nil, ply:GetPos() )\n\t\tend\n\tend\nend )"}},
{"function":{"name":"Disposition","parent":"NPC","type":"classfunc","description":"Returns the way the NPC \"feels\" about the entity.","realm":"Server","args":{"arg":{"text":"The entity to get the disposition from.","name":"ent","type":"Entity"}},"rets":{"ret":{"text":"The NPCs disposition, see .","name":"","type":"number","page":"Enums/D"}}},"example":{"description":"If a player is hurt by a friendly NPC, announce it.","code":"function FriendlyFireAnnouncement( ply, atk )\n   if atk:IsNPC() and atk:Disposition(ply) == D_LI then --like\n      PrintMessage(\"A \"..atk:GetClass()..\" attacked \"..ply:Nick()..\"!\", HUD_PRINTTALK)\n   end\nend\n\nhook.Add( \"PlayerHurt\", \"FriendlyFire\", FriendlyFireAnnouncement )","output":"Prints \"A ____ attacked ____!\" to everyones chat."}},
{"function":{"name":"ConditionName","parent":"NPC","type":"classfunc","description":"Translates condition ID to a string.","realm":"Server","args":{"arg":{"text":"The NPCs condition ID, see","name":"cond","type":"number","page":"Enums/COND"}},"rets":{"ret":{"text":"A human understandable string equivalent of that condition.","name":"","type":"string"}}}},
{"function":{"name":"ConditionName","parent":"NPC","type":"classfunc","description":"Translates condition ID to a string.","realm":"Server","args":{"arg":{"text":"The NPCs condition ID, see","name":"cond","type":"number","page":"Enums/COND"}},"rets":{"ret":{"text":"A human understandable string equivalent of that condition.","name":"","type":"string"}}}},
{"function":{"name":"ClearGoal","parent":"NPC","type":"classfunc","description":"Clears the current NPC goal or target.","realm":"Server"}},
{"function":{"name":"ClearExpression","parent":"NPC","type":"classfunc","description":{"text":"Clears the NPC's current expression which can be set with .","page":"NPC:SetExpression"},"realm":"Server"}},
{"function":{"name":"ClearCondition","parent":"NPC","type":"classfunc","description":{"text":"Clears out the specified  on this NPC.","page":"Enums/COND"},"realm":"Server","args":{"arg":{"text":"The  to clear out.","name":"condition","type":"number","page":"Enums/COND"}}}},
{"function":{"name":"ClearEnemyMemory","parent":"NPC","type":"classfunc","description":{"text":"Clears the Enemy from the NPC's memory, effectively forgetting it until met again with either the NPC vision or with .","page":"NPC:UpdateEnemyMemory"},"realm":"Server"}},
{"function":{"name":"Classify","parent":"NPC","type":"classfunc","description":{"text":"Returns the NPC class. Do not confuse with !","page":"Entity:GetClass"},"realm":"Server","rets":{"ret":{"text":"See","name":"","type":"number","page":"Enums/CLASS"}}}},
{"function":{"name":"CapabilitiesRemove","parent":"NPC","type":"classfunc","description":"Remove a certain capability.","realm":"Server","args":{"arg":{"text":"Capabilities to remove, see","name":"capabilities","type":"number","page":"Enums/CAP"}}},"example":{"description":"Removes the CAP_USE_SHOT_REGULATOR capability, if the NPC has it.","code":"self:CapabilitiesRemove(CAP_USE_SHOT_REGULATOR)"}},
{"function":{"name":"CapabilitiesGet","parent":"NPC","type":"classfunc","description":"Returns the NPC's capabilities along the ones defined on its weapon.","realm":"Server","rets":{"ret":{"text":"The capabilities as a bitflag.\nSee","name":"","type":"number","page":"Enums/CAP"}}}},
{"function":{"name":"CapabilitiesClear","parent":"NPC","type":"classfunc","description":"Removes all of Capabilities the NPC has.","realm":"Server"},"example":{"description":"Removes all of the Capabilities that the NPC has.","code":"self:CapabilitiesClear()"}},
{"function":{"name":"CapabilitiesAdd","parent":"NPC","type":"classfunc","description":"Adds a capability to the NPC.","realm":"Server","args":{"arg":{"text":"Capabilities to add, see","name":"capabilities","type":"number","page":"Enums/CAP"}}},"example":{"description":"Adds the CAP_USE_SHOT_REGULATOR to the NPC's capabilities.","code":"self:CapabilitiesAdd(CAP_USE_SHOT_REGULATOR)"}},
{"function":{"name":"AlertSound","parent":"NPC","type":"classfunc","description":"Force an NPC to play his Alert sound.","realm":"Server"}},
{"function":{"name":"AddRelationship","parent":"NPC","type":"classfunc","description":{"text":"Changes how an NPC feels towards another NPC.  If you want to setup relationship towards a certain `entity`, use .","page":"NPC:AddEntityRelationship"},"realm":"Server","args":{"arg":{"text":"A string representing how the relationship should be set up.\nShould be formatted as \"npc_class  numberPriority\".","name":"relationstring","type":"string","page":"Enums/D"}}},"example":{"description":"Spawns a manhack and makes it hate floor turrets.","code":"local hack = ents.Create( \"npc_manhack\" )\nhack:Spawn()\nhack:AddRelationship( \"npc_turret_floor D_HT 99\" )"}},
{"function":{"name":"AddEntityRelationship","parent":"NPC","type":"classfunc","description":{"text":"Makes the NPC like, hate, feel neutral towards, or fear the entity in question. If you want to setup relationship towards a certain entity `class`, use .","page":"NPC:AddRelationship","note":{"text":"NPCs do not see s by default. This can be fixed by adding the  flag to the NextBot.","page":["NextBot",",FL_OBJECTEnums/FL"]}},"realm":"Server","args":{"arg":[{"text":"The entity for the relationship to be applied to.","name":"target","type":"Entity"},{"text":"A  representing the relationship type.","name":"disposition","type":"number","page":"Enums/D"},{"text":"How strong the relationship is.","name":"priority","type":"number"}]}},"example":[{"description":"Spawns a manhack and makes it fear player 1.","code":"local hack = ents.Create( \"npc_manhack\" )\nhack:Spawn()\nhack:AddEntityRelationship( player.GetByID(1), D_FR, 99 )"},{"description":"Find wanted NPC class name and make them hate the entity.","code":"function ENT:Think()\nlocal enemy = ents.FindByClass(\"npc_*\") --Find any spawned entity in map with class beginning at npc\n    for _, x in pairs(enemy) do --for every found entity do\n       if !x:IsNPC() then return end -- if found entity is not NPC then do nothing \n       if x:GetClass() != self:GetClass() then -- if found entity is not self entity then continue\n        x:AddEntityRelationship( self, D_HT, 99 ) -- found entity will hate self entity\n        self:AddEntityRelationship( x, D_HT, 99 ) -- self entity will hate found entity          \n       end\n    end \nend"}]},
{"function":{"name":"StartActivity","parent":"NextBot","type":"classfunc","description":"Start doing an activity (animation)","realm":"Server","args":{"arg":{"text":"One of the","name":"activity","type":"number","page":"Enums/ACT"}}}},
{"function":{"name":"SetSolidMask","parent":"NextBot","type":"classfunc","description":{"text":"Sets the solid mask for given NextBot.\n\nThe default solid mask of a NextBot is .","page":",MASK_NPCSOLIDEnums/MASK"},"realm":"Server","args":{"arg":{"text":"The new mask, see  and","name":"mask","type":"number","page":["Enums/CONTENTS","Enums/MASK"]}}}},
{"function":{"name":"PlaySequenceAndWait","parent":"NextBot","type":"classfunc","description":"To be called in the behaviour coroutine only! Plays an animation sequence and waits for it to end before returning.","realm":"Server","file":{"text":"gamemodes/base/entities/entities/base_nextbot/sv_nextbot.lua","line":"298-317"},"args":{"arg":[{"text":"The sequence name","name":"name","type":"string"},{"text":"Playback Rate of that sequence","name":"speed","type":"number","default":"1"}]}}},
{"function":{"name":"HandleStuck","parent":"NextBot","type":"classfunc","description":{"text":"Called from Lua when the NPC is stuck. This should only be called from the behaviour coroutine - so if you want to override this function and do something special that yields - then go for it.\n\nYou should always call self.loco:ClearStuck() in this function to reset the stuck status - so it knows it's unstuck. See .","page":"CLuaLocomotion:ClearStuck"},"realm":"Server","file":{"text":"gamemodes/base/entities/entities/base_nextbot/sv_nextbot.lua","line":"231"}}},
{"function":{"name":"GetSolidMask","parent":"NextBot","type":"classfunc","description":"Returns the solid mask for given NextBot.","realm":"Server","rets":{"ret":{"text":"The solid mask, see  and","name":"","type":"number","page":["Enums/CONTENTS","Enums/MASK"]}}}},
{"function":{"name":"MoveToPos","parent":"NextBot","type":"classfunc","description":"To be called in the behaviour coroutine only! Will yield until the bot has reached the goal or is stuck","realm":"Server","file":{"text":"gamemodes/base/entities/entities/base_nextbot/sv_nextbot.lua","line":"266"},"args":{"arg":[{"text":"The position we want to get to","name":"pos","type":"Vector"},{"text":"A table containing a bunch of tweakable options.\n\n\n\n\n\n lookahead - Minimum look ahead distance.\n\n\n tolerance - How close we must be to the goal before it can be considered complete.\n\n\n draw - Draw the path. Only visible on listen servers and single player.\n\n\n maxage - Maximum age of the path before it times out.\n\n\n repath - Rebuilds the path after this number of seconds.","name":"options","type":"table","page":["number","number","boolean","number","number"]}]},"rets":{"ret":{"text":"Either \"failed\", \"stuck\", \"timeout\" or \"ok\" - depending on how the NPC got on","name":"","type":"string"}}}},
{"function":{"name":"GetRangeTo","parent":"NextBot","type":"classfunc","description":{"text":"Returns the distance to an entity or position.\n\nSee also .","page":"NextBot:GetRangeSquaredTo"},"realm":"Server","file_name":"src/garrysmod/Objects/lua_nextbot.cpp","file_line":"51","args":{"arg":{"text":"The position to measure distance to. Can be an entity.","name":"to","type":"Vector"}},"rets":{"ret":{"text":"The distance","name":"","type":"number"}}}},
{"function":{"name":"GetRangeSquaredTo","parent":"NextBot","type":"classfunc","description":{"text":"Returns squared distance to an entity or a position.\n\nSee also .","page":"NextBot:GetRangeTo"},"realm":"Server","file_name":"src/garrysmod/Objects/lua_nextbot.cpp","file_line":"80","args":{"arg":{"text":"The position to measure distance to. Can be an entity.","name":"to","type":"Vector"}},"rets":{"ret":{"text":"The squared distance","name":"","type":"number"}}}},
{"function":{"name":"GetActivity","parent":"NextBot","type":"classfunc","description":"Returns the currently running activity","realm":"Server","file_name":"src/garrysmod/Objects/lua_nextbot.cpp","file_line":"146","rets":{"ret":{"text":"The current activity","name":"","type":"number"}}}},
{"function":{"name":"FindSpots","parent":"NextBot","type":"classfunc","description":"Returns a table of hiding spots.","realm":"Server","file":{"text":"gamemodes/base/entities/entities/base_nextbot/sv_nextbot.lua","line":"189"},"args":{"arg":{"text":"This table should contain the search info.\n\n\n\n\n\n type - The type (optional, only 'hiding' supported)\n\n pos - the position to search.\n\n radius - the radius to search.\n\n stepup - the highest step to step up.\n\n stepdown - the highest we can step down without being hurt.","name":"specs","type":"table","page":["string","Vector","number","number","number"]}},"rets":{"ret":{"text":"An unsorted table of tables containing:\n\n\n\n\n vector - The position of the hiding spot\n\n distance - the distance to that position","name":"","type":"table","page":["Vector","number"]}}}},
{"function":{"name":"BodyMoveXY","parent":"NextBot","type":"classfunc","description":{"text":"Should only be called in BodyUpdate. This sets the move_x and move_y pose parameters of the bot to fit how they're currently moving, sets the animation speed to suit the ground speed, and calls FrameAdvance.","bug":{"text":"This function might cause crashes with some activities.","issue":"3420"}},"realm":"Server","file_name":"src/garrysmod/Objects/lua_nextbot.cpp","file_line":"177"}},
{"function":{"name":"FindSpot","parent":"NextBot","type":"classfunc","description":{"text":"Like  but only returns a vector.","page":"NextBot:FindSpots"},"realm":"Server","file":{"text":"gamemodes/base/entities/entities/base_nextbot/sv_nextbot.lua","line":"201"},"args":{"arg":[{"text":"Either \"random\", \"near\", \"far\"","name":"type","type":"string"},{"text":"This table should contain the search info.\n\n\n\n\n\n type - The type (Only'hiding' for now)\n\n pos - the position to search.\n\n radius - the radius to search.\n\n stepup - the highest step to step up.\n\n stepdown - the highest we can step down without being hurt.","name":"options","type":"table","page":["string","Vector","number","number","number"]}]},"rets":{"ret":{"text":"If it finds a spot it will return a vector. If not it will return nil.","name":"","type":"Vector"}}}},
{"function":{"name":"BecomeRagdoll","parent":"NextBot","type":"classfunc","description":"Become a ragdoll and remove the entity.","realm":"Server","file_name":"src/garrysmod/Objects/lua_nextbot.cpp","file_line":"111","args":{"arg":{"text":"Damage info passed from an onkilled event","name":"info","type":"CTakeDamageInfo"}},"rets":{"ret":{"text":"The created ragdoll, if any.","name":"","type":"Entity"}}}},
{"function":{"name":"Size","parent":"MarkupObject","type":"classfunc","description":"Gets computed the width and height of the markupobject.","realm":"Client","rets":{"ret":[{"text":"The computed width.","name":"","type":"number"},{"text":"The computed height.","name":"","type":"number"}]}}},
{"function":{"name":"GetWidth","parent":"MarkupObject","type":"classfunc","description":"Gets computed the width of the markupobject.","realm":"Client","rets":{"ret":{"text":"The computed width.","name":"Width","type":"number"}}}},
{"function":{"name":"GetHeight","parent":"MarkupObject","type":"classfunc","description":"Gets computed the height of the markupobject.","realm":"Client","rets":{"ret":{"text":"The computed height.","name":"Height","type":"number"}}}},
{"function":{"name":"Draw","parent":"MarkupObject","type":"classfunc","description":"Draws the computed markupobject to the screen.","realm":"Client","args":{"arg":[{"text":"The X coordinate on the screen.","name":"xOffset","type":"number"},{"text":"The Y coordinate on the screen.","name":"yOffset","type":"number"},{"text":"The alignment of the x coordinate using","name":"xAlign","type":"number","page":"Enums/TEXT_ALIGN"},{"text":"The alignment of the y coordinate using","name":"yAlign","type":"number","page":"Enums/TEXT_ALIGN"},{"text":"Sets the alpha of all drawn objects to this.","name":"alphaoverride","type":"number","default":"255"}]}}},
{"function":{"name":"Width","parent":"IVideoWriter","type":"classfunc","description":"Returns the width of the video stream.","realm":"Client","rets":{"ret":{"text":"width","name":"","type":"number"}}}},
{"function":{"name":"SetRecordSound","parent":"IVideoWriter","type":"classfunc","description":"Sets whether to record sound or not.","realm":"Client","args":{"arg":{"text":"Record.","name":"record","type":"boolean"}}}},
{"function":{"name":"Height","parent":"IVideoWriter","type":"classfunc","description":"Returns the height of the video stream.","realm":"Client","rets":{"ret":{"text":"height","name":"","type":"number"}}}},
{"function":{"name":"Finish","parent":"IVideoWriter","type":"classfunc","description":"Ends the video recording and dumps it to disk.","realm":"Client"}},
{"function":{"name":"AddFrame","parent":"IVideoWriter","type":"classfunc","description":"Adds the current framebuffer to the video stream.","realm":"Client","args":{"arg":[{"text":"Usually set to what  is, or simply 1/fps.","name":"frameTime","type":"number","page":"Global.FrameTime"},{"text":"If true it will downsample the whole screenspace to the videos width and height, otherwise it will just record from the top left corner to the given width and height and therefor not the whole screen.","name":"downsample","type":"boolean"}]}},"example":{"description":{"text":"If ActiveVideo was a , it would record the screen every frame.","page":"IVideoWriter"},"code":"--Taken from /lua/menu/video.lua\n\nhook.Add( \"DrawOverlay\", \"CaptureFrames\", function()\n\n\tif ( !ActiveVideo ) then return end\n\t\n\tActiveVideo:AddFrame( FrameTime(), true );\n\nend )"}},
{"function":{"name":"Width","parent":"ITexture","type":"classfunc","description":"Returns the modified width of the texture, this value may be affected by mipmapping and other factors.","realm":"Shared","rets":{"ret":{"text":"width","name":"","type":"number"}}}},
{"function":{"name":"IsErrorTexture","parent":"ITexture","type":"classfunc","description":"Returns whenever the texture is the error texture (pink and black checkerboard pattern).","realm":"Shared","rets":{"ret":{"text":"Whether the texture is the error texture or not.","name":"","type":"boolean"}}}},
{"function":{"name":"IsError","parent":"ITexture","type":"classfunc","description":{"text":"Returns whenever the texture is valid. (i.e. was loaded successfully or not)","note":{"text":"The \"error\" texture is a valid texture, and therefore this function will return false when used on it. Use , instead.","page":"ITexture:IsErrorTexture"}},"realm":"Shared","rets":{"ret":{"text":"Whether the texture was loaded successfully or not.","name":"","type":"boolean"}}}},
{"function":{"name":"Height","parent":"ITexture","type":"classfunc","description":"Returns the modified height of the texture, this value may be affected by mipmapping and other factors.","realm":"Shared","rets":{"ret":{"text":"height","name":"","type":"number"}}}},
{"function":{"name":"GetName","parent":"ITexture","type":"classfunc","description":"Returns the name of the texture, in most cases the path.","realm":"Shared","rets":{"ret":{"text":"name","name":"","type":"string"}}}},
{"function":{"name":"GetMappingHeight","parent":"ITexture","type":"classfunc","description":"Returns the true unmodified height of the texture.","realm":"Shared","rets":{"ret":{"text":"height","name":"","type":"number"}}}},
{"function":{"name":"GetMappingWidth","parent":"ITexture","type":"classfunc","description":"Returns the true unmodified width of the texture.","realm":"Shared","rets":{"ret":{"text":"width","name":"","type":"number"}}}},
{"function":{"name":"GetColor","parent":"ITexture","type":"classfunc","description":{"text":"Returns the color of the specified pixel, only works for textures created from PNG files.","bug":{"text":"The returned color will not have the color metatable.","issue":"2407"}},"realm":"Shared","args":{"arg":[{"text":"The X coordinate.","name":"x","type":"number"},{"text":"The Y coordinate.","name":"y","type":"number"}]},"rets":{"ret":{"text":"The color of the pixel as a .","name":"","type":"table","page":"Color"}}}},
{"function":{"name":"Download","parent":"ITexture","type":"classfunc","description":"Invokes the generator of the texture. Reloads file based textures from disk and clears render target textures.","realm":"Shared"}},
{"function":{"name":"WriteVector","parent":"ISave","type":"classfunc","description":{"text":"Writes a  to the save object.","page":"Vector"},"realm":"Shared","args":{"arg":{"text":"The vector to write.","name":"vec","type":"Vector"}}}},
{"function":{"name":"WriteString","parent":"ISave","type":"classfunc","description":{"text":"Writes a  to the save object.","page":"string"},"realm":"Shared","args":{"arg":{"text":"The string to write. Maximum length is 1024.","name":"str","type":"string"}}}},
{"function":{"name":"WriteInt","parent":"ISave","type":"classfunc","description":{"text":"Writes an integer  to the save object.","page":"number"},"realm":"Shared","args":{"arg":{"text":"The integer number to write.","name":"int","type":"number"}}}},
{"function":{"name":"WriteFloat","parent":"ISave","type":"classfunc","description":{"text":"Writes a floating point  to the save object.","page":"number"},"realm":"Shared","args":{"arg":{"text":"The floating point number to write.","name":"float","type":"number"}}}},
{"function":{"name":"WriteEntity","parent":"ISave","type":"classfunc","description":{"text":"Writes an  to the save object.","page":"Entity"},"realm":"Shared","args":{"arg":{"text":"The entity to write.","name":"ent","type":"Entity"}}}},
{"function":{"name":"WriteBool","parent":"ISave","type":"classfunc","description":{"text":"Writes a  to the save object.","page":"boolean"},"realm":"Shared","args":{"arg":{"text":"The boolean to write.","name":"bool","type":"boolean"}}}},
{"function":{"name":"WriteAngle","parent":"ISave","type":"classfunc","description":{"text":"Writes an  to the save object.","page":"Angle"},"realm":"Shared","args":{"arg":{"text":"The angle to write.","name":"ang","type":"Angle"}}}},
{"function":{"name":"StartBlock","parent":"ISave","type":"classfunc","description":{"text":"Starts a new block of data that you can write to inside current block. Blocks **must** be ended with .","page":"ISave:EndBlock"},"realm":"Shared","args":{"arg":{"text":"Name of the new block. Used for determining which block is which, returned by  during game load.","name":"name","type":"string","page":"IRestore:StartBlock"}}},"example":{"description":"Example usage","code":"saverestore.AddSaveHook( \"HookNameHere\", function( save )\n\tsave:StartBlock( \"Test\" )\n\t\tsave:WriteString( \"myawesomestring\" )\n\tsave:EndBlock()\nend )"}},
{"function":{"name":"EndBlock","parent":"ISave","type":"classfunc","description":{"text":"Ends current data block started with  and returns to the parent block.\n\nTo avoid all sorts of errors, you **must** end all blocks you start.","page":"ISave:StartBlock"},"realm":"Shared"}},
{"function":{"name":"StartBlock","parent":"IRestore","type":"classfunc","description":{"text":"Loads next block of data to be read inside current block. Blocks **must** be ended with .","page":"IRestore:EndBlock"},"realm":"Shared","rets":{"ret":{"text":"The name of the next data block to be read.","name":"","type":"string"}}},"example":{"description":"Example usage.","code":"saverestore.AddRestoreHook( \"HookNameHere\", function( save )\n\tlocal name = save:StartBlock()\n\tlocal myval = save:ReadString()\n\tsave:EndBlock()\n\n\tprint( name, myval )\nend )","output":{"text":"With example from \n\n```\nTest myawesomestring\n```","page":"ISave:StartBlock"}}},
{"function":{"name":"ReadVector","parent":"IRestore","type":"classfunc","description":{"text":"Reads next bytes from the restore object as a .","page":"Vector"},"realm":"Shared","rets":{"ret":{"text":"The read vector.","name":"","type":"Vector"}}}},
{"function":{"name":"ReadString","parent":"IRestore","type":"classfunc","description":{"text":"Reads next bytes from the restore object as a .","page":"string"},"realm":"Shared","rets":{"ret":{"text":"The read string. Maximum length is 1024.","name":"","type":"string"}}}},
{"function":{"name":"ReadInt","parent":"IRestore","type":"classfunc","description":{"text":"Reads next bytes from the restore object as an integer .","page":"number"},"realm":"Shared","rets":{"ret":{"text":"The read integer number.","name":"","type":"number"}}}},
{"function":{"name":"ReadFloat","parent":"IRestore","type":"classfunc","description":{"text":"Reads next bytes from the restore object as a floating point .","page":"number"},"realm":"Shared","rets":{"ret":{"text":"The read floating point number.","name":"","type":"number"}}}},
{"function":{"name":"ReadEntity","parent":"IRestore","type":"classfunc","description":{"text":"Reads next bytes from the restore object as an .","page":"Entity"},"realm":"Shared","rets":{"ret":{"text":"The entity that has been read.","name":"","type":"Entity"}}}},
{"function":{"name":"ReadEntity","parent":"IRestore","type":"classfunc","description":{"text":"Reads next bytes from the restore object as an .","page":"Entity"},"realm":"Shared","rets":{"ret":{"text":"The entity that has been read.","name":"","type":"Entity"}}}},
{"function":{"name":"EndBlock","parent":"IRestore","type":"classfunc","description":{"text":"Ends current data block started with  and returns to the parent block.\n\nTo avoid all sorts of errors, you **must** end all blocks you start.","page":"IRestore:StartBlock"},"realm":"Shared"}},
{"function":{"name":"ReadAngle","parent":"IRestore","type":"classfunc","description":{"text":"Reads next bytes from the restore object as an .","page":"Angle"},"realm":"Shared","rets":{"ret":{"text":"The angle that has been read","name":"","type":"Angle"}}}},
{"function":{"name":"Draw","parent":"IMesh","type":"classfunc","description":"Renders the mesh with the active matrix.","realm":"Client"},"example":{"description":{"text":"Properly renders the mesh using the SENT's model matrix.\n\n`self.Mesh` in this case is the .","page":"IMesh"},"code":"local myMaterial = Material( \"models/wireframe\" ) -- models/debug/debugwhite\n\nfunction ENT:Draw()\n\tif ( self.Mesh ) then\n\t\trender.SetMaterial( myMaterial )\n\t\tcam.PushModelMatrix( self:GetWorldTransformMatrix() )\n\t\t\tself.Mesh:Draw()\n\t\tcam.PopModelMatrix()\n\tend\n\n\t-- Other code\nend"}},
{"function":{"name":"IsValid","parent":"IMesh","type":"classfunc","added":"2020.03.20","description":{"text":"Returns whether this  is valid or not.","page":"IMesh"},"realm":"Client","rets":{"ret":{"text":"Whether this  is valid or not.","type":"boolean","page":"IMesh"}}}},
{"function":{"name":"Destroy","parent":"IMesh","type":"classfunc","description":"Deletes the mesh and frees the memory used by it.","realm":"Client"}},
{"function":{"name":"BuildFromTriangles","parent":"IMesh","type":"classfunc","description":{"text":"Builds the mesh from a table mesh vertexes.\n\nSee  and  for examples.","page":["Global.Mesh","util.GetModelMeshes"]},"realm":"Client","args":{"arg":{"text":"A table consisting of s.","name":"vertexes","type":"table","page":"Structures/MeshVertex"}}}},
{"function":{"name":"Width","parent":"IMaterial","type":"classfunc","description":"Returns the width of the member texture set for $basetexture.","realm":"Shared","rets":{"ret":{"text":"width","name":"","type":"number"}}}},
{"function":{"name":"SetVector","parent":"IMaterial","type":"classfunc","description":"Sets the specified material vector to the specified vector, does nothing on a type mismatch.","realm":"Shared","args":{"arg":[{"text":"The name of the material vector.","name":"MaterialVector","type":"string"},{"text":"The new vector.","name":"vec","type":"Vector"}]}}},
{"function":{"name":"SetUndefined","parent":"IMaterial","type":"classfunc","description":"Unsets the value for the specified material value.","realm":"Shared","args":{"arg":{"text":"The name of the material value to be unset.","name":"materialValueName","type":"string"}}}},
{"function":{"name":"SetTexture","parent":"IMaterial","type":"classfunc","description":"Sets the specified material texture to the specified texture, does nothing on a type mismatch.","realm":"Shared","args":{"arg":[{"text":"The name of the keyvalue on the material to store the texture on.","name":"materialTexture","type":"string"},{"text":"The new texture. This can also be a string, the name of the new texture.","name":"texture","type":"ITexture"}]}},"example":[{"description":"Example usage of this function.","code":"local blur_mat = Material( \"pp/bokehblur\" )\n\nblur_mat:SetTexture( \"$basetexture\", render.GetScreenEffectTexture() )"},{"description":"Equivalent of Example 1, demonstrating the use of a texture's name.","code":"local blur_mat = Material( \"pp/bokehblur\" )\n\nblur_mat:SetTexture( \"$basetexture\", \"_rt_fullframefb\" )"}]},
{"function":{"name":"SetString","parent":"IMaterial","type":"classfunc","description":"Sets the specified material value to the specified string, does nothing on a type mismatch.","realm":"Shared","args":{"arg":[{"text":"The name of the material string.","name":"materialString","type":"string"},{"text":"The new string.","name":"string","type":"string"}]}}},
{"function":{"name":"SetShader","parent":"IMaterial","type":"classfunc","description":{"text":"The functionality of this function was removed due to the amount of crashes it caused.","deprecated":"This function does nothing"},"realm":"Shared","args":{"arg":{"text":"Name of the shader","name":"shaderName","type":"string"}}}},
{"function":{"name":"SetInt","parent":"IMaterial","type":"classfunc","description":{"text":"Sets the specified material value to the specified int, does nothing on a type mismatch.","note":{"text":"Please note that certain material flags such as `$model` are stored in the `$flags` variable and cannot be directly set with this function. See the full list here:","page":"Material Flags"}},"realm":"Shared","args":{"arg":[{"text":"The name of the material int.","name":"materialInt","type":"string"},{"text":"The new int value.","name":"int","type":"number"}]}}},
{"function":{"name":"SetMatrix","parent":"IMaterial","type":"classfunc","description":"Sets the specified material value to the specified matrix, does nothing on a type mismatch.","realm":"Shared","args":{"arg":[{"text":"The name of the material int.","name":"materialMatrix","type":"string"},{"text":"The new matrix.","name":"matrix","type":"VMatrix"}]}}},
{"function":{"name":"Recompute","parent":"IMaterial","type":"classfunc","description":"Recomputes the material's snapshot. This needs to be called if you have changed variables on your material and it isn't changing. \n\nBe careful though - this function is slow - so try to call it only when needed!","realm":"Shared","file_name":"src/garrysmod/Objects/lua_material.cpp","file_line":"517"}},
{"function":{"name":"SetFloat","parent":"IMaterial","type":"classfunc","description":"Sets the specified material float to the specified float, does nothing on a type mismatch.","realm":"Shared","args":{"arg":[{"text":"The name of the material float.","name":"materialFloat","type":"string"},{"text":"The new float value.","name":"float","type":"number"}]}}},
{"function":{"name":"IsError","parent":"IMaterial","type":"classfunc","description":"Returns whenever the material is valid, i.e. whether it was not loaded successfully from disk or not.","realm":"Shared","rets":{"ret":{"text":"Is this material the error material? (___error)","name":"","type":"boolean"}}}},
{"function":{"name":"Height","parent":"IMaterial","type":"classfunc","description":"Returns the height of the member texture set for $basetexture.","realm":"Shared","rets":{"ret":{"text":"height","name":"","type":"number"}}}},
{"function":{"name":"GetVectorLinear","parent":"IMaterial","type":"classfunc","description":{"text":"Returns the specified material linear color vector, or nil if the value is not set.\n\nSee https://en.wikipedia.org/wiki/Gamma_correction\n\nSee also","page":"IMaterial:GetVector"},"realm":"Shared","args":{"arg":{"text":"The name of the material vector.","name":"materialVector","type":"string"}},"rets":{"ret":{"text":"The linear color vector","name":"","type":"Vector"}}}},
{"function":{"name":"GetVector","parent":"IMaterial","type":"classfunc","description":{"text":"Returns the specified material vector, or nil if the value is not set.\n\nSee also","page":"IMaterial:GetVectorLinear"},"realm":"Shared","args":{"arg":{"text":"The name of the material vector.","name":"materialVector","type":"string"}},"rets":{"ret":{"text":"The color vector","name":"","type":"Vector"}}}},
{"function":{"name":"GetTexture","parent":"IMaterial","type":"classfunc","description":{"text":"Returns an  based on the passed shader parameter.","page":"ITexture"},"realm":"Shared","args":{"arg":{"text":"The [shader parameter](https://developer.valvesoftware.com/wiki/Category:List_of_Shader_Parameters) to retrieve. This should normally be `$basetexture`.","name":"param","type":"string"}},"rets":{"ret":{"text":"The value of the shader parameter. Returns nothing if the param doesn't exist.","name":"","type":"ITexture"}}}},
{"function":{"name":"GetString","parent":"IMaterial","type":"classfunc","description":"Returns the specified material string, or nil if the value is not set or if the value can not be converted to a string.","realm":"Shared","args":{"arg":{"text":"The name of the material string.","name":"materialString","type":"string"}},"rets":{"ret":{"text":"The value as a string","name":"","type":"string"}}}},
{"function":{"name":"GetShader","parent":"IMaterial","type":"classfunc","description":{"text":"Returns the name of the materials shader.","bug":{"text":"This function does not work serverside on Linux SRCDS.","issue":"3256"}},"realm":"Shared","rets":{"ret":{"text":"shaderName","name":"","type":"string"}}}},
{"function":{"name":"GetName","parent":"IMaterial","type":"classfunc","description":"Returns the name of the material, in most cases the path.","realm":"Shared","rets":{"ret":{"text":"Material name/path","name":"","type":"string"}}}},
{"function":{"name":"GetMatrix","parent":"IMaterial","type":"classfunc","description":"Returns the specified material matrix as a int, or nil if the value is not set or is not a matrix.","realm":"Shared","args":{"arg":{"text":"The name of the material matrix.","name":"materialMatrix","type":"string"}},"rets":{"ret":{"text":"matrix","name":"","type":"VMatrix"}}}},
{"function":{"name":"GetKeyValues","parent":"IMaterial","type":"classfunc","description":"Gets all the key values defined for the material.","realm":"Shared","rets":{"ret":{"text":"The material's key values.","name":"","type":"table"}}},"example":{"description":"Example output of this function","code":"PrintTable( Material( \"pp/add\" ):GetKeyValues() )","output":"```\n$alpha=1\n$alphatestreference=0\n$basetexture=userdata: 0x2e13fc18\n$basetexturetransform=[1.00000,0.00000,0.00000,0.00000]\n[0.00000,1.00000,0.00000,0.00000]\n[0.00000,0.00000,1.00000,0.00000]\n[0.00000,0.00000,0.00000,1.00000]\n$color=1.000000 1.000000 1.000000\n$color2=1.000000 1.000000 1.000000\n$depthblend=0\n$depthblendscale=50\n$detailblendfactor=1\n$detailblendmode=0\n$detailframe=0\n$detailscale=4\n$detailtexturetransform=[1.00000,0.00000,0.00000,0.00000]\n[0.00000,1.00000,0.00000,0.00000]\n[0.00000,0.00000,1.00000,0.00000]\n[0.00000,0.00000,0.00000,1.00000]\n$distancealpha=0\n$distancealphafromdetail=0\n$edgesoftnessend=0.5\n$edgesoftnessstart=0.5\n$envmapcontrast=0\n$envmapframe=0\n$envmapmaskframe=0\n$envmapmasktransform=[1.00000,0.00000,0.00000,0.00000]\n[0.00000,1.00000,0.00000,0.00000]\n[0.00000,0.00000,1.00000,0.00000]\n[0.00000,0.00000,0.00000,1.00000]\n$envmapsaturation=1\n$envmaptint=1.000000 1.000000 1.000000\n$flags=32896\n$flags2=262144\n$flags_defined=32896\n$flags_defined2=0\n$flashlighttexture=userdata: 0x2e13fe68\n$flashlighttextureframe=0\n$frame=0\n$gammacolorread=0\n$glow=0\n$glowalpha=1\n$glowcolor=1.000000 1.000000 1.000000\n$glowend=0\n$glowstart=0\n$glowx=0\n$glowy=0\n$hdrcolorscale=1\n$linearwrite=0\n$outline=0\n$outlinealpha=1\n$outlinecolor=1.000000 1.000000 1.000000\n$outlineend0=0\n$outlineend1=0\n$outlinestart0=0\n$outlinestart1=0\n$phong=0\n$phongalbedotint=0\n$phongboost=0\n$phongexponent=0\n$phongfresnelranges=0.000000 0.000000 0.000000\n$phongtint=0.000000 0.000000 0.000000\n$receiveflashlight=0\n$scaleedgesoftnessbasedonscreenres=0\n$scaleoutlinesoftnessbasedonscreenres=0\n$separatedetailuvs=0\n$softedges=0\n$srgbtint=1.000000 1.000000 1.000000\n$vertexalphatest=0\n```"}},
{"function":{"name":"GetInt","parent":"IMaterial","type":"classfunc","description":{"text":"Returns the specified material value as a int, rounds the value if its a float, or nil if the value is not set.","note":{"text":"Please note that certain material flags such as `$model` are stored in the `$flags` variable and cannot be directly retrieved with this function. See the full list here:","page":"Material Flags"}},"realm":"Shared","args":{"arg":{"text":"The name of the material integer.","name":"materialInt","type":"string"}},"rets":{"ret":{"text":"The retrieved value as an integer","name":"","type":"number"}}}},
{"function":{"name":"GetFloat","parent":"IMaterial","type":"classfunc","description":"Returns the specified material value as a float, or nil if the value is not set.","realm":"Shared","args":{"arg":{"text":"The name of the material value.","name":"materialFloat","type":"string"}},"rets":{"ret":{"text":"float","name":"","type":"number"}}}},
{"function":{"name":"GetColor","parent":"IMaterial","type":"classfunc","description":{"text":"Returns the color of the specified pixel of the $basetexture, only works for materials created from PNG files.\n\nBasically identical to  used on ( \"$basetexture\" ).","page":["ITexture:GetColor","IMaterial:GetTexture"],"bug":{"text":"The returned color will not have the color metatable.","issue":"2407"}},"realm":"Shared","args":{"arg":[{"text":"The X coordinate.","name":"x","type":"number"},{"text":"The Y coordinate.","name":"y","type":"number"}]},"rets":{"ret":{"text":"The color of the pixel as a .","name":"","type":"table","page":"Color"}}},"example":{"description":"Identical functionality.","code":"local m = Material( \"gui/colors_dark.png\" )\nlocal t = m:GetTexture(\"$basetexture\")\n\nPrintTable( t:GetColor( 5, 5 ) )\nPrintTable( m:GetColor( 5, 5 ) )","output":"Both printouts will return identical color, which at the time of testing is RGBA - 255, 244, 242, 255."}},
{"function":{"name":"Stop","parent":"IGModAudioChannel","type":"classfunc","description":{"text":"Stop the stream. It can be started again using .","page":"IGModAudioChannel:Play","bug":{"text":"Calling this invalidates the IGModAudioChannel object rendering it unusable for further functions.","issue":"1497"}},"realm":"Client"}},
{"function":{"name":"SetVolume","parent":"IGModAudioChannel","type":"classfunc","description":"Sets the volume of a sound channel","realm":"Client","args":{"arg":{"text":"Volume to set. 1 meaning 100% volume, 0.5 is 50% and 3 is 300%, etc.","name":"volume","type":"number"}}},"example":{"description":"Plays the a Half-Life 1 sound track at 300% volume","code":"sound.PlayFile( \"sound/music/hl1_song20.mp3\", \"\", function( channel )\n\tif ( IsValid( channel ) ) then\n\t\tchannel:Play()\n\t\tchannel:SetVolume( 3 )\n\tend\nend )"}},
{"function":{"name":"SetTime","parent":"IGModAudioChannel","type":"classfunc","description":"Sets the sound channel to specified time ( Rewind to that position of the song ). Does not work on online radio streams.\n\nStreamed sounds must have \"noblock\" parameter for this to work.","realm":"Client","args":{"arg":{"text":"The time to set the stream to, in seconds.","name":"secs","type":"number"}}}},
{"function":{"name":"SetPlaybackRate","parent":"IGModAudioChannel","type":"classfunc","description":"Sets the playback rate of the sound channel. May not work with high values for radio streams.","realm":"Client","args":{"arg":{"text":"Playback rate to set to. 1 is normal speed, 0.5 is half the normal speed, etc.","name":"rate","type":"number"}}}},
{"function":{"name":"SetPos","parent":"IGModAudioChannel","type":"classfunc","description":"Sets position of sound channel in case the sound channel has a 3d option set.","realm":"Client","args":{"arg":[{"text":"The position to put the sound into","name":"pos","type":"Vector"},{"text":"The direction of the sound","name":"dir","type":"Vector","default":"Vector( 0, 0, 0 )"}]}}},
{"function":{"name":"SetPan","parent":"IGModAudioChannel","type":"classfunc","description":"Sets the relative volume of the left and right channels.","added":"2020.03.20","realm":"Client","args":{"arg":{"text":"Relative volume between the left and right channels. -1 means only in left channel, 0 is center and 1 is only in the right channel.","name":"pan","type":"number"}}},"example":{"description":"Plays the a Half-Life 1 sound track in the left channel","code":"sound.PlayFile( \"sound/music/hl1_song20.mp3\", \"\", function( channel )\n\tif ( IsValid( channel ) ) then\n\t\tchannel:Play()\n\t\tchannel:SetPan(-1)\n\tend\nend )"}},
{"function":{"name":"Set3DFadeDistance","parent":"IGModAudioChannel","type":"classfunc","description":"Sets 3D fade distances of a sound channel.","realm":"Client","args":{"arg":[{"text":"The minimum distance. The channel's volume is at maximum when the listener is within this distance.\n\n\n\n\n0 or less = leave current.","name":"min","type":"number"},{"text":"The maximum distance. The channel's volume stops decreasing when the listener is beyond this distance.\n\n\n\n\n0 or less = leave current.","name":"max","type":"number"}]}},"example":{"description":"The default values.","code":"Channel:Set3DFadeDistance( 200, 1000000000 )"}},
{"function":{"name":"Play","parent":"IGModAudioChannel","type":"classfunc","description":"Starts playing the stream.","realm":"Client"}},
{"function":{"name":"Set3DCone","parent":"IGModAudioChannel","type":"classfunc","description":"Sets 3D cone of the sound channel.","realm":"Client","args":{"arg":[{"text":"The angle of the inside projection cone in degrees.\n\n\n\n\nRange is from 0 (no cone) to 360 (sphere), -1 = leave current.","name":"innerAngle","type":"number"},{"text":"The angle of the outside projection cone in degrees.\n\n\n\n\nRange is from 0 (no cone) to 360 (sphere), -1 = leave current.","name":"outerAngle","type":"number"},{"text":"The delta-volume outside the outer projection cone.\n\n\n\n\nRange is from 0 (silent) to 1 (same as inside the cone), less than 0 = leave current.","name":"outerVolume","type":"number"}]}},"example":{"description":"The default values","code":"Channel:Set3DCone( 360, 360, 0 )"}},
{"function":{"name":"Pause","parent":"IGModAudioChannel","type":"classfunc","description":{"text":"Pauses the stream. It can be started again using","page":"IGModAudioChannel:Play"},"realm":"Client"}},
{"function":{"name":"IsValid","parent":"IGModAudioChannel","type":"classfunc","description":"Returns if the sound channel is valid or not.","realm":"Client","rets":{"ret":{"text":"Is the sound channel valid or not","name":"","type":"boolean"}}}},
{"function":{"name":"IsOnline","parent":"IGModAudioChannel","type":"classfunc","description":"Returns if the sound channel is streamed from the Internet or not.","realm":"Client","rets":{"ret":{"text":"Is online or not.","name":"","type":"boolean"}}}},
{"function":{"name":"IsBlockStreamed","parent":"IGModAudioChannel","type":"classfunc","description":"Returns whether the audio stream is block streamed or not.","realm":"Client","rets":{"ret":{"text":"Is the audio stream block streamed or not.","name":"","type":"boolean"}}}},
{"function":{"name":"IsLooping","parent":"IGModAudioChannel","type":"classfunc","description":"Returns if the sound channel is looping or not.","realm":"Client","rets":{"ret":{"text":"Is looping or not.","name":"","type":"boolean"}}}},
{"function":{"name":"Is3D","parent":"IGModAudioChannel","type":"classfunc","description":"Returns if the sound channel is in 3D mode or not.","realm":"Client","rets":{"ret":{"text":"Is 3D or not.","name":"","type":"boolean"}}}},
{"function":{"name":"GetVolume","parent":"IGModAudioChannel","type":"classfunc","description":"Returns volume of a sound channel","realm":"Client","rets":{"ret":{"text":"The volume of the sound channel","name":"","type":"number"}}}},
{"function":{"name":"GetTime","parent":"IGModAudioChannel","type":"classfunc","description":"Returns the current time of the sound channel","realm":"Client","rets":{"ret":{"text":"The current time of the stream","name":"","type":"number"}}}},
{"function":{"name":"GetState","parent":"IGModAudioChannel","type":"classfunc","description":"Returns the state of a sound channel","realm":"Client","rets":{"ret":{"text":"The state of the sound channel, see","name":"","type":"number","page":"Enums/GMOD_CHANNEL"}}}},
{"function":{"name":"GetSamplingRate","parent":"IGModAudioChannel","type":"classfunc","description":"Returns the sample rate for currently playing sound.","realm":"Client","rets":{"ret":{"text":"The sample rate in Hz. This should always be 44100.","name":"","type":"number"}}}},
{"function":{"name":"GetPos","parent":"IGModAudioChannel","type":"classfunc","description":"Returns position of the sound channel","realm":"Client","rets":{"ret":{"text":"The position of the sound channel, previously set by","name":"","type":"Vector","page":"IGModAudioChannel:SetPos"}}}},
{"function":{"name":"GetPlaybackRate","parent":"IGModAudioChannel","type":"classfunc","description":"Returns the playback rate of the sound channel.","realm":"Client","rets":{"ret":{"text":"The current playback rate of the sound channel","name":"","type":"number"}}}},
{"function":{"name":"GetPan","parent":"IGModAudioChannel","type":"classfunc","description":"Gets the relative volume of the left and right channels.","added":"2020.03.20","realm":"Client","rets":{"ret":{"text":"Relative volume between the left and right channels. -1 means only in left channel, 0 is center and 1 is only in the right channel. 0 by default.","name":"pan","type":"number"}}}},
{"function":{"name":"GetLevel","parent":"IGModAudioChannel","type":"classfunc","description":"Returns the right and left levels of sound played by the sound channel.","realm":"Client","rets":{"ret":[{"text":"The left sound level. The value is between 0 and 1.","name":"","type":"number"},{"text":"The right sound level. The value is between 0 and 1.","name":"","type":"number"}]}}},
{"function":{"name":"GetLength","parent":"IGModAudioChannel","type":"classfunc","description":"Returns the length of sound played by the sound channel.","realm":"Client","rets":{"ret":{"text":"The length of the sound. This value seems to be less then 0 for continuous radio streams.","name":"","type":"number"}}}},
{"function":{"name":"GetFileName","parent":"IGModAudioChannel","type":"classfunc","description":"Returns the filename for the sound channel.","realm":"Client","rets":{"ret":{"text":"The file name. This will not be always what you have put into the  as first argument.","name":"","type":"string","page":"sound.PlayURL"}}}},
{"function":{"name":"GetBitsPerSample","parent":"IGModAudioChannel","type":"classfunc","description":"Retrieves the number of bits per sample of the sound channel.\n\nDoesn't work for mp3 and ogg files.","realm":"Client","rets":{"ret":{"text":"Number of bits per sample, or 0 if unknown.","name":"","type":"number"}}}},
{"function":{"name":"GetAverageBitRate","parent":"IGModAudioChannel","type":"classfunc","description":"Returns the average bit rate of the sound channel.","realm":"Client","rets":{"ret":{"text":"The average bit rate of the sound channel.","name":"","type":"number"}}}},
{"function":{"name":"Get3DFadeDistance","parent":"IGModAudioChannel","type":"classfunc","description":"Returns 3D fade distances of a sound channel.","realm":"Client","rets":{"ret":[{"text":"The minimum distance. The channel's volume is at maximum when the listener is within this distance","name":"","type":"number"},{"text":"The maximum distance. The channel's volume stops decreasing when the listener is beyond this distance","name":"","type":"number"}]}}},
{"function":{"name":"Get3DCone","parent":"IGModAudioChannel","type":"classfunc","description":{"text":"Returns 3D cone of the sound channel. See .","page":"IGModAudioChannel:Set3DCone"},"realm":"Client","rets":{"ret":[{"text":"The angle of the inside projection cone in degrees.","name":"","type":"number"},{"text":"The angle of the outside projection cone in degrees.","name":"","type":"number"},{"text":"The delta-volume outside the outer projection cone.","name":"","type":"number"}]}}},
{"function":{"name":"FFT","parent":"IGModAudioChannel","type":"classfunc","description":{"text":"Computes the [DFT (discrete Fourier transform)](https://en.wikipedia.org/wiki/Discrete_Fourier_transform) of the sound channel.\n\nThe size parameter specifies the number of consecutive audio samples to use as the input to the DFT and is restricted to a power of two. A [Hann window](https://en.wikipedia.org/wiki/Hann_function) is applied to the input data.\n\nThe computed DFT has the same number of frequency bins as the number of samples. Only half of this DFT is returned, since [the DFT magnitudes are symmetric for real input data](https://en.wikipedia.org/wiki/Discrete_Fourier_transform#The_real-input_DFT). The magnitudes of the DFT (values from 0 to 1) are used to fill the output table, starting at index 1.\n\n**Visualization protip:** For a size N DFT, bin k (1-indexed) corresponds to a frequency of (k - 1) / N * sampleRate.\n\n**Visualization protip:** Sound energy is proportional to the square of the magnitudes. Adding magnitudes together makes no sense physically, but adding energies does.\n\n**Visualization protip:** The human ear works on a logarithmic amplitude scale. You can convert to [decibels](https://en.wikipedia.org/wiki/Decibel) by taking 20 *  of frequency magnitudes, or 10 *  of energy. The decibel values will range from -infinity to 0.","page":["math.log10","math.log10"]},"realm":"Client","args":{"arg":[{"text":"The table to output the DFT magnitudes (numbers between 0 and 1) into. Indices start from 1.","name":"tbl","type":"table"},{"text":"The number of samples to use. See","name":"size","type":"number","page":"Enums/FFT"}]},"rets":{"ret":{"text":"The number of frequency bins that have been filled in the output table.","name":"","type":"number"}}}},
{"function":{"name":"EnableLooping","parent":"IGModAudioChannel","type":"classfunc","description":"Enables or disables looping of audio channel, requires noblock flag.","realm":"Client","args":{"arg":{"text":"Enable or disable looping of this audio channel.","name":"enable","type":"boolean"}}}},
{"function":{"name":"WriteULong","parent":"File","type":"classfunc","description":"Writes an unsigned 32-bit integer to the file.","realm":"Shared","args":{"arg":{"text":"The unsigned 32-bit integer to be written to the file.","name":"uint32","type":"number"}}}},
{"function":{"name":"WriteUShort","parent":"File","type":"classfunc","description":"Writes an unsigned 16-bit integer to the file.","realm":"Shared","args":{"arg":{"text":"The unsigned 16-bit integer to the file.","name":"uint16","type":"number"}}}},
{"function":{"name":"WriteShort","parent":"File","type":"classfunc","description":"Writes a 16-bit signed integer to the file.","realm":"Shared","args":{"arg":{"text":"The 16-bit signed integer to be written to the file.","name":"int16","type":"number"}}}},
{"function":{"name":"WriteLong","parent":"File","type":"classfunc","description":"Writes a 32-bit signed integer to the file.","realm":"Shared","args":{"arg":{"text":"The 32-bit signed integer to be written to the file.","name":"int32","type":"number"}}}},
{"function":{"name":"WriteFloat","parent":"File","type":"classfunc","description":"Writes a 4byte float to the file.","realm":"Shared","args":{"arg":{"text":"The float to be written to the file.","name":"float","type":"number"}}}},
{"function":{"name":"WriteDouble","parent":"File","type":"classfunc","description":"Writes a 8byte floating point double to the file.","realm":"Shared","args":{"arg":{"text":"The double to be written to the file.","name":"double","type":"number"}}}},
{"function":{"name":"WriteByte","parent":"File","type":"classfunc","description":"Write an 8-bit unsigned integer to the file.","realm":"Shared","args":{"arg":{"text":"The 8-bit unsigned integer to be written to the file.","name":"uint8","type":"number"}}}},
{"function":{"name":"WriteBool","parent":"File","type":"classfunc","description":"Writes a boolean value to the file as one **byte**.","realm":"Shared","args":{"arg":{"text":"The bool to be written to the file.","name":"bool","type":"boolean"}}}},
{"function":{"name":"Tell","parent":"File","type":"classfunc","description":"Returns the current position of the file pointer.","realm":"Shared","rets":{"ret":{"text":"pos","name":"","type":"number"}}}},
{"function":{"name":"Skip","parent":"File","type":"classfunc","description":"Moves the file pointer by the specified amount of chars.","realm":"Shared","args":{"arg":{"text":"The amount of chars to skip, can be negative to skip backwards.","name":"amount","type":"number"}},"rets":{"ret":{"text":"amount","name":"","type":"number"}}}},
{"function":{"name":"Write","parent":"File","type":"classfunc","args":{"arg":{"text":"Binary data to write to the file.","name":"data","type":"string"}},"description":"Writes the given string into the file.","realm":"Shared"}},
{"function":{"name":"Size","parent":"File","type":"classfunc","rets":{"ret":{"name":"size","type":"number"}},"description":"Returns the size of the file in bytes.","realm":"Shared"}},
{"function":{"name":"Seek","parent":"File","type":"classfunc","description":"Sets the file pointer to the specified position.","realm":"Shared","args":{"arg":{"text":"Pointer position.","name":"pos","type":"number"}}}},
{"function":{"name":"ReadShort","parent":"File","type":"classfunc","description":"Reads a signed 16-bit integer from the file.","realm":"Shared","rets":{"ret":{"text":"int16","name":"","type":"number"}}}},
{"function":{"name":"ReadULong","parent":"File","type":"classfunc","description":"Reads a unsigned 32-bit integer from the file.","realm":"Shared","rets":{"ret":{"text":"An unsigned 32-bit integer","name":"","type":"number"}}}},
{"function":{"name":"ReadULong","parent":"File","type":"classfunc","description":"Reads a unsigned 32-bit integer from the file.","realm":"Shared","rets":{"ret":{"text":"An unsigned 32-bit integer","name":"","type":"number"}}}},
{"function":{"name":"ReadLong","parent":"File","type":"classfunc","description":"Reads a signed 32-bit integer from the file.","realm":"Shared","rets":{"ret":{"text":"A signed 32-bit integer","name":"","type":"number"}}}},
{"function":{"name":"ReadFloat","parent":"File","type":"classfunc","description":"Reads 4 bytes from the file converts them to a float and returns them.","realm":"Shared","rets":{"ret":{"text":"The read value","name":"","type":"number"}}}},
{"function":{"name":"ReadDouble","parent":"File","type":"classfunc","description":"Reads 8 bytes from the file converts them to a double and returns them.","realm":"Shared","rets":{"ret":{"text":"value","name":"","type":"number"}}}},
{"function":{"name":"ReadDouble","parent":"File","type":"classfunc","description":"Reads 8 bytes from the file converts them to a double and returns them.","realm":"Shared","rets":{"ret":{"text":"value","name":"","type":"number"}}}},
{"function":{"name":"ReadByte","parent":"File","type":"classfunc","description":"Reads one unsigned 8-bit integer from the file.","realm":"Shared","rets":{"ret":{"text":"The unsigned 8-bit integer from the file.","name":"","type":"number"}}}},
{"function":{"name":"ReadBool","parent":"File","type":"classfunc","description":"Reads one byte of the file and returns whether that byte was not 0.","realm":"Shared","rets":{"ret":{"text":"val","name":"","type":"boolean"}}}},
{"function":{"name":"Flush","parent":"File","type":"classfunc","description":"Dumps the file changes to disk and saves the file.","realm":"Shared"}},
{"function":{"name":"EndOfFile","parent":"File","type":"classfunc","description":{"text":"Returns whether the  object has reached the end of file or not.","page":"File"},"realm":"Shared","added":"2020.03.17","rets":{"ret":{"text":"Whether the file has reached end or not.","name":"","type":"boolean"}}}},
{"function":{"name":"Read","parent":"File","type":"classfunc","args":{"arg":{"text":"Reads the specified amount of chars.","name":"length","type":"number"}},"rets":{"ret":{"name":"data","type":"string"}},"description":"Reads the specified amount of chars and returns them as a binary string.","realm":"Shared"},"example":{"description":"Adapted from extensions/file.lua","code":"function file.Read( filename, path )\n\n\tif ( path == true ) then path = \"GAME\" end\n\tif ( path == nil || path == false ) then path = \"DATA\" end\n\n\tlocal f = file.Open( filename, \"rb\", path )\n\tif ( !f ) then return end\n\n\tlocal str = f:Read( f:Size() )\n\n\tf:Close()\n\n\tif ( !str ) then str = \"\" end\n\treturn str\n\nend"}},
{"function":{"name":"Close","parent":"File","type":"classfunc","description":"Dumps the file changes to disk and closes the file handle which makes the handle useless.","realm":"Shared"}},
{"function":{"name":"WorldSpaceCenter","parent":"Entity","type":"classfunc","description":"Returns the center of the entity according to its collision model.","realm":"Shared","file_name":"src/garrysmod/Objects/lua_entity.cpp","file_line":"5322","rets":{"ret":{"text":"The center of the entity","name":"","type":"Vector"}}}},
{"function":{"name":"WorldToLocalAngles","parent":"Entity","type":"classfunc","description":"Converts world angles to local angles ( local to the entity )","realm":"Shared","args":{"arg":{"text":"The world angles","name":"ang","type":"Angle"}},"rets":{"ret":{"text":"The local angles","name":"","type":"Angle"}}}},
{"function":{"name":"WorldToLocal","parent":"Entity","type":"classfunc","description":"Converts a worldspace vector into a vector local to an entity","realm":"Shared","args":{"arg":{"text":"The world vector","name":"wpos","type":"Vector"}},"rets":{"ret":{"text":"The local vector","name":"","type":"Vector"}}}},
{"function":{"name":"WorldSpaceAABB","parent":"Entity","type":"classfunc","description":"Returns two vectors representing the minimum and maximum extent of the entity's bounding box.","realm":"Shared","rets":{"ret":[{"text":"The minimum vector for the entity's bounding box.","name":"","type":"Vector"},{"text":"The maximum vector for the entity's bounding box.","name":"","type":"Vector"}]}},"example":{"description":"Prints Entity(1)'s maximum bounding box vector.","code":"local min,max = Entity(1):WorldSpaceAABB()\nprint(max)","output":"-496.828125 11730.426758 5189.393066"}},
{"function":{"name":"Weapon_TranslateActivity","parent":"Entity","type":"classfunc","description":{"text":"Calls and returns  on the weapon the entity ( player or NPC ) carries.\n\nDespite existing on client, it doesn't actually do anything on client.","page":"WEAPON:TranslateActivity"},"realm":"Shared","args":{"arg":{"text":"The activity to translate","name":"act","type":"number"}},"rets":{"ret":{"text":"The translated activity","name":"","type":"number"}}}},
{"function":{"name":"Weapon_SetActivity","parent":"Entity","type":"classfunc","description":{"text":"Sets the activity of the entity's active weapon.","note":["This does nothing on the client.","Only works for CBaseCombatCharacter entities, which includes players and NPCs."]},"realm":"Shared","args":{"arg":[{"text":"Activity number. See .","name":"act","type":"number","page":"Enums/ACT"},{"text":"How long the animation should take in seconds.","name":"duration","type":"number"}]}}},
{"function":{"name":"WaterLevel","parent":"Entity","type":"classfunc","description":"Returns an integer that represents how deep in water the entity is.\n\n\n* **0** - The entity isn't in water.\n\n* **1** - Slightly submerged (at least to the feet).\n\n* **2** - The majority of the entity is submerged (at least to the waist).\n\n* **3** - Completely submerged.","realm":"Shared","rets":{"ret":{"text":"The water level.","name":"","type":"number"}}}},
{"function":{"name":"VisibleVec","parent":"Entity","type":"classfunc","description":"Returns true if supplied vector is visible from the entity's line of sight.\n\nThis is achieved similarly to a trace.","realm":"Server","args":{"arg":{"text":"The position to check for visibility","name":"pos","type":"Vector"}},"rets":{"ret":{"text":"Within line of sight","name":"","type":"boolean"}}}},
{"function":{"name":"ViewModelIndex","parent":"Entity","type":"classfunc","description":"Returns the index of this view model, it can be used to identify which one of the player's view models this entity is.","realm":"Shared","rets":{"ret":{"text":"View model index, ranges from 0 to 2, nil if the entity is not a view model","name":"","type":"number"}}}},
{"function":{"name":"Visible","parent":"Entity","type":"classfunc","description":"Returns whether the target/given entity is visible from the this entity.\n\nThis is meant to be used only with NPCs.\n\nDifferences from a simple trace include:\n* If target has **FL_NOTARGET**, returns false\n* If **ai_ignoreplayers** is turned on and target is a player, returns false\n* Reacts to **ai_LOS_mode**:\n* * If 1, does a simple trace with **COLLISION_GROUP_NONE** and **MASK_BLOCKLOS**\n* * If not, does a trace with **MASK_BLOCKLOS_AND_NPCS** ( - **CONTENTS_BLOCKLOS** is target is player ) and a custom LOS filter ( **CTraceFilterLOS** )\n* Returns true if hits a vehicle the target is driving","realm":"Server","args":{"arg":{"text":"Entity to check for visibility to.","name":"target","type":"Entity"}},"rets":{"ret":{"text":"If the entities can see each other.","name":"","type":"boolean"}}}},
{"function":{"name":"UseTriggerBounds","parent":"Entity","type":"classfunc","description":{"text":"Enables or disables trigger bounds.\n\nThis will give the entity a \"trigger box\" that extends around its bounding box by boundSize units in X/Y and (boundSize / 2) in +Z (-Z remains the same).\nThe trigger box is world aligned and will work regardless of the object's solidity and collision group.\n\nValve use trigger boxes for all pickup items. Their bloat size is 24, a surprisingly large figure.","note":"The trigger boxes can be made visible as a light blue box by using the **ent_bbox** console command while looking at the entity. Alternatively a classname or entity index can be used as the first argument.\n\nThis requires **developer** to be set to **1**."},"realm":"Shared","args":{"arg":[{"text":"Enable or disable the bounds.","name":"enable","type":"boolean"},{"text":"The distance/size of the trigger bounds.","name":"boundSize","type":"number","default":"0"}]}}},
{"function":{"name":"UseClientSideAnimation","parent":"Entity","type":"classfunc","description":{"text":"Animations will be handled purely clientside instead of a fixed animtime, enabling interpolation. This does not affect layers and gestures.","note":"Does nothing on server."},"realm":"Shared"}},
{"function":{"name":"TestPVS","parent":"Entity","type":"classfunc","description":{"text":"Check if the given position or entity is within this entity's PVS.","note":{"text":"The function won't take in to account  and the like.","page":"Global.AddOriginToPVS"}},"realm":"Server","args":{"arg":{"text":"or  to test against. If an entity is given, this function will test using its bounding box.","name":"testPoint","type":"any","page":["Entity","Vector"]}},"rets":{"ret":{"text":"True if the testPoint is within our PVS.","name":"","type":"boolean"}}}},
{"function":{"name":"TranslateBoneToPhysBone","parent":"Entity","type":"classfunc","description":{"text":"Returns the ID of a  attached to the given bone. To be used with .\n\nSee  for reverse function.","page":["PhysObj","Entity:GetPhysicsObjectNum","Entity:TranslatePhysBoneToBone"]},"realm":"Shared","args":{"arg":{"text":"The ID of a bone to look up the \"physics root\" bone of.","name":"boneID","type":"number"}},"rets":{"ret":{"text":"The  ID of the given bone.\n\n* -1 if we somehow cannot translate","name":"","type":"number","page":"PhysObj"}}}},
{"function":{"name":"TranslatePhysBoneToBone","parent":"Entity","type":"classfunc","description":{"text":"Returns the boneID of the bone the given  is attached to.\n\nSee  for reverse function.","page":["PhysObj","Entity:TranslateBoneToPhysBone"]},"realm":"Shared","args":{"arg":{"text":"The  number on the entity","name":"physNum","type":"number","page":"PhysObj"}},"rets":{"ret":{"text":"The boneID of the bone the  is attached to.","name":"","type":"number","page":"PhysObj"}}},"example":{"description":"Does a trace, gets the physics bone from the trace, converts the physics bone number into the bone number and prints the result","code":"concommand.Add( \"boneid\", function( ply )\n\tlocal tr = ply:GetEyeTrace()\n\tlocal bone = tr.Entity:TranslatePhysBoneToBone( tr.PhysicsBone )\n\tprint( bone )\n\tply:ChatPrint( bone )\nend )","output":"The bone number of what the client is looking at"}},
{"function":{"name":"TakePhysicsDamage","parent":"Entity","type":"classfunc","description":"Applies forces to our physics object in response to damage.","realm":"Server","args":{"arg":{"text":"The damageinfo to apply. Only  and  are used.","name":"dmginfo","type":"CTakeDamageInfo","page":["CTakeDamageInfo:GetDamageForce","CTakeDamageInfo:GetDamagePosition"]}}}},
{"function":{"name":"StopSound","parent":"Entity","type":"classfunc","description":"Stops emitting the given sound from the entity, especially useful for looping sounds.","realm":"Shared","args":{"arg":{"text":"The name of the sound script or the filepath to stop playback of.","name":"sound","type":"string"}}}},
{"function":{"name":"TakeDamageInfo","parent":"Entity","type":"classfunc","description":{"text":"Applies the damage specified by the damage info to the entity.","warning":{"text":"Calling this function on the victim entity in  can cause infinite loops.","page":"ENTITY:OnTakeDamage"}},"realm":"Server","args":{"arg":{"text":"The damage to apply.","name":"damageInfo","type":"CTakeDamageInfo"}}},"example":{"description":"Dissolve the target into oblivion.","code":"function DissolveIt( ent, ply )\n\tlocal d = DamageInfo()\n\td:SetDamage( ent:Health() )\n\td:SetAttacker( ply or ent )\n\td:SetDamageType( DMG_DISSOLVE ) \n\n\tent:TakeDamageInfo( d )\nend\nconcommand.Add( \"dissolve_it\", function( ply, cmd, arg )\n\tlocal ent = ply:GetEyeTrace().Entity\n\tif ( !IsValid( ent ) ) then return end -- Not looking at a valid entity\n\n\tDissolveIt( ent, ply )\nend )"}},
{"function":{"name":"TakeDamage","parent":"Entity","type":"classfunc","description":{"text":"Applies the specified amount of damage to the entity with  flag.","page":",DMG_GENERICEnums/DMG","warning":{"text":"Calling this function on the victim entity in  can cause infinite loops.","page":"ENTITY:OnTakeDamage"}},"realm":"Server","args":{"arg":[{"text":"The amount of damage to be applied.","name":"damageAmount","type":"number"},{"text":"The entity that initiated the attack that caused the damage.","name":"attacker","type":"Entity"},{"text":"The entity that applied the damage, eg. a weapon.","name":"inflictor","type":"Entity"}]}}},
{"function":{"name":"StopParticlesWithNameAndAttachment","parent":"Entity","type":"classfunc","description":"Stops all particle effects parented to the entity with given name on given attachment.","realm":"Client","args":{"arg":[{"text":"The name of the particle to stop.","name":"name","type":"string"},{"text":"The attachment of the entity to stop particles on.","name":"attachment","type":"number"}]}}},
{"function":{"name":"StopParticleEmission","parent":"Entity","type":"classfunc","description":{"text":"Stops all particle effects parented to the entity.\n\nThis is ran automatically on every client by  if called on the server.","page":"Entity:StopParticles"},"realm":"Client"}},
{"function":{"name":"StopParticles","parent":"Entity","type":"classfunc","description":{"text":"Stops any attached to the entity .pcf particles using .\n\nOn client, this is the same as . ( and you should use StopParticleEmission instead )\n\n\nOn server, this is the same as running  on every client.","page":["Global.ParticleEffectAttach","Entity:StopParticleEmission","Entity:StopParticleEmission"]},"realm":"Shared"}},
{"function":{"name":"StopParticlesNamed","parent":"Entity","type":"classfunc","description":"Stops all particle effects parented to the entity with given name.","realm":"Client","args":{"arg":{"text":"The name of the particle to stop.","name":"name","type":"string"}}}},
{"function":{"name":"StopMotionController","parent":"Entity","type":"classfunc","description":{"text":"Stops the motion controller created with .","page":"Entity:StartMotionController"},"realm":"Shared"}},
{"function":{"name":"StopLoopingSound","parent":"Entity","type":"classfunc","description":{"text":"Stops a sound created by .","page":"Entity:StartLoopingSound"},"realm":"Shared","args":{"arg":{"text":"The sound ID returned by","name":"id","type":"number","page":"Entity:StartLoopingSound"}}}},
{"function":{"name":"StopAndDestroyParticles","parent":"Entity","type":"classfunc","description":"Stops all particle effects parented to the entity and immediately destroys them.","realm":"Client"}},
{"function":{"name":"StartMotionController","parent":"Entity","type":"classfunc","description":{"text":"Starts a motion controller in the physics engine tied to this entity's , which enables the use of .\n\nThe motion controller can later be destroyed via .\n\nMotion controllers are used internally to control other Entities' ects, such as the Gravity Gun, +use pickup and the Physics Gun.\n\nThis function should be called every time you recreate the Entity's . Or alternatively you should call  on the new .\n\nAlso see  and .","page":["PhysObj","ENTITY:PhysicsSimulate","Entity:StopMotionController","PhysObj","PhysObj","Entity:AddToMotionController","PhysObj","Entity:AddToMotionController","Entity:RemoveFromMotionController"],"note":{"text":"Only works on a scripted  of anim type.","page":"Entity"}},"realm":"Shared"}},
{"function":{"name":"StartLoopingSound","parent":"Entity","type":"classfunc","description":{"text":"Starts a \"looping\" sound. As with any other sound playing methods, this function expects the sound file to be looping itself and will not automatically loop a non looping sound file as one might expect.\n\nThis function is almost identical to , with the exception of the sound being created in the STATIC channel and with normal attenuation.\n\nSee also","page":["Global.CreateSound","Entity:StopLoopingSound"]},"realm":"Shared","args":{"arg":{"text":"Sound to play. Can be either a sound script or a filepath.","name":"sound","type":"string"}},"rets":{"ret":{"text":"The ID number of started sound starting with 0, or -1 if we failed for some reason.","name":"","type":"number"}}}},
{"function":{"name":"Spawn","parent":"Entity","type":"classfunc","description":{"text":"Initializes the entity and starts its networking. If called on a player, it will respawn them.\n\nThis calls  on Lua-defined entities.","page":"ENTITY:Initialize"},"realm":"Shared"}},
{"function":{"name":"SnatchModelInstance","parent":"Entity","type":"classfunc","description":"Moves the model instance from the source entity to this entity. This can be used to transfer decals that have been applied on one entity to another.\n\nBoth entities must have the same model.","realm":"Client","args":{"arg":{"text":"Entity to move the model instance from.","name":"srcEntity","type":"Entity"}},"rets":{"ret":{"text":"Whether the operation was successful or not","name":"","type":"boolean"}}}},
{"function":{"name":"SnatchModelInstance","parent":"Entity","type":"classfunc","description":"Moves the model instance from the source entity to this entity. This can be used to transfer decals that have been applied on one entity to another.\n\nBoth entities must have the same model.","realm":"Client","args":{"arg":{"text":"Entity to move the model instance from.","name":"srcEntity","type":"Entity"}},"rets":{"ret":{"text":"Whether the operation was successful or not","name":"","type":"boolean"}}}},
{"function":{"name":"SetVelocity","parent":"Entity","type":"classfunc","description":{"text":"Sets the entity's velocity. For entities with physics, consider using  on the  of the entity.","page":["PhysObj:SetVelocity","PhysObj"],"note":"Actually binds to CBaseEntity::SetBaseVelocity() which sets the entity's velocity due to forces applied by other entities.","warning":"If applied to a player, this will actually **ADD** velocity, not set it."},"realm":"Shared","args":{"arg":{"text":"The new velocity to set.","name":"velocity","type":"Vector"}}}},
{"function":{"name":"SetUseType","parent":"Entity","type":"classfunc","description":{"text":"Sets the use type of an entity, affecting how often  will be called for Lua entities.","page":"ENTITY:Use"},"realm":"Server","args":{"arg":{"text":"The use type to apply to the entity. Uses .","name":"useType","type":"number","page":"Enums/_USE"}}},"example":{"description":{"text":"Makes the  hook only get called once at every use.","page":"ENTITY:Use"},"code":"Entity:SetUseType( SIMPLE_USE )"}},
{"function":{"name":"SetUseType","parent":"Entity","type":"classfunc","description":{"text":"Sets the use type of an entity, affecting how often  will be called for Lua entities.","page":"ENTITY:Use"},"realm":"Server","args":{"arg":{"text":"The use type to apply to the entity. Uses .","name":"useType","type":"number","page":"Enums/_USE"}}},"example":{"description":{"text":"Makes the  hook only get called once at every use.","page":"ENTITY:Use"},"code":"Entity:SetUseType( SIMPLE_USE )"}},
{"function":{"name":"SetVar","parent":"Entity","type":"classfunc","description":{"text":"Allows to quickly set variable to entity's .","page":"Entity:GetTable","note":{"text":"This will not network the variable to client(s). You want  and similar functions for that","page":"Entity:SetNWString"}},"realm":"Shared","file":{"text":"lua/includes/extensions/entity.lua","line":"87-L94"},"args":{"arg":[{"text":"Key of the value to set","name":"key","type":"any"},{"text":"Value to set the variable to","name":"value","type":"any"}]}}},
{"function":{"name":"SetupPhonemeMappings","parent":"Entity","type":"classfunc","description":{"text":"Initializes the class names of an entity's phoneme mappings (mouth movement data). This is called by default with argument \"phonemes\" when a flex-based entity (such as an ) is created.","page":"NPC","note":"TF2 phonemes can be accessed by using a path such as \"player/scout/phonemes/phonemes\" , check TF2's \"tf2_misc_dir.vpk\" with GCFScape for other paths, however it seems that TF2 sounds don't contain phoneme definitions anymore after being converted to mp3 and only rely on VCD animations, this needs to be further investigated"},"realm":"Client","args":{"arg":{"text":"The file prefix of the phoneme mappings (relative to \"garrysmod/expressions/\").","name":"fileRoot","type":"string"}}},"example":{"description":"Defines a function that can enable or disable phoneme mappings on an entity.","code":"-- Turn phoneme mappings on or off\nfunction EnablePhonemes(ent, on)\n\n\tif(!IsValid(ent)) then return end\n\t\n\tif(!on) then\n\t\t-- Disable mouth movement\n\t\tent:SetupPhonemeMappings(\"\")\n\telse\n\t\t-- Enable mouth movement\n\t\tent:SetupPhonemeMappings(\"phonemes\")\n\tend\n\nend"}},
{"function":{"name":"SetupBones","parent":"Entity","type":"classfunc","description":{"text":"Forces the entity to reconfigure its bones. You might need to call this after changing your model's scales or when manually drawing the entity multiple times at different positions.","note":{"text":"This calls the BuildBonePositions callback added via , so avoid calling this function inside it to prevent an infinite loop.","page":"Entity:AddCallback"}},"realm":"Client"}},
{"function":{"name":"SetupBones","parent":"Entity","type":"classfunc","description":{"text":"Forces the entity to reconfigure its bones. You might need to call this after changing your model's scales or when manually drawing the entity multiple times at different positions.","note":{"text":"This calls the BuildBonePositions callback added via , so avoid calling this function inside it to prevent an infinite loop.","page":"Entity:AddCallback"}},"realm":"Client"}},
{"function":{"name":"SetTrigger","parent":"Entity","type":"classfunc","description":{"text":"Marks the entity as a trigger, so it will generate ,  and  callbacks.\n\nInternally this is stored as  flag.","page":["ENTITY:StartTouch","ENTITY:Touch","ENTITY:EndTouch",",FSOLID_TRIGGEREnums/FSOLID"]},"realm":"Server","args":{"arg":{"text":"Make the entity trigger or not","name":"maketrigger","type":"boolean"}}}},
{"function":{"name":"SetTransmitWithParent","parent":"Entity","type":"classfunc","description":{"text":"When this flag is set the entity will only transmit to the player when its parent is transmitted. This is useful for things like viewmodel attachments since without this flag they will transmit to everyone (and cause the viewmodels to transmit to everyone too).","note":{"text":"In the case of scripted entities, this will override","page":"ENTITY:UpdateTransmitState"}},"realm":"Shared","file_name":"src/garrysmod/Objects/lua_entity.cpp","file_line":"5390","args":{"arg":{"text":"Will set the TransmitWithParent flag on or off","name":"onoff","type":"boolean"}}}},
{"function":{"name":"SetTable","parent":"Entity","type":"classfunc","description":"Changes the table that can be accessed by indexing an entity. Each entity starts with its own table by default.","realm":"Shared","args":{"arg":{"text":"Table for the entity to use","name":"tab","type":"table"}}}},
{"function":{"name":"SetSubMaterial","parent":"Entity","type":"classfunc","description":{"text":"Overrides a single material on the model of this entity.\n\nTo set a Lua material created with , just prepend a \"!\" to the material name.","page":"Global.CreateMaterial","bug":{"text":"The server's value takes priority on the client.","issue":"3362"}},"realm":"Shared","args":{"arg":[{"text":"Index of the material to override, acceptable values are from 0 to 31.\n\nIndexes are by , but you have to subtract 1 from them.\n\nIf called with no arguments, all sub materials will be reset.","name":"index","type":"number","default":"nil","page":"Entity:GetMaterials"},{"text":"The material to override the default one with. Set to nil to revert to default material.","name":"material","type":"string","default":"nil"}]}}},
{"function":{"name":"SetSpawnEffect","parent":"Entity","type":"classfunc","description":{"text":"Sets whether the entity should use a spawn effect when it is created on the client.\n\nSee  for more information on how the effect is applied.","page":"Entity:GetSpawnEffect","note":"This function will only have an effect when the entity spawns. After that it will do nothing even is set to true."},"realm":"Shared","args":{"arg":{"text":"Sets if we should show a spawn effect.","name":"spawnEffect","type":"boolean"}}},"example":{"description":"Simplified code taken from sandbox's commands.lua","code":"local function MakeRagdoll( Player, Pos, Ang, Model, PhysicsObjects, Data )\n\n\tlocal Ent = ents.Create( \"prop_ragdoll\" )\n\tduplicator.DoGeneric( Ent, Data )\n\tEnt:Spawn()\n\t\n\tduplicator.DoGenericPhysics( Ent, Player, Data )\n\tEnt:Activate()\n\n\tEnt:SetSpawnEffect( true )\n\treturn Ent\t\nend","output":"Spawns the ragdoll and then sets the spawnEffect flag to true."}},
{"function":{"name":"SetSolidFlags","parent":"Entity","type":"classfunc","description":{"text":"Sets solid flag(s) for the entity.\n\nThis overrides any other flags the entity might have had. See  for adding flags.","page":"Entity:AddSolidFlags"},"realm":"Shared","args":{"arg":{"text":"The flag(s) to set, see .","name":"flags","type":"number","page":"Enums/FSOLID"}}},"example":{"description":{"text":"Mimics  call on the entity and adds FSOLID_USE_TRIGGER_BOUNDS flag to it.","page":"Entity:SetTrigger"},"code":"ent:SetSolidFlags( bit.bor( FSOLID_TRIGGER, FSOLID_USE_TRIGGER_BOUNDS ) )"}},
{"function":{"name":"SetSolid","parent":"Entity","type":"classfunc","description":"Sets the solidity of an entity.","realm":"Shared","args":{"arg":{"text":"The solid type. See the .","name":"solid_type","type":"number","page":"Enums/SOLID"}}}},
{"function":{"name":"SetSkin","parent":"Entity","type":"classfunc","description":"Sets the skin of the entity.","realm":"Shared","args":{"arg":{"text":"0-based index of the skin to use.","name":"skinIndex","type":"number"}}}},
{"function":{"name":"SetShouldServerRagdoll","parent":"Entity","type":"classfunc","description":{"text":"Sets if entity should create a server ragdoll on death or a client one.","note":[{"text":"Player ragdolls created with this enabled will have an owner set, see  for more information on what effects this has.","page":"Entity:SetOwner"},{"text":"This is reset for players when they respawn. ()","page":"Entity:Spawn"}]},"realm":"Shared","args":{"arg":{"text":"Set true if ragdoll should be created on server, false if on client","name":"serverragdoll","type":"boolean"}}}},
{"function":{"name":"SetShouldPlayPickupSound","parent":"Entity","type":"classfunc","description":"Sets whether or not the entity should make a physics contact sound when it's been picked up by a player.","realm":"Shared","args":{"arg":{"text":"True to play the pickup sound, false otherwise.","name":"playsound","type":"boolean","default":"false"}}},"example":{"description":"Enable pickup sound on all entities.","code":"function GM:OnEntityCreated(ent)\n    ent:SetShouldPlayPickupSound(true)\nend"}},
{"function":{"name":"SetSequence","parent":"Entity","type":"classfunc","description":{"text":"Sets the entity's model sequence.\n\nIf the specified sequence is already active, the animation will not be restarted. See  for a function that restarts the animation even if it is already playing.\n\nIn some cases you want to run  to make this function run.","page":["Entity:ResetSequence","Entity:ResetSequenceInfo"],"note":[{"text":"This will not work properly if called directly after calling . Consider waiting until the next Tick.","page":"Entity:SetModel"},{"text":"Will not work on players due to the animations being reset every frame by the base gamemode animation system in . For Players, use in  instead.","page":["GM:CalcMainActivity","GM:UpdateAnimation"]}]},"realm":"Shared","args":{"arg":{"text":"The sequence to play. Also accepts strings.","name":"sequenceId","type":"number","note":{"text":"If set to a string, the function will automatically call  to retrieve the sequence ID as a number.","page":"Entity:LookupSequence"}}}},"example":[{"description":"Set the entity to play the \"idle\" sequence.","code":"self:SetSequence( \"idle\" )"},{"description":"Set the entity to play the first sequence defined on the model (usually idle).","code":"self:SetSequence( 0 )"}]},
{"function":{"name":"SetSaveValue","parent":"Entity","type":"classfunc","description":{"text":"Sets a save value for an entity.","bug":{"text":"This does not type-check entity keys. Setting an entity key to a non-entity value will treat it as NULL.","issue":"4065"}},"realm":"Shared","args":{"arg":[{"text":"Name of the save value to set","name":"name","type":"string"},{"text":"Value to set","name":"value","type":"any"}]},"rets":{"ret":{"text":"Key successfully set","name":"","type":"boolean"}}},"example":{"description":"Make all rollermines currently on the map friendly","code":"for k, v in pairs( ents.FindByClass( \"npc_rollermine\" ) ) do\n    v:SetSaveValue( \"m_bHackedByAlyx\", true )\nend"}},
{"function":{"name":"SetRenderOrigin","parent":"Entity","type":"classfunc","description":"Set the origin in which the Entity will be drawn from.","realm":"Client","args":{"arg":{"text":"The new origin in world coordinates where the Entity's model will now be rendered from.","name":"newOrigin","type":"Vector"}}}},
{"function":{"name":"SetRenderMode","parent":"Entity","type":"classfunc","description":"Sets the render mode of the entity.","realm":"Shared","args":{"arg":{"text":"New render mode to set, see .","name":"renderMode","type":"number","page":"Enums/RENDERMODE"}}}},
{"function":{"name":"SetRenderFX","parent":"Entity","type":"classfunc","description":"Sets entity's render FX.","realm":"Shared","args":{"arg":{"text":"The new render FX to set, see","name":"renderFX","type":"number","page":"Enums/kRenderFx"}}}},
{"function":{"name":"SetRenderClipPlaneEnabled","parent":"Entity","type":"classfunc","description":"Enables the use of clipping planes to \"cut\" objects.","realm":"Client","args":{"arg":{"text":"Enable or disable clipping planes","name":"enabled","type":"boolean"}}}},
{"function":{"name":"SetRenderClipPlane","parent":"Entity","type":"classfunc","description":"Used to specify a plane, past which an object will be visually clipped.","realm":"Client","args":{"arg":[{"text":"The normal of the plane. Anything behind the normal will be clipped.","name":"planeNormal","type":"Vector"},{"text":"The position of the plane.","name":"planePosition","type":"number"}]}},"example":{"description":"Creates a blue barrel at Vector(0, 0, 0), freezes it, and will visually clip the barrel's lower half.","code":"local ent = ents.Create( \"prop_physics\" )\nent:SetModel( \"models/props_borealis/bluebarrel001.mdl\" )\nent:SetPos( Vector(0, 0, 0) )\nent:Spawn()\nent:GetPhysicsObject():EnableMotion(false)\n\nlocal normal = ent:GetUp()\nlocal position = normal:Dot( ent:GetPos() )\nent:SetRenderClipPlaneEnabled( true )\nent:SetRenderClipPlane( normal, position )"}},
{"function":{"name":"SetRenderBoundsWS","parent":"Entity","type":"classfunc","description":{"text":"Sets the render bounds for the entity in world space coordinates. For relative coordinates see .","page":"Entity:SetRenderBounds"},"realm":"Client","args":{"arg":[{"text":"The minimum corner of the bounds, relative to origin of the world/map.","name":"mins","type":"Vector"},{"text":"The maximum corner of the bounds, relative to origin of the world/map.","name":"maxs","type":"Vector"},{"text":"If defined, adds this vector to maxs and subtracts this vector from mins.","name":"add","type":"Vector","default":"Vector( 0, 0, 0 )"}]}}},
{"function":{"name":"SetRenderBounds","parent":"Entity","type":"classfunc","description":{"text":"Sets the render bounds for the entity. For world space coordinates see .","page":"Entity:SetRenderBoundsWS"},"realm":"Client","args":{"arg":[{"text":"The minimum corner of the bounds, relative to origin of the entity.","name":"mins","type":"Vector"},{"text":"The maximum corner of the bounds, relative to origin of the entity.","name":"maxs","type":"Vector"},{"text":"If defined, adds this vector to maxs and subtracts this vector from mins.","name":"add","type":"Vector","default":"Vector( 0, 0, 0 )"}]}}},
{"function":{"name":"SetRenderAngles","parent":"Entity","type":"classfunc","description":"Sets the render angles of the Entity.","realm":"Client","args":{"arg":{"text":"The new render angles to be set to.","name":"newAngles","type":"Angle"}}}},
{"function":{"name":"SetRagdollPos","parent":"Entity","type":"classfunc","description":{"text":"Sets the bone position. This is used alongside Kinect in , for more info see ragdoll_motion entity.","page":"Entity:SetRagdollBuildFunction"},"realm":"Server","args":{"arg":[{"text":"Bone ID","name":"boneid","type":"number"},{"text":"Position to set","name":"pos","type":"Vector"}]}}},
{"function":{"name":"SetRagdollBuildFunction","parent":"Entity","type":"classfunc","description":"Sets the function to build the ragdoll. This is used alongside Kinect, for more info see ragdoll_motion entity.","realm":"Server","args":{"arg":{"text":"The build function. This function has one argument:\n*  ragdoll - The ragdoll to build","name":"func","type":"function","page":"Entity"}}}},
{"function":{"name":"SetRagdollAng","parent":"Entity","type":"classfunc","description":{"text":"Sets the bone angles. This is used alongside Kinect in , for more info see ragdoll_motion entity.","page":"Entity:SetRagdollBuildFunction"},"realm":"Server","args":{"arg":[{"text":"Bone ID","name":"boneid","type":"number"},{"text":"Angle to set","name":"pos","type":"Angle"}]}}},
{"function":{"name":"SetPreventTransmit","parent":"Entity","type":"classfunc","description":{"text":"Prevents the server from sending any further information about the entity to a player.","bug":{"text":"This does not work for nextbots.","issue":"1736"},"validate":{"text":"When using this function,  will conflict with this function. Instead, consider using  on the client.","page":["Entity:SetFlexScale","Entity:SetFlexScale"]}},"realm":"Server","args":{"arg":[{"text":"The player to stop networking the entity to.","name":"player","type":"Player"},{"text":"true to stop the entity from networking, false to make it network again.","name":"stopTransmitting","type":"boolean"}]}}},
{"function":{"name":"SetPredictable","parent":"Entity","type":"classfunc","description":{"text":"Sets whether an entity should be predictable or not.\nWhen an entity is set as predictable, its DT vars can be changed during predicted hooks. This is useful for entities which can be controlled by player input.\n\nAny datatable value that mismatches from the server will be overridden and a prediction error will be spewed.\n\nWeapons are predictable by default, and the drive system uses this function to make the controlled prop predictable as well.\n\nVisit  for a list of all predicted hooks, and the  page.\nFor further technical information on the subject, visit [valve's wiki](https://developer.valvesoftware.com/wiki/Prediction).","page":"Prediction","note":["This function resets the datatable variables everytime it's called, it should ideally be called when a player starts using the entity and when he stops",{"text":"Entities set as predictable with this function will be unmarked when the user lags and receives a full packet update, to handle such case visit","page":"GM:NotifyShouldTransmit"}]},"realm":"Client","args":{"arg":{"text":"whether to make this entity predictable or not.","name":"setPredictable","type":"boolean"}}}},
{"function":{"name":"SetPoseParameter","parent":"Entity","type":"classfunc","description":{"text":"Sets the specified pose parameter to the specified value.\n\nYou should call  after calling this function.","page":"Entity:InvalidateBoneCache","note":"Avoid calling this in draw hooks, especially when animating things, as it might cause visual artifacts."},"realm":"Shared","args":{"arg":[{"text":"Name of the pose parameter.","name":"poseName","type":"string"},{"text":"The value to set the pose to.","name":"poseValue","type":"number"}]}},"example":{"description":{"text":"Copies pose parameters from one entity to another. Since  returns pose parameter values 0-1 on the client, they have to be remapped to the range returned by  before being set on the target entity.","page":["Entity.GetPoseParameter","Entity.GetPoseParameterRange"]},"code":"local function CopyPoseParams(pEntityFrom, pEntityTo)\n\tif (SERVER) then\n\t\tfor i = 0, pEntityFrom:GetNumPoseParameters() - 1 do\n\t\t\tlocal sPose = pEntityFrom:GetPoseParameterName(i)\n\t\t\tpEntityTo:SetPoseParameter(sPose, pEntityFrom:GetPoseParameter(sPose))\n\t\tend\n\telse\n\t\tfor i = 0, pEntityFrom:GetNumPoseParameters() - 1 do\n\t\t\tlocal flMin, flMax = pEntityFrom:GetPoseParameterRange(i)\n\t\t\tlocal sPose = pEntityFrom:GetPoseParameterName(i)\n\t\t\tpEntityTo:SetPoseParameter(sPose, math.Remap(pEntityFrom:GetPoseParameter(sPose), 0, 1, flMin, flMax))\n\t\tend\n\tend\nend"}},
{"function":{"name":"SetPos","parent":"Entity","type":"classfunc","description":{"text":"Moves the entity to the specified position.","note":{"text":"If the new position doesn't take effect right away, you can use  to force it to do so. This issue is especially common when trying to render the same entity twice or more in a single frame at different positions.","page":"Entity:SetupBones"},"warning":{"text":"Entities with  of SOLID_BBOX will have their angles reset!","page":"Entity:GetSolid"},"bug":{"text":"This will fail inside of predicted functions called during player movement processing. This includes  and .","issue":"2447","page":["WEAPON:PrimaryAttack","WEAPON:Think"]}},"realm":"Shared","args":{"arg":{"text":"The position to move the entity to.","name":"position","type":"Vector"}}},"example":{"description":"Sets the player's position to (0, 0, 0)","code":"Entity( 1 ):SetPos( Vector( 0, 0, 0 ) )","output":"The player is now located at Vector(0, 0, 0)"}},
{"function":{"name":"SetPlaybackRate","parent":"Entity","type":"classfunc","description":"Allows you to set how fast an entity's animation will play, with 1.0 being the default speed.","realm":"Shared","args":{"arg":{"text":"How fast the animation will play.","name":"fSpeed","type":"number"}}},"example":{"description":"Makes Entity(1)'s viewmodel play animations 50% slower.","code":"Entity(1):GetViewModel():SetPlaybackRate(0.5)","output":"Entity(1)'s viewmodel now plays animations 50% slower."}},
{"function":{"name":"SetPhysicsAttacker","parent":"Entity","type":"classfunc","description":{"text":"Sets the player who gets credit if this entity kills something with physics damage within the time limit.","note":"This can only be called on props, \"anim\" type SENTs and vehicles."},"realm":"Server","args":{"arg":[{"text":"Player who gets the kills. Setting this to a non-player entity will not work.","name":"ent","type":"Player"},{"text":"Time in seconds until the entity forgets its physics attacker and prevents it from getting the kill credit.","name":"timeLimit","type":"number","default":"5"}]}}},
{"function":{"name":"SetPersistent","parent":"Entity","type":"classfunc","description":{"text":"Sets whether or not the given entity is persistent. A persistent entity will be saved on server shutdown and loaded back when the server starts up. Additionally, by default persistent entities cannot be grabbed with the physgun and tools cannot be used on them.\n\nIn sandbox, this can be set on an entity by opening the context menu, right clicking the entity, and choosing \"Make Persistent\".","note":"Persistence can only be enabled with the sbox_persist convar, which works as an identifier for the current set of persistent entities. An empty identifier (which is the default value) disables this feature."},"realm":"Shared","args":{"arg":{"text":"Whether or not the entity should be persistent.","name":"persist","type":"boolean"}}}},
{"function":{"name":"SetPhysConstraintObjects","parent":"Entity","type":"classfunc","description":"When called on a constraint entity, sets the two physics objects to be constrained.\n\nUsage is not recommended as the Constraint library provides easier ways to deal with constraints.","realm":"Server","args":{"arg":[{"text":"The first physics object to be constrained.","name":"Phys1","type":"PhysObj"},{"text":"The second physics object to be constrained.","name":"Phys2","type":"PhysObj"}]}},"example":{"description":"From constraint.lua","code":"Constraint = ents.Create(\"phys_lengthconstraint\")\n\tConstraint:SetPos( WPos1 )\n\tConstraint:SetKeyValue( \"attachpoint\", tostring(WPos2) )\n\tConstraint:SetKeyValue( \"minlength\", \"0.0\" )\n\tConstraint:SetKeyValue( \"length\", length + addlength )\n\tif ( forcelimit ) then Constraint:SetKeyValue( \"forcelimit\", forcelimit ) end\n\tif ( rigid ) then Constraint:SetKeyValue( \"spawnflags\", 2 ) end\n\tConstraint:SetPhysConstraintObjects( Phys1, Phys2 )\nConstraint:Spawn()\nConstraint:Activate()"}},
{"function":{"name":"SetParentPhysNum","parent":"Entity","type":"classfunc","description":{"text":"Sets the parent of an entity to another entity with the given physics bone number. Similar to , except it is parented to a physbone. This function is useful mainly for ragdolls.","page":"Entity:SetParent","note":"Despite this function being available server side, it doesn't actually do anything server side."},"realm":"Shared","args":{"arg":{"text":"Physics bone number to attach to. Use 0 for objects with only one physics bone. (See )","name":"bone","type":"number","page":"Entity:GetPhysicsObjectNum"}}}},
{"function":{"name":"SetParent","parent":"Entity","type":"classfunc","description":{"text":"Sets the parent of this entity, making it move with its parent.","note":{"text":"This does not work on .","page":",the worldgame.GetWorld"},"warning":"This can cause undefined physics behaviour when used on entities that don't support parenting. See the [Valve developer wiki](https://developer.valvesoftware.com/wiki/Entity_Hierarchy_(parenting)) for more information."},"realm":"Shared","args":{"arg":[{"text":"The entity to parent to. Setting this to nil will clear the parent.","name":"parent","type":"Entity","default":"NULL"},{"text":"The attachment id to use when parenting, defaults to -1 or whatever the parent had set previously.","name":"attachmentId","type":"number","default":"-1","note":{"text":"You must call ( MOVETYPE_NONE ) on the child for this argument to have any effect!","page":"Entity:SetMoveType"}}]}}},
{"function":{"name":"SetOwner","parent":"Entity","type":"classfunc","description":{"text":"Sets the owner of this entity, disabling all physics interaction with it.","note":"This function is generally used to disable physics interactions on projectiles being fired by their owner, but can also be used for normal ownership in case physics interactions are not involved at all. The Gravity gun will be able to pick up the entity even if the owner can't collide with it, the Physics gun however will not."},"realm":"Shared","args":{"arg":{"text":"The entity to be set as owner.","name":"owner","type":"Entity","default":"NULL"}}},"example":{"description":"Taken from Garry's Flechette gun , shoots a hunter's flechette and sets the owner of the flechette to the player using the weapon.","code":"function SWEP:PrimaryAttack()\n\tself:SetNextPrimaryFire( CurTime() + 0.1 )\n\t\n\tif (!SERVER) then return end\n\n\tlocal Forward = self.Owner:EyeAngles():Forward()\n\n\tlocal ent = ents.Create( \"hunter_flechette\" )\n\t\n\tif ( IsValid( ent ) ) then\n\n\t\tent:SetPos( self.Owner:GetShootPos() + Forward * 32 )\n\t\tent:SetAngles( self.Owner:EyeAngles() )\n\t\tent:Spawn()\n\t\tent:SetVelocity( Forward * 2000 )\n\t\tent:SetOwner( self.Owner )\n\tend\nend"}},
{"function":{"name":"SetNWVector","parent":"Entity","type":"classfunc","description":{"text":"Sets a networked vector value on the entity.\n\nThe value can then be accessed with  both from client and server.","page":"Entity:GetNWVector","note":"Running this function clientside will only set it for the client it is called on."},"realm":"Shared","args":{"arg":[{"text":"The key to associate the value with","name":"key","type":"string"},{"text":"The value to set","name":"value","type":"Vector"}]}},"example":{"description":"This will set the networked angle 'direction' on all clients to straight up.","code":"for k, v in pairs( player.GetAll() ) do\n    v:SetNWVector( 'direction', Vector( 0, 0, 1 ) )\nend"}},
{"function":{"name":"SetNWInt","parent":"Entity","type":"classfunc","description":{"text":"Sets a networked integer (whole number) value on the entity.\n\nThe value can then be accessed with  both from client and server.\n\nSee  for numbers that aren't integers.","page":["Entity:GetNWInt","Entity:SetNWFloat"],"note":"Running this function clientside will only set it for the client it is called on.","bug":{"text":"This function will not round decimal values as it actually networks a float internally.","issue":"3374"}},"realm":"Shared","args":{"arg":[{"text":"The key to associate the value with","name":"key","type":"string"},{"text":"The value to set","name":"value","type":"number"}]}},"example":{"description":"This will set the networked integer 'money' on all clients to 100.","code":"for k, v in ipairs( player.GetAll() ) do\n    v:SetNWInt( 'money', 100 )\nend"}},
{"function":{"name":"SetNWVarProxy","parent":"Entity","type":"classfunc","description":"Sets a function to be called when the NWVar changes.","realm":"Shared","file":{"text":"lua/includes/extensions/entity.lua","line":"508"},"args":{"arg":[{"text":"The key of the NWVar to add callback for.","name":"key","type":"any"},{"text":"The function to be called when the NWVar changes. It has 4 arguments:\n*  ent - The entity\n*  name - Name of the NWVar that has changed\n*  oldval - The old value\n*  newval - The new value","name":"callback","type":"function","page":["Entity","string","any","any"]}]}},"example":{"description":"Prints all changes to a NWVar called \"Key\" of Player 1.","code":"Entity( 1 ):SetNWVarProxy( \"Key\", print )\nEntity( 1 ):SetNWString( \"Key\", \"Value\" )\nEntity( 1 ):SetNWString( \"Key\", \"Table\" )","outputfixedwidth":"Fixed width","output":"Player [1][Player1]\tKey\tnil\tValue\nPlayer [1][Player1]\tKey\tValue\tTable"}},
{"function":{"name":"SetNWString","parent":"Entity","type":"classfunc","description":{"text":"Sets a networked string value on the entity.\n\nThe value can then be accessed with  both from client and server.","page":"Entity:GetNWString","note":"Running this function clientside will only set it for the client it is called on."},"realm":"Shared","args":{"arg":[{"text":"The key to associate the value with","name":"key","type":"string"},{"text":"The value to set, up to 199 characters.","name":"value","type":"string"}]}},"example":{"description":"Sets a networked string with a key of \"Nickname\" and a value of \n\"John\" on a player.","code":"player:SetNWString( \"Nickname\", \"John\" )\nprint( player:GetNWString( \"Nickname\" ) )","output":"\"John\""}},
{"function":{"name":"SetNWEntity","parent":"Entity","type":"classfunc","description":{"text":"Sets a networked entity value on the entity.\n\nThe value can then be accessed with  both from client and server.","page":"Entity:GetNWEntity","note":"Running this function clientside will only set it for the client it is called on."},"realm":"Shared","args":{"arg":[{"text":"The key to associate the value with","name":"key","type":"string"},{"text":"The value to set","name":"value","type":"Entity"}]}},"example":{"description":"This will set the networked entity 'owner' on all clients to themselves.","code":"for k, v in pairs( player.GetAll() ) do\n    v:SetNWEntity( \"owner\", v )\nend"}},
{"function":{"name":"SetNWBool","parent":"Entity","type":"classfunc","description":{"text":"Sets a networked boolean value on the entity.\n\nThe value can then be accessed with  both from client and server.","page":"Entity:GetNWBool","note":"Running this function clientside will only set it for the client it is called on."},"realm":"Shared","args":{"arg":[{"text":"The key to associate the value with","name":"key","type":"string"},{"text":"The value to set","name":"value","type":"boolean"}]}},"example":{"description":"Sets a networked boolean with a key of \"VIP\" and a value of true on a player.","code":"player:SetNWBool( \"VIP\", true )\nprint( player:GetNWBool( \"VIP\" ) )","output":"true"}},
{"function":{"name":"SetNWFloat","parent":"Entity","type":"classfunc","description":{"text":"Sets a networked float (number) value on the entity.\n\nThe value can then be accessed with  both from client and server.\n\nUnlike , floats don't have to be whole numbers.","page":["Entity:GetNWFloat","Entity:SetNWInt"],"note":"Running this function clientside will only set it for the client it is called on."},"realm":"Shared","args":{"arg":[{"text":"The key to associate the value with","name":"key","type":"string"},{"text":"The value to set","name":"value","type":"number"}]}},"example":{"description":"This will set the networked float 'test' on all clients to 0.5.","code":"for k,v in pairs( player.GetAll() ) do\n    v:SetNWFloat( 'test', 0.5 )\nend"}},
{"function":{"name":"SetNWAngle","parent":"Entity","type":"classfunc","description":{"text":"Sets a networked angle value on the entity.\n\nThe value can then be accessed with  both from client and server.","page":"Entity:GetNWAngle","note":"Running this function clientside will only set it for the client it is called on."},"realm":"Shared","args":{"arg":[{"text":"The key to associate the value with","name":"key","type":"string"},{"text":"The value to set","name":"value","type":"Angle"}]}},"example":{"description":"This will set the networked angle 'direction' on all clients that is pointing straight up.","code":"for k, v in pairs( player.GetAll() ) do\n    v:SetNWAngle( 'direction', Angle( -90, 0, 0 ) )\nend"}},
{"function":{"name":"SetNotSolid","parent":"Entity","type":"classfunc","description":"Sets whether the entity is solid or not.","realm":"Shared","args":{"arg":{"text":"True will make the entity not solid, false will make it solid.","name":"IsNotSolid","type":"boolean"}}}},
{"function":{"name":"SetNoDraw","parent":"Entity","type":"classfunc","description":"Sets if the entity's model should render at all.\n\nIf set on the server, this entity will no longer network to clients, and for all intents and purposes cease to exist clientside.","realm":"Shared","args":{"arg":{"text":"true disables drawing","name":"shouldNotDraw","type":"boolean"}}}},
{"function":{"name":"SetNextClientThink","parent":"Entity","type":"classfunc","description":{"text":"Sets the next time the clientside  is called.","page":"ENTITY:Think"},"realm":"Client","args":{"arg":{"text":"The next time, relative to , to execute the  clientside.","name":"nextthink","type":"number","page":["Global.CurTime","ENTITY:Think"]}}}},
{"function":{"name":"SetNetworkOrigin","parent":"Entity","type":"classfunc","description":{"text":"Virtually changes entity position for clients. Does the same thing as  when used serverside.","page":"Entity:SetPos"},"realm":"Shared","args":{"arg":{"text":"The position to make clients think this entity is at.","name":"origin","type":"Vector"}}}},
{"function":{"name":"SetNetworkedVector","parent":"Entity","type":"classfunc","description":{"text":"Sets a networked vector value at specified index on the entity.\n\nThe value then can be accessed with  both from client and server.","deprecated":{"text":"You should use  instead.","page":"Entity:SetNWVector"},"page":"Entity:GetNetworkedVector","note":"Running this function clientside will only set it clientside for the client it is called on."},"realm":"Shared","args":{"arg":[{"text":"The key to associate the value with","name":"key","type":"string"},{"text":"The value to set","name":"value","type":"Vector","default":"Vector( 0, 0, 0 )"}]}}},
{"function":{"name":"SetNetworkedVarProxy","parent":"Entity","type":"classfunc","description":{"text":"Sets callback function to be called when given NWVar changes.","deprecated":{"text":"You should be using  instead.","page":"Entity:SetNWVarProxy"},"note":"Currently this function only works for the NW2Var system (accessed by adding a 2 in between Networked and Var for most NetworkedVar functions), which will replace the original one at some point in the future"},"realm":"Shared","file":{"text":"lua/includes/extensions/entity.lua","line":"485-L493"},"args":{"arg":[{"text":"The name of the NWVar to add callback for.","name":"name","type":"string"},{"text":"The function to be called when the NWVar changes.","name":"callback","type":"function"}]}}},
{"function":{"name":"SetNetworkedString","parent":"Entity","type":"classfunc","description":{"text":"Sets a networked string value at specified index on the entity.\n\nThe value then can be accessed with  both from client and server.","deprecated":{"text":"You should use  instead.","page":"Entity:SetNWString"},"page":"Entity:GetNetworkedString","note":"Running this function clientside will only set it clientside for the client it is called on."},"realm":"Shared","args":{"arg":[{"text":"The key to associate the value with","name":"key","type":"string"},{"text":"The value to set","name":"value","type":"string","default":""}]}}},
{"function":{"name":"SetNetworkedNumber","parent":"Entity","type":"classfunc","description":"Sets a networked number at the specified index on the entity.","realm":"Shared","args":{"arg":[{"text":"The index that the value is stored in.","name":"index","type":"any"},{"text":"The value to network.","name":"number","type":"number"}]}},"example":{"description":"This will set the networked number 'score' on all clients to 3.","code":"for k, v in pairs( player.GetAll() ) do\n    v:SetNetworkedInt( 'score', 3 )\nend"}},
{"function":{"name":"SetNetworkedInt","parent":"Entity","type":"classfunc","description":{"text":"Sets a networked integer value at specified index on the entity.\n\nThe value then can be accessed with  both from client and server.","deprecated":{"text":"You should use  instead.","page":"Entity:SetNWInt"},"page":"Entity:GetNetworkedInt","note":"Running this function clientside will only set it clientside for the client it is called on."},"realm":"Shared","args":{"arg":[{"text":"The key to associate the value with","name":"key","type":"string"},{"text":"The value to set","name":"value","type":"number","default":"0"}]}}},
{"function":{"name":"SetNetworkedFloat","parent":"Entity","type":"classfunc","description":{"text":"Sets a networked float value at specified index on the entity.\n\nThe value then can be accessed with  both from client and server.\n\nSeems to be the same as .","deprecated":{"text":"You should use  instead.","page":"Entity:SetNWFloat"},"page":["Entity:GetNetworkedFloat","Entity:GetNetworkedInt"],"note":"Running this function clientside will only set it clientside for the client it is called on."},"realm":"Shared","args":{"arg":[{"text":"The key to associate the value with","name":"key","type":"string"},{"text":"The value to set","name":"value","type":"number","default":"0"}]}}},
{"function":{"name":"SetNetworkedAngle","parent":"Entity","type":"classfunc","description":{"text":"Sets a networked angle value at specified index on the entity.\n\nThe value then can be accessed with  both from client and server.","deprecated":{"text":"You should use  instead.","page":"Entity:SetNWAngle"},"page":"Entity:GetNetworkedAngle","note":"Running this function clientside will only set it clientside for the client it is called on."},"realm":"Shared","args":{"arg":[{"text":"The key to associate the value with","name":"key","type":"string"},{"text":"The value to set","name":"value","type":"Angle","default":"Angle( 0, 0, 0 )"}]}}},
{"function":{"name":"SetNetworkedBool","parent":"Entity","type":"classfunc","description":{"text":"Sets a networked boolean value at specified index on the entity.\n\nThe value then can be accessed with  both from client and server.","deprecated":{"text":"You should use  instead.","page":"Entity:SetNWBool"},"page":"Entity:GetNetworkedBool","note":"Running this function clientside will only set it clientside for the client it is called on."},"realm":"Shared","args":{"arg":[{"text":"The key to associate the value with","name":"key","type":"string"},{"text":"The value to set","name":"value","type":"boolean","default":"false"}]}}},
{"function":{"name":"SetNetworkedEntity","parent":"Entity","type":"classfunc","description":{"text":"Sets a networked entity value at specified index on the entity.\n\nThe value then can be accessed with  both from client and server.","deprecated":{"text":"You should use  instead.","page":"Entity:SetNWEntity"},"page":"Entity:GetNetworkedEntity","note":"Running this function clientside will only set it clientside for the client it is called on."},"realm":"Shared","args":{"arg":[{"text":"The key to associate the value with","name":"key","type":"string"},{"text":"The value to set","name":"value","type":"Entity","default":"NULL"}]}}},
{"function":{"name":"SetMoveParent","parent":"Entity","type":"classfunc","description":{"text":"Sets the Movement Parent of an entity to another entity.\n\nSimilar to , except the object's coordinates are not translated automatically before parenting.","page":"Entity:SetParent"},"realm":"Shared","args":{"arg":{"text":"The entity to change this entity's Movement Parent to.","name":"Parent","type":"Entity"}}},"example":{"description":"Sets the Movement Entity of a new entity to Player 1.","code":"local hat = ents.Create(\"prop_physics\")\n//Position and angles are relative to our future parent.\nhat:SetPos(Vector(0,0,10))\nhat:SetAngles(Angle(0,90,0))\n\nhat:SetMoveParent(Entity(1))\n\nhat:Spawn()"}},
{"function":{"name":"SetNetworkAngles","parent":"Entity","type":"classfunc","description":"Alters the entity's perceived serverside angle on the client.","realm":"Client","args":{"arg":{"text":"Networked angle.","name":"angle","type":"Angle"}}}},
{"function":{"name":"SetName","parent":"Entity","type":"classfunc","description":"Sets the mapping name of the entity.","realm":"Server","args":{"arg":{"text":"The name to set for the entity.","name":"mappingName","type":"string"}}}},
{"function":{"name":"SetMoveType","parent":"Entity","type":"classfunc","description":{"text":"Sets the entity's move type. This should be called before initializing the physics object on the entity, unless it will override SetMoveType such as .\n\nDespite existing on client, it doesn't actually do anything on client.","page":"Entity:PhysicsInitBox"},"realm":"Shared","args":{"arg":{"text":"The new movetype, see","name":"movetype","type":"number","page":"Enums/MOVETYPE"}}}},
{"function":{"name":"SetModelScale","parent":"Entity","type":"classfunc","description":{"text":"Scales the model of the entity, if the entity is a  or an  the hitboxes will be scaled as well.\n\nFor some entities, calling  after this will scale the collision bounds and  as well; be wary as there's no optimization being done internally and highly complex collision models might crash the server.\n\nThis is the same system used in TF2 for the Mann Vs Machine robots.\n\nTo resize the entity along any axis, use  instead.\n\nIf your old scales are wrong, use  as a quick fix.","page":["Player","NPC","Entity:Activate","PhysObj","Entity:EnableMatrix","Entity:SetLegacyTransform"],"bug":[{"text":"The hull does not scale properly with this function.","issue":"2193"},{"text":"This does not scale procedural bones and disables IK.","issue":"3502"}]},"realm":"Shared","args":{"arg":[{"text":"A float to scale the model by. 0 will not draw anything. A number less than 0 will draw the model inverted.","name":"scale","type":"number"},{"text":"Transition time of the scale change, set to 0 to modify the scale right away.","name":"deltaTime","type":"number","default":"0"}]}},"example":{"description":"From the \"Biggify\" option of right clicking an npc","code":"ent:SetModelScale( ent:GetModelScale() * 1.25, 1 )"}},
{"function":{"name":"SetModelScale","parent":"Entity","type":"classfunc","description":{"text":"Scales the model of the entity, if the entity is a  or an  the hitboxes will be scaled as well.\n\nFor some entities, calling  after this will scale the collision bounds and  as well; be wary as there's no optimization being done internally and highly complex collision models might crash the server.\n\nThis is the same system used in TF2 for the Mann Vs Machine robots.\n\nTo resize the entity along any axis, use  instead.\n\nIf your old scales are wrong, use  as a quick fix.","page":["Player","NPC","Entity:Activate","PhysObj","Entity:EnableMatrix","Entity:SetLegacyTransform"],"bug":[{"text":"The hull does not scale properly with this function.","issue":"2193"},{"text":"This does not scale procedural bones and disables IK.","issue":"3502"}]},"realm":"Shared","args":{"arg":[{"text":"A float to scale the model by. 0 will not draw anything. A number less than 0 will draw the model inverted.","name":"scale","type":"number"},{"text":"Transition time of the scale change, set to 0 to modify the scale right away.","name":"deltaTime","type":"number","default":"0"}]}},"example":{"description":"From the \"Biggify\" option of right clicking an npc","code":"ent:SetModelScale( ent:GetModelScale() * 1.25, 1 )"}},
{"function":{"name":"SetModel","parent":"Entity","type":"classfunc","description":{"text":"Sets the model of the entity.\n\nThis does not update the physics of the entity - see .","page":"Entity:PhysicsInit","warning":"This silently fails when given an empty string."},"realm":"Shared","args":{"arg":{"text":"New model value.","name":"modelName","type":"string"}}}},
{"function":{"name":"SetMoveCollide","parent":"Entity","type":"classfunc","description":"Sets the move collide type of the entity. The move collide is the way a physics object reacts to hitting an object - will it bounce, slide?","realm":"Shared","args":{"arg":{"text":"The move collide type, see","name":"moveCollideType","type":"number","page":"Enums/MOVECOLLIDE"}}}},
{"function":{"name":"SetLOD","parent":"Entity","type":"classfunc","description":"Sets the Level Of Detail model to use with this entity. This may not work for all models if the model doesn't include any LOD sub models.\n\nThis function works exactly like the clientside r_lod convar and takes priority over it.","realm":"Client","args":{"arg":{"text":"The Level Of Detail model ID to use. -1 leaves the engine to automatically set the Level of Detail.\n\nThe Level Of Detail may range from 0 to 8, with 0 being the highest quality and 8 the lowest.","name":"lod","type":"number","default":"-1"}}}},
{"function":{"name":"SetMaxHealth","parent":"Entity","type":"classfunc","description":{"text":"Sets the maximum health for entity. Note, that you can still set entity's health above this amount with .","page":"Entity:SetHealth"},"realm":"Server","args":{"arg":{"text":"What the max health should be","name":"maxhealth","type":"number"}}}},
{"function":{"name":"SetMaterial","parent":"Entity","type":"classfunc","description":{"text":"Sets the rendering material override of the entity.\n\nTo set a Lua material created with , just prepend a \"!\" to the material name.\n\nIf you wish to override a single material on the model, use  instead.","page":["Global.CreateMaterial","Entity:SetSubMaterial"],"note":"To apply materials to models, that material **must** have **VertexLitGeneric** shader. For that reason you cannot apply map textures onto models, map textures use a different material shader - **LightmappedGeneric**, which can be used on brush entities.","bug":{"text":"The server's value takes priority on the client.","issue":"3362"}},"realm":"Shared","args":{"arg":{"text":"New material name. Use an empty string (\"\") to reset to the default materials.","name":"materialName","type":"string"}}}},
{"function":{"name":"SetLocalVelocity","parent":"Entity","type":"classfunc","description":{"text":"Sets the entity's local velocity which is their velocity due to movement in the world from forces such as gravity. Does not include velocity from entity-on-entity collision or other world movement.","warning":{"text":"Same as , but clamps the given velocity, and is not recommended to be used because of that.","page":"Entity:SetAbsVelocity"}},"realm":"Shared","args":{"arg":{"text":"The new velocity to set.","name":"velocity","type":"Vector"}}}},
{"function":{"name":"SetLocalAngularVelocity","parent":"Entity","type":"classfunc","description":"Sets the entity's angular velocity (rotation speed).","realm":"Shared","args":{"arg":{"text":"The angular velocity to set.","name":"angVel","type":"Angle"}}}},
{"function":{"name":"SetLocalAngularVelocity","parent":"Entity","type":"classfunc","description":"Sets the entity's angular velocity (rotation speed).","realm":"Shared","args":{"arg":{"text":"The angular velocity to set.","name":"angVel","type":"Angle"}}}},
{"function":{"name":"SetLocalAngles","parent":"Entity","type":"classfunc","description":{"text":"Sets angles relative to angles of","page":"Entity:GetParent"},"realm":"Shared","args":{"arg":{"text":"The local angle","name":"ang","type":"Angle"}}}},
{"function":{"name":"SetLightingOriginEntity","parent":"Entity","type":"classfunc","description":"Sets the entity to be used as the light origin position for this entity.","realm":"Server","args":{"arg":{"text":"The lighting entity.","name":"lightOrigin","type":"Entity"}}}},
{"function":{"name":"SetLegacyTransform","parent":"Entity","type":"classfunc","description":{"text":"This forces an entity to use the bone transformation behaviour from versions prior to **8 July 2014**.\n\nThis behaviour affects  and  and is incorrect, therefore this function be used exclusively as a quick fix for old scripts that rely on it.","page":["Entity:EnableMatrix","Entity:SetModelScale"]},"realm":"Client","args":{"arg":{"text":"Whether the entity should use the old bone transformation behaviour or not.","name":"enabled","type":"boolean"}}}},
{"function":{"name":"SetLayerWeight","parent":"Entity","type":"classfunc","description":{"text":"Sets the layer weight. This influences how strongly the animation should be overriding the normal animations of the entity.","note":[{"text":"This function only works on  entites!","page":"BaseAnimatingOverlay"},"Next update: is shared"]},"realm":"Server","args":{"arg":[{"text":"The Layer ID","name":"layerID","type":"number"},{"text":"The new layer weight.","name":"weight","type":"number"}]}}},
{"function":{"name":"SetLayerPriority","parent":"Entity","type":"classfunc","description":{"text":"Sets the priority of given layer.","note":{"text":"This function only works on  entites!","page":"BaseAnimatingOverlay"}},"realm":"Server","args":{"arg":[{"text":"The Layer ID","name":"layerID","type":"number"},{"text":"The new priority of the layer.","name":"priority","type":"number"}]}}},
{"function":{"name":"SetLayerPlaybackRate","parent":"Entity","type":"classfunc","description":{"text":"Sets the layer playback rate. See also .","page":"Entity:SetLayerDuration","note":[{"text":"This function only works on  entites!","page":"BaseAnimatingOverlay"},"Next update: is shared"]},"realm":"Server","args":{"arg":[{"text":"The Layer ID","name":"layerID","type":"number"},{"text":"The new playback rate.","name":"rate","type":"number"}]}}},
{"function":{"name":"SetLayerCycle","parent":"Entity","type":"classfunc","description":{"text":"Sets the animation cycle/frame of given layer.","note":{"text":"This function only works on  entites!","page":"BaseAnimatingOverlay"}},"realm":"Server","args":{"arg":[{"text":"The Layer ID","name":"layerID","type":"number"},{"text":"The new animation cycle/frame for given layer.","name":"cycle","type":"number"}]}}},
{"function":{"name":"SetLayerDuration","parent":"Entity","type":"classfunc","description":{"text":"Sets the duration of given layer. This internally overrides the .","page":"Entity:SetLayerPlaybackRate","note":{"text":"This function only works on  entites!","page":"BaseAnimatingOverlay"}},"realm":"Server","args":{"arg":[{"text":"The Layer ID","name":"layerID","type":"number"},{"text":"The new duration of the layer in seconds.","name":"duration","type":"number"}]}}},
{"function":{"name":"SetLayerLooping","parent":"Entity","type":"classfunc","description":{"text":"Sets whether the layer should loop or not.","note":{"text":"This function only works on  entites!","page":"BaseAnimatingOverlay"}},"realm":"Server","args":{"arg":[{"text":"The Layer ID","name":"layerID","type":"number"},{"text":"Whether the layer should loop or not.","name":"loop","type":"boolean"}]}}},
{"function":{"name":"SetLayerBlendOut","parent":"Entity","type":"classfunc","description":{"note":{"text":"This function only works on  entites!","page":"BaseAnimatingOverlay"}},"realm":"Server","args":{"arg":[{"text":"The Layer ID","name":"layerID","type":"number"},{"name":"blendOut","type":"number"}]}}},
{"function":{"name":"SetLayerBlendIn","parent":"Entity","type":"classfunc","description":{"note":{"text":"This function only works on  entites!","page":"BaseAnimatingOverlay"}},"realm":"Server","args":{"arg":[{"text":"The Layer ID","name":"layerID","type":"number"},{"name":"blendIn","type":"number"}]}}},
{"function":{"name":"SetLagCompensated","parent":"Entity","type":"classfunc","description":{"text":"This allows the entity to be lag compensated during .\n\n\n\nAs a side note for parented entities, if your entity can be shot at, keep in mind that its collision bounds need to be bigger than the bone's hitbox the entity is parented to, or hull/line traces ( such as the crowbar attack or bullets ) might not hit at all.","page":"Player:LagCompensation","note":"Players are lag compensated by default and there's no need to call this function for them.\n\nIt's best to not enable lag compensation on parented entities, as the system does not handle it that well ( they will be moved back but then the entity will lag behind ).\nParented entities move back with the parent if it's lag compensated, so if you are making some kind of armor piece you shouldn't do anything."},"realm":"Server","args":{"arg":{"text":"Whether the entity should be lag compensated or not.","name":"enable","type":"boolean"}}}},
{"function":{"name":"SetKeyValue","parent":"Entity","type":"classfunc","description":"Sets Hammer key values on an entity.\n\nYou can look up which entities have what key values on the [Valve Developer Community](https://developer.valvesoftware.com/wiki/) on entity pages.\n\n\nA  list of basic entities can be found [here](https://developer.valvesoftware.com/wiki/List_of_entities).\n\nAlternatively you can look at the .fgd files shipped with Garry's Mod in the bin/ folder with a text editor to see the key values as they appear in Hammer.","realm":"Shared","args":{"arg":[{"text":"The internal key name","name":"key","type":"string"},{"text":"The value to set","name":"value","type":"string"}]}},"example":{"description":{"text":"Makes an NPC not drop his weapon and drop a healthkit on death, using  on a Combine Soldier.\n\nA list of spawnflags a Combine Soldier has can be found [here](https://developer.valvesoftware.com/wiki/Npc_combine_s#Flags).","page":",SF EnumerationsEnums/SF"},"code":"npc:SetKeyValue( \"spawnflags\", bit.bor( SF_NPC_NO_WEAPON_DROP, SF_NPC_DROP_HEALTHKIT ) )"}},
{"function":{"name":"SetIK","parent":"Entity","type":"classfunc","description":"Enables or disable the inverse kinematic usage of this entity.","realm":"Client","args":{"arg":{"text":"The state of the IK.","name":"useIK","type":"boolean","default":"false"}}}},
{"function":{"name":"SetHealth","parent":"Entity","type":"classfunc","description":{"text":"Sets the health of the entity.","note":{"text":"You may want to take  into account when calculating what to set health to, in case a gamemode has a different max health than 100.","page":"Entity:GetMaxHealth"}},"realm":"Shared","args":{"arg":{"text":"New health value.","name":"newHealth","type":"number"}}},"example":[{"description":"Sets the entity's health to their maximum health.","code":"Entity( 1 ):SetHealth( Entity( 1 ):GetMaxHealth() )","output":"The entity's health is now full."},{"description":"Deducts 50 points of health from the entity.","code":"Entity( 1 ):SetHealth( Entity( 1 ):Health() - 50 )","output":"The entity now has 50 less health."}]},
{"function":{"name":"SetGroundEntity","parent":"Entity","type":"classfunc","description":"Sets the ground the entity is standing on.","realm":"Shared","args":{"arg":{"text":"The ground entity.","name":"ground","type":"Entity"}}},"example":{"description":"Gives all players the ability to (sort of) walk on water.","code":"-- shared.lua tick\nfunction GM:Tick()\n\t\n\tlocal trace = {}\n\tlocal world = Entity( 0 )\n\t\n\tfor p, ply in pairs( player.GetAll() ) do\n\t\n\t\ttrace = util.TraceLine( {\n\t\t\tstart = ply:GetPos() + Vector( 0, 0, 72),\n\t\t\tendpos = ply:GetPos() + Vector( 0, 0, -3 ),\n\t\t\tmask = MASK_WATER,\n\t\t\tfilter = function( ent ) return true end\n\t\t} )\n\t\t\n\t\tif( trace.Hit ) then\n\t\t\tply:SetGravity( 0.0001 )\n\t\t\tply:SetGroundEntity( world )\n\t\telse\n\t\t\tply:SetGravity( 1.0 )\n\t\tend\n\t\t\n\tend\n\t\nend"}},
{"function":{"name":"SetHitboxSet","parent":"Entity","type":"classfunc","description":"Sets the current Hitbox set for the entity.","realm":"Shared","args":{"arg":{"text":"The new hitbox set to set. Can be a name as a , or the ID as a .\n\nIf the operation failed, the function will silently fail.","name":"id","type":"number","page":["string","number"]}}}},
{"function":{"name":"SetGravity","parent":"Entity","type":"classfunc","description":{"text":"Sets the gravity multiplier of the entity.","bug":{"text":"This function is not predicted.","issue":"3648"}},"realm":"Shared","args":{"arg":{"text":"Value which specifies the gravity multiplier.","name":"gravityMultiplier","type":"number"}}}},
{"function":{"name":"SetFriction","parent":"Entity","type":"classfunc","description":{"text":"Sets how much friction an entity has when sliding against a surface. Entities default to 1 (100%) and can be higher or even negative.","note":"Works only for MOVETYPE_STEP entities.","bug":{"text":"This has no effect on players.","issue":"1395"}},"realm":"Server","args":{"arg":{"text":"Friction multiplier","name":"friction","type":"number"}}}},
{"function":{"name":"SetFlexWeight","parent":"Entity","type":"classfunc","description":"Sets the flex weight.","realm":"Shared","args":{"arg":[{"text":"The ID of the flex to modify weight of","name":"flex","type":"number"},{"text":"The new weight to set","name":"weight","type":"number"}]}}},
{"function":{"name":"SetFlexScale","parent":"Entity","type":"classfunc","description":{"text":"Sets the flex scale of the entity.","bug":{"text":"This does not work on s or s.","issue":"1779","page":["Global.ClientsideModel","Global.ClientsideRagdoll"]}},"realm":"Shared","args":{"arg":{"text":"The new flex scale to set to","name":"scale","type":"number"}}}},
{"function":{"name":"SetEyeTarget","parent":"Entity","type":"classfunc","description":"Sets the position an entity's eyes look toward.","realm":"Shared","args":{"arg":{"text":"The world position the entity is looking toward.","name":"pos","type":"Vector"}}},"example":[{"description":"Makes an NPC (self) look into a nearby player's eyes.","code":"for p, ply in pairs(player.GetAll()) do\n    if(ply:EyePos():Distance(self:EyePos()) <= 60) then\n        self:SetEyeTarget(ply:EyePos())\n        break\n    end\nend"},{"description":"Makes an entity look at a vector the way the eyeposer does it","code":"local lookat = Vector( 0, 0, 0 )\n\nlocal attachment = ent:GetAttachment( ent:LookupAttachment( \"eyes\" ) )\nlocal LocalPos, LocalAng = WorldToLocal( lookat, Angle( 0, 0, 0 ), attachment.Pos, attachment.Ang )\nent:SetEyeTarget( LocalPos )"}]},
{"function":{"name":"SetEntity","parent":"Entity","type":"classfunc","description":"Allows you to set the Start or End entity attachment for the rope.","realm":"Shared","args":{"arg":[{"text":"The name of the variable to modify.\nAccepted names are StartEntity and EndEntity.","name":"name","type":"string"},{"text":"The entity to apply to the specific attachment.","name":"entity","type":"Entity"}]}},"example":{"description":"As seen in the constraints module.","code":"local rope = ents.Create( \"keyframe_rope\" )\n\n-- Attachment point 1\nrope:SetEntity( \"StartEntity\", \tEntity(1) )\n-- Attachment point 2\nrope:SetEntity( \"EndEntity\", \tEntity(2) )"}},
{"function":{"name":"SetElasticity","parent":"Entity","type":"classfunc","description":"Sets the elasticity of this entity, used by some flying entities such as the Helicopter NPC to determine how much it should bounce around when colliding.","realm":"Shared","args":{"arg":{"text":"The elasticity to set.","name":"elasticity","type":"number"}}}},
{"function":{"name":"SetDTVector","parent":"Entity","type":"classfunc","description":{"text":"This is called internally by the  system, you can use this in cases where using NetworkVar is not possible.\n\nSets the specified vector on the entity's datatable.","internal":"","page":"Entity:NetworkVar"},"realm":"Shared","args":{"arg":[{"text":"Goes from 0 to 31.","name":"key","type":"number"},{"text":"The vector to write on the entity's datatable.","name":"vec","type":"Vector"}]}}},
{"function":{"name":"SetDTString","parent":"Entity","type":"classfunc","description":{"text":"This is called internally by the  system, you can use this in cases where using NetworkVar is not possible.\n\nSets the specified string on the entity's datatable.","internal":"","page":"Entity:NetworkVar","note":"The length of these strings are capped at 512 characters."},"realm":"Shared","args":{"arg":[{"text":"Goes from 0 to 3.","name":"key","type":"number"},{"text":"The string to write on the entity's datatable, can't be more than 512 characters per string.","name":"str","type":"string"}]}}},
{"function":{"name":"SetDTInt","parent":"Entity","type":"classfunc","description":{"text":"This is called internally by the  system, you can use this in cases where using NetworkVar is not possible.\n\nSets the specified integer on the entity's datatable.","internal":"","page":"Entity:NetworkVar"},"realm":"Shared","args":{"arg":[{"text":"Goes from 0 to 31.","name":"key","type":"number"},{"text":"The integer to write on the entity's datatable. This will be cast to a 32-bit signed integer internally.","name":"integer","type":"number"}]}}},
{"function":{"name":"SetDTFloat","parent":"Entity","type":"classfunc","description":{"text":"This is called internally by the  system, you can use this in cases where using NetworkVar is not possible.\n\nSets the specified float on the entity's datatable.","internal":"","page":"Entity:NetworkVar"},"realm":"Shared","args":{"arg":[{"text":"Goes from 0 to 31.","name":"key","type":"number"},{"text":"The float to write on the entity's datatable.","name":"float","type":"number"}]}}},
{"function":{"name":"SetDTEntity","parent":"Entity","type":"classfunc","description":{"text":"This is called internally by the  system, you can use this in cases where using NetworkVar is not possible.\n\nSets the specified entity on this entity's datatable.","internal":"","page":"Entity:NetworkVar"},"realm":"Shared","args":{"arg":[{"text":"Goes from 0 to 31.","name":"key","type":"number"},{"text":"The entity to write on this entity's datatable.","name":"ent","type":"Entity"}]}}},
{"function":{"name":"SetDTBool","parent":"Entity","type":"classfunc","description":{"text":"This is called internally by the  system, you can use this in cases where using NetworkVar is not possible.\n\nSets the specified bool on the entity's datatable.","internal":"","page":"Entity:NetworkVar"},"realm":"Shared","args":{"arg":[{"text":"Goes from 0 to 31.","name":"key","type":"number"},{"text":"The boolean to write on the entity's metatable.","name":"bool","type":"boolean"}]}}},
{"function":{"name":"SetDTAngle","parent":"Entity","type":"classfunc","description":{"text":"This is called internally by the  system, you can use this in cases where using NetworkVar is not possible.\n\nSets the specified angle on the entity's datatable.","internal":"","page":"Entity:NetworkVar"},"realm":"Shared","args":{"arg":[{"text":"Goes from 0 to 31.","name":"key","type":"number"},{"text":"The angle to write on the entity's datatable.","name":"ang","type":"Angle"}]}}},
{"function":{"name":"SetCycle","parent":"Entity","type":"classfunc","description":{"text":"Sets the progress of the current animation to a specific value between 0 and 1.","bug":{"text":"This does not work with viewmodels.","issue":"3038"}},"realm":"Shared","args":{"arg":{"text":"The desired cycle value","name":"value","type":"number"}}},"example":{"description":"Set the entity to be half way through its current sequence","code":"ent:SetCycle( .5 )"}},
{"function":{"name":"SetCustomCollisionCheck","parent":"Entity","type":"classfunc","description":{"text":"Marks the entity to call .","page":"GM:ShouldCollide"},"realm":"Shared","args":{"arg":{"text":"Enable or disable the custom collision check","name":"enable","type":"boolean"}}}},
{"function":{"name":"SetCreator","parent":"Entity","type":"classfunc","description":"Sets the creator of the SENT.","realm":"Server","file":{"text":"lua/includes/extensions/entity.lua","line":"53-L55"},"args":{"arg":{"text":"The creator","name":"ply","type":"Player"}}}},
{"function":{"name":"SetColor","parent":"Entity","type":"classfunc","description":"Sets the color of an entity.","realm":"Shared","args":{"arg":{"text":"The color to set. Uses the .","name":"color","type":"table","default":"Color(255, 0, 255, 255)","page":"Color"}}},"example":[{"description":"Loop through all players, make them black","code":"local colBlack = Color( 0, 0, 0, 255 ) -- Creates a black color\nfor key, ply in pairs(player.GetAll()) do -- Loop through all players on the server\n\tply:SetColor(colBlack) -- Sets the players color to colBlack\nend"},{"description":"Creates a wooden crate at 0,0,0 and turns it a transparent green","code":"local ent = ents.Create(\"prop_physics\")\nent:SetPos(Vector(0,0,0))\nent:SetModel(\"models/props_junk/wood_crate001a.mdl\")\nent:Spawn()\n\nent:SetColor( Color( 0, 255, 0, 230 ) ) \nent:SetRenderMode( RENDERMODE_TRANSALPHA ) -- You need to set the render mode on some entities in order for the color to change"}]},
{"function":{"name":"SetCollisionBoundsWS","parent":"Entity","type":"classfunc","description":{"text":"Sets the collision bounds for the entity, which are used for triggers ( ,  ), determining if rendering is necessary clientside, and collision ( If  set as  ).\n\nInput bounds are in world coordinates!\nSee also .","page":["Entity:SetTrigger","ENTITY:Touch","Entity:SetSolid",",SOLID_BBOXEnums/SOLID","Entity:SetCollisionBounds"]},"realm":"Shared","args":{"arg":[{"text":"The first vector of the bounds.","name":"vec1","type":"Vector"},{"text":"The second vector of the bounds.","name":"vec2","type":"Vector"}]}}},
{"function":{"name":"SetCollisionGroup","parent":"Entity","type":"classfunc","description":"Sets the entity's collision group.","realm":"Shared","args":{"arg":{"text":"Collision group of the entity, see","name":"group","type":"number","page":"Enums/COLLISION_GROUP"}}},"example":{"description":"Showcase function that produces reliable player-player nocollision for targets.\nFirst argument is any player entity, second is an optional number for min time.\nAfter min time elapsed, no-collision will turn off once we are not penetrating any players.\n\nContains no fail-saves or checks.","code":"function ActivateNoCollision(target, min)\n\n\tlocal oldCollision = target:GetCollisionGroup() or COLLISION_GROUP_PLAYER\n\ttarget:SetCollisionGroup(COLLISION_GROUP_PASSABLE_DOOR) -- Players can walk through target\n\n\tif (min and (tonumber(min) > 0)) then \n\n\t\ttimer.Simple(min, function() --after 'min' seconds\n\t\t\ttimer.Create(target:SteamID64()..\"_checkBounds_cycle\", 0.5, 0, function() -- check every half second\n\t\t\t\tlocal penetrating = ( self:GetPhysicsObject() and self:GetPhysicsObject():IsPenetrating() ) or false --if we are penetrating an object\n\t\t\t\tlocal tooNearPlayer = false --or inside a player's hitbox\n\t\t\t\tfor _, ply in pairs(player.GetAll()) do\n\t\t\t\t\tif target:GetPos():DistToSqr(ply:GetPos()) <= (80*80) then\n\t\t\t\t\t\ttooNearPlayer = true\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\tif not (penetrating and tooNearPlayer) then --if both false then \n\t\t\t\t\ttarget:SetCollisionGroup(oldCollision) -- Stop no-colliding by returning the original collision group (or default player collision)\n\t\t\t\t\ttimer.Destroy(target:SteamID64()..\"_checkBounds_cycle\")\n\t\t\t\tend\n\t\t\tend)\n\t\tend)\n\tend\nend\nActivateNoCollision(Entity( 1 ), 10)","output":"You can walk through the player for 10 seconds"}},
{"function":{"name":"SetCollisionBounds","parent":"Entity","type":"classfunc","description":{"text":"Sets the collision bounds for the entity, which are used for triggers ( ,  ), determining if rendering is necessary clientside, and collision ( If  set as  ).\n\nInput bounds are relative to ! \nSee also .","page":["Entity:SetTrigger","ENTITY:Touch","Entity:SetSolid",",SOLID_BBOXEnums/SOLID","Entity:GetPos","Entity:SetCollisionBoundsWS"]},"realm":"Shared","args":{"arg":[{"text":"The minimum vector of the bounds. The vector must be smaller than second argument on all axises.","name":"mins","type":"Vector"},{"text":"The maximum vector of the bounds. The vector must be bigger than first argument on all axises.","name":"maxs","type":"Vector"}]}}},
{"function":{"name":"SetBonePosition","parent":"Entity","type":"classfunc","description":"Sets the bone position and angles.","realm":"Client","args":{"arg":[{"text":"The bone ID to manipulate","name":"bone","type":"number"},{"text":"The position to set","name":"pos","type":"Vector"},{"text":"The angles to set","name":"ang","type":"Angle"}]}}},
{"function":{"name":"SetBoneController","parent":"Entity","type":"classfunc","description":{"text":"Sets the specified value on the bone controller with the given ID of this entity, it's used in HL1 to change the head rotation of NPCs, turret aiming and so on.","note":"This is the precursor of pose parameters, and only works for Half Life 1: Source models supporting it."},"realm":"Shared","args":{"arg":[{"text":"The ID of the bone controller to set the value to.\nGoes from 0 to 3.","name":"boneControllerID","type":"number"},{"text":"The value to set on the specified bone controller.","name":"value","type":"number"}]}}},
{"function":{"name":"SetBoneMatrix","parent":"Entity","type":"classfunc","description":{"text":"Sets the bone matrix of given bone to given matrix. See also .\n\nDespite existing serverside, it does nothing.","page":"Entity:GetBoneMatrix"},"realm":"Shared","args":{"arg":[{"text":"The ID of the bone","name":"boneid","type":"number"},{"text":"The matrix to set.","name":"matrix","type":"VMatrix"}]}},"example":{"description":"Example usage of the function.\n\nAim at an NPC and enter \"bones_cl\" into your console.","code":"if ( CLIENT ) then\n\tconcommand.Add( \"bones_cl\", function( ply )\n\t\tlocal ent = ply:GetEyeTrace().Entity\n\t\tif ( !IsValid( ent ) ) then return end\n\n\t\tent:AddCallback( \"BuildBonePositions\", function( ent, numbones )\n\t\t\tfor i = 0, numbones - 1 do\n\t\t\t\tlocal mat = ent:GetBoneMatrix( i )\n\t\t\t\tif ( !mat ) then continue end\n\n\t\t\t\tlocal scale = mat:GetScale()\n\t\t\t\tmat:Scale( Vector( 1, 1, 1 ) * 0.5 )\n\t\t\t\tent:SetBoneMatrix( i, mat )\n\t\t\tend\n\t\tend )\n\tend )\nend"}},
{"function":{"name":"SetBodyGroups","parent":"Entity","type":"classfunc","description":{"text":"Sets the bodygroups from a string. A convenience function for .","page":"Entity:SetBodygroup"},"realm":"Shared","args":{"arg":{"text":"Body groups to set. Each single-digit number in the string represents a separate bodygroup. **This make it impossible to set any bodygroup to a value higher than 9!** For that you need to use .","name":"bodygroups","type":"string","page":"Entity:SetBodygroup"}}},"example":{"description":"Example of the format","code":"Entity(1):SetBodyGroups( \"021\" )","output":"Sets first bodygroup value to 0, second to 2 and third to 1."}},
{"function":{"name":"SetBodygroup","parent":"Entity","type":"classfunc","description":"Sets an entities' bodygroup.","realm":"Shared","args":{"arg":[{"text":"The id of the bodygroup you're setting. Starts from 0.","name":"bodygroup","type":"number"},{"text":"The value you're setting the bodygroup to. Starts from 0.","name":"value","type":"number"}]}}},
{"function":{"name":"SetBloodColor","parent":"Entity","type":"classfunc","description":"Sets the blood color this entity uses.","realm":"Server","args":{"arg":{"text":"An integer corresponding to .","name":"bloodColor","type":"number","page":"Enums/BLOOD_COLOR"}}}},
{"function":{"name":"SetAttachment","parent":"Entity","type":"classfunc","description":{"text":"Parents the sprite to an attachment on another model.\n\nWorks only on env_sprite.\n\nDespite existing on client, it doesn't actually do anything on client.","deprecated":{"text":"You should be using  instead.","page":"Entity:SetParent"}},"realm":"Shared","args":{"arg":[{"text":"The entity to attach/parent to","name":"ent","type":"Entity"},{"text":"The attachment ID to parent to","name":"attachment","type":"number"}]}}},
{"function":{"name":"SetAnimation","parent":"Entity","type":"classfunc","description":{"text":"Sets a player's third-person animation. Mainly used by s to start the player's weapon attack and reload animations.","page":"Weapon"},"realm":"Shared","args":{"arg":{"text":"Player animation, see .","name":"playerAnim","type":"number","page":"Enums/PLAYER"}}}},
{"function":{"name":"SetAnimTime","parent":"Entity","type":"classfunc","description":{"text":"Sets the time (relative to ) of the current animation frame, which is used to determine .","page":["Global.CurTime","Entity:GetCycle"]},"realm":"Client","args":{"arg":{"text":"The current animation time.","name":"time","type":"number"}}},"example":{"description":"Sets each player's animation time to 1 second in the future, which causes their animations to freeze in place.","code":"function GM:PrePlayerDraw(ply)\n\n\tply:SetAnimTime(CurTime()+1)\n\nend","output":{"image":{"src":"Entity_SetAnimTime_example1.gif"}}}},
{"function":{"name":"SetAngles","parent":"Entity","type":"classfunc","description":{"text":"Sets the angles of the entity.","note":{"text":"To set a player's angles, use  instead.","page":"Player:SetEyeAngles"}},"realm":"Shared","args":{"arg":{"text":"The new angles.","name":"angles","type":"Angle"}}}},
{"function":{"name":"SetAbsVelocity","parent":"Entity","type":"classfunc","description":{"text":"Sets the entity's velocity.","note":"Actually binds to CBaseEntity::SetLocalVelocity() which sets the entity's velocity due to movement in the world from forces such as gravity. Does not include velocity from entity-on-entity collision or other world movement."},"realm":"Shared","args":{"arg":{"text":"The new velocity to set.","name":"velocity","type":"Vector"}}},"example":{"description":"Makes Entity(1) fly upwards.","code":"Entity( 1 ):SetAbsVelocity( Vector( 0, 0, 500 ) )"}},
{"function":{"name":"SendViewModelMatchingSequence","parent":"Entity","type":"classfunc","description":{"text":"Sends sequence animation to the view model. It is recommended to use this for view model animations, instead of .\n\nThis function is only usable on view models.","page":"Entity:ResetSequence","bug":{"text":"Sequences 0-6 will not be looped regardless if they're marked as a looped animation or not.","issue":"3229"}},"realm":"Shared","args":{"arg":{"text":"The sequence ID returned by  or  .","name":"seq","type":"number","page":["Entity:LookupSequence","Entity:SelectWeightedSequence"]}}},"example":{"description":"Converting an ACT_VM_* enumeration to a sequence usable by the function.","code":"local VModel = self.Owner:GetViewModel( )\nlocal EnumToSeq = VModel:SelectWeightedSequence( ACT_VM_PRIMARYATTACK )\n\nVModel:SendViewModelMatchingSequence( EnumToSeq )","output":"Sends the primary attack enumeration sequence to the view model and plays it."}},
{"function":{"name":"SequenceDuration","parent":"Entity","type":"classfunc","description":{"text":"Returns length of currently played sequence.","bug":{"text":"This will return incorrect results for weapons and viewmodels clientside in thirdperson.","issue":"2783"}},"realm":"Shared","args":{"arg":{"text":"A sequence ID to return the length specific sequence of instead of the entity's main/currently playing sequence.","name":"seqid","type":"number","default":"nil"}},"rets":{"ret":{"text":"The length of the sequence","name":"","type":"number"}}},"example":{"description":"Example usage for the argument. Retrieve length of animation on specific gesture slot.","code":"local ply = Entity( 1 )\nlocal seq = ply:SelectWeightedSequence( ACT_GMOD_TAUNT_CHEER )\nlocal len = ply:SequenceDuration( seq )\nprint( ply, seq, len )","output":"Player [1][Rubat]\t303\t2.7499999180436"}},
{"function":{"name":"SelectWeightedSequenceSeeded","parent":"Entity","type":"classfunc","description":{"text":"Returns the sequence ID corresponding to given activity ID, and uses the provided seed for random selection. The seed should be the same server-side and client-side if used in a predicted environment.\n\nSee  for a provided-seed version of this function.","page":"Entity:SelectWeightedSequence"},"realm":"Shared","args":{"arg":[{"text":"The activity ID, see .","name":"act","type":"number","page":"Enums/ACT"},{"text":"The seed to use for randomly selecting a sequence in the case the activity ID has multiple sequences bound to it.  uses the same seed as  internally for this.","name":"seed","type":"number","page":["Entity:SelectWeightedSequence","util.SharedRandom"]}]},"rets":{"ret":{"text":"The sequence ID","name":"","type":"number"}}}},
{"function":{"name":"SelectWeightedSequence","parent":"Entity","type":"classfunc","description":{"text":"Returns sequence ID corresponding to given activity ID.\n\nOpposite of .\n\nSimilar to .\n\nSee also .","page":["Entity:GetSequenceActivity","Entity:LookupSequence","Entity:SelectWeightedSequenceSeeded"]},"realm":"Shared","args":{"arg":{"text":"The activity ID, see .","name":"act","type":"number","page":"Enums/ACT"}},"rets":{"ret":{"text":"The sequence ID","name":"","type":"number"}}},"example":{"description":"Use this hook to check if the model has a certain ACT_* enumeration, and if it does, play it.","code":"local VModel = self.Owner:GetViewModel()\n\nif ( self:Clip1() == 0 and VModel:SelectWeightedSequence( ACT_VM_RELOAD_EMPTY ) ) then\n\n\tlocal SEQ = self:LookupSequence( ACT_VM_RELOAD_EMPTY )\n\n\tif ( SEQ == -1 ) then\n\n\t\tprint( \"reload\" )\n\n\t\tlocal EnumToSeq = VModel:SelectWeightedSequence( ACT_VM_RELOAD )\n\n\t\t--\tPlay the normal reload animation\n\t\tVModel:SendViewModelMatchingSequence( EnumToSeq )\n\n\telse\n\n\t\tprint( \"reload empty\" )\n\n\t\tlocal EnumToSeq = VModel:SelectWeightedSequence( ACT_VM_RELOAD_EMPTY )\n\n\t\t-- Play the empty reload animation\n\t\tVModel:SendViewModelMatchingSequence( EnumToSeq )\n\t\t\n\tend\n\nend","output":"Will play the ACT_VM_RELOAD_EMPTY enumeration if the model has it. If not, it will play the normal reload enum."}},
{"function":{"name":"RestartGesture","parent":"Entity","type":"classfunc","description":{"text":"Restarts the entity's animation gesture. If the given gesture is already playing, it will reset it and play it from the beginning.","note":{"text":"This function only works on  entites.","page":"BaseAnimatingOverlay"}},"realm":"Server","args":{"arg":[{"text":"The activity number to send to the entity. See  and","name":"activity","type":"number","page":["Enums/ACT","Entity:GetSequenceActivity"]},{"text":"Add/start the gesture to if it has not been yet started.","name":"addIfMissing","type":"boolean","default":"true"},{"name":"autokill","type":"boolean","default":"true"}]}}},
{"function":{"name":"Respawn","parent":"Entity","type":"classfunc","description":"Makes the entity/weapon respawn.\n\nOnly usable on HL2 pickups and any weapons. Seems to be buggy with weapons.\nVery unreliable.","realm":"Server"}},
{"function":{"name":"ResetSequenceInfo","parent":"Entity","type":"classfunc","description":"Reset entity sequence info such as playback rate, ground speed, last event check, etc.","realm":"Shared"}},
{"function":{"name":"ResetSequence","parent":"Entity","type":"classfunc","description":{"text":"Plays an animation on the entity. This may not always work on engine entities.","warning":{"text":"This will not reset the animation on viewmodels, use  instead.","page":"Entity:SendViewModelMatchingSequence"},"note":{"text":"This will not work properly if called directly after calling . Consider waiting until the next Tick.\n\nWill not work on players due to the animations being reset every frame by the base gamemode animation system. See .\n\nFor custom scripted entities you will want to apply example from  to make animations work.","page":["Entity:SetModel","GM:CalcMainActivity","ENTITY:Think"]}},"realm":"Shared","args":{"arg":{"text":"The sequence to play. Also accepts strings.","name":"sequence","type":"number","note":{"text":"If set to a string, the function will automatically call  to retrieve the sequence ID as a number.","page":"Entity:LookupSequence"}}}},"example":{"description":"Minimal code needed to make sequences work as expected on custom \"anim\" type entities.\n\nIn this example, when the player uses the crate, it will open, and when they use it again, it will close.","code":"ENT.Base = \"base_anim\"\nENT.Spawnable = true\nENT.AutomaticFrameAdvance = true\n\nENT.PrintName = \"Animation Test\"\nENT.Category = \"My Entity Category\"\n\nfunction ENT:Initialize()\n\tif ( SERVER ) then -- Only set this stuff on the server, it is networked to clients automatically\n\t\tself:SetModel( \"models/items/ammocrate_ar2.mdl\" ) -- Set the model\n\t\tself:PhysicsInit( SOLID_VPHYSICS ) -- Initialize physics\n\t\tself:SetUseType( SIMPLE_USE ) -- Make sure ENT:Use is ran only once per use ( per press of the use button on the entity, by default the E key )\n\tend\nend\n\nfunction ENT:Think()\n\tif ( SERVER ) then -- Only set this stuff on the server\n\t\tself:NextThink( CurTime() ) -- Set the next think for the serverside hook to be the next frame/tick\n\t\treturn true -- Return true to let the game know we want to apply the self:NextThink() call\n\tend\nend\n\nif ( SERVER ) then -- This hook is only available on the server\n\tfunction ENT:Use( activator, caller ) -- If a player uses this entity, play an animation\n\t\tif ( !self.Opened ) then -- If we are not \"opened\"\n\t\t\tself:ResetSequence( \"open\" ) -- Play the open sequence\n\t\t\tself.Opened = true -- We are now opened\n\t\telse\n\t\t\tself:ResetSequence( \"close\" ) -- Play the close sequence\n\t\t\tself.Opened = false -- We are now closed\n\t\tend\n\tend\nend"}},
{"function":{"name":"RemoveSolidFlags","parent":"Entity","type":"classfunc","description":"Removes solid flag(s) from the entity.","realm":"Shared","args":{"arg":{"text":"The flag(s) to remove, see .","name":"flags","type":"number","page":"Enums/FSOLID"}}}},
{"function":{"name":"RemoveInternalConstraint","parent":"Entity","type":"classfunc","description":"Breaks internal Ragdoll constrains, so you can for example separate an arm from the body of a ragdoll and preserve all physics.\n\nThe visual mesh will still stretch as if it was properly connected unless the ragdoll model is specifically designed to avoid that.","realm":"Shared","added":"2020.03.17","args":{"arg":{"text":"Which constraint to break, values below 0 mean break them all","name":"num","type":"number","default":"-1"}}}},
{"function":{"name":"RemoveGesture","parent":"Entity","type":"classfunc","description":{"text":"Removes and stops the gesture with given activity.","note":{"text":"This function only works on  entites!","page":"BaseAnimatingOverlay"}},"realm":"Server","args":{"arg":{"text":"The activity remove. See .","name":"activity","type":"number","page":"Enums/ACT"}}}},
{"function":{"name":"RemoveFromMotionController","parent":"Entity","type":"classfunc","description":{"text":"Removes a ect from the entity's motion controller so that  will no longer be called for given ect.\n\nYou must first create a motion controller with .","page":["PhysObj","ENTITY:PhysicsSimulate","PhysObj","Entity:StartMotionController"],"note":{"text":"Only works on a scripted  of anim type","page":"Entity"}},"realm":"Shared","args":{"arg":{"text":"The  to remove from the motion controller.","name":"physObj","type":"PhysObj","page":"PhysObj"}}}},
{"function":{"name":"RemoveEFlags","parent":"Entity","type":"classfunc","description":"Removes specified engine flag","realm":"Shared","args":{"arg":{"text":"The flag to remove, see","name":"flag","type":"number","page":"Enums/EFL"}}}},
{"function":{"name":"RemoveFlags","parent":"Entity","type":"classfunc","description":"Removes specified flag(s) from the entity","realm":"Shared","args":{"arg":{"text":"The flag(s) to remove, see","name":"flag","type":"number","page":"Enums/FL"}}}},
{"function":{"name":"RemoveEffects","parent":"Entity","type":"classfunc","description":"Removes an engine effect applied to an entity.","realm":"Shared","args":{"arg":{"text":"The effect to remove, see .","name":"effect","type":"number","page":"Enums/EF"}}}},
{"function":{"name":"RemoveCallOnRemove","parent":"Entity","type":"classfunc","description":{"text":"Removes a function previously added via .","page":"Entity:CallOnRemove"},"realm":"Shared","file":{"text":"lua/includes/extensions/entity.lua","line":"110-L120"},"args":{"arg":{"text":"Identifier of the function within CallOnRemove","name":"identifier","type":"string"}}},"example":{"description":"Removes the call to stop an engine's sounds when the entity is removed","code":"Entity:RemoveCallOnRemove(\"StopEngineSound\")"}},
{"function":{"name":"RemoveCallback","parent":"Entity","type":"classfunc","description":{"text":"Removes a callback previously added with","page":"Entity:AddCallback"},"realm":"Shared","args":{"arg":[{"text":"The hook name to remove. See","name":"hook","type":"string","page":"Entity Callbacks"},{"text":"The callback id previously retrieved with the return of  or","name":"callbackid","type":"number","page":["Entity:AddCallback","Entity:GetCallbacks"]}]}}},
{"function":{"name":"RemoveCallback","parent":"Entity","type":"classfunc","description":{"text":"Removes a callback previously added with","page":"Entity:AddCallback"},"realm":"Shared","args":{"arg":[{"text":"The hook name to remove. See","name":"hook","type":"string","page":"Entity Callbacks"},{"text":"The callback id previously retrieved with the return of  or","name":"callbackid","type":"number","page":["Entity:AddCallback","Entity:GetCallbacks"]}]}}},
{"function":{"name":"RemoveAllDecals","parent":"Entity","type":"classfunc","description":"Removes all decals from the entities surface.","realm":"Shared"},"example":{"description":"Removes all decals from all props in world.","code":"for k, v in pairs( ents.FindByClass( \"prop_physics\" )) do\n\tv:RemoveAllDecals()\nend"}},
{"function":{"name":"Remove","parent":"Entity","type":"classfunc","description":"Removes the entity it is used on.","realm":"Shared"},"example":{"description":"","code":"ents.FindByClass( \"prop_physics\" )[1]:Remove()","output":"Removes whichever prop is first found or errors if no entity was found."}},
{"function":{"name":"RagdollUpdatePhysics","parent":"Entity","type":"classfunc","description":{"text":"Makes the physics objects follow the set bone positions. This is used alongside Kinect in , for more info see ragdoll_motion entity.","page":"Entity:SetRagdollBuildFunction"},"realm":"Server"}},
{"function":{"name":"RagdollStopControlling","parent":"Entity","type":"classfunc","description":{"text":"Sets the function to build the ragdoll. This is used alongside Kinect in , for more info see ragdoll_motion entity.","page":"Entity:SetRagdollBuildFunction"},"realm":"Server"}},
{"function":{"name":"RagdollSolve","parent":"Entity","type":"classfunc","description":{"text":"Normalizes the ragdoll. This is used alongside Kinect in , for more info see ragdoll_motion entity.","page":"Entity:SetRagdollBuildFunction"},"realm":"Server"}},
{"function":{"name":"PrecacheGibs","parent":"Entity","type":"classfunc","description":{"text":"Precaches gibs for the entity's model.\n\nNormally this function should be ran when the entity is spawned, for example the , after  is called.\n\nThis is required for  and  to work.","page":["ENTITY:Initialize","Entity:SetModel","Entity:GibBreakServer","Entity:GibBreakClient"]},"realm":"Server"}},
{"function":{"name":"PointAtEntity","parent":"Entity","type":"classfunc","description":"Changes an entities angles so that it faces the target entity.","realm":"Server","args":{"arg":{"text":"The entity to face.","name":"target","type":"Entity"}}}},
{"function":{"name":"PlayScene","parent":"Entity","type":"classfunc","description":"Makes the entity play a .vcd scene.","realm":"Server","args":{"arg":[{"text":"Filepath to scene","name":"scene","type":"string"},{"text":"Delay in seconds until the scene starts playing.","name":"delay","type":"number","default":"0"}]}},"example":{"description":"Makes the entity that the player 1 is looking at play the \"Welcome to City 17\" speech.","code":"local ent = Entity( 1 ):GetEyeTrace().Entity\n\nif( IsValid( ent ) ) then\n\tnpc:PlayScene( \"scenes/breencast/welcome.vcd\" )\nend","output":"The entity plays the scene."}},
{"function":{"name":"PhysWake","parent":"Entity","type":"classfunc","description":"Wakes up the entity's physics object","realm":"Shared","file":{"text":"lua/includes/extensions/entity.lua","line":"144-L151"}},"example":{"description":"This is what the function does internally.","code":"local phys = self:GetPhysicsObject()\nif (phys:IsValid()) then\n\tphys:Wake()\nend"}},
{"function":{"name":"PhysicsInitShadow","parent":"Entity","type":"classfunc","description":{"text":"Initializes the entity's physics object as a physics shadow. Removes the previous physics object if successful. This is used internally for the Player's and NPC's physics object, and certain HL2 entities such as the crane.\n\nA physics shadow can be used to have static entities that never move by setting both arguments to false.","bug":"Clientside physics objects are broken and do not move properly in some cases. Physics objects should only created on the server or you will experience incorrect physgun beam position, prediction issues, and other unexpected behavior."},"realm":"Shared","args":{"arg":[{"text":"Whether to allow the physics shadow to move under stress.","name":"allowPhysicsMovement","type":"boolean","default":"true"},{"text":"Whether to allow the physics shadow to rotate under stress.","name":"allowPhysicsRotation","type":"boolean","default":"true"}]},"rets":{"ret":{"text":"Return true on success, nil otherwise.","name":"","type":"boolean"}}}},
{"function":{"name":"PhysicsInitSphere","parent":"Entity","type":"classfunc","description":{"text":"Makes the physics object of the entity a sphere.","note":{"text":"This function will automatically destroy any previous physics objects and call ( SOLID_BBOX ) and ( MOVETYPE_VPHYSICS ).","page":["Entity:SetSolid","Entity:SetMoveType"]},"bug":"Clientside physics objects are broken and do not move properly in some cases. Physics objects should only created on the server or you will experience incorrect physgun beam position, prediction issues, and other unexpected behavior."},"realm":"Shared","args":{"arg":[{"text":"The radius of the sphere.","name":"radius","type":"number"},{"text":"Physical material from [surfaceproperties.txt](https://github.com/Facepunch/garrysmod/blob/master/garrysmod/scripts/surfaceproperties.txt) or added with .","name":"physmat","type":"string","page":"physenv.AddSurfaceData"}]},"rets":{"ret":{"text":"Returns true on success, false otherwise","name":"","type":"boolean"}}}},
{"function":{"name":"PhysicsInitStatic","parent":"Entity","type":"classfunc","description":{"text":"Initializes a static physics object of the entity using its . If successful, the previous physics object is removed.\n\nThis is what used by entities such as func_breakable, prop_dynamic, item_suitcharger, prop_thumper and npc_rollermine while it is in its \"buried\" state in the Half-Life 2 Campaign.\n\nIf the entity's current model has no physics mesh associated to it, no physics object will be created.","page":",current modelEntity:GetModel","note":{"text":"This function will automatically call ( solidType ).","page":"Entity:SetSolid"},"bug":"Clientside physics objects are broken and do not move properly in some cases. Physics objects should only created on the server or you will experience incorrect physgun beam position, prediction issues, and other unexpected behavior."},"realm":"Shared","args":{"arg":{"text":"The solid type of the physics object to create, see . Should be SOLID_VPHYSICS in most cases.","name":"solidType","type":"number","page":"Enums/SOLID"}},"rets":{"ret":{"text":"Returns true on success, false otherwise. This will fail if the entity's current model has no associated physics mesh.","name":"","type":"boolean"}}}},
{"function":{"name":"PhysicsInitMultiConvex","parent":"Entity","type":"classfunc","description":{"text":"An advanced version of  which initializes a physics object from multiple convex meshes. This should be used for physics objects with a custom shape which cannot be represented by a single convex mesh.\n\nIf successful, the previous physics object will be removed.","page":"Entity:PhysicsInitConvex","bug":"Clientside physics objects are broken and do not move properly in some cases. Physics objects should only created on the server or you will experience incorrect physgun beam position, prediction issues, and other unexpected behavior.\n\nYou can use the following work-around for movement, though clientside collisions will still be broken.\n\n\n```\nfunction ENT:Think()\n\tif ( CLIENT ) then\n\t\tlocal physobj = self:GetPhysicsObject()\n\n\t\tif ( IsValid( physobj ) ) then\n\t\t\tphysobj:SetPos( self:GetPos() )\n\t\t\tphysobj:SetAngles( self:GetAngles() )\n\t\tend\n\tend\nend\n```"},"realm":"Shared","args":{"arg":{"text":"A table consisting of tables of s. Each sub-table defines a set of points to be used in the computation of one convex mesh.","name":"vertices","type":"table","page":"Vector"}},"rets":{"ret":{"text":"Returns true on success, nil otherwise","name":"","type":"boolean"}}},"example":{"description":"Creates a physics mesh for the entity which consists of two boxes.","code":"local min1 = Vector( -30, -10, 0 ) -- Box1 minimum corner\nlocal max1 = Vector( -10, 10, 20 ) -- Box1 maximum corner\n\nlocal min2 = Vector( 10, -5, 10 ) -- Box2 minimum corner\nlocal max2 = Vector( 30, 5, 40 ) -- Box2 maximum corner\n\nif SERVER then\n\tfunction ENT:Initialize()\n\t\tself:SetModel( \"models/props_c17/oildrum001.mdl\" )\n\n\t\t-- Initializing the multi-convex physics mesh\n\t\tself:PhysicsInitMultiConvex( {\n\t\t\t{ -- Each sub-table is a set of vertices of a convex piece, order doesn't matter\n\t\t\t\tVector( min1.x, min1.y, min1.z ), -- The first box vertices\n\t\t\t\tVector( min1.x, min1.y, max1.z ),\n\t\t\t\tVector( min1.x, max1.y, min1.z ),\n\t\t\t\tVector( min1.x, max1.y, max1.z ),\n\t\t\t\tVector( max1.x, min1.y, min1.z ),\n\t\t\t\tVector( max1.x, min1.y, max1.z ),\n\t\t\t\tVector( max1.x, max1.y, min1.z ),\n\t\t\t\tVector( max1.x, max1.y, max1.z ),\n\t\t\t},\n\t\t\t{ -- All these tables together form a concave collision mesh\n\t\t\t\tVector( min2.x, min2.y, min2.z ), -- The second box vertices\n\t\t\t\tVector( min2.x, min2.y, max2.z ),\n\t\t\t\tVector( min2.x, max2.y, min2.z ),\n\t\t\t\tVector( min2.x, max2.y, max2.z ),\n\t\t\t\tVector( max2.x, min2.y, min2.z ),\n\t\t\t\tVector( max2.x, min2.y, max2.z ),\n\t\t\t\tVector( max2.x, max2.y, min2.z ),\n\t\t\t\tVector( max2.x, max2.y, max2.z ),\n\t\t\t},\n\t\t} )\n\n\t\tself:SetSolid( SOLID_VPHYSICS ) -- Setting the solidity\n\t\tself:SetMoveType( MOVETYPE_VPHYSICS ) -- Setting the movement type\n\n\t\tself:EnableCustomCollisions( true ) -- Enabling the custom collision mesh\n\n\t\tself:PhysWake() -- Enabling the physics motion\n\tend\nelse\n\tlocal col = Color( 0, 0, 255, 255 )\n\n\t-- Drawing collision boxes on the client\n\tfunction ENT:Draw()\n\t\tself:DrawModel()\n\n\t\tlocal pos, ang = self:GetPos(), self:GetAngles()\n\n\t\trender.DrawWireframeBox( pos, ang, min1, max1, col ) -- Drawing the first collision box\n\t\trender.DrawWireframeBox( pos, ang, min2, max2, col ) -- Drawing the second collision box\n\tend\nend","output":{"image":{"src":"PhysicsInitMultiConvexExample.gif"}}}},
{"function":{"name":"PhysicsInitConvex","parent":"Entity","type":"classfunc","description":{"text":"Initializes the physics mesh of the entity with a convex mesh defined by a table of points. The resulting mesh is the  of all the input points. If successful, the previous physics object will be removed.\n\nThis is the standard way of creating moving physics objects with a custom convex shape. For more complex, concave shapes, see .","page":"Entity:PhysicsInitMultiConvex","bug":[{"text":"This will crash if given all (0,0,0)s.","issue":"3301","page":"Global.Vector"},"Clientside physics objects are broken and do not move properly in some cases. Physics objects should only created on the server or you will experience incorrect physgun beam position, prediction issues, and other unexpected behavior."]},"realm":"Shared","args":{"arg":{"text":"A table of eight s, in local coordinates, to be used in the computation of the convex mesh. Order does not matter.","name":"points","type":"table","page":"Vector"}},"rets":{"ret":{"text":"Returns true on success, nil otherwise.","name":"","type":"boolean"}}},"example":{"description":"Creates a \"box\" physics mesh for the entity.","code":"function ENT:Initialize()\n\tif ( CLIENT ) then return end -- We only want to run this code serverside\n\n\tlocal x0 = -20 -- Define the min corner of the box\n\tlocal y0 = -10\n\tlocal z0 = -5\n\n\tlocal x1 = 20 -- Define the max corner of the box\n\tlocal y1 = 10\n\tlocal z1 = 5\n\n\tself:PhysicsInitConvex( {\n\t\tVector( x0, y0, z0 ),\n\t\tVector( x0, y0, z1 ),\n\t\tVector( x0, y1, z0 ),\n\t\tVector( x0, y1, z1 ),\n\t\tVector( x1, y0, z0 ),\n\t\tVector( x1, y0, z1 ),\n\t\tVector( x1, y1, z0 ),\n\t\tVector( x1, y1, z1 )\n\t} )\n\n\t-- Set up solidity and movetype\n\tself:SetMoveType( MOVETYPE_VPHYSICS )\n\tself:SetSolid( SOLID_VPHYSICS )\n\n\t-- Enable custom collisions on the entity\n\tself:EnableCustomCollisions( true )\nend"}},
{"function":{"name":"PhysicsInitBox","parent":"Entity","type":"classfunc","description":{"text":"Makes the physics object of the entity a AABB.","note":[{"text":"If the volume of the resulting box is 0 (the mins and maxs are the same), the mins and maxs will be changed to ( -1, -1, -1 ) and ( 1, 1, 1 ), respectively.","page":["Global.Vector","Global.Vector"]},{"text":"This function will automatically destroy any previous physics objects if successful and call ( SOLID_BBOX ), ( MOVETYPE_VPHYSICS ), and ( mins, maxs ).","page":["Entity:SetSolid","Entity:SetMoveType","Entity:SetCollisionBounds"]}],"bug":"Clientside physics objects are broken and do not move properly in some cases. Physics objects should only created on the server or you will experience incorrect physgun beam position, prediction issues, and other unexpected behavior."},"realm":"Shared","args":{"arg":[{"text":"The minimum position of the box. This is automatically ordered with the maxs.","name":"mins","type":"Vector"},{"text":"The maximum position of the box. This is automatically ordered with the mins.","name":"maxs","type":"Vector"}]},"rets":{"ret":{"text":"Returns true on success, nil otherwise. This fails when the game cannot create any more s.","name":"","type":"boolean","page":"PhysCollide"}}}},
{"function":{"name":"PhysicsInit","parent":"Entity","type":"classfunc","description":{"text":"Initializes the  of the entity using its current . Deletes the previous physics object if it existed and the new object creation was successful.\n\nIf the entity's current model has no physics mesh associated to it, no physics object will be created and the previous object will still exist, if applicable.","page":[",physics objectEntity:GetPhysicsObject",",modelEntity:GetModel"],"note":[{"text":"When called clientside, this will not create a valid  if the model hasn't been  serverside.","page":["PhysObj",",precachedutil.PrecacheModel"]},{"text":"If successful, this function will automatically call ( solidType ) and ( 0 ).","page":["Entity:SetSolid","Entity:SetSolidFlags"]}],"bug":"Clientside physics objects are broken and do not move properly in some cases. Physics objects should only created on the server or you will experience incorrect physgun beam position, prediction issues, and other unexpected behavior."},"realm":"Shared","args":{"arg":{"text":"The solid type of the physics object to create, see . Should be SOLID_VPHYSICS in most cases.","name":"solidType","type":"number","page":"Enums/SOLID","note":"Using SOLID_NONE will only delete the current physics object - it does not create a new one."}},"rets":{"ret":{"text":"Returns true on success, false otherwise.","name":"","type":"boolean"}}}},
{"function":{"name":"PhysicsFromMesh","parent":"Entity","type":"classfunc","description":{"text":"Initializes the physics mesh of the entity from a triangle soup defined by a table of vertices. The resulting mesh is hollow, may contain holes, and always has a volume of 0.\n\nWhile this is very useful for static geometry such as terrain displacements, it is advised to use  or  for moving solid objects instead.\n\n needs to be called if you want players to collide with the entity correctly.","page":["Entity:PhysicsInitConvex","Entity:PhysicsInitMultiConvex","Entity:EnableCustomCollisions"]},"realm":"Shared","args":{"arg":{"text":"A table consisting of  (only the `pos` element is taken into account). Every 3 vertices define a triangle in the physics mesh.","name":"vertices","type":"table","page":"Structures/MeshVertex"}},"rets":{"ret":{"text":"Returns true on success, nil otherwise.","name":"","type":"boolean"}}}},
{"function":{"name":"PhysicsDestroy","parent":"Entity","type":"classfunc","description":{"text":"Destroys the current physics object of an entity.","note":"Cannot be used on a ragdoll or the world entity."},"realm":"Shared"}},
{"function":{"name":"OnGround","parent":"Entity","type":"classfunc","description":{"text":"Returns true if the entity is on the ground, and false if it isn't.\n\nInternally, this checks if  is set on the entity. This is only updated for players and NPCs, and thus won't inherently work for other entities.","page":",FL_ONGROUNDEnums/FL"},"realm":"Shared","rets":{"ret":{"text":"Whether the entity is on the ground or not.","name":"","type":"boolean"}}},"example":{"description":"Prints if Entity(1) is on the ground or not.","code":"print( Entity( 1 ):OnGround() )\nprint( Entity( 1 ):IsFlagSet( FL_ONGROUND ) ) -- This should give exact same output as the first line","output":"In most cases, true."}},
{"function":{"name":"PassesFilter","parent":"Entity","type":"classfunc","description":{"text":"Tests whether the entity passes the entity filter.\n\nThis will call  on scripted entities of the type \"filter\".","page":"ENTITY:PassesFilter","note":"This function only works on entities of the type \"filter\". ( filter_* entities, including base game filter entites )"},"realm":"Server","args":{"arg":[{"text":"The initiator of the test.\n\nFor example the trigger this filter entity is used in.","name":"caller","type":"Entity"},{"text":"The entity to test against the entity filter.","name":"ent","type":"Entity"}]},"rets":{"ret":{"text":"Whether the entity info passes the entity filter.","name":"","type":"boolean"}}}},
{"function":{"name":"PassesDamageFilter","parent":"Entity","type":"classfunc","description":{"text":"Tests whether the damage passes the entity filter.\n\nThis will call  on scripted entities of the type \"filter\".","page":"ENTITY:PassesDamageFilter","note":"This function only works on entities of the type \"filter\". ( filter_* entities, including base game filter entites )"},"realm":"Server","args":{"arg":{"text":"The damage info to test","name":"dmg","type":"CTakeDamageInfo"}},"rets":{"ret":{"text":"Whether the damage info passes the entity filter.","name":"","type":"boolean"}}}},
{"function":{"name":"ObjectCaps","parent":"Entity","type":"classfunc","description":{"text":"Returns the entity's capabilities as a bitfield.\n\nIn the engine this function is mostly used to check the use type, the save/restore system and level transitions flags.\n\nEven though the function is defined shared, it is not guaranteed to return the same value across states.","note":"The enums for this are not currently implemented in Lua, however you can access the defines [here](https://github.com/ValveSoftware/source-sdk-2013/blob/55ed12f8d1eb6887d348be03aee5573d44177ffb/mp/src/game/shared/baseentity_shared.h#L21-L38)."},"realm":"Shared","rets":{"ret":{"text":"The bitfield, a combination of the [FCAP_](https://github.com/ValveSoftware/source-sdk-2013/blob/55ed12f8d1eb6887d348be03aee5573d44177ffb/mp/src/game/shared/baseentity_shared.h#L21-L38) flags.","name":"","type":"number"}}}},
{"function":{"name":"OBBMins","parent":"Entity","type":"classfunc","description":"Returns the lowest corner of an entity's bounding box as a local vector.","realm":"Shared","rets":{"ret":{"text":"The local position of the lowest corner of the entity's oriented bounding box.","name":"","type":"Vector"}}}},
{"function":{"name":"OBBCenter","parent":"Entity","type":"classfunc","description":"Returns the center of an entity's bounding box as a local vector.","realm":"Shared","rets":{"ret":{"text":"OBBCenter","name":"","type":"Vector"}}}},
{"function":{"name":"OBBCenter","parent":"Entity","type":"classfunc","description":"Returns the center of an entity's bounding box as a local vector.","realm":"Shared","rets":{"ret":{"text":"OBBCenter","name":"","type":"Vector"}}}},
{"function":{"name":"NextThink","parent":"Entity","type":"classfunc","description":{"text":"In the case of a scripted entity, this will cause the next  event to be run at the given time.","page":"ENTITY:Think","bug":{"text":"This does not work with SWEPs or Nextbots.","issue":"3269"}},"realm":"Shared","args":{"arg":{"text":"The relative to  timestamp, at which the next think should occur.","name":"timestamp","type":"number","page":"Global.CurTime"}}},"example":{"description":"Prints 'Hello, World!' in console and sleeps for a second.","code":"function ENT:Think()\n    print(\"Hello, World!\")\n\n    self:NextThink( CurTime() + 1 )\n    return true -- Note: You need to return true to override the default next think time\nend","output":"Hello, World! every second the entity exists in the world."}},
{"function":{"name":"NearestPoint","parent":"Entity","type":"classfunc","description":"Performs a Ray OBBox intersection from the given position to the origin of the OBBox with the entity and returns the hit position on the OBBox","realm":"Shared","args":{"arg":{"text":"The vector to start the intersection from.","name":"position","type":"Vector"}},"rets":{"ret":{"text":"The nearest hit point of the entity's bounding box in world coordinates.","name":"","type":"Vector"}}}},
{"function":{"name":"NetworkVar","parent":"Entity","type":"classfunc","description":{"text":"Creates a network variable on the entity and adds Set/Get functions for it. This function should only be called in .","page":"ENTITY:SetupDataTables","warning":"Make sure to not call the SetDT* and your custom set methods on the client realm unless you know exactly what you are doing."},"realm":"Shared","args":{"arg":[{"text":"Supported choices:\n\n* \"String\"\n* \"Bool\"\n* \"Float\"\n* \"Int\" (32-bit signed integer)\n* \"Vector\"\n* \"Angle\"\n* \"Entity\"","name":"type","type":"string"},{"text":"Each network var has to have a unique slot. The slot is per type - so you can have an int in slot 0, a bool in slot 0 and a float in slot 0 etc. but you can't have two ints in slot 0 instead you would do a int in slot 0 and another int in slot 1. \nThe max slots right now are 64 - so you should pick a number between 0 and 63. An exception to this is strings which has a max slots of 4.","name":"slot","type":"number","br":""},{"text":"The name will affect how you access it. If you call it \"Foo\" you would add two new functions on your entity - SetFoo and GetFoo. So be careful that what you call it won't collide with any existing functions (don't call it \"Pos\" for example).","name":"name","type":"string"},{"text":"A table of extended information. \n\n**KeyName**\n\nIf the table contains a \"KeyName\" key the value can be set using . This is useful if you're making an entity that you want to be loaded in a map. The sky entity uses this.\n\n**Edit**\n\nThe edit key lets you mark this variable as editable. See  for more information.","name":"extended","type":"table","default":"nil","page":["Entity:SetKeyValue","Editable Entities"]}]}},"example":{"description":"Setting up data tables","code":"function ENT:SetupDataTables()\n\n\tself:NetworkVar( \"Float\", 0, \"Amount\" )\n\tself:NetworkVar( \"Vector\", 0, \"StartPos\" )\n\tself:NetworkVar( \"Vector\", 1, \"EndPos\" )\n\nend\n\n-- Code...\n\n-- Setting values on the entity\nself:SetStartPos( Vector( 1, 0, 0 ) )\nself:SetAmount( 100 )\n\n-- Code...\n\n-- Getting values\nlocal startpos = self:GetStartPos()"}},
{"function":{"name":"MuzzleFlash","parent":"Entity","type":"classfunc","description":{"text":"Fires the muzzle flash effect of the weapon the entity is carrying. This only creates a light effect and is often called alongside","page":"Weapon:SendWeaponAnim"},"realm":"Shared"}},
{"function":{"name":"NetworkVarNotify","parent":"Entity","type":"classfunc","description":{"text":"Creates a callback that will execute when the given network variable changes - that is, when the Set<name> function is run.","note":["The callback is executed `before` the value is changed, and is called even if the new and old values are the same.",{"text":"This function does not exist on entities in which  has not been called. By default, this means this function only exists on SENTs (both serverside and clientside) and on players with a  (serverside and clientside  only!). It is therefore safest to only use this in .","page":["Entity:InstallDataTable",",Player ClassPlayer_Classes","Global.LocalPlayer","ENTITY:SetupDataTables"]}],"bug":{"text":"The callback will not be called clientside if the var is changed right after entity spawn.","request":"324"}},"realm":"Shared","file":{"text":"lua/includes/extensions/entity.lua","line":"289-299"},"args":{"arg":[{"text":"Name of variable to track changes of","name":"name","type":"string"},{"text":"The function to call when the variable changes. It is passed 4 arugments:\n*  entity - Entity whos variable changed (This will be variable called \"self\" in ENT:CallBack format.)\n*  name - Name of changed variable\n*  old - Old/current variable value\n*  new - New variable value that it was set to","name":"callback","type":"function","page":["Entity","string","any","any"]}]}},"example":{"description":"Example usage","code":"function ENT:SetupDataTables()\n\n\tself:NetworkVar( \"Float\", 0, \"Amount\" )\n\tself:NetworkVar( \"Vector\", 1, \"StartPos\" )\n\tself:NetworkVar( \"Vector\", 2, \"EndPos\" )\n\n\tif ( SERVER ) then\n\t\tself:NetworkVarNotify( \"EndPos\", self.OnVarChanged )\n\tend\n\nend\n\nfunction ENT:OnVarChanged( name, old, new )\n\tprint( name, old, new )\nend","output":"Prints variable name, old value and new value whenever SetEndPos function is called"}},
{"function":{"name":"MarkShadowAsDirty","parent":"Entity","type":"classfunc","description":"Refreshes the shadow of the entity.","realm":"Client"}},
{"function":{"name":"MapCreationID","parent":"Entity","type":"classfunc","description":{"text":"Returns entity's map creation ID. Unlike  or , it will always be the same on same map, no matter how much you clean up or restart it.\n\nTo be used in conjunction with .","page":["Entity:EntIndex","Entity:GetCreationID","ents.GetMapCreatedEntity"]},"realm":"Server","rets":{"ret":{"text":"The map creation ID or -1 if the entity is not compiled into the map.","name":"","type":"number"}}}},
{"function":{"name":"ManipulateBoneScale","parent":"Entity","type":"classfunc","description":{"text":"Sets custom bone scale.","warning":"When used serverside, this method produces a huge network consumption!","bug":{"text":"This does not scale procedural bones.","issue":"3502"}},"realm":"Shared","args":{"arg":[{"text":"Index of the bone you want to manipulate","name":"boneID","type":"number"},{"text":"Scale vector to apply. Note that the scale is relative to the original bone scale, not relative to the world or the entity.","name":"scale","type":"Vector","bug":{"text":"The vector will be normalised if its longer than 32 units.","issue":"1249"}}]}}},
{"function":{"name":"ManipulateBonePosition","parent":"Entity","type":"classfunc","description":"Sets custom bone offsets.","realm":"Shared","args":{"arg":[{"text":"Index of the bone you want to manipulate","name":"boneID","type":"number"},{"text":"Position vector to apply\n\n\n\n\nNote that the position is relative to the original bone position, not relative to the world or the entity.","name":"pos","type":"Vector"}]}}},
{"function":{"name":"ManipulateBoneJiggle","parent":"Entity","type":"classfunc","description":"Manipulates the bone's jiggle status. This allows non jiggly bones to become jiggly.","realm":"Shared","args":{"arg":[{"text":"Index of the bone you want to manipulate.","name":"boneID","type":"number"},{"text":"0 = No Jiggle\n1 = Jiggle","name":"enabled","type":"number"}]}},"example":{"description":"Turn everyone into jelly mode","code":{"text":"for k, v in pairs(player.GetAll()) do\n\tlocal i = 0\n\n\twhile i","v:getbonecount":{"do":"","v:manipulatebonejigglei":"","i":"i","end":"","ode":"ode"}}}},
{"function":{"name":"MakePhysicsObjectAShadow","parent":"Entity","type":"classfunc","description":{"text":"Turns the  into a physics shadow.\nIt's used internally for the Player's and NPC's physics object, and certain HL2 entities such as the crane.\n\nA physics shadow can be used to have static entities that never move by setting both arguments to false.","page":"Entity:GetPhysicsObject","note":{"text":"Unlike , this function doesn't remove the current physics object.","page":"Entity:PhysicsInitShadow"}},"realm":"Shared","args":{"arg":[{"text":"Whether to allow the physics shadow to move under stress.","name":"allowPhysicsMovement","type":"boolean"},{"text":"Whether to allow the physics shadow to rotate under stress.","name":"allowPhysicsRotation","type":"boolean"}]}}},
{"function":{"name":"ManipulateBoneAngles","parent":"Entity","type":"classfunc","description":{"text":"Sets custom bone angles.","note":"The repeated use of bone manipulation in multiplayer games is highly discouraged due to the huge produced network traffic."},"realm":"Shared","args":{"arg":[{"text":"Index of the bone you want to manipulate","name":"boneID","type":"number"},{"text":"Angle to apply.\n\nThe angle is relative to the original bone angle, not relative to the world or the entity.","name":"ang","type":"Angle"}]}},"example":{"description":{"text":"This example shows the network usage impact of repeatedly using bone manipulation serverside.\n\nTo see the difference, type in client's console: **net_graph 3**\n\nThe rotation is not smooth when using () because it does not update the value on every frame.","page":"Entity:SetNWFloat"},"code":"local server_only = true -- Change the value!\n\nif server_only then\n\tif SERVER then\n\t\thook.Add( \"Think\", \"bone_manipulation_test\", function()\n\t\t\tfor _,ent in ipairs( ents.FindByModel( \"models/buggy.mdl\" ) ) do\n\t\t\t\tent:ManipulateBoneAngles( 28, Angle( 0,0,RealTime()*180 ) )\n\t\t\tend\n\t\tend )\n\telse\n\t\thook.Add( \"Think\", \"bone_manipulation_test\", function()\n\t\tend )\n\tend\nelse\n\tif SERVER then\n\t\thook.Add( \"Think\", \"bone_manipulation_test\", function()\n\t\t\tfor _,ent in ipairs( ents.FindByModel( \"models/buggy.mdl\" ) ) do\n\t\t\t\tent:SetNWFloat( \"bone_manipulation_test\", RealTime()*180 ) -- Entity:SetNW....() do not broadcast new values instantly\n\t\t\tend\n\t\tend )\n\telse\n\t\thook.Add( \"Think\", \"bone_manipulation_test\", function()\n\t\t\tfor _,ent in ipairs( ents.GetAll() ) do\n\t\t\t\tif ent:GetModel() == \"models/buggy.mdl\" then\n\t\t\t\t\tent:ManipulateBoneAngles( 28, Angle( 0,0,ent:GetNWFloat( \"bone_manipulation_test\" ) ) )\n\t\t\t\tend\n\t\t\tend\n\t\tend )\n\tend\nend","output":"Rotation of the ammo box of all HL2 buggies."}},
{"function":{"name":"LookupSequence","parent":"Entity","type":"classfunc","description":"Returns sequence ID from its name.","realm":"Shared","args":{"arg":{"text":"Sequence name","name":"name","type":"string"}},"rets":{"ret":[{"text":"Sequence ID for that name. This **will** differ for models with same sequence names. Will be -1 whether the sequence is invalid.","name":"","type":"number"},{"text":"The sequence duration\n* 0 if the sequence is invalid","name":"","type":"number"}]}}},
{"function":{"name":"LookupBone","parent":"Entity","type":"classfunc","description":"Gets the bone index of the given bone name, returns nothing if the bone does not exist.","realm":"Shared","args":{"arg":{"text":"The name of the bone.\n\nCommon generic bones ( for player models and some HL2 models ): \n* ValveBiped.Bip01_Head1\n* ValveBiped.Bip01_Spine\n* ValveBiped.Anim_Attachment_RH\n\nCommon hand bones (left hand equivalents also available, replace _R_ with _L_)\n* ValveBiped.Bip01_R_Hand\n* ValveBiped.Bip01_R_Forearm\n* ValveBiped.Bip01_R_Foot\n* ValveBiped.Bip01_R_Thigh\n* ValveBiped.Bip01_R_Calf\n* ValveBiped.Bip01_R_Shoulder\n* ValveBiped.Bip01_R_Elbow","name":"boneName","type":"string"}},"rets":{"ret":{"text":"Index of the given bone name","name":"","type":"number"}}}},
{"function":{"name":"LookupPoseParameter","parent":"Entity","type":"classfunc","description":"Returns pose parameter ID from its name.","realm":"Shared","added":"2020.03.17","args":{"arg":{"text":"Pose parameter name","name":"name","type":"string"}},"rets":{"ret":{"text":"The ID of the given pose parameter name, if it exists, -1 otherwise","name":"","type":"number"}}}},
{"function":{"name":"LookupAttachment","parent":"Entity","type":"classfunc","description":"Returns the attachment index of the given attachment name.","realm":"Shared","args":{"arg":{"text":"The name of the attachment.","name":"attachmentName","type":"string"}},"rets":{"ret":{"text":"The attachment index, or 0 if the attachment does not exist and -1 if the model is invalid.","name":"","type":"number"}}}},
{"function":{"name":"LocalToWorldAngles","parent":"Entity","type":"classfunc","description":"Converts a local angle (local to the entity) to a world angle.","realm":"Shared","args":{"arg":{"text":"The local angle","name":"ang","type":"Angle"}},"rets":{"ret":{"text":"The world angle","name":"","type":"Angle"}}}},
{"function":{"name":"LocalToWorld","parent":"Entity","type":"classfunc","description":"Converts a vector local to an entity into a worldspace vector","realm":"Shared","args":{"arg":{"text":"The local vector","name":"lpos","type":"Vector"}},"rets":{"ret":{"text":"The translated to world coordinates vector","name":"","type":"Vector"}}},"example":{"description":"Produces a worldvector 100 units in front of the center of the entity, taking into account the entity's angle","code":"return ent:LocalToWorld(Vector(100,0,0))"}},
{"function":{"name":"IsWorld","parent":"Entity","type":"classfunc","description":"Returns if the entity is the map's Entity[0] worldspawn","realm":"Shared","rets":{"ret":{"text":"isWorld","name":"","type":"boolean"}}},"example":{"description":"Stool boilerplate for the ignite tool","code":"function TOOL:LeftClick( trace )\n local ent = trace.Entity\n if !ent or !ent:IsValid() or ent:IsPlayer() or ent:IsWorld() then return false end\n ...","output":"LeftClick will not run for no ent, invalid ents, players, or worldspawn."}},
{"function":{"name":"IsWidget","parent":"Entity","type":"classfunc","description":"Returns whether the entity is a widget or not.\n\nThis is used by the \"Edit Bones\" context menu property.","realm":"Shared","file":{"text":"lua/includes/modules/widget.lua","line":"158"},"rets":{"ret":{"text":"Whether the entity is a widget or not.","name":"","type":"boolean"}}}},
{"function":{"name":"IsWeapon","parent":"Entity","type":"classfunc","description":"Checks if the entity is a weapon or not.","realm":"Shared","rets":{"ret":{"text":"Whether the entity is a weapon","name":"","type":"boolean"}}}},
{"function":{"name":"IsVehicle","parent":"Entity","type":"classfunc","description":"Checks if the entity is a vehicle or not.","realm":"Shared","rets":{"ret":{"text":"Whether the entity is a vehicle.","name":"","type":"boolean"}}}},
{"function":{"name":"IsValidLayer","parent":"Entity","type":"classfunc","description":{"text":"Returns whether the given layer ID is valid and exists on this entity.","note":{"text":"This function only works on  entites!","page":"BaseAnimatingOverlay"}},"realm":"Server","args":{"arg":{"text":"The Layer ID","name":"layerID","type":"number"}},"rets":{"ret":{"text":"Whether the given layer ID is valid and exists on this entity.","name":"","type":"boolean"}}}},
{"function":{"name":"IsValid","parent":"Entity","type":"classfunc","description":{"text":"Returns whether the entity is a valid entity or not.\n\nAn entity is valid if:\n* It is not a  entity\n* It is not the worldspawn entity ()\n\nInstead of calling this method directly, it's a good idea to call the global  instead.\n\nIt will check whether the given variable contains an object (an Entity) or nothing at all for you. See examples.\n\n\nThis might be a cause for a lot of headache. Usually happening during networking etc., when completely valid entities suddenly become invalid on the client, but are never filtered with IsValid(). See  for more details.","page":[",NULLGlobal_Variables","game.GetWorld","Global.IsValid","GM:InitPostEntity"],"warning":"NULL entities can still be assigned with key/value pairs, but they will be instantly negated. See example 3"},"realm":"Shared","rets":{"ret":{"text":"true if the entity is valid, false otherwise","name":"","type":"boolean"}}},"example":[{"description":{"text":"Shows how to use the global  function instead of using this method directly.","page":"Global.IsValid"},"code":"if ( entity && entity:IsValid() ) then\n\t-- Do stuff\nend\n\n-- The above can be replaced with the following for the same effect (and cleaner code)\n\nif ( IsValid( entity ) ) then\n\t-- Do stuff\nend"},{"code":"print( LocalPlayer():IsValid() )","output":"Outputs 'true' to the console if the player is in-game."},{"code":"local newPlayer = net.ReadEntity() --server found a new player on the server and sent it to us after \nprint( \"1/4\" )              -- it determined it was valid (newPlayer is NULL in this realm)\n\nif not isnumber(newPlayer.ImportantGameData) then --If it doesn't have a specific field, assign a value to it\n\tprint( \"2/4\" )\n\tnewPlayer.ImportantGameData = 42 \nend\nprint( \"3/4\" )\n\nprint( newPlayer.ImportantGameData * 69 ) --Attempting to do arithmetics on the new field\nprint( \"4/4\" )","output":"1/4 ... 3/4\n* A lua error telling us 'ImportantGameData' is a nil value and thus can't perform math on it\n----\nBut this shouldn't be possible, because we just created a value there. No red flags are present up until this point; all code up until this will run fine. Make sure to add an IsValid() check when the seemingly impossible happens."}]},
{"function":{"name":"IsSolid","parent":"Entity","type":"classfunc","description":"Returns if the entity is solid or not.\nVery useful for determining if the entity is a trigger or not.","realm":"Shared","rets":{"ret":{"text":"Whether the entity is solid or not.","name":"","type":"boolean"}}}},
{"function":{"name":"IsScripted","parent":"Entity","type":"classfunc","description":"Checks if the entity is a SENT or a built-in entity.","realm":"Shared","rets":{"ret":{"text":"Returns true if entity is scripted ( SENT ), false if not ( A built-in engine entity )","name":"","type":"boolean"}}}},
{"function":{"name":"IsRagdoll","parent":"Entity","type":"classfunc","description":"Checks if the entity is a ragdoll.","realm":"Shared","rets":{"ret":{"text":"Is ragdoll or not","name":"","type":"boolean"}}}},
{"function":{"name":"IsPlayerHolding","parent":"Entity","type":"classfunc","description":{"text":"Returns true if the entity is being held by a player. Either by physics gun, gravity gun or use-key (+use).","bug":{"text":"If multiple players are holding an object and one drops it, this will return false despite the object still being held.","issue":"2046"}},"realm":"Server","rets":{"ret":{"text":"IsBeingHeld","name":"","type":"boolean"}}}},
{"function":{"name":"IsPlayingGesture","parent":"Entity","type":"classfunc","description":{"text":"Returns whether there's a gesture is given activity being played.","note":{"text":"This function only works on  entites!","page":"BaseAnimatingOverlay"}},"realm":"Server","args":{"arg":{"text":"The activity to test. See .","name":"activity","type":"number","page":"Enums/ACT"}},"rets":{"ret":{"text":"Whether there's a gesture is given activity being played.","name":"","type":"boolean"}}}},
{"function":{"name":"IsPlayer","parent":"Entity","type":"classfunc","description":"Checks if the entity is a player or not.","realm":"Shared","rets":{"ret":{"text":"Whether the entity is a player.","name":"","type":"boolean"}}},"example":{"description":"Checks if two entities are players.","code":"print( player.GetByID( 1 ):IsPlayer() )\nprint( ents.FindByClass( \"prop_physics\" )[ 1 ]:IsPlayer() )","outputfixedwidth":"Fixed width","output":{"text":"true\nfalse","br":""}}},
{"function":{"name":"IsOnGround","parent":"Entity","type":"classfunc","description":{"text":"Returns whether the entity is on ground or not.\n\nInternally, this checks if  is set on the entity.\n\nThis function is an alias of .","page":[",FL_ONGROUNDEnums/FL","Entity:OnGround"]},"realm":"Shared","rets":{"ret":{"text":"Whether the entity is on ground or not.","name":"","type":"boolean"}}},"example":{"description":"Demonstrates the use of this function.","code":"print( Entity( 1 ):IsOnGround() )\nprint( IsValid( Entity( 1 ):GetGroundEntity() ) ) -- This should give the exact output as the first line","output":"Outputs 'true' to the console if the player 1 is on ground."}},
{"function":{"name":"IsOnFire","parent":"Entity","type":"classfunc","description":"Returns whether the entity is on fire.","realm":"Shared","rets":{"ret":{"text":"Whether the entity is on fire or not.","name":"","type":"boolean"}}},"example":{"description":"Demonstrates the use of this function.","code":"print( Entity(1):IsOnFire() )","output":"Outputs 'true' to the console if the player 1 is on fire."}},
{"function":{"name":"IsNPC","parent":"Entity","type":"classfunc","description":{"text":"Checks if the entity is an NPC or not.\n\nThis will return false for s, see  for that.","page":["NextBot","Entity:IsNextBot"]},"realm":"Shared","rets":{"ret":{"text":"Whether the entity is an NPC.","name":"","type":"boolean"}}}},
{"function":{"name":"IsNextBot","parent":"Entity","type":"classfunc","description":{"text":"Checks if the entity is a  or not.","page":"NextBot"},"realm":"Shared","rets":{"ret":{"text":"Whether the entity is an NextBot entity or not.","name":"","type":"boolean"}}}},
{"function":{"name":"IsMarkedForDeletion","parent":"Entity","type":"classfunc","description":"Returns if the entity is going to be deleted in the next frame.","realm":"Shared","rets":{"ret":{"text":"If the entity is going to be deleted.","name":"","type":"boolean"}}}},
{"function":{"name":"IsLagCompensated","parent":"Entity","type":"classfunc","description":"Returns whether the entity is lag compensated or not.","realm":"Server","rets":{"ret":{"text":"Whether the entity is lag compensated or not.","name":"","type":"boolean"}}}},
{"function":{"name":"IsLineOfSightClear","parent":"Entity","type":"classfunc","description":"Returns true if the target is in line of sight. This will only work on CBaseCombatCharacter entities.","realm":"Shared","file_name":"src/garrysmod/Objects/lua_entity.cpp","file_line":"5337","args":{"arg":{"text":"The target to test. You can also supply an  instead of a","name":"target","type":"Vector","page":["Entity","Vector"]}},"rets":{"ret":{"text":"Returns true if the line of sight is clear","name":"","type":"boolean"}}}},
{"function":{"name":"IsInWorld","parent":"Entity","type":"classfunc","description":{"text":"Returns whether the entity is inside a wall or outside of the map.","note":{"text":"Internally this function uses , that means that this function only checks  of the entity. If an entity is only partially inside a wall, or has a weird GetPos offset, this function may not give reliable output.","page":["util.IsInWorld","Entity:GetPos"]}},"realm":"Server","rets":{"ret":{"text":"Is the entity in world","name":"","type":"boolean"}}}},
{"function":{"name":"IsFlagSet","parent":"Entity","type":"classfunc","description":"Checks if given flag(s) is set or not.","realm":"Shared","args":{"arg":{"text":"The engine flag(s) to test, see","name":"flag","type":"number","page":"Enums/FL"}},"rets":{"ret":{"text":"Is set or not","name":"","type":"boolean"}}},"example":{"description":"Checks if the player is on the ground.","code":"print( Entity( 1 ):IsFlagSet( FL_ONGROUND ))","outputfixedwidth":"Fixed width","output":"true"}},
{"function":{"name":"IsEffectActive","parent":"Entity","type":"classfunc","description":"Returns whether an entity has engine effect applied or not.","realm":"Shared","args":{"arg":{"text":"The effect to check for, see .","name":"effect","type":"number","page":"Enums/EF"}},"rets":{"ret":{"text":"Whether the entity has the engine effect applied or not.","name":"","type":"boolean"}}}},
{"function":{"name":"IsEFlagSet","parent":"Entity","type":"classfunc","description":"Checks if given flag is set or not.","realm":"Shared","args":{"arg":{"text":"The engine flag to test, see","name":"flag","type":"number","page":"Enums/EFL"}},"rets":{"ret":{"text":"Is set or not","name":"","type":"boolean"}}}},
{"function":{"name":"IsDormant","parent":"Entity","type":"classfunc","description":"Returns whether the entity is dormant or not. Client/server entities become dormant when they leave the PVS on the server. Client side entities can decide for themselves whether to become dormant. This mainly applies to PVS.","realm":"Shared","rets":{"ret":{"text":"Whether the entity is dormant or not.","name":"","type":"boolean"}}}},
{"function":{"name":"IsConstraint","parent":"Entity","type":"classfunc","description":"Returns if entity is constraint or not","realm":"Server","rets":{"ret":{"text":"Is the entity a constraint or not","name":"","type":"boolean"}}},"example":{"description":"Returns true if player 1 is aiming at constraint.","code":"print( player.GetByID(1):GetEyeTrace().Entity:IsConstraint() )","output":"false"}},
{"function":{"name":"IsConstrained","parent":"Entity","type":"classfunc","description":{"text":"Returns true if the entity has constraints attached to it","bug":{"text":"This will only update clientside if the server calls it first. This only checks constraints added through the  so this will not react to map constraints.","issue":"3837","page":"constraint"}},"realm":"Shared","file":{"text":"lua/includes/extensions/entity.lua","line":"63-L85"},"rets":{"ret":{"text":"Whether the entity is constrained or not.","name":"","type":"boolean"}}},"example":{"description":"From entities/prop_effect.lua","code":"function ENT:PhysicsUpdate( physobj )\n\n\tif ( CLIENT ) then return end\n\n\t-- Don't do anything if the player isn't holding us\n\tif ( !self:IsPlayerHolding() && !self:IsConstrained() ) then\n\t\tphysobj:SetVelocity( Vector(0,0,0) )\n\t\tphysobj:Sleep() \n\tend\nend"}},
{"function":{"name":"InvalidateBoneCache","parent":"Entity","type":"classfunc","description":{"text":"Resets the entity's bone cache values in order to prepare for a model change.\n\nThis should be called after calling .","page":"Entity:SetPoseParameter"},"realm":"Client"}},
{"function":{"name":"InstallDataTable","parent":"Entity","type":"classfunc","description":{"text":"Sets up Data Tables from entity to use with .","internal":"","page":"Entity:NetworkVar"},"realm":"Shared","file":{"text":"lua/includes/extensions/entity.lua","line":"169-L474"}}},
{"function":{"name":"InitializeAsClientEntity","parent":"Entity","type":"classfunc","description":{"text":"Initializes this entity as being clientside only.\n\nOnly works on entities fully created clientside, and as such it has currently no use due to the lack of clientside .\n\nThis function is automatically called by  and ,  and .","deprecated":"","page":["ents.Create","ents.CreateClientProp","Global.ClientsideModel","Global.ClientsideModel","Global.ClientsideScene"],"bug":{"text":"Calling this on a clientside entity will crash the game.","issue":"3368"}},"realm":"Client"}},
{"function":{"name":"Ignite","parent":"Entity","type":"classfunc","description":{"text":"Sets the entity on fire.\n\nSee also .","page":"Entity:Extinguish"},"realm":"Server","args":{"arg":[{"text":"How long to keep the entity ignited. Not supplying this argument will not ignite the entity at all.","name":"length","type":"number"},{"text":"The radius of the ignition, will ignite everything around the entity that is in this radius.","name":"radius","type":"number","default":"0"}]}},"example":{"description":"Ignite all props on the map for 30 seconds.","code":"for k, v in pairs(ents.FindByClass(\"prop_physics\")) do\n   v:Ignite(30)\nend"}},
{"function":{"name":"Input","parent":"Entity","type":"classfunc","description":{"text":"Fires input to the entity with the ability to make another entity responsible.\n\nSee also  and .","page":["Entity:Fire","GM:AcceptInput"]},"realm":"Server","args":{"arg":[{"text":"The name of the input to fire","name":"input","type":"string"},{"text":"The entity that caused this input (EG the player who pushed a button)","name":"activator","type":"Entity"},{"text":"The entity that is triggering this input (EG the button that was pushed)","name":"caller","type":"Entity"},{"text":"The value to give to the input. Can be either a , a  or a .","name":"param","type":"any","default":"nil","page":["string","number","boolean"]}]}}},
{"function":{"name":"Health","parent":"Entity","type":"classfunc","description":"Returns the health of the entity.","realm":"Shared","rets":{"ret":{"text":"health","name":"","type":"number"}}},"example":{"description":"Prints if the entity's health is at full or more.","code":"print( Entity( 1 ):Health() >= Entity( 1 ):GetMaxHealth() )","output":"\"true\" entity's health is greater than or equal to their max health, or \"false\" otherwise."}},
{"function":{"name":"HeadTarget","parent":"Entity","type":"classfunc","description":{"text":"Returns the position of the head of this entity, NPCs use this internally to aim at their targets.","note":"This only works on players and NPCs."},"realm":"Server","args":{"arg":{"text":"The vector of where the attack comes from.","name":"origin","type":"Vector"}},"rets":{"ret":{"text":"The head position.","name":"","type":"Vector"}}}},
{"function":{"name":"HasSpawnFlags","parent":"Entity","type":"classfunc","description":"Returns whether this entity has the specified spawnflags bits set.","realm":"Shared","args":{"arg":{"text":"The spawnflag bits to check, see .","name":"spawnFlags","type":"number","page":"Enums/SF"}},"rets":{"ret":{"text":"Whether the entity has that spawnflag set or not.","name":"","type":"boolean"}}},"example":{"description":"As seen in sandbox's PhysgunPickup hook.","code":"function GM:PhysgunPickup( ply, ent )\n\n\t-- Don't move physboxes if the mapper logic says no\n\tif ( ent:GetClass() == \"func_physbox\" && ent:HasSpawnFlags( SF_PHYSBOX_MOTIONDISABLED ) ) then return false end\n\n\treturn true\n\t\nend"}},
{"function":{"name":"HasFlexManipulatior","parent":"Entity","type":"classfunc","description":{"text":"Returns whether or not the the entity has had flex manipulations performed with  or .","page":["Entity:SetFlexWeight","Entity:SetFlexScale"]},"realm":"Shared","rets":{"ret":{"text":"True if the entity has flex manipulations, false otherwise.","name":"","type":"boolean"}}},"example":{"description":"Defines server-side function which manipulates all of an entity's flexes and prints true if the entity has flex manipulations.","code":"function FlexExample(ent)\n\n\tif(!IsValid(ent)) then return end\n\t\n\t-- Loop through all flexes\n\tfor i = 0, ent:GetFlexNum()-1 do\n\t\n\t\t-- Set each flex to number ranging from 0.0 to 2.0\n\t\tent:SetFlexWeight(i, math.random()*2)\n\t\t\n\tend\n\t\n\t-- Print whether or not we have flex manipulations\n\tprint(ent:HasFlexManipulatior())\n\nend","output":{"text":"```\ntrue\n```","image":{"src":"Entity_HasFlexManipulatior_example1.jpg"}}}},
{"function":{"name":"HasBoneManipulations","parent":"Entity","type":"classfunc","description":{"text":"Returns whether or not the bone manipulation functions have ever been called on given  entity.\n\nRelated functions are , , , and .","page":["Entity:ManipulateBonePosition","Entity:ManipulateBoneAngles","Entity:ManipulateBoneJiggle","Entity:ManipulateBoneScale"],"bug":{"text":"This will return true if the entity's bones have ever been manipulated. Resetting the position/angles/jiggle/scaling to 0,0,0 will not affect this function.","issue":"3131"}},"realm":"Shared","rets":{"ret":{"text":"True if the entity has been bone manipulated, false otherwise.","name":"","type":"boolean"}}}},
{"function":{"name":"GibBreakServer","parent":"Entity","type":"classfunc","description":{"text":"Causes the entity to break into its current models gibs, if it has any.\n\nYou must call  on the entity before using this function, or it will not create any gibs.\n\nThe gibs will be spawned on the server and be synchronized with all clients.\n\nNote, that this function will not remove or hide the entity it is called on.","page":"Entity:PrecacheGibs","warning":{"text":"Large numbers of serverside gibs will cause lag.\n\n\nYou can avoid this cost by spawning the gibs on the client using","page":"Entity:GibBreakClient"},"note":"Despite existing on client, it doesn't actually do anything on client."},"realm":"Shared","args":{"arg":{"text":"The force to apply to the created gibs","name":"force","type":"Vector"}}}},
{"function":{"name":"GetWorldTransformMatrix","parent":"Entity","type":"classfunc","description":{"text":"Returns the position and angle of the entity as a 3x4 matrix ( is 4x4 so the fourth row goes unused). The first three columns store the angle as a [rotation matrix](https://en.wikipedia.org/wiki/Rotation_matrix), and the fourth column stores the position vector.","page":"VMatrix","bug":[{"text":"This returns incorrect results for the angular component (columns 1-3) for the local player clientside.","issue":"2764"},{"text":"This will use the local player's  in .","issue":"3106","page":["Global.EyeAngles",",rendering hooksCategory:3D_Rendering_Hooks"]},{"text":"Columns 1-3 will be all 0 (angular component) in  while paused in single-player.","issue":"3107","page":",rendering hooksCategory:3D_Rendering_Hooks"}]},"realm":"Shared","rets":{"ret":{"text":"The position and angle matrix.","name":"","type":"VMatrix"}}}},
{"function":{"name":"GibBreakClient","parent":"Entity","type":"classfunc","description":{"text":"Causes the entity to break into its current models gibs, if it has any.\n\nYou must call  on the entity before using this function, or it will not create any gibs.\n\nIf called on server, the gibs will be spawned on the currently connected clients and will not be synchronized. Otherwise the gibs will be spawned only for the client the function is called on.\n\nNote, that this function will not remove or hide the entity it is called on.\n\nFor more expensive version of this function see .","page":["Entity:PrecacheGibs","Entity:GibBreakServer"]},"realm":"Shared","args":{"arg":[{"text":"The force to apply to the created gibs.","name":"force","type":"Vector"},{"text":"If set, this will be color of the broken gibs instead of the entity's color.","name":"clr","type":"table","default":"nil"}]}},"example":{"description":"A console command that breaks the prop the player is aiming at when they runt he command.","code":"concommand.Add( \"break\", function( ply )\n\tlocal tr = ply:GetEyeTrace()\n\tlocal ent = tr.Entity\n\tif ( !IsValid( ent ) ) then return end -- playing not looking at any entity, bail\n\n\tent:PrecacheGibs()\n\tent:GibBreakClient( tr.HitNormal * 100 ) -- Break in some direction\nend )"}},
{"function":{"name":"GetWorkshopID","parent":"Entity","type":"classfunc","description":{"text":"Returns ID of workshop addon that the entity is from.","deprecated":"","warning":"The function **currently** does nothing and always returns nil"},"realm":"Server","rets":{"ret":{"text":"The workshop ID","name":"","type":"number"}}}},
{"function":{"name":"GetVelocity","parent":"Entity","type":"classfunc","description":{"text":"Returns the entity's velocity.","note":"Actually binds to CBaseEntity::GetAbsVelocity() on the server and C_BaseEntity::EstimateAbsVelocity() on the client. This returns the total velocity of the entity and is equal to local velocity + base velocity.","bug":{"text":"This can become out-of-sync on the client if the server has been up for a long time.","issue":"774"}},"realm":"Shared","rets":{"ret":{"text":"The velocity of the entity.","name":"","type":"Vector"}}}},
{"function":{"name":"GetUp","parent":"Entity","type":"classfunc","description":"Returns the upward vector of the entity, as a normalized direction vector","realm":"Shared","rets":{"ret":{"text":"upDir","name":"","type":"Vector"}}}},
{"function":{"name":"GetVar","parent":"Entity","type":"classfunc","description":{"text":"Retrieves a value from entity's . Set by .","page":["Entity:GetTable","Entity:SetVar"]},"realm":"Shared","file":{"text":"lua/includes/extensions/entity.lua","line":"39-L49"},"args":{"arg":[{"text":"Key of the value to retrieve","name":"key","type":"any"},{"text":"A default value to fallback to if we couldn't retrieve the value from entity","name":"default","type":"any","default":"nil"}]},"rets":{"ret":{"text":"Retrieved value","name":"","type":"any"}}},"example":{"description":"The 2 lines of code are functionally identical.","code":"print( Entity( 1 ):GetVar( \"Test\" ) )\n\nprint( Entity( 1 ).Test )"}},
{"function":{"name":"GetUnFreezable","parent":"Entity","type":"classfunc","description":{"text":"Returns if the entity is unfreezable, meaning it can't be frozen with the physgun. By default props are freezable, so this function will typically return false.","bug":{"text":"This will return nil if  has not been called.","pull":"1488","page":"Entity:SetUnFreezable"}},"realm":"Server","file":{"text":"lua/includes/extensions/entity.lua","line":"478"},"rets":{"ret":{"text":"True if the entity is unfreezable, false otherwise.","name":"","type":"boolean"}}}},
{"function":{"name":"GetTransmitWithParent","parent":"Entity","type":"classfunc","description":"Returns true if the TransmitWithParent flag is set or not.","realm":"Shared","file_name":"src/garrysmod/Objects/lua_entity.cpp","file_line":"5377","rets":{"ret":{"text":"Is the TransmitWithParent flag is set or not","name":"","type":"boolean"}}}},
{"function":{"name":"GetTable","parent":"Entity","type":"classfunc","description":"Returns the table that contains all values saved within the entity.","realm":"Shared","rets":{"ret":{"text":"entTable","name":"","type":"table"}}}},
{"function":{"name":"GetTouchTrace","parent":"Entity","type":"classfunc","description":{"text":"Returns the last trace used in the collision callbacks such as ,  and .","page":["ENTITY:StartTouch","ENTITY:Touch","ENTITY:EndTouch"],"note":"This returns the last collision trace used, regardless of the entity that caused it. As such, it's only reliable when used in the hooks mentioned above"},"realm":"Shared","rets":{"ret":{"text":"The","name":"","type":"table","page":"Structures/TraceResult"}}},"example":{"description":"Dispatches an explosion at the point of impact with another entity.","code":"function ENT:Touch( otherEntity )\n\tlocal tr = self:GetTouchTrace()\n\tlocal hitPos = tr.HitPos\n\n\tlocal effectdata = EffectData()\n\teffectdata:SetOrigin( hitPos )\n\tutil.Effect( \"Explosion\", effectdata )\n\nend"}},
{"function":{"name":"GetSubModels","parent":"Entity","type":"classfunc","description":"Returns a list of models included into the entity's model in the .qc file.","realm":"Shared","rets":{"ret":{"text":"The list of models included into the entity's model in the .qc file.","name":"","type":"table"}}},"example":{"description":"Example structure of the  table. Prints into console sub models of a player model.","code":"PrintTable(Entity(1):GetSubModels() )","output":"```\n1:\n\t\tname\t=\tmodels/m_anm.mdl\n\t\tid\t=\t0\n```"}},
{"function":{"name":"GetSubMaterial","parent":"Entity","type":"classfunc","description":{"text":"Returns the material override for the given index. \n\nReturns \"\" if no material override exists. Use  to list it's default materials.","page":"Entity:GetMaterials","bug":{"text":"The server's value takes priority on the client.","issue":"3362"}},"realm":"Shared","args":{"arg":{"text":"The index of the sub material. Acceptable values are from 0 to 31.","name":"index","type":"number"}},"rets":{"ret":{"text":"The material that overrides this index, if any.","name":"","type":"string"}}}},
{"function":{"name":"GetSpawnFlags","parent":"Entity","type":"classfunc","description":"Returns the bitwise spawn flags used by the entity.","realm":"Shared","rets":{"ret":{"text":"The spawn flags of the entity, see .","name":"","type":"number","page":",SF_EnumsEnums/SF"}}},"example":{"description":{"text":"An alternative to","page":"Entity:HasSpawnFlags"},"code":"local sf = ent:GetSpawnFlags()\n\nif( bit.band( sf, SF_PHYSPROP_PREVENT_PICKUP ) > 0 ) then\n\tprint( \"This prop cannot be picked up.\" )\nend"}},
{"function":{"name":"GetSpawnEffect","parent":"Entity","type":"classfunc","description":"Returns if we should show a spawn effect on spawn on this entity.","realm":"Shared","rets":{"ret":{"text":"The flag to allow or disallow the spawn effect.","name":"","type":"boolean"}}},"example":{"description":"Taken from sandbox's cl_init.lua","code":"function GM:NetworkEntityCreated( ent )\n\n\t--\n\t-- If the entity wants to use a spawn effect\n\t-- then create a propspawn effect if the entity was\n\t-- created within the last second (this function gets called\n\t-- on every entity when joining a server)\n\t--\n\n\tif ( ent:GetSpawnEffect() && ent:GetCreationTime() > ( CurTime() - 1.0 ) ) then\n\t\n\t\tlocal ed = EffectData()\n\t\ted:SetEntity( ent )\n\t\tutil.Effect( \"propspawn\", ed, true, true )\n\n\tend\n\nend","output":"Checks if the entity has the spawnEffect flag set to true and checks if it was created in the last second, and then shows the propspawn effect."}},
{"function":{"name":"GetSolidFlags","parent":"Entity","type":"classfunc","description":"Returns solid flag(s) of an entity.","realm":"Shared","rets":{"ret":{"text":"The flag(s) of the entity, see .","name":"","type":"number","page":"Enums/FSOLID"}}}},
{"function":{"name":"GetSolid","parent":"Entity","type":"classfunc","description":"Returns solid type of an entity.","realm":"Shared","rets":{"ret":{"text":"The solid type. See the .","name":"","type":"number","page":"Enums/SOLID"}}}},
{"function":{"name":"GetShouldServerRagdoll","parent":"Entity","type":"classfunc","description":"Returns if entity should create a server ragdoll on death or a client one.","realm":"Shared","rets":{"ret":{"text":"Returns true if ragdoll will be created on server, false if on client","name":"","type":"boolean"}}}},
{"function":{"name":"GetSkin","parent":"Entity","type":"classfunc","description":"Returns the skin index of the current skin.","realm":"Shared","rets":{"ret":{"text":"skinIndex","name":"","type":"number"}}}},
{"function":{"name":"GetShouldPlayPickupSound","parent":"Entity","type":"classfunc","description":{"text":"Checks if the entity plays a sound when picked up by a player.","bug":{"text":"This will return nil if  has not been called.","pull":"1488","page":"Entity:SetShouldPlayPickupSound"}},"realm":"Shared","rets":{"ret":{"text":"True if it plays the pickup sound, false otherwise.","name":"","type":"boolean"}}}},
{"function":{"name":"GetSequenceName","parent":"Entity","type":"classfunc","description":{"text":"Return the name of the sequence for the index provided.\nRefer to  to find the current active sequence on this entity.","page":"Entity:GetSequence"},"realm":"Shared","args":{"arg":{"text":"The index of the sequence to look up.","name":"index","type":"number"}},"rets":{"ret":{"text":"Name of the sequence.","name":"","type":"string"}}}},
{"function":{"name":"GetSequenceMoveYaw","parent":"Entity","type":"classfunc","description":"Returns the change in heading direction in between the start and the end of the sequence.","realm":"Server","args":{"arg":{"text":"The sequence index. See .","name":"seq","type":"number","page":"Entity:LookupSequence"}},"rets":{"ret":{"text":"The yaw delta. Returns 99999 for no movement.","name":"","type":"number"}}}},
{"function":{"name":"GetSequenceMovement","parent":"Entity","type":"classfunc","description":"Returns the delta movement and angles of a sequence of the entity's model.","realm":"Shared","args":{"arg":[{"text":"The sequence index. See .","name":"sequenceId","type":"number","page":"Entity:GetSequenceName"},{"text":"The sequence start cycle. 0 is the start of the animation, 1 is the end.","name":"startCycle","type":"number"},{"text":"The sequence end cycle. 0 is the start of the animation, 1 is the end. Values like 2, etc are allowed.","name":"endCyclnde","type":"number"}]},"rets":{"ret":[{"text":"Whether the operation was successful","name":"","type":"boolean"},{"text":"The delta vector of the animation, how much the model's origin point moved.","name":"","type":"Vector"},{"text":"The delta angle of the animation.","name":"","type":"Angle"}]}}},
{"function":{"name":"GetSequenceList","parent":"Entity","type":"classfunc","description":"Returns a list of all sequences ( animations ) the model has.","realm":"Shared","rets":{"ret":{"text":"The list of all sequences ( animations ) the model has. The indices start with 0!","name":"","type":"table"}}},"example":{"description":"Example showing table structure. Prints a list of player model sequences.","code":"PrintTable( Entity(1):GetSequenceList() )","output":"```\n0\t=\tragdoll\n1\t=\treference\n2\t=\tidle_all_01\n3\t=\tidle_all_02\n4\t=\tidle_all_angry\n5\t=\tidle_all_scared\n6\t=\tidle_all_cower\n7\t=\tcidle_all\n8\t=\tswim_idle_all\n9\t=\tsit\n10\t=\tmenu_walk\n11\t=\tmenu_combine\n12\t=\tmenu_gman\n13\t=\twalk_all\n-- The rest of the sequences\n```"}},
{"function":{"name":"GetSequenceMoveDist","parent":"Entity","type":"classfunc","description":"Returns an entity's sequence move distance (the change in position over the course of the entire sequence).","realm":"Server","args":{"arg":{"text":"The sequence index.","name":"sequenceId","type":"number"}},"rets":{"ret":{"text":"The move distance of the sequence.","name":"","type":"number"}}},"example":{"description":{"text":"Experiment which demonstrates that dividing the sequence move distance by  results in a value extremely close to .","page":["Entity:SequenceDuration","Entity:GetSequenceGroundSpeed"]},"code":"local ply, seq, move_dist, seq_dur, ground_speed = nil, nil, nil, nil, nil\n\nfunction GM:Think()\n\n\t-- Player 1\n\tply = Entity(1)\n\t\n\t-- Current sequence\n\tseq = ply:GetSequence()\n\t\n\t-- The move distance\n\tmove_dist = ply:GetSequenceMoveDist(seq)\n\t\n\tif(move_dist == 0) then return end\t-- If it doesn't move, don't bother\n\t\n\t-- The sequence duration\n\tseq_dur = ply:SequenceDuration(seq)\n\t\n\t-- Actual sequence ground speed\n\tground_speed = ply:GetSequenceGroundSpeed(seq)\n\t\n\t-- Compare the calculated value to the actual value\n\tprint(tostring(ground_speed-(move_dist/seq_dur)))\n\nend","output":"A sample of some of the calculated vs. actual value differences during a sprint forward followed by an abrupt stop.\n\n```\n-3.3345255872064e-006\n3.3614563506035e-006\n0\n1.557984873557e-006\n```"}},
{"function":{"name":"GetSequenceGroundSpeed","parent":"Entity","type":"classfunc","description":"Returns the ground speed of the entity's sequence.","realm":"Shared","args":{"arg":{"text":"The sequence ID.","name":"sequenceId","type":"number"}},"rets":{"ret":{"text":"The ground speed of this sequence.","name":"","type":"number"}}},"example":{"description":{"text":"Move the  based on the ground speed of its walking animation (within its ).","page":["NextBot","coroutine"],"note":{"text":"In most cases it's better to use  instead.","page":"NextBot:BodyMoveXY"}},"code":"local sequence = self:LookupSequence( \"walk_all\" )\n\nif ( sequence ) then\n\tself:StartActivity( ACT_WALK )\n\tself:SetSequence( sequence )\n\tself.loco:SetDesiredSpeed( self:GetSequenceGroundSpeed( sequence ) )\nend"}},
{"function":{"name":"GetSequenceInfo","parent":"Entity","type":"classfunc","description":"Returns a table of information about an entity's sequence.","realm":"Shared","args":{"arg":{"text":"The sequence id of the entity.","name":"sequenceId","type":"number"}},"rets":{"ret":{"text":"Table of information about the entity's sequence, or nil is ID is out of range. See","name":"","type":"table","page":"Structures/SequenceInfo"}}},"example":{"description":"Draw each player's current sequence bounding box with sequence name, activity number, and activity name above their head.","code":"function GM:PostPlayerDraw( ply )\n\n\tseqinfo = ply:GetSequenceInfo( ply:GetSequence() )\n\tseqinfo.player = ply\n\t\n\trender.DrawWireframeBox( ply:GetPos(), ply:GetAngles(), seqinfo.bbmin, seqinfo.bbmax, color_white, true )\n\t\nend\n\nfunction GM:HUDPaint()\n\n\tlocal seqinfo, textpos = nil, nil\n\n\tfor p, ply in pairs(player.GetAll()) do\n\t\n\t\tseqinfo = ply:GetSequenceInfo(ply:GetSequence())\n\t\ttextpos = ( ply:GetPos() + Vector( 0, 0, seqinfo.bbmax.z + 10 ) ):ToScreen()\n\t\n\t\tif ( textpos.visible ) then\n\t\t\tdraw.SimpleText( seqinfo.label, \"GModNotify\", textpos.x, textpos.y, color_white, TEXT_ALIGN_CENTER )\n\t\t\tdraw.SimpleText( seqinfo.activity..\": \"..seqinfo.activityname, \"GModNotify\", textpos.x, textpos.y+20, color_white, TEXT_ALIGN_CENTER )\n\t\tend\n\t\n\tend\n\nend","output":{"image":{"src":"GetSequenceInfo_Example.jpg"}}}},
{"function":{"name":"GetSequenceCount","parent":"Entity","type":"classfunc","description":"Returns the amount of sequences ( animations ) the entity's model has.","realm":"Shared","rets":{"ret":{"text":"The amount of sequences ( animations ) the entity's model has.","name":"","type":"number"}}}},
{"function":{"name":"GetSequenceActivityName","parent":"Entity","type":"classfunc","description":"Returns the activity name for the given sequence id.","realm":"Shared","args":{"arg":{"text":"The sequence id.","name":"sequenceId","type":"number"}},"rets":{"ret":{"text":"The  as a string, returns \"Not Found!\" with an invalid sequence and \"No model!\" when no model is set.","name":"","type":"string","page":"Enums/ACT"}}}},
{"function":{"name":"GetSequence","parent":"Entity","type":"classfunc","description":"Return the index of the model sequence that is currently active for the entity.","realm":"Shared","rets":{"ret":{"text":"The index of the model sequence.","name":"","type":"number"}}}},
{"function":{"name":"GetSequenceActivity","parent":"Entity","type":"classfunc","description":{"text":"Return activity id out of sequence id. Opposite of .","page":"Entity:SelectWeightedSequence"},"realm":"Shared","args":{"arg":{"text":"The sequence ID","name":"seq","type":"number"}},"rets":{"ret":{"text":"The activity ID, ie","name":"","type":"number","page":"Enums/ACT"}}}},
{"function":{"name":"GetRotatedAABB","parent":"Entity","type":"classfunc","description":"Returns the min and max of the entity's axis-aligned bounding box.","realm":"Shared","args":{"arg":[{"text":"Minimum extent of the bounding box.","name":"min","type":"Vector"},{"text":"Maximum extent of the bounding box.","name":"max","type":"Vector"}]},"rets":{"ret":[{"text":"Minimum extent of the AABB","name":"","type":"Vector"},{"text":"Maximum extent of the AABB","name":"","type":"Vector"}]}},"example":{"description":"The entity's AABB center (regardless of model origin) is stored in 'pos'.","code":"local a, b = ent:GetRotatedAABB( v:OBBMins(), v:OBBMaxs() )\nlocal pos = ( ent:GetPos() + ( a + b ) / 2 )","output":"pos has the coordinates of the AABB center."}},
{"function":{"name":"GetSaveTable","parent":"Entity","type":"classfunc","description":{"text":"Returns a table of save values for an entity.\n\nThese tables are not the same between the client and the server, and different entities may have different fields.\n\nYou can get the list different fields an entity has by looking at it's source code ( the 2013 SDK can be found online, https://github.com/ValveSoftware/source-sdk-2013 ). Accessible fields are defined by each DEFINE_FIELD and DEFINE_KEYFIELD inside the DATADESC block.\n\nTake the headcrab, for example:\n\n```\nBEGIN_DATADESC( CBaseHeadcrab )\n\t// m_nGibCount - don't save\n\tDEFINE_FIELD( m_bHidden, FIELD_BOOLEAN ),\n\tDEFINE_FIELD( m_flTimeDrown, FIELD_TIME ),\n\tDEFINE_FIELD( m_bCommittedToJump, FIELD_BOOLEAN ),\n\tDEFINE_FIELD( m_vecCommittedJumpPos, FIELD_POSITION_VECTOR ),\n\tDEFINE_FIELD( m_flNextNPCThink, FIELD_TIME ),\n\tDEFINE_FIELD( m_flIgnoreWorldCollisionTime, FIELD_TIME ),\n\t\n\tDEFINE_KEYFIELD( m_bStartBurrowed, FIELD_BOOLEAN, \"startburrowed\" ),\n\tDEFINE_FIELD( m_bBurrowed, FIELD_BOOLEAN ),\n\tDEFINE_FIELD( m_flBurrowTime, FIELD_TIME ),\n\tDEFINE_FIELD( m_nContext, FIELD_INTEGER ),\n\tDEFINE_FIELD( m_bCrawlFromCanister, FIELD_BOOLEAN ),\n\tDEFINE_FIELD( m_bMidJump, FIELD_BOOLEAN ),\n\tDEFINE_FIELD( m_nJumpFromCanisterDir, FIELD_INTEGER ),\n\tDEFINE_FIELD( m_bHangingFromCeiling, FIELD_BOOLEAN ),\n\tDEFINE_FIELD( m_flIlluminatedTime, FIELD_TIME ),\n\t\t\n\tDEFINE_INPUTFUNC( FIELD_VOID, \"Burrow\", InputBurrow ),\n\tDEFINE_INPUTFUNC( FIELD_VOID, \"BurrowImmediate\", InputBurrowImmediate ),\n\tDEFINE_INPUTFUNC( FIELD_VOID, \"Unburrow\", InputUnburrow ),\n\tDEFINE_INPUTFUNC( FIELD_VOID, \"StartHangingFromCeiling\", InputStartHangingFromCeiling ),\n\tDEFINE_INPUTFUNC( FIELD_VOID, \"DropFromCeiling\", InputDropFromCeiling ),\n\t\n\t// Function Pointers\n\tDEFINE_THINKFUNC( EliminateRollAndPitch ),\n\tDEFINE_THINKFUNC( ThrowThink ),\n\tDEFINE_ENTITYFUNC( LeapTouch ),\nEND_DATADESC()\n```\n\n\nFor each **DEFINE_FIELD**, the save table will have a key with name of **first** argument.\n\nFor each **DEFINE_KEYFIELD**, the save table will have a key with name of the **third** argument.\n\nSee  for only retrieving one key of the save table.","page":"Entity:GetInternalVariable"},"realm":"Shared","args":{"arg":{"text":"If set, shows all variables, not just the ones for save.","name":"showAll","type":"boolean"}},"rets":{"ret":{"text":"A table containing all save values in key/value format.\n\nThe value may be a sequential table (starting with 1) if the field in question is an array in engine.","name":"","type":"table"}}},"example":[{"description":"Get how long it has been since the player was damaged","code":"local meta = FindMetaTable( \"Player\" )\n\nfunction meta:GetLastDamageTime()\n\treturn self:GetSaveTable().m_flLastDamageTime\nend\n\nprint( Entity( 1 ):GetLastDamageTime() )","output":"-31.965000152588"},{"description":"Determine if a door is locked (only works on server side otherwise returns nil)","code":"function IsDoorLocked(ent)\n\treturn ent:GetSaveTable().m_bLocked\nend","output":"returns true if the door is locked"},{"description":"Function `DoorIsOpen( door )` that returns whether a door is open or not, for different door classes","code":"local TestingFunctions = {\n\t[\"func_door\"] = function( self )\n\t\treturn ( self:GetSaveTable().m_toggle_state == 0 )\n\tend,\n\t[\"func_door_rotating\"] = function( self )\n\t\treturn ( self:GetSaveTable().m_toggle_state == 0 )\n\tend,\n\t[\"prop_door_rotating\"] = function( self )\n\t\treturn ( self:GetSaveTable().m_eDoorState ~= 0 )\n\tend,\n}\nfunction DoorIsOpen( door )\n\tlocal func = TestingFunctions[door:GetClass()]\n\tif func then\n\t\treturn func( door )\n\tend\nend"}]},
{"function":{"name":"GetRenderOrigin","parent":"Entity","type":"classfunc","description":{"text":"Returns the entity's render origin, set by  in a drawing hook.","page":"Entity:SetRenderOrigin"},"realm":"Client","rets":{"ret":{"text":"The entitys render origin","name":"","type":"Vector"}}}},
{"function":{"name":"GetRight","parent":"Entity","type":"classfunc","description":"Returns the rightward vector of the entity, as a normalized direction vector","realm":"Shared","rets":{"ret":{"text":"rightDir","name":"","type":"Vector"}}}},
{"function":{"name":"GetRenderMode","parent":"Entity","type":"classfunc","description":"Returns the render mode of the entity.","realm":"Shared","rets":{"ret":{"text":"The render Mode. See","name":"","type":"number","page":"Enums/RENDERMODE"}}}},
{"function":{"name":"GetRenderBounds","parent":"Entity","type":"classfunc","description":{"text":"Returns render bounds of the entity. Can be overridden by .\n\nIf the render bounds are not inside players view, the entity will not be drawn!","page":"Entity:SetRenderBounds"},"realm":"Client","rets":{"ret":[{"text":"The minimum vector of the bounds","name":"","type":"Vector"},{"text":"The maximum vector of the bounds.","name":"","type":"Vector"}]}}},
{"function":{"name":"GetRenderGroup","parent":"Entity","type":"classfunc","description":"Returns the render group of the entity.","realm":"Client","rets":{"ret":{"text":"The render group. See","name":"","type":"number","page":"Enums/RENDERGROUP"}}}},
{"function":{"name":"GetRenderFX","parent":"Entity","type":"classfunc","description":"Returns current render FX of the entity.","realm":"Shared","rets":{"ret":{"text":"The current render FX of the entity. See","name":"","type":"number","page":"Enums/kRenderFx"}}}},
{"function":{"name":"GetRenderAngles","parent":"Entity","type":"classfunc","description":{"text":"Returns the entity's render angles, set by  in a drawing hook.","page":"Entity:SetRenderAngles"},"realm":"Client","rets":{"ret":{"text":"The entitys render angles","name":"","type":"Angle"}}}},
{"function":{"name":"GetPredictable","parent":"Entity","type":"classfunc","description":{"text":"Returns whether this entity is predictable or not.\n\nSee  for more information","page":"Entity:SetPredictable"},"realm":"Client","rets":{"ret":{"text":"Whether this entity is predictable or not.","name":"","type":"boolean"}}}},
{"function":{"name":"GetRagdollOwner","parent":"Entity","type":"classfunc","description":{"text":"Returns the entity which the ragdoll came from. The opposite of .","page":"Player:GetRagdollEntity"},"realm":"Shared","rets":{"ret":{"text":"The entity who owns the ragdoll.","name":"","type":"Entity"}}},"example":{"description":"Loop through all player ragdolls and print their owners.","code":"for e, ent in pairs( ents.GetAll() ) do\n\tif( IsValid( ent:GetRagdollOwner() ) ) then\n\t\tprint( ent:GetRagdollOwner() )\n\tend\nend","output":"While a player is dead and their ragdoll is spawned this returns: \n\nPlayer [1][PlayerName]"}},
{"function":{"name":"GetPoseParameterRange","parent":"Entity","type":"classfunc","description":"Returns pose parameter range","realm":"Shared","args":{"arg":{"text":"Pose parameter ID to look up","name":"id","type":"number"}},"rets":{"ret":[{"text":"The minimum value","name":"","type":"number"},{"text":"The maximum value","name":"","type":"number"}]}}},
{"function":{"name":"GetPoseParameterName","parent":"Entity","type":"classfunc","description":"Returns name of given pose parameter","realm":"Shared","args":{"arg":{"text":"Id of the pose paremeter","name":"id","type":"number"}},"rets":{"ret":{"text":"Name of given pose parameter","name":"","type":"string"}}}},
{"function":{"name":"GetPlaybackRate","parent":"Entity","type":"classfunc","description":"Returns the playback rate of the main sequence on this entity, with 1.0 being the default speed.","realm":"Shared","rets":{"ret":{"text":"The playback rate.","name":"","type":"number"}}}},
{"function":{"name":"GetPlaybackRate","parent":"Entity","type":"classfunc","description":"Returns the playback rate of the main sequence on this entity, with 1.0 being the default speed.","realm":"Shared","rets":{"ret":{"text":"The playback rate.","name":"","type":"number"}}}},
{"function":{"name":"GetPoseParameter","parent":"Entity","type":"classfunc","description":"Returns the pose parameter value","realm":"Shared","args":{"arg":{"text":"Pose parameter name to look up","name":"name","type":"string"}},"rets":{"ret":{"text":"Value of given pose parameter.","name":"","type":"number","warning":{"text":"This value will be from 0 - 1 on the client and from minimum range to maximum range on the server! You'll have to  this value clientside to 's returns if you want get the actual pose parameter value. See 's example.","page":[",remapmath.Remap","Entity:GetPoseParameterRange","Entity:SetPoseParameter"]}}}}},
{"function":{"name":"GetPhysicsObject","parent":"Entity","type":"classfunc","description":{"text":"Returns the entity's physics object, if the entity has physics.","note":"Entities don't have clientside physics objects by default, so this will return [NULL PHYSOBJ] on the client in most cases."},"realm":"Shared","rets":{"ret":{"text":"The entity's physics object.","name":"","type":"PhysObj"}}},"example":{"description":"Gets the mass of an entity.","code":"local phys = ent:GetPhysicsObject()\nif ( IsValid( phys ) ) then -- Always check with IsValid! The ent might not have physics!\n\treturn phys:GetMass()\nelse\n\treturn 0\nend"}},
{"function":{"name":"GetPhysicsObjectNum","parent":"Entity","type":"classfunc","description":{"text":"Returns a specific physics object from an entity with multiple ects (like ragdolls)\n\nSee also .","page":["PhysObj","Entity:TranslateBoneToPhysBone"]},"realm":"Shared","args":{"arg":{"text":"The number corresponding to the  to grab. Starts at 0.","name":"physNum","type":"number","page":"PhysObj"}},"rets":{"ret":{"text":"The physics object","name":"","type":"PhysObj"}}},"example":[{"description":"When run, if the player is dead it will throw their ragdoll up in the air by their head.","code":"if ( !LocalPlayer():Alive() && LocalPlayer():GetRagdollEntity() ) then\n\tlocal ent = LocalPlayer():GetRagdollEntity()\n\tlocal head = ent:GetPhysicsObjectNum( 10 ) // 10 is usually the bone number of the head.\n\thead:ApplyForceCenter( Vector( 0, 0, 6000 ) )\nend"},{"description":"Example function that applies force to all physics objects of given entity.","code":"function ApplySomeForce( ent )\n\tfor i = 0, ent:GetPhysicsObjectCount() - 1 do\n\t\tlocal phys = ent:GetPhysicsObjectNum( i )\n\t\tphys:ApplyForceCenter( Vector( 0, 0, 10000 ) )\n\tend\nend"}]},
{"function":{"name":"GetPhysicsObjectCount","parent":"Entity","type":"classfunc","description":"Returns the number of physics objects an entity has (usually 1 for non-ragdolls)","realm":"Shared","rets":{"ret":{"text":"numObjects","name":"","type":"number"}}},"example":{"description":"Finds all the Physics Objects in a ragdoll and applies an upward force","code":"for i=0, ragdoll:GetPhysicsObjectCount() - 1 do -- \"ragdoll\" being a ragdoll entity\n \n\tlocal phys = ragdoll:GetPhysicsObjectNum(i)\n\tphys:ApplyForceCenter( Vector( 0, 0, 10000 ) )\n\nend"}},
{"function":{"name":"GetPhysicsAttacker","parent":"Entity","type":"classfunc","description":"Returns player who is claiming kills of physics damage the entity deals.","realm":"Server","args":{"arg":{"text":"The time to check if the entity was still a proper physics attacker.","name":"timeLimit","type":"number","note":"Some entities such as the Combine Ball disregard the time limit and always return the physics attacker."}},"rets":{"ret":{"text":"The player. If entity that was set is not a player, it will return NULL entity.","name":"","type":"Player"}}}},
{"function":{"name":"GetPersistent","parent":"Entity","type":"classfunc","description":{"text":"Returns whether the entity is persistent or not.\n\nSee  for more information on persistence.","page":"Entity:SetPersistent"},"realm":"Shared","rets":{"ret":{"text":"True if the entity is set to be persistent.","name":"","type":"boolean"}}}},
{"function":{"name":"GetParentAttachment","parent":"Entity","type":"classfunc","description":{"text":"Returns the attachment index of the entity's parent. Returns 0 if the entity is not parented to a specific attachment or if it isn't parented at all.\n\nThis is set by second argument of  or the **SetParentAttachment** input.","page":"Entity:SetParent"},"realm":"Shared","rets":{"ret":{"text":"The parented attachment index","name":"","type":"number"}}}},
{"function":{"name":"GetParentPhysNum","parent":"Entity","type":"classfunc","description":"If the entity is parented to an entity that has a model with multiple physics objects (like a ragdoll), this is used to retrieve what physics object number the entity is parented to on it's parent.","realm":"Shared","rets":{"ret":{"text":"The physics object id, or nil if the entity has no parent","name":"","type":"number"}}}},
{"function":{"name":"GetParentWorldTransformMatrix","parent":"Entity","type":"classfunc","description":{"text":"Returns the position and angle of the entity's move parent as a 3x4 matrix ( is 4x4 so the fourth row goes unused). The first three columns store the angle as a [rotation matrix](https://en.wikipedia.org/wiki/Rotation_matrix), and the fourth column stores the position vector.","page":"VMatrix"},"realm":"Shared","rets":{"ret":{"text":"The position and angle matrix.\n\nIf the entity has no move parent, an identity matrix will be returned.\nIf the entity is  0 or the parent isn't a BaseAnimating entity, the equivalent of :: will be returned.","name":"","type":"VMatrix","page":[",parented to attachmentEntity:GetParentAttachment","Entity",",GetMoveParent()Entity:GetMoveParent",",GetWorldTransformMatrix()Entity:GetWorldTransformMatrix"]}}}},
{"function":{"name":"GetParent","parent":"Entity","type":"classfunc","description":"Returns the parent entity of this entity.","realm":"Shared","rets":{"ret":{"text":"parentEntity","name":"","type":"Entity"}}}},
{"function":{"name":"GetOwner","parent":"Entity","type":"classfunc","description":{"text":"Returns the owner entity of this entity. See  for more info.","page":"Entity:SetOwner"},"realm":"Shared","rets":{"ret":{"text":"The owner entity of this entity.","name":"","type":"Entity"}}}},
{"function":{"name":"GetNWVarTable","parent":"Entity","type":"classfunc","description":"Returns all the networked variables in an entity.","realm":"Shared","rets":{"ret":{"text":"Key-Value table of all networked variables.","name":"","type":"table"}}},"example":{"description":"Prints all NWVars that exist for Player 1.","code":"PrintTable( Entity(1):GetNWVarTable() )","output":"```\nUserGroup\t=\towner\n```"}},
{"function":{"name":"GetNWVector","parent":"Entity","type":"classfunc","description":{"text":"Retrieves a networked vector value at specified index on the entity that is set by .","page":"Entity:SetNWVector"},"realm":"Shared","args":{"arg":[{"text":"The key that is associated with the value","name":"key","type":"string"},{"text":"The value to return if we failed to retrieve the value. (If it isn't set)","name":"fallback","type":"any","default":"Vector( 0, 0, 0 )"}]},"rets":{"ret":{"text":"The value associated with the key","name":"","type":"any"}}}},
{"function":{"name":"GetNWVarProxy","parent":"Entity","type":"classfunc","description":"Returns callback function for given NWVar of this entity.","realm":"Shared","file":{"text":"lua/includes/extensions/entity.lua","line":"509"},"args":{"arg":{"text":"The key of the NWVar to get callback of.","name":"key","type":"any"}},"rets":{"ret":{"text":"The callback of given NWVar, or nil if not found.","name":"","type":"function"}}},"example":{"description":"Prints callback function of a NWVar called \"Key\" of Player 1.","code":"print( Entity(1):GetNWVarProxy( \"Key\" ) )\nEntity(1):SetNWVarProxy( \"Key\", print )\nprint( Entity(1):GetNWVarProxy( \"Key\" ) )","outputfixedwidth":"Fixed width","output":"nil\nfunction: builtin#25"}},
{"function":{"name":"GetNWString","parent":"Entity","type":"classfunc","description":{"text":"Retrieves a networked string value at specified index on the entity that is set by .","page":"Entity:SetNWString"},"realm":"Shared","args":{"arg":[{"text":"The key that is associated with the value","name":"key","type":"string"},{"text":"The value to return if we failed to retrieve the value. (If it isn't set)","name":"fallback","type":"any","default":""}]},"rets":{"ret":{"text":"The value associated with the key","name":"","type":"any"}}},"example":{"description":"Prints the player's rank","code":"print( Entity(1):GetNWString( \"usergroup\" ) )","output":"\"superadmin\" in single-player"}},
{"function":{"name":"GetNWFloat","parent":"Entity","type":"classfunc","description":{"text":"Retrieves a networked float value at specified index on the entity that is set by .","page":"Entity:SetNWFloat"},"realm":"Shared","args":{"arg":[{"text":"The key that is associated with the value","name":"key","type":"string"},{"text":"The value to return if we failed to retrieve the value. (If it isn't set)","name":"fallback","type":"any","default":"0"}]},"rets":{"ret":{"text":"The value associated with the key","name":"","type":"any"}}}},
{"function":{"name":"GetNWFloat","parent":"Entity","type":"classfunc","description":{"text":"Retrieves a networked float value at specified index on the entity that is set by .","page":"Entity:SetNWFloat"},"realm":"Shared","args":{"arg":[{"text":"The key that is associated with the value","name":"key","type":"string"},{"text":"The value to return if we failed to retrieve the value. (If it isn't set)","name":"fallback","type":"any","default":"0"}]},"rets":{"ret":{"text":"The value associated with the key","name":"","type":"any"}}}},
{"function":{"name":"GetNWEntity","parent":"Entity","type":"classfunc","description":{"text":"Retrieves a networked entity value at specified index on the entity that is set by .","page":"Entity:SetNWEntity"},"realm":"Shared","args":{"arg":[{"text":"The key that is associated with the value","name":"key","type":"string"},{"text":"The value to return if we failed to retrieve the value. (If it isn't set)","name":"fallback","type":"any","default":"NULL"}]},"rets":{"ret":{"text":"The value associated with the key","name":"","type":"any"}}}},
{"function":{"name":"GetNumPoseParameters","parent":"Entity","type":"classfunc","description":"Returns the number of pose parameters this entity has.","realm":"Shared","rets":{"ret":{"text":"Amount of pose parameters the entity has","name":"","type":"number"}}},"example":{"description":"Prints all the entities poses.\n\nThe entity used to generate the output is a model of the combine helicopter.","code":"for i=0, ent:GetNumPoseParameters() - 1 do\n\tlocal min, max = ent:GetPoseParameterRange( i )\n\tprint( ent:GetPoseParameterName( i ) .. ' ' .. min .. \" / \" .. max )\nend","output":"```\nweapon_pitch -90 / 20\nweapon_yaw -40 / 40\nrudder -45 / 45\n```"}},
{"function":{"name":"GetNWBool","parent":"Entity","type":"classfunc","description":{"text":"Retrieves a networked boolean value at specified index on the entity that is set by .","page":"Entity:SetNWBool"},"realm":"Shared","args":{"arg":[{"text":"The key that is associated with the value","name":"key","type":"string"},{"text":"The value to return if we failed to retrieve the value. (If it isn't set)","name":"fallback","type":"any","default":"false"}]},"rets":{"ret":{"text":"The value associated with the key","name":"","type":"any"}}}},
{"function":{"name":"GetNWAngle","parent":"Entity","type":"classfunc","description":{"text":"Retrieves a networked angle value at specified index on the entity that is set by .","page":"Entity:SetNWAngle"},"realm":"Shared","args":{"arg":[{"text":"The key that is associated with the value","name":"key","type":"string"},{"text":"The value to return if we failed to retrieve the value. (If it isn't set)","name":"fallback","type":"any","default":"Angle( 0, 0, 0 )"}]},"rets":{"ret":{"text":"The value associated with the key","name":"","type":"any"}}}},
{"function":{"name":"GetNumBodyGroups","parent":"Entity","type":"classfunc","description":"Returns the body group count of the entity.","realm":"Shared","rets":{"ret":{"text":"Amount of bodygroups the entitys model has","name":"","type":"number"}}}},
{"function":{"name":"GetNetworkOrigin","parent":"Entity","type":"classfunc","description":"Gets networked origin for entity.","realm":"Shared","rets":{"ret":{"text":"origin","name":"","type":"Vector"}}}},
{"function":{"name":"GetNoDraw","parent":"Entity","type":"classfunc","description":{"text":"Returns if the entity's rendering and transmitting has been disabled.","note":{"text":"This is equivalent to calling ( EF_NODRAW )","page":"Entity:IsEffectActive"}},"realm":"Shared","rets":{"ret":{"text":"Whether the entity's rendering and transmitting has been disabled.","name":"","type":"boolean"}}}},
{"function":{"name":"GetNetworkedVector","parent":"Entity","type":"classfunc","description":{"text":"Retrieves a networked vector value at specified index on the entity that is set by .","deprecated":{"text":"You should use  instead.","page":"Entity:GetNWVector"},"page":"Entity:SetNetworkedVector"},"realm":"Shared","args":{"arg":[{"text":"The key that is associated with the value","name":"key","type":"string"},{"text":"The value to return if we failed to retrieve the value. ( If it isn't set )","name":"fallback","type":"Vector","default":"Vector( 0, 0, 0 )"}]},"rets":{"ret":{"text":"The retrieved value","name":"","type":"Vector"}}}},
{"function":{"name":"GetNetworkedVarTable","parent":"Entity","type":"classfunc","description":{"text":"Returns all the networked variables in an entity.","deprecated":{"text":"You should be using  instead.","page":"Entity:GetNWVarTable"}},"realm":"Shared","rets":{"ret":{"text":"Key-Value table of all networked variables.","name":"","type":"table"}}},"example":{"description":"Prints all NWVars that exist for Player 1.","code":"PrintTable( Entity(1):GetNWVarTable() )","output":"```\nUserGroup\t=\towner\n```"}},
{"function":{"name":"GetNetworkedVarProxy","parent":"Entity","type":"classfunc","description":{"text":"Returns callback function for given NWVar of this entity.","deprecated":{"text":"You should be using  instead.","page":"Entity:GetNWVarProxy"},"note":"Currently this function only works for the NW2Var system (accessed by adding a 2 in between Networked and Var for most NetworkedVar functions), which will replace the original one at some point in the future"},"realm":"Shared","file":{"text":"lua/includes/extensions/entity.lua","line":"495-L506"},"args":{"arg":{"text":"The name of the NWVar to get callback of.","name":"name","type":"string"}},"rets":{"ret":{"text":"The callback of given NWVar, if any.","name":"","type":"function"}}},"example":{"description":"Prints callback function of a NWVar called \"Key\" of Player 1.","code":"print( Entity(1):GetNetworkedVarProxy( \"Key\" ) )\nEntity(1):SetNetworkedVarProxy( \"Key\", print )\nprint( Entity(1):GetNetworkedVarProxy( \"Key\" ) )","outputfixedwidth":"Fixed width","output":"nil\nfunction: builtin#25"}},
{"function":{"name":"GetNetworkedInt","parent":"Entity","type":"classfunc","description":{"text":"Retrieves a networked integer value at specified index on the entity that is set by .","deprecated":{"text":"You should use  instead.","page":"Entity:GetNWInt"},"page":"Entity:SetNetworkedInt"},"realm":"Shared","args":{"arg":[{"text":"The key that is associated with the value","name":"key","type":"string"},{"text":"The value to return if we failed to retrieve the value. ( If it isn't set )","name":"fallback","type":"number","default":"0"}]},"rets":{"ret":{"text":"The retrieved value","name":"","type":"number"}}}},
{"function":{"name":"GetNetworkedString","parent":"Entity","type":"classfunc","description":{"text":"Retrieves a networked string value at specified index on the entity that is set by .","deprecated":{"text":"You should use  instead.","page":"Entity:GetNWString"},"page":"Entity:SetNetworkedString"},"realm":"Shared","args":{"arg":[{"text":"The key that is associated with the value","name":"key","type":"string"},{"text":"The value to return if we failed to retrieve the value. ( If it isn't set )","name":"fallback","type":"string","default":""}]},"rets":{"ret":{"text":"The retrieved value","name":"","type":"string"}}}},
{"function":{"name":"GetNetworkedFloat","parent":"Entity","type":"classfunc","description":{"text":"Retrieves a networked float value at specified index on the entity that is set by .\n\nSeems to be the same as .","deprecated":{"text":"You should use  instead.","page":"Entity:GetNWFloat"},"page":["Entity:SetNetworkedFloat","Entity:GetNetworkedInt"]},"realm":"Shared","args":{"arg":[{"text":"The key that is associated with the value","name":"key","type":"string"},{"text":"The value to return if we failed to retrieve the value. ( If it isn't set )","name":"fallback","type":"number","default":"0"}]},"rets":{"ret":{"text":"The retrieved value","name":"","type":"number"}}}},
{"function":{"name":"GetNetworkedEntity","parent":"Entity","type":"classfunc","description":{"text":"Retrieves a networked float value at specified index on the entity that is set by .","deprecated":{"text":"You should use  instead.","page":"Entity:GetNWEntity"},"page":"Entity:SetNetworkedEntity"},"realm":"Shared","args":{"arg":[{"text":"The key that is associated with the value","name":"key","type":"string"},{"text":"The value to return if we failed to retrieve the value. ( If it isn't set )","name":"fallback","type":"Entity","default":"NULL"}]},"rets":{"ret":{"text":"The retrieved value","name":"","type":"Entity"}}}},
{"function":{"name":"GetNetworkedBool","parent":"Entity","type":"classfunc","description":{"text":"Retrieves a networked boolean value at specified index on the entity that is set by .","deprecated":{"text":"You should use  instead.","page":"Entity:GetNWBool"},"page":"Entity:SetNetworkedBool"},"realm":"Shared","args":{"arg":[{"text":"The key that is associated with the value","name":"key","type":"string"},{"text":"The value to return if we failed to retrieve the value. ( If it isn't set )","name":"fallback","type":"boolean","default":"false"}]},"rets":{"ret":{"text":"The retrieved value","name":"","type":"boolean"}}}},
{"function":{"name":"GetNetworkedAngle","parent":"Entity","type":"classfunc","description":{"text":"Retrieves a networked angle value at specified index on the entity that is set by .","deprecated":{"text":"You should use  instead.","page":"Entity:GetNWAngle"},"page":"Entity:SetNetworkedAngle"},"realm":"Shared","args":{"arg":[{"text":"The key that is associated with the value","name":"key","type":"string"},{"text":"The value to return if we failed to retrieve the value. ( If it isn't set )","name":"fallback","type":"Angle","default":"Angle( 0, 0, 0 )"}]},"rets":{"ret":{"text":"The retrieved value","name":"","type":"Angle"}}}},
{"function":{"name":"GetNetworkAngles","parent":"Entity","type":"classfunc","description":"Gets networked angles for entity.","realm":"Client","rets":{"ret":{"text":"angle","name":"","type":"Angle"}}}},
{"function":{"name":"GetName","parent":"Entity","type":"classfunc","description":"Returns the mapping name of this entity.","realm":"Server","rets":{"ret":{"text":"The name of the Entity","name":"","type":"string"}}}},
{"function":{"name":"GetMoveType","parent":"Entity","type":"classfunc","description":"Returns the entity's movetype","realm":"Shared","rets":{"ret":{"text":"Move type. See","name":"","type":"number","page":"Enums/MOVETYPE"}}}},
{"function":{"name":"GetMoveCollide","parent":"Entity","type":"classfunc","description":"Returns the move collide type of the entity. The move collide is the way a physics object reacts to hitting an object - will it bounce, slide?","realm":"Shared","rets":{"ret":{"text":"The move collide type, see","name":"","type":"number","page":"Enums/MOVECOLLIDE"}}}},
{"function":{"name":"GetMoveParent","parent":"Entity","type":"classfunc","description":{"text":"Returns the movement parent of this entity.\n\nSee  for more info.","page":"Entity:SetMoveParent"},"realm":"Shared","rets":{"ret":{"text":"The movement parent of this entity.","name":"","type":"Entity"}}}},
{"function":{"name":"GetMomentaryRotButtonPos","parent":"Entity","type":"classfunc","description":{"text":"Returns the amount a momentary_rot_button entity is turned based on the given angle. 0 meaning completely turned closed, 1 meaning completely turned open.","warning":"This only works on momentary_rot_button entities."},"realm":"Server","args":{"arg":{"text":"The angle of rotation to compare - usually should be .","name":"turnAngle","type":"Angle","page":"Entity:GetAngles"}},"rets":{"ret":{"text":"The amount the momentary_rot_button is turned, ranging from 0 to 1, or nil if the entity is not a momentary_rot_button.","name":"","type":"number"}}}},
{"function":{"name":"GetModelRenderBounds","parent":"Entity","type":"classfunc","description":{"text":"Returns the entity's model render bounds. By default this will return the same bounds as .","page":"Entity:GetModelBounds"},"realm":"Shared","rets":{"ret":[{"text":"The minimum vector of the bounds","name":"","type":"Vector"},{"text":"The maximum vector of the bounds","name":"","type":"Vector"}]}}},
{"function":{"name":"GetModelRenderBounds","parent":"Entity","type":"classfunc","description":{"text":"Returns the entity's model render bounds. By default this will return the same bounds as .","page":"Entity:GetModelBounds"},"realm":"Shared","rets":{"ret":[{"text":"The minimum vector of the bounds","name":"","type":"Vector"},{"text":"The maximum vector of the bounds","name":"","type":"Vector"}]}}},
{"function":{"name":"GetModelRadius","parent":"Entity","type":"classfunc","description":"Gets the models radius.","realm":"Shared","rets":{"ret":{"text":"The radius of the model","name":"","type":"number"}}},"example":{"description":"Example usage of the function, tested on player.","code":"print( Entity(1):GetModelRadius() )","output":"72"}},
{"function":{"name":"GetModelPhysBoneCount","parent":"Entity","type":"classfunc","description":{"text":"Gets the physics bone count of the entity's model. This is only applicable to ragdoll models and only to \"anim\" type .","page":"Scripted Entities"},"realm":"Client","rets":{"ret":{"text":"How many physics bones exist on the model.","name":"","type":"number"}}}},
{"function":{"name":"GetModelBounds","parent":"Entity","type":"classfunc","description":{"text":"Returns the entity's model bounds. This is different than the collision bounds/hull. This is not scaled with , and will return the model's original, unmodified mins and maxs.","page":"Entity:SetModelScale"},"realm":"Shared","rets":{"ret":[{"text":"The minimum vector of the bounds","name":"","type":"Vector"},{"text":"The maximum vector of the bounds","name":"","type":"Vector"}]}}},
{"function":{"name":"GetModelContents","parent":"Entity","type":"classfunc","description":"Returns the contents of the entity's current model.","realm":"Shared","rets":{"ret":{"text":"The contents of the entity's model. See .","name":"","type":"number","page":"Enums/CONTENTS"}}}},
{"function":{"name":"GetModel","parent":"Entity","type":"classfunc","description":{"text":"Gets the model of given entity.","bug":{"text":"This does not necessarily return the model's path, as is the case for brush and virtual models. This is intentional behaviour, however, there is currently no way to retrieve the actual file path.","issue":"2246"}},"realm":"Shared","rets":{"ret":{"text":"The entity's model. Will be a filesystem path for most models.\n\nThis will be  for entities which cannot have models, such as point entities.","name":"","type":"string","page":"nil"}}}},
{"function":{"name":"GetMaxHealth","parent":"Entity","type":"classfunc","description":{"text":"Returns the max health that the entity was given. It can be set via .","page":"Entity:SetMaxHealth"},"realm":"Shared","rets":{"ret":{"text":"Max health.","name":"","type":"number"}}},"example":{"description":"Prints the maximum health set for player 1.","code":"print( Entity( 1 ):GetMaxHealth() )","output":"By default, 100."}},
{"function":{"name":"GetMaterialType","parent":"Entity","type":"classfunc","description":"Returns the surface material of this entity.","realm":"Server","rets":{"ret":{"text":"Surface material. See","name":"","type":"number","page":"Enums/MAT"}}},"example":{"description":"Prints the MAT_ enum name for every prop on the map.","code":"local function BackwardsEnums( enumname ) -- Helper function to build our table of values.\n\tlocal backenums = {}\n\n\tfor k, v in pairs( _G ) do\n\t\tif type( k ) == \"string\" and string.find( k, \"^\"..enumname ) then\n\t\t\tbackenums[ v ] = k\n\t\tend\n\tend\n\n\treturn backenums\nend\n\nlocal MAT = BackwardsEnums( \"MAT_\" )\n\nlocal validclasses = { prop_physics = true, prop_physics_multiplayer = true, prop_dynamic = true }\nfor k, v in pairs( ents.GetAll() ) do\n\tif validclasses[ v:GetClass() ] then\n\t\tprint( v:GetModel(), MAT[ v:GetMaterialType() ] or \"UNKNOWN\" )\n\tend\nend","outputfixedwidth":"Fixed width","output":"models/props_interiors/furniture_couch01a.mdl\tMAT_DIRT\nmodels/props/cs_office/offinspd.mdl\tMAT_GLASS\nmodels/props/cs_office/offinspf.mdl\tMAT_GLASS\nmodels/props_wasteland/controlroom_desk001b.mdl\tMAT_METAL\nmodels/props_junk/wood_crate002a.mdl\tMAT_WOOD\nmodels/props_junk/wood_crate002a.mdl\tMAT_WOOD\nmodels/props_junk/wood_crate001a_damaged.mdl\tMAT_WOOD\nmodels/props_wasteland/controlroom_desk001a.mdl\tMAT_METAL\nmodels/props_wasteland/controlroom_chair001a.mdl\tMAT_METAL\nmodels/props_c17/tools_wrench01a.mdl\tMAT_METAL\nmodels/props/cs_office/radio.mdl\tMAT_COMPUTER\nmodels/props_junk/pushcart01a.mdl\tMAT_METAL\nmodels/props_wasteland/kitchen_shelf001a.mdl\tMAT_METAL\nmodels/props_wasteland/cafeteria_table001a.mdl\tMAT_WOOD\nmodels/props_c17/furniturecouch001a.mdl\tMAT_DIRT\nmodels/props_c17/furnituretable003a.mdl\tMAT_WOOD\nmodels/combine_gate_vehicle.mdl\tUNKNOWN\nmodels/props_junk/sawblade001a.mdl\tMAT_METAL\nmodels/props/cs_office/offinspf.mdl\tMAT_GLASS\nmodels/props_junk/wood_crate001a.mdl\tMAT_WOOD\n..."}},
{"function":{"name":"GetMaterials","parent":"Entity","type":"classfunc","description":{"text":"Returns all materials of the entity's model.\n\nThis function is unaffected by  as it returns the original materials.","page":"Entity:SetSubMaterial","bug":[{"text":"The server's values take priority on the client.","issue":"3362"},{"text":"The table returned by this function will not contain materials if they are missing from the disk/repository. This means that if you are attempting to find the ID of a material to replace with  and there are missing materials on the model, all subsequent materials will be offset in the table, meaning that the ID you are trying to get will be incorrect.","page":"Entity:SetSubMaterial"}]},"realm":"Shared","rets":{"ret":{"text":"A table containing full paths to the materials of the model.","name":"","type":"table","bug":{"text":"This table is limited to 127 materials, even if the entity has more.","issue":"3216"}}}}},
{"function":{"name":"GetMaterial","parent":"Entity","type":"classfunc","description":{"text":"Returns the material override for this entity. \n\nReturns an empty string if no material override exists. Use  to list it's default materials.","page":"Entity:GetMaterials","bug":{"text":"The server's value takes priority on the client.","issue":"3362"}},"realm":"Shared","rets":{"ret":{"text":"material","name":"","type":"string"}}}},
{"function":{"name":"GetManipulateBoneScale","parent":"Entity","type":"classfunc","description":"Gets the entity's scale manipulation of the given bone. Normal scale is Vector( 1, 1, 1 )","realm":"Shared","args":{"arg":{"text":"The bone's ID","name":"boneID","type":"number"}},"rets":{"ret":{"text":"The entity's scale manipulation of the given bone","name":"","type":"Vector"}}}},
{"function":{"name":"GetManipulateBonePosition","parent":"Entity","type":"classfunc","description":"Gets the entity's position manipulation of the given bone. This is relative to the default position, so it is zero when unmodified.","realm":"Shared","args":{"arg":{"text":"The bone's ID","name":"boneId","type":"number"}},"rets":{"ret":{"text":"The entity's position manipulation of the given bone.","name":"","type":"Vector"}}}},
{"function":{"name":"GetManipulateBoneJiggle","parent":"Entity","type":"classfunc","description":{"text":"Returns the jiggle amount of the entity's bone.\n\nSee  for more info.","page":"Entity:ManipulateBoneJiggle"},"realm":"Shared","args":{"arg":{"text":"The bone ID","name":"boneID","type":"number"}},"rets":{"ret":{"text":"Returns a value ranging from 0 to 255 depending on the value set with .","name":"","type":"number","page":"Entity:ManipulateBoneJiggle"}}}},
{"function":{"name":"GetManipulateBoneAngles","parent":"Entity","type":"classfunc","description":"Gets the entity's angle manipulation of the given bone. This is relative to the default angle, so the angle is zero when unmodified.","realm":"Shared","args":{"arg":{"text":"The bone's ID","name":"boneID","type":"number"}},"rets":{"ret":{"text":"The entity's angle manipulation of the given bone.","name":"","type":"Angle"}}}},
{"function":{"name":"GetLocalPos","parent":"Entity","type":"classfunc","description":"Returns entity's position relative to it's parent.","realm":"Shared","rets":{"ret":{"text":"Relative position","name":"","type":"Vector"}}}},
{"function":{"name":"GetLocalAngularVelocity","parent":"Entity","type":"classfunc","description":"Returns the non-VPhysics angular velocity of the entity relative to its parent entity.","realm":"Shared","rets":{"ret":{"text":"The velocity","name":"","type":"Angle"}}}},
{"function":{"name":"GetLocalAngles","parent":"Entity","type":"classfunc","description":"Returns the rotation of the entity relative to its parent entity.","realm":"Shared","rets":{"ret":{"text":"Relative angle","name":"","type":"Angle"}}}},
{"function":{"name":"GetLightingOriginEntity","parent":"Entity","type":"classfunc","description":"Returns the entity that is being used as the light origin position for this entity.","realm":"Server","rets":{"ret":{"text":"The lighting entity. This will usually be NULL.","name":"","type":"Entity"}}}},
{"function":{"name":"GetLayerWeight","parent":"Entity","type":"classfunc","description":{"text":"Returns the current weight of the layer. See  for more information.","page":"Entity:SetLayerWeight","note":[{"text":"This function only works on  entites!","page":"BaseAnimatingOverlay"},"Next update: is shared"]},"realm":"Server","args":{"arg":{"text":"The Layer ID","name":"layerID","type":"number"}},"rets":{"ret":{"text":"The current weight of the layer","name":"","type":"number"}}}},
{"function":{"name":"GetLayerPlaybackRate","parent":"Entity","type":"classfunc","description":{"text":"Returns the layer playback rate. See also .","page":"Entity:GetLayerDuration","note":{"text":"This function only works on  entites!","page":"BaseAnimatingOverlay"}},"added":"2020.03.17","realm":"Shared","args":{"arg":{"text":"The Layer ID","name":"layerID","type":"number"}},"rets":{"ret":{"text":"The current playback rate.","name":"rate","type":"number"}}}},
{"function":{"name":"GetLayerDuration","parent":"Entity","type":"classfunc","description":{"text":"Returns the duration of given layer.","note":{"text":"This function only works on  entites!","page":"BaseAnimatingOverlay"}},"realm":"Server","args":{"arg":{"text":"The Layer ID","name":"layerID","type":"number"}},"rets":{"ret":{"text":"The duration of the layer","name":"","type":"number"}}}},
{"function":{"name":"GetLayerCycle","parent":"Entity","type":"classfunc","description":{"text":"Returns the animation cycle/frame for given layer.","note":{"text":"This function only works on  entites!","page":"BaseAnimatingOverlay"}},"realm":"Server","args":{"arg":{"text":"The Layer ID","name":"layerID","type":"number"}},"rets":{"ret":{"text":"The animation cycle/frame for given layer.","name":"","type":"number"}}}},
{"function":{"name":"GetKeyValues","parent":"Entity","type":"classfunc","description":{"text":"Returns a table containing all key values the entity has.","note":{"text":"This only includes engine defined key values. \"targetname\" is not an actual key value in-engine, use  for that instead. For custom key values, use  or  to capture and store them.","page":["Entity:GetName","GM:EntityKeyValue","ENTITY:KeyValue"]}},"realm":"Server","rets":{"ret":{"text":"A table of key values.","name":"","type":"table"}}}},
{"function":{"name":"GetHitboxSetCount","parent":"Entity","type":"classfunc","description":"Returns the amount of hitbox sets in the entity.","realm":"Shared","rets":{"ret":{"text":"The amount of hitbox sets in the entity.","name":"","type":"number"}}}},
{"function":{"name":"GetInternalVariable","parent":"Entity","type":"classfunc","description":{"text":"An interface for accessing internal key values on entities.\n\n\nThis function returns variables created with **DEFINE_KEYFIELD** in C++ entities.\n\nSee  for a more detailed explanation.","page":"Entity:GetSaveTable"},"realm":"Shared","args":{"arg":{"text":"Name of variable corresponding to an entity save value.","name":"VariableName","type":"string"}},"rets":{"ret":{"text":"The internal variable value","name":"","type":"any"}}}},
{"function":{"name":"GetHitboxSet","parent":"Entity","type":"classfunc","description":"Returns entity's current hit box set","realm":"Shared","rets":{"ret":[{"text":"The current hit box set id, or no value if the entity doesn't have hit boxes","name":"","type":"number"},{"text":"The current hit box set name, or no value if the entity doesn't have hit boxes","name":"","type":"string"}]}}},
{"function":{"name":"GetHitBoxHitGroup","parent":"Entity","type":"classfunc","description":"Gets the hit group of a given hitbox in a given hitbox set.","realm":"Shared","added":"2020.03.17","args":{"arg":[{"text":"The number of the hit box.","name":"hitbox","type":"number"},{"text":"The number of the hit box set. This should be 0 in most cases.\n\nNumbering for these sets start from 0. The total group count can be found with .","name":"hitboxset","type":"number","page":"Entity:GetHitBoxSetCount"}]},"rets":{"ret":{"text":"The hitbox group of given hitbox. See","name":"group","type":"number","page":"Enums/HITGROUP"}}}},
{"function":{"name":"GetHitBoxGroupCount","parent":"Entity","type":"classfunc","description":{"text":"Returns the number of hit box sets that an entity has. Functionally identical to","deprecated":{"text":"You should use  instead.","page":"Entity:GetHitboxSetCount"},"page":"Entity:GetHitboxSetCount"},"realm":"Shared","rets":{"ret":{"text":"number of hit box sets","name":"","type":"number"}}},"example":{"description":"Prints how many hit box sets the client has","code":"local numHitBoxGroups = LocalPlayer():GetHitBoxGroupCount()\nprint(numHitBoxGroups)"}},
{"function":{"name":"GetHitBoxCount","parent":"Entity","type":"classfunc","description":"Gets how many hit boxes are in a given hit box group","realm":"Shared","args":{"arg":{"text":"The number of the hit box group","name":"group","type":"number"}},"rets":{"ret":{"text":"The number of hit boxes.","name":"","type":"number"}}},"example":{"description":"Will print out how many hit boxes the client has in each of their hit box groups","code":"local numHitBoxGroups = LocalPlayer():GetHitBoxSetCount()\n\nfor i=0, numHitBoxGroups - 1 do\n  local numHitBoxes = LocalPlayer():GetHitBoxCount( i )\n  print(\"Hit box group \" .. i .. \" has \" .. numHitBoxes .. \" hit boxes!\")\nend","output":"\"Hit box group 0 has 17 hit boxes!\""}},
{"function":{"name":"GetHitBoxBounds","parent":"Entity","type":"classfunc","description":"Gets the bounds (min and max corners) of a hit box.","realm":"Shared","args":{"arg":[{"text":"The number of the hit box.","name":"hitbox","type":"number"},{"text":"The group of the hit box. This should be 0 in most cases.","name":"group","type":"number"}]},"rets":{"ret":[{"text":"Hit box mins. Will be nil if the hit box index was out of range.","name":"","type":"Vector"},{"text":"Hit box maxs. Will be nil if the hit box index was out of range.","name":"","type":"Vector"}]}},"example":{"description":"Displays the mins and maxs for the client's first hitbox in the first group, which is generally the head.","code":"local mins, maxs = LocalPlayer():GetHitBoxBounds(0, 0)\nprint(mins, maxs)","output":"-1.250000 -6.500000 -3.190000\t8.250000 3.500000 3.310000"}},
{"function":{"name":"GetGroundSpeedVelocity","parent":"Entity","type":"classfunc","description":{"text":"Returns the entity's ground speed velocity, which is based on the entity's walk/run speed and/or the ground speed of their sequence (  ). Will return an empty  if the entity isn't moving on the ground.","page":["Entity:GetSequenceGroundSpeed","Vector"]},"realm":"Server","rets":{"ret":{"text":"The ground speed velocity.","name":"","type":"Vector"}}}},
{"function":{"name":"GetHitBoxBone","parent":"Entity","type":"classfunc","description":"Gets the bone the hit box is attached to.","realm":"Shared","args":{"arg":[{"text":"The number of the hit box.","name":"hitbox","type":"number"},{"text":"The number of the hit box set. This should be 0 in most cases.\n\nNumbering for these sets start from 0. The total amount of sets can be found with .","name":"hboxset","type":"number","page":"Entity:GetHitBoxSetCount"}]},"rets":{"ret":{"text":"The number of the bone. Will be nil if the hit box index was out of range.","name":"","type":"number"}}},"example":{"code":"local ply = LocalPlayer()\nlocal numHitBoxSets = ply:GetHitBoxSetCount()\n\nfor hboxset=0, numHitBoxSets - 1 do\n  local numHitBoxes = ply:GetHitBoxCount( hboxset )\n    \n  for hitbox=0, numHitBoxes - 1 do\n    local bone = ply:GetHitBoxBone(hitbox, hboxset )\n\n    print( \"Hit box set \" .. hboxset .. \", hitbox \" .. hitbox .. \" is attached to bone \" .. ply:GetBoneName(bone) )\n  end\nend","output":"Hit box set 0, hit box 0 is attached to bone ValveBiped.Bip01_Head1, etc."}},
{"function":{"name":"GetGroundEntity","parent":"Entity","type":"classfunc","description":"Returns the object the entity is standing on.","realm":"Shared","rets":{"ret":{"text":"The ground entity.","name":"","type":"Entity"}}}},
{"function":{"name":"GetGravity","parent":"Entity","type":"classfunc","description":"Gets the gravity multiplier of the entity.","realm":"Shared","rets":{"ret":{"text":"gravityMultiplier","name":"","type":"number"}}}},
{"function":{"name":"GetFriction","parent":"Entity","type":"classfunc","description":"Returns how much friction an entity has. Entities default to 1 (100%) and can be higher or even negative.","realm":"Server","rets":{"ret":{"text":"friction","name":"","type":"number"}}}},
{"function":{"name":"GetForward","parent":"Entity","type":"classfunc","description":"Returns the forward vector of the entity, as a normalized direction vector","realm":"Shared","rets":{"ret":{"text":"forwardDir","name":"","type":"Vector"}}}},
{"function":{"name":"GetFlexWeight","parent":"Entity","type":"classfunc","description":"Returns current weight ( value ) of the flex.","realm":"Shared","args":{"arg":{"text":"The ID of the flex to get weight of","name":"flex","type":"number"}},"rets":{"ret":{"text":"The current weight of the flex","name":"","type":"number"}}}},
{"function":{"name":"GetFlexScale","parent":"Entity","type":"classfunc","description":"Returns the flex scale of the entity.","realm":"Shared","rets":{"ret":{"text":"The flex scale","name":"","type":"number"}}}},
{"function":{"name":"GetFlexNum","parent":"Entity","type":"classfunc","description":"Returns the number of flexes this entity has.","realm":"Shared","rets":{"ret":{"text":"The number of flexes.","name":"","type":"number"}}}},
{"function":{"name":"GetFlexName","parent":"Entity","type":"classfunc","description":"Returns flex name.","realm":"Shared","args":{"arg":{"text":"The flex id to look up name of","name":"id","type":"number"}},"rets":{"ret":{"text":"The flex name","name":"","type":"string"}}}},
{"function":{"name":"GetFlexIDByName","parent":"Entity","type":"classfunc","description":"Returns the ID of the flex based on given name.","realm":"Shared","args":{"arg":{"text":"The name of the flex to get the ID of. Case sensitive.","name":"name","type":"string"}},"rets":{"ret":{"text":"The ID of flex\n* nil if no flex with given name was found","name":"","type":"number"}}}},
{"function":{"name":"GetFlexBounds","parent":"Entity","type":"classfunc","description":"Returns acceptable value range for the flex.","realm":"Shared","args":{"arg":{"text":"The ID of the flex to look up bounds of","name":"flex","type":"number"}},"rets":{"ret":[{"text":"The minimum value for this flex","name":"","type":"number"},{"text":"The maximum value for this flex","name":"","type":"number"}]}}},
{"function":{"name":"GetFlags","parent":"Entity","type":"classfunc","description":"Returns all flags of given entity.","realm":"Shared","rets":{"ret":{"text":"Flags of given entity as a bitflag, see","name":"","type":"number","page":"Enums/FL"}}}},
{"function":{"name":"GetElasticity","parent":"Entity","type":"classfunc","description":"Returns the elasticity of this entity, used by some flying entities such as the Helicopter NPC to determine how much it should bounce around when colliding.","realm":"Shared","rets":{"ret":{"text":"elasticity","name":"","type":"number"}}}},
{"function":{"name":"GetEFlags","parent":"Entity","type":"classfunc","description":"Returns a bit flag of all engine flags of the entity.","realm":"Shared","rets":{"ret":{"text":"Engine flags, see","name":"","type":"number","page":"Enums/EFL"}}}},
{"function":{"name":"GetEffects","parent":"Entity","type":"classfunc","description":"Returns a bit flag of all engine effect flags of the entity.","realm":"Shared","rets":{"ret":{"text":"Engine effect flags, see","name":"","type":"number","page":"Enums/EF"}}}},
{"function":{"name":"GetDTVector","parent":"Entity","type":"classfunc","description":{"text":"This is called internally by the  system, you can use this in cases where using NetworkVar is not possible.\n\nGet a vector stored in the datatable of the entity.","internal":"","page":"Entity:NetworkVar"},"realm":"Shared","args":{"arg":{"text":"Goes from 0 to 63.\nSpecifies what key to grab from datatable.","name":"key","type":"number"}},"rets":{"ret":{"text":"Requested vector.","name":"","type":"Vector"}}}},
{"function":{"name":"GetDTString","parent":"Entity","type":"classfunc","description":{"text":"This is called internally by the  system, you can use this in cases where using NetworkVar is not possible.\n\nGet a string stored in the datatable of the entity.","internal":"","page":"Entity:NetworkVar"},"realm":"Shared","args":{"arg":{"text":"Goes from 0 to 3.\nSpecifies what key to grab from datatable.","name":"key","type":"number"}},"rets":{"ret":{"text":"Requested string.","name":"","type":"string"}}}},
{"function":{"name":"GetDTInt","parent":"Entity","type":"classfunc","description":{"text":"This is called internally by the  system, you can use this in cases where using NetworkVar is not possible.\n\nGet an integer stored in the datatable of the entity.","internal":"","page":"Entity:NetworkVar"},"realm":"Shared","args":{"arg":{"text":"Goes from 0 to 63.\nSpecifies what key to grab from datatable.","name":"key","type":"number"}},"rets":{"ret":{"text":"32-bit signed integer","name":"","type":"number"}}}},
{"function":{"name":"GetDTFloat","parent":"Entity","type":"classfunc","description":{"text":"This is called internally by the  system, you can use this in cases where using NetworkVar is not possible.\n\nGet a float stored in the datatable of the entity.","internal":"","page":"Entity:NetworkVar"},"realm":"Shared","args":{"arg":{"text":"Goes from 0 to 31.\nSpecifies what key to grab from datatable.","name":"key","type":"number"}},"rets":{"ret":{"text":"Requested float.","name":"","type":"number"}}}},
{"function":{"name":"GetDTFloat","parent":"Entity","type":"classfunc","description":{"text":"This is called internally by the  system, you can use this in cases where using NetworkVar is not possible.\n\nGet a float stored in the datatable of the entity.","internal":"","page":"Entity:NetworkVar"},"realm":"Shared","args":{"arg":{"text":"Goes from 0 to 31.\nSpecifies what key to grab from datatable.","name":"key","type":"number"}},"rets":{"ret":{"text":"Requested float.","name":"","type":"number"}}}},
{"function":{"name":"GetDTAngle","parent":"Entity","type":"classfunc","description":{"text":"This is called internally by the  system, you can use this in cases where using NetworkVar is not possible.\n\nGet an angle stored in the datatable of the entity.","internal":"","page":"Entity:NetworkVar"},"realm":"Shared","args":{"arg":{"text":"Goes from 0 to 63.\nSpecifies what key to grab from datatable.","name":"key","type":"number"}},"rets":{"ret":{"text":"Requested angle.","name":"","type":"Angle"}}}},
{"function":{"name":"GetDTBool","parent":"Entity","type":"classfunc","description":{"text":"This is called internally by the  system, you can use this in cases where using NetworkVar is not possible.\n\nGet a boolean stored in the datatable of the entity.","internal":"","page":"Entity:NetworkVar"},"realm":"Shared","args":{"arg":{"text":"Goes from 0 to 63.\nSpecifies what key to grab from datatable.","name":"key","type":"number"}},"rets":{"ret":{"text":"Requested boolean.","name":"","type":"boolean"}}}},
{"function":{"name":"GetCycle","parent":"Entity","type":"classfunc","description":"Returns the frame of the currently played sequence. This will be a number between 0 and 1 as a representation of sequence progress.","realm":"Shared","rets":{"ret":{"text":"The frame of the currently played sequence","name":"","type":"number"}}}},
{"function":{"name":"GetCustomCollisionCheck","parent":"Entity","type":"classfunc","description":{"text":"Returns whether this entity uses custom collision check set by .","page":"Entity:SetCustomCollisionCheck"},"realm":"Shared","rets":{"ret":{"text":"Whether this entity uses custom collision check or not","name":"","type":"boolean"}}}},
{"function":{"name":"GetCreator","parent":"Entity","type":"classfunc","description":"Gets the creator of the SENT.","realm":"Server","file":{"text":"lua/includes/extensions/entity.lua","line":"57-L59"},"rets":{"ret":{"text":"The creator, NULL for no creator.","name":"","type":"Player"}}}},
{"function":{"name":"GetCreationTime","parent":"Entity","type":"classfunc","description":{"text":"Returns the time the entity was created on, relative to .","page":"Global.CurTime"},"realm":"Shared","rets":{"ret":{"text":"The time the entity was created on.","name":"","type":"number"}}}},
{"function":{"name":"GetConstrainedPhysObjects","parent":"Entity","type":"classfunc","description":"Returns the two entities physobjects involved in a constraint ent, or no value if the entity is not a constraint.","realm":"Server","rets":{"ret":[{"text":"phys1","name":"","type":"PhysObj"},{"text":"phys2","name":"","type":"PhysObj"}]}},"example":{"description":"From gmsave/constraints.lua","code":"function gmsave.ConstraintSave( ent )\n local t = {}\n t.EntOne, t.EntTwo = ent:GetConstrainedEntities()\n local PhysA, PhysB = ent:GetConstrainedPhysObjects()\n \n t.BoneOne = GetPhysicsObjectNum( t.EntOne, PhysA )\n t.BoneTwo = GetPhysicsObjectNum( t.EntTwo, PhysB )\n t.EntOne = gmsave.EntityEncode( t.EntOne )\n t.EntTwo = gmsave.EntityEncode( t.EntTwo )\n return t\nend"}},
{"function":{"name":"GetConstrainedPhysObjects","parent":"Entity","type":"classfunc","description":"Returns the two entities physobjects involved in a constraint ent, or no value if the entity is not a constraint.","realm":"Server","rets":{"ret":[{"text":"phys1","name":"","type":"PhysObj"},{"text":"phys2","name":"","type":"PhysObj"}]}},"example":{"description":"From gmsave/constraints.lua","code":"function gmsave.ConstraintSave( ent )\n local t = {}\n t.EntOne, t.EntTwo = ent:GetConstrainedEntities()\n local PhysA, PhysB = ent:GetConstrainedPhysObjects()\n \n t.BoneOne = GetPhysicsObjectNum( t.EntOne, PhysA )\n t.BoneTwo = GetPhysicsObjectNum( t.EntTwo, PhysB )\n t.EntOne = gmsave.EntityEncode( t.EntOne )\n t.EntTwo = gmsave.EntityEncode( t.EntTwo )\n return t\nend"}},
{"function":{"name":"GetConstrainedEntities","parent":"Entity","type":"classfunc","description":"Returns the two entities involved in a constraint ent, or nil if the entity is not a constraint.","realm":"Server","rets":{"ret":[{"text":"ent1","name":"","type":"Entity"},{"text":"ent2","name":"","type":"Entity"}]}},"example":{"description":"From gmsave/constraints.lua","code":"function gmsave.ConstraintSave( ent )\n\tlocal t = {}\n\tt.EntOne, t.EntTwo = ent:GetConstrainedEntities()\n\tlocal PhysA, PhysB = ent:GetConstrainedPhysObjects()\n\n\tt.BoneOne = GetPhysicsObjectNum( t.EntOne, PhysA )\n\tt.BoneTwo = GetPhysicsObjectNum( t.EntTwo, PhysB )\n\tt.EntOne = gmsave.EntityEncode( t.EntOne )\n\tt.EntTwo = gmsave.EntityEncode( t.EntTwo )\n\treturn t\n\nend"}},
{"function":{"name":"GetColor","parent":"Entity","type":"classfunc","description":{"text":"Returns the color the entity is set to.","bug":{"text":"The returned color will not have the color metatable.","issue":"2407"}},"realm":"Shared","rets":{"ret":{"text":"The color of the entity as a .","name":"","type":"table","page":"Color"}}},"example":{"description":"","code":"for key, ply in pairs( player.GetAll( ) ) do -- Loop through all players on the server\n local col = ply:GetColor( ); -- Gets the players color and assigns it to local variable col\n \n print( \"Printing \" .. ply:Nick() .. \"'s color!\" ); -- Say we are printing the players name's color\n PrintTable( col ); -- Pass col into PrintTable to print to contents of col\nend","output":"Loop through all players, and print their color."}},
{"function":{"name":"GetCollisionGroup","parent":"Entity","type":"classfunc","description":"Returns the entity's collision group","realm":"Shared","rets":{"ret":{"text":"The collision group. See","name":"","type":"number","page":"Enums/COLLISION_GROUP"}}}},
{"function":{"name":"GetCollisionBounds","parent":"Entity","type":"classfunc","description":{"text":"Returns an entity's collision bounding box. In most cases, this will return the same bounding box as  unless the entity does not have a physics mesh or it has a  different from the default.","page":["Entity:GetModelBounds","PhysObj"],"bug":{"text":"This can be out-of-sync between the client and server for weapons.","issue":"223"}},"realm":"Shared","rets":{"ret":[{"text":"The minimum vector of the collision bounds","name":"","type":"Vector"},{"text":"The maximum vector of the collision bounds","name":"","type":"Vector"}]}}},
{"function":{"name":"GetClass","parent":"Entity","type":"classfunc","description":"Returns the classname of a entity. This is often the name of the Lua file or folder containing the files for the entity","realm":"Shared","rets":{"ret":{"text":"The entity's classname","name":"","type":"string"}}},"example":{"description":"Prints the classname of the weapon that the player is holding.","code":"print( LocalPlayer( ):GetActiveWeapon( ):GetClass( ) )","output":"Prints the classname of the weapon that the player is holding. (ie weapon_crowbar)"}},
{"function":{"name":"GetChildren","parent":"Entity","type":"classfunc","description":{"text":"Gets the children of the entity - that is, every entity whose move parent is this entity.","note":{"text":"This function returns  children, **NOT** !\n\n however also calls .\n\n\n\nThis means that some entities in the returned list might have a NULL .\n\nThis also means that using this function on players will return their weapons on the client but not the server.","page":["Entity:SetMoveParent","Entity:SetParent","Entity:SetParent","Entity:SetMoveParent","Entity:GetParent"]}},"realm":"Shared","rets":{"ret":{"text":"A list of movement children entities","name":"","type":"table"}}},"example":{"description":"Example usage and output","code":"-- ent is a prop_effect entity\nPrintTable( ent:GetChildren() )","output":"1\t=\tEntity [184][prop_dynamic]"}},
{"function":{"name":"GetChildBones","parent":"Entity","type":"classfunc","description":"Returns ids of child bones of given bone.","realm":"Shared","file":{"text":"lua/includes/extensions/entity.lua","line":"153-L167"},"args":{"arg":{"text":"Bone id to lookup children of","name":"boneid","type":"number"}},"rets":{"ret":{"text":"A table of bone ids","name":"","type":"table"}}}},
{"function":{"name":"GetCallbacks","parent":"Entity","type":"classfunc","description":{"text":"Returns the specified hook callbacks for this entity added with \n\nThe callbacks can then be removed with .","page":["Entity:AddCallback","Entity:RemoveCallback"]},"realm":"Shared","args":{"arg":{"text":"The hook to retrieve the callbacks from, see  for the possible hooks.","name":"hook","type":"string","page":"Entity Callbacks"}},"rets":{"ret":{"text":"A table containing the callbackid and function of all the callbacks for the specified hook","name":"","type":"table"}}}},
{"function":{"name":"GetBrushSurfaces","parent":"Entity","type":"classfunc","description":"Returns a table of brushes surfaces for brush model entities.","realm":"Shared","rets":{"ret":{"text":"Table of s if the entity has a brush model, or  otherwise.","name":"","type":"table","page":["SurfaceInfo","no value"]}}}},
{"function":{"name":"GetBrushPlaneCount","parent":"Entity","type":"classfunc","description":"Returns the amount of planes of non-nodraw brush model surfaces of the entity's model.","realm":"Shared","rets":{"ret":{"text":"The amount of brush model planes of the entity's model. This will be 0 for any non-brush model.","name":"","type":"number"}}}},
{"function":{"name":"GetBoneSurfaceProp","parent":"Entity","type":"classfunc","description":"Returns the surface property of the specified bone.","realm":"Shared","args":{"arg":{"text":"The bone id. See .","name":"bone","type":"number","page":"Entity:LookupBone"}},"rets":{"ret":{"text":"The surface property of the bone to be used with  or an empty string on failure.","name":"","type":"string","page":"util.GetSurfaceIndex"}}}},
{"function":{"name":"GetBrushPlane","parent":"Entity","type":"classfunc","description":{"text":"Returns info about given plane of non-nodraw brush model surfaces of the entity's model. Works on worldspawn as well.","warning":"This only works on entities with brush models."},"realm":"Shared","args":{"arg":{"text":"The index of the plane to get info of. Starts from 0.","name":"id","type":"number"}},"rets":{"ret":[{"text":"The origin of the plane.\n\nThis will be either the first vertex's position (if available) or the plane's normal multiplied by the plane's distance.","name":"","type":"Vector"},{"text":"The normal of the plane.","name":"","type":"Vector"},{"text":"The \"distance\" of the plane.\n\nThe distance is the dot product of the plane's normal and the point it was initialized with.","name":"","type":"number"}]}}},
{"function":{"name":"GetBonePosition","parent":"Entity","type":"classfunc","description":{"text":"Returns the position and angle of the given attachment, relative to the world.","bug":[{"text":"This can return the server's position during server lag.","issue":"884"},{"text":"This can return garbage serverside or (0,0,0) for v49 models.","issue":"3285","page":"Global.Vector"},{"text":"This can return garbage if a trace passed through the target bone during bone matrix access.","issue":"3739"}]},"realm":"Shared","args":{"arg":{"text":"The bone index of the bone to get the position of. See .","name":"boneIndex","type":"number","page":"Entity:LookupBone"}},"rets":{"ret":[{"text":"The bone's position relative to the world.","name":"","type":"Vector"},{"text":"The bone's angle relative to the world.","name":"","type":"Angle"}]}}},
{"function":{"name":"GetBoneParent","parent":"Entity","type":"classfunc","description":{"text":"Returns parent bone of given bone.","note":{"text":"Will return -1 for  until  is called on the entity.","page":["Global.ClientsideModel","Entity:SetupBones"]}},"realm":"Shared","args":{"arg":{"text":"The bode ID of the bone to get parent of","name":"bone","type":"number"}},"rets":{"ret":{"text":"Parent bone ID or -1 if we failed for some reason.","name":"","type":"number"}}}},
{"function":{"name":"GetBoneMatrix","parent":"Entity","type":"classfunc","description":{"text":"Returns the matrix (position / rotation transform) of a given bone entity.","bug":[{"text":"This can return the server's matrix during server lag.","issue":"884"},{"text":"This can return garbage serverside or a 0,0,0 fourth column (represents position) for v49 models.","issue":"3285"}]},"realm":"Shared","args":{"arg":{"text":"The bone to retrieve matrix of.\n* Bones clientside and serverside will differ","name":"boneID","type":"number"}},"rets":{"ret":{"text":"The matrix\n\n* Some entities don't update animation every frame such as prop_physics and won't have accurate bone matrix.","name":"","type":"VMatrix"}}}},
{"function":{"name":"GetBoneName","parent":"Entity","type":"classfunc","description":"Returns name of given bone id.","realm":"Shared","args":{"arg":{"text":"ID of bone to lookup name of","name":"index","type":"number"}},"rets":{"ret":{"text":"The name of given bone\n\n* nil in case we failed or entity doesn't have a model\n* \"__INVALIDBONE__\" in case the name cannot be read or the index is out of range.","name":"","type":"string"}}},"example":[{"description":"Will print name of bone name with id 0 for first player.","code":"print( Entity( 1 ):GetBoneName( 0 ) )","output":"ValveBiped.Bip01_Pelvis"},{"description":"Prints all the bones of an entity.","code":"function PrintBones(ent)\n    for i=0, ent:GetBoneCount()-1 do\n        print(i,ent:GetBoneName(i))\n    end\nend","outputfixedwidth":"Fixed width","output":"0\tValveBiped.Bip01_Pelvis\n1\tValveBiped.Bip01_Spine\n2\tValveBiped.Bip01_Spine1\n3\tValveBiped.Bip01_Spine2\n4\tValveBiped.Bip01_Spine4\n5\tValveBiped.Bip01_Neck1\n6\tValveBiped.Bip01_Head1\n7\tValveBiped.forward\n8\tValveBiped.Bip01_R_Clavicle\n9\tValveBiped.Bip01_R_UpperArm\n10\tValveBiped.Bip01_R_Forearm\n11\tValveBiped.Bip01_R_Hand\n12\tValveBiped.Anim_Attachment_RH\n13\tValveBiped.Bip01_L_Clavicle\n14\tValveBiped.Bip01_L_UpperArm\n15\tValveBiped.Bip01_L_Forearm\n16\tValveBiped.Bip01_L_Hand\n17\tValveBiped.Anim_Attachment_LH\n18\tValveBiped.Bip01_R_Thigh\n19\tValveBiped.Bip01_R_Calf\n20\tValveBiped.Bip01_R_Foot\n21\tValveBiped.Bip01_R_Toe0\n22\tValveBiped.Bip01_L_Thigh\n23\tValveBiped.Bip01_L_Calf\n24\tValveBiped.Bip01_L_Foot\n25\tValveBiped.Bip01_L_Toe0\n26\tValveBiped.Bip01_L_Finger4\n27\tValveBiped.Bip01_L_Finger41\n28\tValveBiped.Bip01_L_Finger42\n29\tValveBiped.Bip01_L_Finger3\n30\tValveBiped.Bip01_L_Finger31\n31\tValveBiped.Bip01_L_Finger32\n32\tValveBiped.Bip01_L_Finger2\n33\tValveBiped.Bip01_L_Finger21\n34\tValveBiped.Bip01_L_Finger22\n35\tValveBiped.Bip01_L_Finger1\n36\tValveBiped.Bip01_L_Finger11\n37\tValveBiped.Bip01_L_Finger12\n38\tValveBiped.Bip01_L_Finger0\n39\tValveBiped.Bip01_L_Finger01\n40\tValveBiped.Bip01_L_Finger02\n41\tValveBiped.Bip01_R_Finger4\n42\tValveBiped.Bip01_R_Finger41\n43\tValveBiped.Bip01_R_Finger42\n44\tValveBiped.Bip01_R_Finger3\n45\tValveBiped.Bip01_R_Finger31\n46\tValveBiped.Bip01_R_Finger32\n47\tValveBiped.Bip01_R_Finger2\n48\tValveBiped.Bip01_R_Finger21\n49\tValveBiped.Bip01_R_Finger22\n50\tValveBiped.Bip01_R_Finger1\n51\tValveBiped.Bip01_R_Finger11\n52\tValveBiped.Bip01_R_Finger12\n53\tValveBiped.Bip01_R_Finger0\n54\tValveBiped.Bip01_R_Finger01\n55\tValveBiped.Bip01_R_Finger02\n56\tValveBiped.Bip01_L_Elbow\n57\tValveBiped.Bip01_L_Ulna\n58\tValveBiped.Bip01_R_Ulna\n59\tValveBiped.Bip01_R_Shoulder\n60\tValveBiped.Bip01_L_Shoulder\n61\tValveBiped.Bip01_R_Trapezius\n62\tValveBiped.Bip01_R_Wrist\n63\tValveBiped.Bip01_R_Bicep\n64\tValveBiped.Bip01_L_Bicep\n65\tValveBiped.Bip01_L_Trapezius\n66\tValveBiped.Bip01_L_Wrist\n67\tValveBiped.Bip01_R_Elbow"}]},
{"function":{"name":"GetBoneController","parent":"Entity","type":"classfunc","description":{"text":"Returns the value of the bone controller with the specified ID.","note":"This is the precursor of pose parameters, and only works for Half Life 1: Source models supporting it."},"realm":"Shared","args":{"arg":{"text":"ID of the bone controller. Goes from 0 to 3.","name":"boneID","type":"number"}},"rets":{"ret":{"text":"The value set on the bone controller.","name":"","type":"number"}}}},
{"function":{"name":"GetBoneCount","parent":"Entity","type":"classfunc","description":{"text":"Returns the amount of bones in the entity.","note":{"text":"Will return -1 for  or undrawn entities until  is called on the entity.","page":["Global.ClientsideModel","Entity:SetupBones"]}},"realm":"Shared","rets":{"ret":{"text":"The amount of bones in given entity; -1 on failure.","name":"","type":"number"}}},"example":{"description":"Prints amount of bones in player 1","code":"print( Entity(1):GetBoneCount() )","output":"The amount of bones in player 1, which normally would be 68."}},
{"function":{"name":"GetBoneContents","parent":"Entity","type":"classfunc","description":"Returns the contents of the specified bone.","realm":"Shared","args":{"arg":{"text":"The bone id. See .","name":"bone","type":"number","page":"Entity:LookupBone"}},"rets":{"ret":{"text":"The contents as a  or 0 on failure.","name":"","type":"number","page":"Enums/CONTENTS"}}}},
{"function":{"name":"GetBodyGroups","parent":"Entity","type":"classfunc","description":"Returns a list of all bodygroups of the entity.","realm":"Shared","rets":{"ret":{"text":"Bodygroups as a table of s if the entity can have bodygroups.","name":"","type":"table","page":"Structures/BodyGroupData"}}}},
{"function":{"name":"GetBodygroupCount","parent":"Entity","type":"classfunc","description":"Returns the count of possible values for this bodygroup.\n\nThis is **not** the maximum value, since the bodygroups start with 0, not 1.","realm":"Shared","args":{"arg":{"text":"The ID of bodygroup to retrieve count of.","name":"bodygroup","type":"number"}},"rets":{"ret":{"text":"Count of values of passed bodygroup.","name":"","type":"number"}}}},
{"function":{"name":"GetBodygroupName","parent":"Entity","type":"classfunc","description":"Gets the name of specific bodygroup for given entity.","realm":"Shared","args":{"arg":{"text":"The id of bodygroup to get the name of.","name":"id","type":"number"}},"rets":{"ret":{"text":"The name of the bodygroup","name":"","type":"string"}}},"example":{"description":"Demonstrates the use of this function.","code":"print( player.GetByID(1):GetEyeTrace().Entity:GetBodygroupName(1) )","output":"\"Weapon\" in console, if player 1 is aiming at airboat."}},
{"function":{"name":"GetBodygroup","parent":"Entity","type":"classfunc","description":"Gets the exact value for specific bodygroup of given entity.","realm":"Shared","args":{"arg":{"text":"The id of bodygroup to get value of. Starts from 0.","name":"id","type":"number"}},"rets":{"ret":{"text":"Current bodygroup. Starts from 0.","name":"","type":"number"}}},"example":{"description":"Gets the value of bodygroup 2 of entity player 1 is aiming at.","code":"print( Entity(1):GetEyeTrace().Entity:GetBodygroup(2) )","output":"\"1\" in console, if player 1 is aiming at airboat."}},
{"function":{"name":"GetBloodColor","parent":"Entity","type":"classfunc","description":{"text":"Returns the blood color of this entity. This can be set with .","page":"Entity:SetBloodColor"},"realm":"Server","rets":{"ret":{"text":"Color from","name":"","type":"number","page":"Enums/BLOOD_COLOR"}}}},
{"function":{"name":"GetBaseVelocity","parent":"Entity","type":"classfunc","description":"Returns the entity's base velocity which is their velocity due to forces applied by other entities. This includes entity-on-entity collision or riding a treadmill.","realm":"Shared","rets":{"ret":{"text":"The base velocity of the entity.","name":"","type":"Vector"}}}},
{"function":{"name":"GetAttachments","parent":"Entity","type":"classfunc","description":{"text":"Returns a table containing all attachments of the given entitys model.\n\nReturns an empty table or **nil** in case it's model has no attachments.","bug":{"text":"This can have inconsistent results in single-player.","issue":"3167"}},"realm":"Shared","rets":{"ret":{"text":"Attachment data. See .","name":"","type":"table","page":"Structures/AttachmentData"}}},"example":{"description":"All the attachments present on the Kliener player model","code":"PrintTable(LocalPlayer():GetAttachments())","output":"```\n1:\n\t\tid\t=\t1\n\t\tname\t=\teyes\n2:\n\t\tid\t=\t2\n\t\tname\t=\tlefteye\n3:\n\t\tid\t=\t3\n\t\tname\t=\trighteye\n4:\n\t\tid\t=\t4\n\t\tname\t=\tnose\n5:\n\t\tid\t=\t5\n\t\tname\t=\tmouth\n6:\n\t\tid\t=\t6\n\t\tname\t=\ttie\n7:\n\t\tid\t=\t7\n\t\tname\t=\tpen\n8:\n\t\tid\t=\t8\n\t\tname\t=\tchest\n9:\n\t\tid\t=\t9\n\t\tname\t=\thips\n10:\n\t\tid\t=\t10\n\t\tname\t=\tlefthand\n11:\n\t\tid\t=\t11\n\t\tname\t=\trighthand\n12:\n\t\tid\t=\t12\n\t\tname\t=\tforward\n13:\n\t\tid\t=\t13\n\t\tname\t=\tanim_attachment_RH\n14:\n\t\tid\t=\t14\n\t\tname\t=\tanim_attachment_LH\n15:\n\t\tid\t=\t15\n\t\tname\t=\tanim_attachment_head\n```"}},
{"function":{"name":"GetAttachment","parent":"Entity","type":"classfunc","description":{"text":"Gets the orientation and position of the attachment by its ID, returns nothing if the attachment does not exist.","note":{"text":"The update rate of this function is limited by the setting of ENT.AutomaticFrameAdvance for !","page":"Scripted Entities"},"bug":{"text":"This will return improper values for viewmodels if used in .","issue":"1255","page":"GM:CalcView"}},"realm":"Shared","args":{"arg":{"text":"The internal ID of the attachment.","name":"attachmentId","type":"number"}},"rets":{"ret":{"text":"The angle and position of the attachment. See the . Most notably, the table contains the keys \"Ang\" and \"Pos\".","name":"","type":"table","page":"Structures/AngPos"}}},"example":{"description":"Grabs the muzzle position of a player's view model","code":"local vm = ply:GetViewModel()\nlocal obj = vm:LookupAttachment( \"muzzle\" )\nlocal muzzlepos = vm:GetAttachment( obj )"}},
{"function":{"name":"GetAnimTime","parent":"Entity","type":"classfunc","description":"Returns the last time the entity had an animation update. Returns 0 if the entity doesn't animate.","realm":"Client","rets":{"ret":{"text":"The last time the entity had an animation update.","name":"","type":"number"}}}},
{"function":{"name":"GetAnimInfo","parent":"Entity","type":"classfunc","description":{"text":"Returns a table containing the number of frames, flags, name, and FPS of an entity's animation ID.","note":"Animation ID is not the same as sequence ID."},"realm":"Shared","args":{"arg":{"text":"The animation ID to look up","name":"animIndex","type":"number"}},"rets":{"ret":{"text":"Information about the animation, or nil if the index is out of bounds","name":"","type":"table"}}},"example":{"description":"A function that finds an entity sequence's corresponding animation and returns the animation info.","code":"function GetAnimInfoSequence( ent, seq )\n\n\tif( !IsValid( ent ) ) then return nil end\n\n\tlocal seqname = ent:GetSequenceName( seq )\n\t\n\tif( seqname == \"Unknown\" ) then return nil end\n\n\tlocal info = nil\n\tlocal done = ent:GetAnimInfo(0).label\t-- this is how we know when to stop\n\tlocal i = 1\n\n\t-- We don't want to increment too high or we will run into errors or possibly crashes\n\twhile(i < 1600) do    -- arbitrary failsafe\n\t\n\t\tinfo = ent:GetAnimInfo(i)\n\t\t\n\t\tif(string.find(info.label, \"@\"..seqname) or string.find(info.label, \"a_\"..seqname)) then\n\t\t\treturn info\n\t\tend\n\t\t\n\t\t-- the first animation info is repeated when there are no animations left in the model\n\t\tif(info.label == done) then break end\n\t\t\n\t\ti = i + 1\n\t\t\n\tend\n\n\treturn nil\n\nend"}},
{"function":{"name":"GetAngles","parent":"Entity","type":"classfunc","description":{"text":"Gets the angles of given entity.","bug":[{"text":"This returns incorrect results for the local player clientside.","issue":"2764"},{"text":"This will return the local player's  in .","issue":"3106","page":["Global.EyeAngles",",rendering hooksCategory:3D_Rendering_Hooks"]},{"text":"This will return (0,0,0) in  while paused in single-player.","issue":"3107","page":["Global.Angle",",rendering hooksCategory:3D_Rendering_Hooks"]}]},"realm":"Shared","rets":{"ret":{"text":"The angles of the entity.","name":"","type":"Angle"}}},"example":{"description":"Prints the 1st player's angles.","code":"print( player.GetByID(1):GetAngles() )","output":"Something like \"0.000 34.529 0.000\" in console."}},
{"function":{"name":"FrameAdvance","parent":"Entity","type":"classfunc","description":"Advances the cycle of an animated entity.\n\nAnimations that loop will automatically reset the cycle so you don't have to - ones that do not will stop animating once you reach the end of their sequence.","realm":"Shared","args":{"arg":{"text":"How many seconds to advance the cycle. Set to 0 to let the engine calculate this for you based on .","name":"interval","type":"number","page":"Global.CurTime"}}},"example":{"description":"From DModelPanel","code":"function PANEL:RunAnimation()\n\tself.Entity:FrameAdvance( (RealTime()-self.LastPaint) * self.m_fAnimSpeed )\t\nend","output":"Animates the entity"}},
{"function":{"name":"GetAbsVelocity","parent":"Entity","type":"classfunc","description":{"text":"Returns the entity's velocity.","note":"Actually binds to CBaseEntity::GetLocalVelocity() which retrieves the velocity of the entity due to its movement in the world from forces such as gravity. Does not include velocity from entity-on-entity collision."},"realm":"Shared","rets":{"ret":{"text":"The velocity of the entity.","name":"","type":"Vector"}}}},
{"function":{"name":"ForcePlayerDrop","parent":"Entity","type":"classfunc","description":"Forces the Entity to be dropped, when it is being held by a player's gravitygun or physgun.","realm":"Shared"}},
{"function":{"name":"FollowBone","parent":"Entity","type":"classfunc","description":{"text":"Makes an entity follow another entity's bone.\n\nInternally this function calls ( parent, boneid ) and ( EF_FOLLOWBONE ).","page":["Entity:SetParent","Entity:AddEffects"],"note":{"text":"If the entity vibrates, you probably need to run ( false ) clientside.","page":"Entity:SetPredictable"},"warning":"This function will not work if the target bone's parent bone is invalid or if the bone is not used by VERTEX LOD0"},"realm":"Shared","args":{"arg":[{"text":"The entity to follow the bone of. If unset, removes the FollowBone effect.","name":"parent","type":"Entity","default":"NULL"},{"text":"The bone to follow","name":"boneid","type":"number"}]}}},
{"function":{"name":"FindTransitionSequence","parent":"Entity","type":"classfunc","description":"Returns a transition from the given start and end sequence.\n\nThis function was only used by HL1 entities and NPCs, before the advent of sequence blending and gestures.","realm":"Shared","args":{"arg":[{"text":"The currently playing sequence","name":"currentSequence","type":"number"},{"text":"The goal sequence.","name":"goalSequence","type":"number"}]},"rets":{"ret":{"text":"The transition sequence, -1 if not available.","name":"","type":"number"}}}},
{"function":{"name":"FireBullets","parent":"Entity","type":"classfunc","description":{"text":"Fires a bullet.\n\nWhen used in a  hook such as  or , it will use  internally.","page":["WEAPON:Think","WEAPON:PrimaryAttack","Player:LagCompensation"],"note":"Lag compensation will not work if this function is called in a timer, regardless if the timer was made in a  hook."},"realm":"Shared","args":{"arg":[{"text":"The bullet data to be used. See the .","name":"bulletInfo","type":"table","page":"Structures/Bullet"},{"text":"Has the effect of encasing the FireBullets call in , only works in multiplayer.","name":"suppressHostEvents","type":"boolean","default":"false","page":"Global.SuppressHostEvents"}]}}},
{"function":{"name":"Fire","parent":"Entity","type":"classfunc","description":{"text":"Fires an entity's input. You can find inputs for most entities on the [Valve Developer Wiki](https://developer.valvesoftware.com/wiki/Output)\n\nSee also  and .","page":["Entity:Input","GM:AcceptInput"]},"realm":"Server","args":{"arg":[{"text":"The name of the input to fire","name":"input","type":"string"},{"text":"The value to give to the input, can also be a  or a .","name":"param","type":"string","default":"","page":["number","boolean"]},{"text":"Delay in seconds before firing","name":"delay","type":"number","default":"0"}]}},"example":{"description":"If you are looking at a door, this will lock it","code":"// Entity(1) is considered a player in this example\nlocal tr = Entity( 1 ):GetEyeTrace()\nlocal ent = tr.Entity\nif IsValid( ent ) then\n\tent:Fire(\"Lock\")\nend"}},
{"function":{"name":"FindBodygroupByName","parent":"Entity","type":"classfunc","description":"Searches for bodygroup with given name.","realm":"Shared","args":{"arg":{"text":"The bodygroup name to search for.","name":"name","type":"string"}},"rets":{"ret":{"text":"Bodygroup ID, -1 if not found","name":"","type":"number"}}}},
{"function":{"name":"EyePos","parent":"Entity","type":"classfunc","description":"Returns the position of an Player/NPC's view.","realm":"Shared","rets":{"ret":{"text":"View position of the entity.","name":"","type":"Vector"}}}},
{"function":{"name":"EyeAngles","parent":"Entity","type":"classfunc","description":{"text":"Returns the direction a player/npc/ragdoll is looking as a world-oriented angle.","bug":[{"text":"This can return an incorrect value in pods.","issue":"1150"},{"text":"This can return an incorrect value in jeeps when used with .","issue":"2620","page":"Player:EnterVehicle"}]},"realm":"Shared","rets":{"ret":{"text":"eyeAng","name":"","type":"Angle"}}},"example":{"description":"Print the local player's angles","code":"print(LocalPlayer():EyeAngles())","output":"When looking straight down, it might return Angle(89,-175.38,0)"}},
{"function":{"name":"Extinguish","parent":"Entity","type":"classfunc","description":{"text":"Extinguishes the entity if it is on fire.\n\nHas no effect if called inside  (and the attacker is the flame that's hurting the entity)\n\nSee also .","page":["GM:EntityTakeDamage","Entity:Ignite"]},"realm":"Server"},"example":{"description":"Demonstrates the use of this function.","code":"Player(1):Extinguish()","output":"Extinguishes the first player if he is on fire."}},
{"function":{"name":"EntIndex","parent":"Entity","type":"classfunc","description":{"text":"Gets the unique entity index of an entity.","note":"Entity indices are marked as unused after deletion, and can be reused by newly-created entities"},"realm":"Shared","rets":{"ret":{"text":"The index of the entity.\n\n-1 for clientside-only or serverside-only entities.","name":"","type":"number"}}},"example":{"description":"Demonstrates the use of this function.","code":"print( player.GetAll()[1]:EntIndex() )","output":"1"}},
{"function":{"name":"EnableCustomCollisions","parent":"Entity","type":"classfunc","description":{"text":"Flags an entity as using custom lua defined collisions. Fixes entities having spongy player collisions or not hitting traces, such as after","page":"Entity:PhysicsFromMesh"},"realm":"Shared","args":{"arg":{"text":"True to flag this entity","name":"useCustom","type":"boolean"}}},"example":{"description":"Creates a mesh table, and assigns it as the entity's collisions","code":"function ENT:ProceduralPlatform()\n\tlocal VERTICES = {},\n\tfor x = 1, 32, 1, do\n\t\tfor y = 1, 32, do\n\t\t\ttable.insert( VERTICES, { pos = ( self:GetPos() + Vector( 0, 0, 1 ) ) } );\n\t\t\ttable.insert( VERTICES, { pos = ( self:GetPos() + Vector( 0, y, 1 ) ) } );\n\t\t\ttable.insert( VERTICES, { pos = ( self:GetPos() + Vector( x, y, 1 ) ) } );\n\n\t\t\ttable.insert( VERTICES, { pos = ( self:GetPos() + Vector( 0, 0, 1 ) ) } );\n\t\t\ttable.insert( VERTICES, { pos = ( self:GetPos() + Vector( x, y, 1 ) ) } );\n\t\t\ttable.insert( VERTICES, { pos = ( self:GetPos() + Vector( x, 0, 1 ) ) } );\n\t\tend\n\tend\n\tself:PhysicsFromMesh( VERTICES );\n\tself:GetPhysicsObject():EnableMotion( false );\n\tself:EnableCustomCollisions( true );\nend"}},
{"function":{"name":"EnableMatrix","parent":"Entity","type":"classfunc","description":{"text":"Can be used to apply a custom  to the entity, mostly used for scaling the model by a .\n\nTo disable it, use .\n\nIf your old scales are wrong due to a recent update, use  as a quick fix.","page":["VMatrix","Vector","Entity:DisableMatrix","Entity:SetLegacyTransform"],"note":{"text":"The matrix can also be modified to apply a custom rotation and offset via the  and  functions.","page":["VMatrix:SetAngles","VMatrix:SetTranslation"]},"bug":[{"text":"This does not scale procedural bones.","issue":"3502"},{"text":"This disables inverse kinematics of an entity.","issue":"3502"}]},"realm":"Client","args":{"arg":[{"text":"The name of the matrix type. \nThe only implemented matrix type is \"RenderMultiply\".","name":"matrixType","type":"string","br":""},{"text":"The matrix to apply before drawing the entity.","name":"matrix","type":"VMatrix"}]}},"example":{"description":"To scale a prop's height by 4x","code":"local scale = Vector(1,1,4)\n\nlocal mat = Matrix()\nmat:Scale(scale)\nprop:EnableMatrix(\"RenderMultiply\", mat)"}},
{"function":{"name":"EnableMatrix","parent":"Entity","type":"classfunc","description":{"text":"Can be used to apply a custom  to the entity, mostly used for scaling the model by a .\n\nTo disable it, use .\n\nIf your old scales are wrong due to a recent update, use  as a quick fix.","page":["VMatrix","Vector","Entity:DisableMatrix","Entity:SetLegacyTransform"],"note":{"text":"The matrix can also be modified to apply a custom rotation and offset via the  and  functions.","page":["VMatrix:SetAngles","VMatrix:SetTranslation"]},"bug":[{"text":"This does not scale procedural bones.","issue":"3502"},{"text":"This disables inverse kinematics of an entity.","issue":"3502"}]},"realm":"Client","args":{"arg":[{"text":"The name of the matrix type. \nThe only implemented matrix type is \"RenderMultiply\".","name":"matrixType","type":"string","br":""},{"text":"The matrix to apply before drawing the entity.","name":"matrix","type":"VMatrix"}]}},"example":{"description":"To scale a prop's height by 4x","code":"local scale = Vector(1,1,4)\n\nlocal mat = Matrix()\nmat:Scale(scale)\nprop:EnableMatrix(\"RenderMultiply\", mat)"}},
{"function":{"name":"EmitSound","parent":"Entity","type":"classfunc","description":{"text":"Plays a sound on an entity. If run clientside, the sound will only be heard locally.\n\nIf used on a player or NPC character with the mouth rigged, the character will \"lip-sync\". This does not work with all sound files.\n\nIt is recommended to use sound scripts ( see  ) over direct file paths. This will allow you to use  to stop the played sound scripts.","page":["sound.Add","Entity:StopSound"],"note":{"text":"When using this function with weapons, use the  itself as the entity, not its owner!","page":"Weapon"},"warning":{"text":"Do not use this for looping sounds with a filepath: see  for more details.","page":"Entity:StopSound"},"bug":{"text":"This does not respond to .","issue":"2651","page":"Global.SuppressHostEvents"}},"realm":"Shared","args":{"arg":[{"text":"The name of the sound to be played.","name":"soundName","type":"string","warning":{"text":"The string will cannot have whitespace at the start or end. You can remove this with .","page":"string.Trim"}},{"text":"A modifier for the distance this sound will reach, acceptable range is 0 to 511. 100 means no adjustment to the level. See \n\nWill not work if a [sound script](https://developer.valvesoftware.com/wiki/Soundscripts) is used.","name":"soundLevel","type":"number","default":"75","page":"Enums/SNDLVL"},{"text":"The pitch applied to the sound. The acceptable range is from 0 to 255. 100 means the pitch is not changed.","name":"pitchPercent","type":"number","default":"100"},{"text":"The volume, from 0 to 1.","name":"volume","type":"number","default":"1"},{"text":"The sound channel, see .\n\nWill not work if a [sound script](https://developer.valvesoftware.com/wiki/Soundscripts) is used.","name":"channel","type":"number","default":"CHAN_AUTO, CHAN_WEAPON for weapons","page":"Enums/CHAN"}]}},"example":{"description":"Plays sound from the first player on the server.","code":"Entity(1):EmitSound( \"garrysmod/save_load1.wav\", 75, 100, 1, CHAN_AUTO ) -- Same as below\nEntity(1):EmitSound( \"garrysmod/save_load1.wav\" ) -- You can remove the arguments that have default values.\n\nEntity(1):EmitSound( \"Weapon_AR2.Single\" )"}},
{"function":{"name":"DropToFloor","parent":"Entity","type":"classfunc","description":{"text":"Move an entity down until it collides with something.","warning":"The entity needs to already have something below it within 256 units."},"realm":"Server"},"example":[{"description":"Move all props on the server down until they collide with something","code":"for _, ent in pairs( ents.FindByClass( \"prop_physics\" ) ) do\n\tent:DropToFloor( )\nend"},{"description":"Drops players to the ground when they spawn","code":"hook.Add( \"PlayerSpawn\", \"DropGround\", function( ply )\n\tply:DropToFloor()\nend )"}]},
{"function":{"name":"DrawShadow","parent":"Entity","type":"classfunc","description":"Sets whether an entity's shadow should be drawn.","realm":"Shared","args":{"arg":{"text":"True to enable, false to disable shadow drawing.","name":"shouldDraw","type":"boolean"}}}},
{"function":{"name":"DTVar","parent":"Entity","type":"classfunc","description":{"text":"Sets up a self.dt.NAME alias for a Data Table variable.","internal":"","warning":{"text":"You should use  instead","page":"Entity:NetworkVar"}},"realm":"Shared","args":{"arg":[{"text":"The type of the DTVar being set up. It can be one of the following: 'Int', 'Float', 'Vector', 'Angle', 'Bool', 'Entity' or 'String'","name":"Type","type":"string"},{"text":"The ID of the DTVar. Can be between 0 and 3 for strings, 0 and 31 for everything else.","name":"ID","type":"number"},{"text":"Name by which you will refer to DTVar. It must be a valid variable name. (No spaces!)","name":"Name","type":"string"}]}},"example":{"description":"Sets up two float networked variables, **TargetZ** and **Speed**","code":"function ENT:SetupDataTables()\n\n\tself:DTVar( \"Float\", 0, \"TargetZ\" )\n\tself:DTVar( \"Float\", 1, \"Speed\" )\n\nend"}},
{"function":{"name":"DrawModel","parent":"Entity","type":"classfunc","description":{"text":"Draws the entity or model.\n\nIf called inside  or , it only draws the entity's model itself.\n\n\nIf called outside of those hooks, it will call both of said hooks depending on , drawing the entire entity again.","page":["ENTITY:Draw","ENTITY:DrawTranslucent","Entity:GetRenderGroup"],"note":{"text":"When drawing an entity more than once per frame in different positions, you should call  before each draw; Otherwise, the entity will retain its first drawn position.","page":"Entity:SetupBones"},"rendercontext":{"hook":"false","type":"3D"},"bug":[{"text":"Calling this on entities with  and  applied causes a crash.","issue":"1558","page":[",EF_BONEMERGEEnums/EF",",EF_NODRAWEnums/EF"]},{"text":"Using this with a map model (():()) crashes the game.","issue":"2688","page":["game.GetWorld",",GetModelEntity:GetModel"]}]},"realm":"Client"},"example":{"description":{"text":"Manually draws a single  on the specified bone, on the given offset for every player affected by this hook.\n\nThis is useful in case you want to reuse a single model without having to create one for each player.","page":"Global.ClientsideModel"},"code":"local modelexample = ClientsideModel( \"models/thrusters/jetpack.mdl\" )\nmodelexample:SetNoDraw( true )\n\nlocal offsetvec = Vector( 3, -5.6, 0 )\nlocal offsetang = Angle( 180, 90, -90 )\n\nhook.Add( \"PostPlayerDraw\" , \"manual_model_draw_example\" , function( ply )\n\tlocal boneid = ply:LookupBone( \"ValveBiped.Bip01_Spine2\" )\n\t\n\tif not boneid then\n\t\treturn\n\tend\n\t\n\tlocal matrix = ply:GetBoneMatrix( boneid )\n\t\n\tif not matrix then \n\t\treturn \n\tend\n\t\n\tlocal newpos, newang = LocalToWorld( offsetvec, offsetang, matrix:GetTranslation(), matrix:GetAngles() )\n\t\n\tmodelexample:SetPos( newpos )\n\tmodelexample:SetAngles( newang )\n\tmodelexample:SetupBones()\n\tmodelexample:DrawModel()\n\t\nend)","output":{"image":{"src":"entity_drawmodel_example.png"}}}},
{"function":{"name":"DrawModel","parent":"Entity","type":"classfunc","description":{"text":"Draws the entity or model.\n\nIf called inside  or , it only draws the entity's model itself.\n\n\nIf called outside of those hooks, it will call both of said hooks depending on , drawing the entire entity again.","page":["ENTITY:Draw","ENTITY:DrawTranslucent","Entity:GetRenderGroup"],"note":{"text":"When drawing an entity more than once per frame in different positions, you should call  before each draw; Otherwise, the entity will retain its first drawn position.","page":"Entity:SetupBones"},"rendercontext":{"hook":"false","type":"3D"},"bug":[{"text":"Calling this on entities with  and  applied causes a crash.","issue":"1558","page":[",EF_BONEMERGEEnums/EF",",EF_NODRAWEnums/EF"]},{"text":"Using this with a map model (():()) crashes the game.","issue":"2688","page":["game.GetWorld",",GetModelEntity:GetModel"]}]},"realm":"Client"},"example":{"description":{"text":"Manually draws a single  on the specified bone, on the given offset for every player affected by this hook.\n\nThis is useful in case you want to reuse a single model without having to create one for each player.","page":"Global.ClientsideModel"},"code":"local modelexample = ClientsideModel( \"models/thrusters/jetpack.mdl\" )\nmodelexample:SetNoDraw( true )\n\nlocal offsetvec = Vector( 3, -5.6, 0 )\nlocal offsetang = Angle( 180, 90, -90 )\n\nhook.Add( \"PostPlayerDraw\" , \"manual_model_draw_example\" , function( ply )\n\tlocal boneid = ply:LookupBone( \"ValveBiped.Bip01_Spine2\" )\n\t\n\tif not boneid then\n\t\treturn\n\tend\n\t\n\tlocal matrix = ply:GetBoneMatrix( boneid )\n\t\n\tif not matrix then \n\t\treturn \n\tend\n\t\n\tlocal newpos, newang = LocalToWorld( offsetvec, offsetang, matrix:GetTranslation(), matrix:GetAngles() )\n\t\n\tmodelexample:SetPos( newpos )\n\tmodelexample:SetAngles( newang )\n\tmodelexample:SetupBones()\n\tmodelexample:DrawModel()\n\t\nend)","output":{"image":{"src":"entity_drawmodel_example.png"}}}},
{"function":{"name":"DisableMatrix","parent":"Entity","type":"classfunc","description":"Disables an active matrix.","realm":"Client","args":{"arg":{"text":"The name of the matrix type to disable.\n\n\n\n\nThe only known matrix type is \"RenderMultiply\".","name":"matrixType","type":"string"}}}},
{"function":{"name":"DispatchTraceAttack","parent":"Entity","type":"classfunc","description":{"text":"Performs a trace attack.","warning":{"text":"Calling this function on the victim entity in  can cause infinite loops.","page":"ENTITY:OnTakeDamage"}},"realm":"Shared","args":{"arg":[{"text":"The damage to apply.","name":"damageInfo","type":"CTakeDamageInfo"},{"text":"Trace result to use to deal damage. See","name":"traceRes","type":"table","page":"Structures/TraceResult"},{"text":"Direction of the attack.","name":"dir","type":"Vector","default":"traceRes.HitNormal"}]}}},
{"function":{"name":"DestroyShadow","parent":"Entity","type":"classfunc","description":"Removes the shadow for the entity.\n\nThe shadow will be recreated as soon as the entity wakes.\n\nDoesn't affect shadows from flashlight/lamps/env_projectedtexture.","realm":"Client"}},
{"function":{"name":"DeleteOnRemove","parent":"Entity","type":"classfunc","description":"Whenever the entity is removed, entityToRemove will be removed also.","realm":"Server","args":{"arg":{"text":"The entity to be removed","name":"entityToRemove","type":"Entity"}}},"example":{"description":"Creates a second chair in spawned jeeps that is removed when the jeep is removed","code":"hook.Add(\"PlayerSpawnedVehicle\", \"VehicleUpgrade\", function(ply,vehicle)\n\tif vehicle:GetClass() == \"prop_vehicle_jeep\" then\n\t\tlocal seat = ents.Create( 'prop_vehicle_prisoner_pod' )\n\t\tseat:SetModel( \"models/nova/jeep_seat.mdl\" )\n\t\tseat:SetPos( vehicle:LocalToWorld(Vector(21,-32,18)) )\n\t\tseat:SetAngles( vehicle:LocalToWorldAngles(Angle(0,-3.5,0)) )\n\t\tseat:Spawn()\n\t\tseat:SetKeyValue( \"limitview\", 0 )\n\t\ttable.Merge( seat, { HandleAnimation = function(_,ply) return ply:SelectWeightedSequence( ACT_HL2MP_SIT ) end } )\n\t\tgamemode.Call( \"PlayerSpawnedVehicle\", ply, seat )\n\t\tvehicle.PassengerSeat = seat\n\t\tvehicle:DeleteOnRemove(seat) //<--\n\t\tconstraint.Weld(seat, vehicle)\n\tend\nend)"}},
{"function":{"name":"CreateShadow","parent":"Entity","type":"classfunc","description":"Draws the shadow of an entity.","realm":"Client"},"example":{"code":"function ENT:Draw()\n self:DrawModel()\n self:CreateShadow()\nend","output":"Draws the shadow of an entity"}},
{"function":{"name":"CreateParticleEffect","parent":"Entity","type":"classfunc","description":{"text":"Creates a clientside particle system attached to the entity. See also","page":"Global.CreateParticleSystem","note":{"text":"The particle effect must be precached with  and the file its from must be added via  before it can be used!","page":["Global.PrecacheParticleSystem","game.AddParticles"]}},"realm":"Client","args":{"arg":[{"text":"The particle name to create","name":"particle","type":"string"},{"text":"Attachment ID to attach the particle to","name":"attachment","type":"number"},{"text":"A table of tables ( IDs 1 to 64 ) having the following structure:\n*  attachtype - The particle attach type. See . **Default:** PATTACH_ABSORIGIN\n*  entity - The parent entity? **Default:** NULL\n*  position - The offset position for given control point. **Default:**  nil\n\nThis only affects the control points of the particle effects and will do nothing if the effect doesn't use control points.","name":"options","type":"table","default":"nil","page":["number",",PATTACHEnums/PATTACH","Entity","Vector"]}]},"rets":{"ret":{"text":"The created particle system.","name":"","type":"CNewParticleEffect"}}}},
{"function":{"name":"CreatedByMap","parent":"Entity","type":"classfunc","description":"Returns whether the entity was created by map or not.","realm":"Server","rets":{"ret":{"text":"Is created by map?","name":"","type":"boolean"}}}},
{"function":{"name":"CollisionRulesChanged","parent":"Entity","type":"classfunc","description":{"text":"Declares that the collision rules of the entity have changed, and subsequent calls for  with this entity may return a different value than they did previously.","page":"GM:ShouldCollide","warning":[{"text":"This function must **not** be called inside of <!--a physics hook, including -->. Instead, it must be called in advance when the condition is known to change.","page":"GM:ShouldCollide"},"Failure to use this function correctly will result in a crash of the physics engine."]},"realm":"Shared"}},
{"function":{"name":"ClearPoseParameters","parent":"Entity","type":"classfunc","description":"Resets all pose parameters such as aim_yaw, aim_pitch and rotation.","realm":"Shared"}},
{"function":{"name":"CallOnRemove","parent":"Entity","type":"classfunc","description":{"text":"Causes a specified function to be run if the entity is removed by any means. This can later be undone by  if you need it to not run.","page":"Entity:RemoveCallOnRemove","bug":{"text":"Using players with this function will provide a gimped entity to the callback.","pull":"1275"}},"realm":"Shared","file":{"text":"lua/includes/extensions/entity.lua","line":"96-L108"},"args":{"arg":[{"text":"Identifier of the function within CallOnRemove","name":"identifier","type":"string"},{"text":"Function to be called on remove","name":"removeFunc","type":"function"},{"text":"Optional arguments to pass to removeFunc. Do note that the first argument passed to the function will always be the entity being removed, and the arguments passed on here start after that.","name":"argn...","type":"vararg"}]}},"example":{"description":"Stops an engine sound when the entity is removed","code":"Entity:CallOnRemove(\"StopEngineSound\",function(ent) ent:StopSound( \"enginenoise.wav\" ) end)"}},
{"function":{"name":"BoundingRadius","parent":"Entity","type":"classfunc","description":"Returns the distance between the center of the bounding box and the furthest bounding box corner.","realm":"Shared","rets":{"ret":{"text":"The radius of the bounding box.","name":"","type":"number"}}}},
{"function":{"name":"BoneLength","parent":"Entity","type":"classfunc","description":"This function takes the boneID and returns the length of it in an unrounded decimal","realm":"Shared","args":{"arg":{"text":"The ID of the bone you want the length of. You may want to get the length of the next bone ( boneID + 1 ) for decent results","name":"boneID","type":"number"}},"rets":{"ret":{"text":"The length of the bone","name":"","type":"number"}}},"example":{"description":"Returns first bones length of first player on the server","code":"print( player.GetByID( 1 ):BoneLength( 1 ) )","output":"Returns 0"}},
{"function":{"name":"BodyTarget","parent":"Entity","type":"classfunc","description":{"text":"Returns a centered vector of this entity, NPCs use this internally to aim at their targets.","note":"This only works on players and NPCs."},"realm":"Server","args":{"arg":[{"text":"The vector of where the the attack comes from.","name":"origin","type":"Vector"},{"text":"Decides if it should return the centered vector with a random offset to it.","name":"noisy","type":"boolean","default":"false"}]},"rets":{"ret":{"text":"The centered vector.","name":"","type":"Vector"}}}},
{"function":{"name":"BoneHasFlag","parent":"Entity","type":"classfunc","description":"Returns whether the entity's bone has the flag or not.","realm":"Shared","args":{"arg":[{"text":"Bone ID to test flag of.","name":"boneID","type":"number"},{"text":"The flag to test, see","name":"flag","type":"number","page":"Enums/BONE"}]},"rets":{"ret":{"text":"Whether the bone has that flag or not","name":"","type":"boolean"}}}},
{"function":{"name":"Blocked","parent":"Entity","type":"classfunc","description":{"text":"Dispatches blocked events to this entity's blocked handler. This function is only useful when interacting with entities like func_movelinear.","internal":""},"realm":"Server","args":{"arg":{"text":"The entity that is blocking us","name":"entity","type":"Entity"}}}},
{"function":{"name":"Blocked","parent":"Entity","type":"classfunc","description":{"text":"Dispatches blocked events to this entity's blocked handler. This function is only useful when interacting with entities like func_movelinear.","internal":""},"realm":"Server","args":{"arg":{"text":"The entity that is blocking us","name":"entity","type":"Entity"}}}},
{"function":{"name":"BecomeRagdollOnClient","parent":"Entity","type":"classfunc","description":{"text":"Spawns a clientside ragdoll for the entity, positioning it in place of the original entity, and makes the entity invisible. It doesn't preserve flex values (face posing) as CSRagdolls don't support flex.\n\nIt does not work on players. Use  instead.\n\nThe original entity is not removed, and neither are any ragdolls previously generated with this function.\n\nTo make the entity re-appear, run ( false )","page":["Player:CreateRagdoll","Entity:SetNoDraw"]},"realm":"Client","rets":{"ret":{"text":"The created ragdoll.","name":"","type":"CSEnt"}}},"example":{"description":"Spawns a ragdoll for all NPCs.","code":"for k,npc in pairs( ents.FindByClass( \"npc_*\" ) ) do\n    npc.RagDoll = npc:BecomeRagdollOnClient()\nend"}},
{"function":{"name":"AlignAngles","parent":"Entity","type":"classfunc","description":{"text":"Returns an angle based on the ones inputted that you can use to align an object.","note":"This function doesn't change the angle of the entity on its own (see example)."},"realm":"Shared","args":{"arg":[{"text":"The angle you want to align from","name":"from","type":"Angle"},{"text":"The angle you want to align to","name":"to","type":"Angle"}]},"rets":{"ret":{"text":"The resulting aligned angle","name":"","type":"Angle"}}},"example":{"description":"This example will make ent1 face up from ent2.","code":"ent1:SetAngles(ent1:AlignAngles(ent1:GetForward():Angle(), ent2:GetUp():Angle()))","output":"Sets ent1's angle to one where ent1 faces up from ent2."}},
{"function":{"name":"AddSolidFlags","parent":"Entity","type":"classfunc","description":"Adds solid flag(s) to the entity.","realm":"Shared","args":{"arg":{"text":"The flag(s) to apply, see .","name":"flags","type":"number","page":"Enums/FSOLID"}}}},
{"function":{"name":"AddSolidFlags","parent":"Entity","type":"classfunc","description":"Adds solid flag(s) to the entity.","realm":"Shared","args":{"arg":{"text":"The flag(s) to apply, see .","name":"flags","type":"number","page":"Enums/FSOLID"}}}},
{"function":{"name":"AddLayeredSequence","parent":"Entity","type":"classfunc","description":{"text":"Adds a gesture animation to the entity and plays it.\n\n\nSee  for a function that doesn't take priority.\n\n\nSee  for a function that takes .","page":["Entity:AddGestureSequence","Entity:AddGesture","Enums/ACT"],"note":{"text":"This function only works on  entites!","page":"BaseAnimatingOverlay"}},"realm":"Server","args":{"arg":[{"text":"The sequence ID to play as the gesture. See .","name":"sequence","type":"number","page":"Entity:LookupSequence"},{"name":"priority","type":"number"}]},"rets":{"ret":{"text":"Layer ID of created layer","name":"","type":"number"}}}},
{"function":{"name":"AddGestureSequence","parent":"Entity","type":"classfunc","description":{"text":"Adds a gesture animation to the entity and plays it.\n\n\nSee  for a function that takes .\n\n\nSee also .","page":["Entity:AddGesture","Enums/ACT","Entity:AddLayeredSequence"],"note":{"text":"This function only works on  entites!","page":"BaseAnimatingOverlay"}},"realm":"Server","args":{"arg":[{"text":"The sequence ID to play as the gesture. See .","name":"sequence","type":"number","page":"Entity:LookupSequence"},{"name":"autokill","type":"boolean","default":"true"}]},"rets":{"ret":{"text":"Layer ID of the started gesture, used to manipulate the played gesture by other functions.","name":"","type":"number"}}}},
{"function":{"name":"AddFlags","parent":"Entity","type":"classfunc","description":"Adds flags to the entity.","realm":"Shared","args":{"arg":{"text":"Flag to add, see","name":"flag","type":"number","page":"Enums/FL"}}}},
{"function":{"name":"AddGesture","parent":"Entity","type":"classfunc","description":{"text":"Adds a gesture animation to the entity and plays it.\n\n\nSee  and  for functions that takes sequences instead of .","page":["Entity:AddGestureSequence","Entity:AddLayeredSequence","Enums/ACT"],"note":{"text":"This function only works on  entites!","page":"BaseAnimatingOverlay"}},"realm":"Server","args":{"arg":[{"text":"The activity to play as the gesture. See .","name":"activity","type":"number","page":"Enums/ACT"},{"name":"autokill","type":"boolean","default":"true"}]},"rets":{"ret":{"text":"Layer ID of the started gesture, used to manipulate the played gesture by other functions.","name":"","type":"number"}}}},
{"function":{"name":"AddEFlags","parent":"Entity","type":"classfunc","description":"Adds engine flags.","realm":"Shared","args":{"arg":{"text":"Engine flag to add, see","name":"flag","type":"number","page":"Enums/EFL"}}}},
{"function":{"name":"AddEffects","parent":"Entity","type":"classfunc","description":{"text":"Applies an engine effect to an entity.\n\nSee also  and  .","page":["Entity:IsEffectActive","Entity:RemoveEffects"]},"realm":"Shared","args":{"arg":{"text":"The effect to apply, see .","name":"effect","type":"number","page":"Enums/EF"}}},"example":{"description":"Adds a blinking effect to an entity.","code":"Entity:AddEffects( EF_ITEM_BLINK )"}},
{"function":{"name":"Activate","parent":"Entity","type":"classfunc","description":{"text":"Activates the entity. This needs to be used on some entities (like constraints) after being spawned.","note":{"text":"For some entity types when this function is used after , the physics object will be recreated with the new scale. [Source-sdk-2013](https://github.com/ValveSoftware/source-sdk-2013/blob/55ed12f8d1eb6887d348be03aee5573d44177ffb/mp/src/game/server/baseanimating.cpp#L321-L327)","page":"Entity:SetModelScale"},"bug":{"text":"This crashes the game with scaled vehicles.","issue":"3372"}},"realm":"Shared"},"example":{"description":"Spawns a 'sent_ball' on the player.","code":"function ENT:SpawnMe(ply)\n\tlocal SpawningPos = ply:GetPos()\n\tlocal ent = ents.Create(\"sent_ball\")\n\tent:SetPos( SpawningPos ) \n\tent:Spawn()\n\tent:Activate()\nend"}},
{"function":{"name":"TickCount","parent":"CUserCmd","type":"classfunc","description":{"text":"Returns tick count since joining the server.","note":["This will always return 0 for bots.","Returns 0 clientside during prediction calls. If you are trying to use CUserCmd:Set*() on the client in a movement or command hook, keep doing so till TickCount returns a non-zero number to maintain prediction."]},"realm":"Shared","rets":{"ret":{"text":"The amount of ticks passed since joining the server.","name":"","type":"number"}}}},
{"function":{"name":"AddCallback","parent":"Entity","type":"classfunc","description":{"text":"Add a callback function to a specific event. This is used instead of hooks to avoid calling empty functions unnecessarily.\n\nThis also allows you to use certain hooks in engine entities (non-scripted entities).","warning":"This method does not check if the function has already been added to this object before, so if you add the same callback twice, it will be run twice! Make sure to add your callback only once."},"realm":"Shared","args":{"arg":[{"text":"The hook name to hook onto. See","name":"hook","type":"string","page":"Entity Callbacks"},{"text":"The function to call","name":"func","type":"function"}]},"rets":{"ret":{"text":"The callback ID that was just added, which can later be used in .\n\nReturns nothing if the passed callback function was invalid or when asking for a non-existent hook.","name":"","type":"number","page":"Entity:RemoveCallback"}}},"example":[{"description":"Adds a callback to an entity which is called every time the entity angles change.","code":"myentity:AddCallback( \"OnAngleChange\", function( entity, newangle )\n\t-- Do stuff\nend )"},{"description":"Creates watermelon prop which creates sparks on collision point whenever touches something.","code":"local melon = ents.Create( \"prop_physics\" ) -- Spawn prop\nif ( !IsValid( melon ) ) then return end -- Safety first\nmelon:SetModel( \"models/props_junk/watermelon01.mdl\" ) -- Set watermelon model\nmelon:SetPos( Entity(1):GetEyeTrace().HitPos ) -- Set pos where is player looking\nmelon:Spawn() -- Instantiate prop\n\nlocal function PhysCallback( ent, data ) -- Function that will be called whenever collision happends\n\tlocal effect = EffectData() -- Create effect data\n\teffect:SetOrigin( data.HitPos ) -- Set origin where collision point is\n\tutil.Effect( \"cball_bounce\", effect ) -- Spawn small sparky effect\nend\nmelon:AddCallback( \"PhysicsCollide\", PhysCallback ) -- Add Callback"}]},
{"function":{"name":"SetViewAngles","parent":"CUserCmd","type":"classfunc","description":{"text":"Sets the direction the client wants to move in.","note":"The pitch (vertical) angle should be clamped to +/- 89° to prevent the player's view from glitching."},"realm":"Shared","args":{"arg":{"text":"New view angles.","name":"viewAngle","type":"Angle"}}},"example":{"description":"Locks the player's view to only vertical movement.","code":"hook.Add(\"InputMouseApply\", \"LockToPitchOnly\", function( ccmd, x, y, angle )\n\t-- By leaving angle.roll and angle.yaw alone, we effectively lock them\n\tangle.pitch = math.Clamp( angle.pitch + y / 50, -89, 89 )\n\tccmd:SetViewAngles( angle )\n\treturn true\nend)"}},
{"function":{"name":"SetUpMove","parent":"CUserCmd","type":"classfunc","description":{"text":"Sets speed the client wishes to move upwards with, negative to move down.\n\nSee also  and  .","page":["CUserCmd:SetSideMove","CUserCmd:SetForwardMove"]},"realm":"Shared","args":{"arg":{"text":"The new speed to request.","name":"speed","type":"number"}}}},
{"function":{"name":"SetSideMove","parent":"CUserCmd","type":"classfunc","description":{"text":"Sets speed the client wishes to move sidewards with, positive to move right, negative to move left.\n\nSee also  and  .","page":["CUserCmd:SetForwardMove","CUserCmd:SetUpMove"]},"realm":"Shared","args":{"arg":{"text":"The new speed to request.","name":"speed","type":"number"}}}},
{"function":{"name":"SetMouseY","parent":"CUserCmd","type":"classfunc","description":{"text":"Sets the delta of the angular vertical mouse movement of the player.\n\nSee also .","page":"CUserCmd:SetMouseX"},"realm":"Shared","args":{"arg":{"text":"Angular vertical move delta.","name":"speed","type":"number"}}}},
{"function":{"name":"SetMouseX","parent":"CUserCmd","type":"classfunc","description":{"text":"Sets the delta of the angular horizontal mouse movement of the player.\n\nSee also .","page":"CUserCmd:SetMouseY"},"realm":"Shared","args":{"arg":{"text":"Angular horizontal move delta.","name":"speed","type":"number"}}}},
{"function":{"name":"SetMouseWheel","parent":"CUserCmd","type":"classfunc","description":"Sets the scroll delta.","realm":"Shared","args":{"arg":{"text":"The scroll delta.","name":"speed","type":"number"}}}},
{"function":{"name":"SetImpulse","parent":"CUserCmd","type":"classfunc","description":"Sets the impulse command to be sent to the server.\n\nFor example, 101 is an impulse that will give the player all Half-Life 2 weapons with sv_cheats set to 1. Impulse 100 will toggle their flashlight.","realm":"Shared","args":{"arg":{"text":"The impulse to send.","name":"speed","type":"number"}}}},
{"function":{"name":"SetForwardMove","parent":"CUserCmd","type":"classfunc","description":{"text":"Sets speed the client wishes to move forward with, negative if the clients wants to move backwards.\n\nSee also ,  and .","page":["CUserCmd:ClearMovement","CUserCmd:SetSideMove","CUserCmd:SetUpMove"]},"realm":"Shared","args":{"arg":{"text":"The new speed to request. The client will not be able to move faster than their set walk/sprint speed.","name":"speed","type":"number"}}}},
{"function":{"name":"SelectWeapon","parent":"CUserCmd","type":"classfunc","description":{"text":"Forces the associated player to select a weapon. This is used internally in the default HL2 weapon selection HUD.\n\nThis may not work immediately if the current command is in prediction. Use  to switch the weapon from the client when the next available command can do so.","page":"input.SelectWeapon","note":{"text":"This is the ideal function to use to create a custom weapon selection HUD, as it allows prediction to run properly for  and","page":["WEAPON:Deploy","GM:PlayerSwitchWeapon"]}},"realm":"Shared","args":{"arg":{"text":"The weapon entity to select.","name":"weapon","type":"Weapon"}}}},
{"function":{"name":"SetButtons","parent":"CUserCmd","type":"classfunc","description":{"text":"Sets the buttons as a bitflag. See also .","page":"CUserCmd:GetButtons","note":{"text":"If you are looking to affect player movement, you may need to use  instead of setting the keys.","page":"CUserCmd:SetForwardMove"}},"realm":"Shared","args":{"arg":{"text":"Bitflag representing which buttons are \"down\", see .","name":"buttons","type":"number","page":"Enums/IN"}}}},
{"function":{"name":"RemoveKey","parent":"CUserCmd","type":"classfunc","description":"Removed a key bit from the current key bitflag.","realm":"Shared","args":{"arg":{"text":"Bitflag to be removed from the key bitflag, see .","name":"button","type":"number","page":"Enums/IN"}}}},
{"function":{"name":"KeyDown","parent":"CUserCmd","type":"classfunc","description":"Returns true if the specified button(s) is pressed.","realm":"Shared","args":{"arg":{"text":"Bitflag representing which button to check, see .","name":"key","type":"number","page":"Enums/IN"}},"rets":{"ret":{"text":"Is key down or not","name":"","type":"boolean"}}}},
{"function":{"name":"IsForced","parent":"CUserCmd","type":"classfunc","description":"When players are not sending usercommands to the server (often due to lag), their last usercommand will be executed multiple times as a backup. This function returns true if that is happening.\n\nThis will never return true clientside.","realm":"Shared","rets":{"ret":{"text":"isForced","name":"","type":"boolean"}}}},
{"function":{"name":"GetViewAngles","parent":"CUserCmd","type":"classfunc","description":"Gets the direction the player is looking in.","realm":"Shared","rets":{"ret":{"text":"requestDir","name":"","type":"Angle"}}}},
{"function":{"name":"GetUpMove","parent":"CUserCmd","type":"classfunc","description":"The speed the client wishes to move up with, negative if the clients wants to move down.","realm":"Shared","rets":{"ret":{"text":"requestSpeed","name":"","type":"number"}}}},
{"function":{"name":"GetSideMove","parent":"CUserCmd","type":"classfunc","description":"The speed the client wishes to move sideways with, positive if it wants to move right, negative if it wants to move left.","realm":"Shared","rets":{"ret":{"text":"requestSpeed","name":"","type":"number"}}}},
{"function":{"name":"GetMouseY","parent":"CUserCmd","type":"classfunc","description":"Returns the delta of the angular vertical mouse movement of the player.","realm":"Shared","rets":{"ret":{"text":"yDelta","name":"","type":"number"}}}},
{"function":{"name":"GetImpulse","parent":"CUserCmd","type":"classfunc","description":"Gets the current impulse from the client, usually 0.","realm":"Shared","rets":{"ret":{"text":"The impulse","name":"","type":"number"}}}},
{"function":{"name":"GetMouseX","parent":"CUserCmd","type":"classfunc","description":"Returns the delta of the angular horizontal mouse movement of the player.","realm":"Shared","rets":{"ret":{"text":"xDelta","name":"","type":"number"}}}},
{"function":{"name":"GetMouseX","parent":"CUserCmd","type":"classfunc","description":"Returns the delta of the angular horizontal mouse movement of the player.","realm":"Shared","rets":{"ret":{"text":"xDelta","name":"","type":"number"}}}},
{"function":{"name":"GetForwardMove","parent":"CUserCmd","type":"classfunc","description":"The speed the client wishes to move forward with, negative if the clients wants to move backwards.","realm":"Shared","rets":{"ret":{"text":"The desired speed","name":"","type":"number"}}}},
{"function":{"name":"GetButtons","parent":"CUserCmd","type":"classfunc","description":"Returns a bitflag indicating which buttons are pressed.","realm":"Shared","rets":{"ret":{"text":"Pressed buttons, see","name":"","type":"number","page":"Enums/IN"}}}},
{"function":{"name":"CommandNumber","parent":"CUserCmd","type":"classfunc","description":{"text":"Returns an increasing number representing the index of the user cmd.","warning":{"text":"The value returned is occasionally 0 inside  and . It is advised to check for a non-zero value if you wish to get the correct number.","page":["GM:CreateMove","GM:StartCommand"]}},"realm":"Shared","rets":{"ret":{"text":"The command number","name":"","type":"number"}}}},
{"function":{"name":"SetReportedPosition","parent":"CTakeDamageInfo","type":"classfunc","description":"Sets the origin of the damage.","realm":"Shared","args":{"arg":{"text":"The location of where the damage is originating","name":"pos","type":"Vector"}}}},
{"function":{"name":"SetMaxDamage","parent":"CTakeDamageInfo","type":"classfunc","description":"Sets the maximum damage the object can cause.","realm":"Shared","args":{"arg":{"text":"Maximum damage value.","name":"maxDamage","type":"number"}}}},
{"function":{"name":"SetInflictor","parent":"CTakeDamageInfo","type":"classfunc","description":"Sets the inflictor of the damage for example a weapon.\n\nFor hitscan/bullet weapons this should the weapon.\n\n\nFor projectile ( rockets, etc ) weapons this should be the projectile.","realm":"Shared","args":{"arg":{"text":"The new inflictor.","name":"inflictor","type":"Entity"}}}},
{"function":{"name":"SetDamageType","parent":"CTakeDamageInfo","type":"classfunc","description":"Sets the damage type.","realm":"Shared","args":{"arg":{"text":"The damage type, see .","name":"type","type":"number","page":"Enums/DMG"}}}},
{"function":{"name":"SetDamagePosition","parent":"CTakeDamageInfo","type":"classfunc","description":"Sets the position of where the damage gets applied to.","realm":"Shared","args":{"arg":{"text":"The position where the damage will be applied.","name":"pos","type":"Vector"}}}},
{"function":{"name":"SetDamageForce","parent":"CTakeDamageInfo","type":"classfunc","description":"Sets the directional force of the damage.","realm":"Shared","args":{"arg":{"text":"The vector to set the force to.","name":"force","type":"Vector"}}}},
{"function":{"name":"SetDamageCustom","parent":"CTakeDamageInfo","type":"classfunc","description":"Sets the custom damage type. This is used by Day of Defeat: Source and Team Fortress 2 for extended damage info, but isn't used in Garry's Mod by default.","realm":"Shared","args":{"arg":{"text":"Any integer - can be based on your own custom enums.","name":"DamageType","type":"number"}}}},
{"function":{"name":"ClearMovement","parent":"CUserCmd","type":"classfunc","description":{"text":"Clears the movement from the command.\n\nSee also ,  and  .","page":["CUserCmd:SetForwardMove","CUserCmd:SetSideMove","CUserCmd:SetUpMove"]},"realm":"Shared"}},
{"function":{"name":"SetDamage","parent":"CTakeDamageInfo","type":"classfunc","description":"Sets the amount of damage.","realm":"Shared","args":{"arg":{"text":"The value to set the absolute damage to.","name":"damage","type":"number"}}}},
{"function":{"name":"SetDamageBonus","parent":"CTakeDamageInfo","type":"classfunc","description":"Sets the bonus damage. Bonus damage isn't automatically applied, so this will have no outer effect by default.","realm":"Shared","args":{"arg":{"text":"The extra damage to be added.","name":"damage","type":"number"}}}},
{"function":{"name":"ClearButtons","parent":"CUserCmd","type":"classfunc","description":{"text":"Removes all keys from the command.","note":{"text":"If you are looking to affect player movement, you may need to use  instead of clearing the buttons.","page":"CUserCmd:ClearMovement"}},"realm":"Shared"}},
{"function":{"name":"SetAttacker","parent":"CTakeDamageInfo","type":"classfunc","description":"Sets the attacker ( character who originated the attack ) of the damage, for example a player or an NPC.","realm":"Shared","args":{"arg":{"text":"The entity to be set as the attacker.","name":"ent","type":"Entity"}}}},
{"function":{"name":"SetAmmoType","parent":"CTakeDamageInfo","type":"classfunc","description":"Changes the ammo type used by the weapon that inflicted the damage.","realm":"Shared","args":{"arg":{"text":"Ammo type ID","name":"ammoType","type":"number"}}},"example":{"description":"Creates a new DamageInfo object and sets the ammo that caused the damage to AR2 ammo","code":"local dmginfo = DamageInfo()\n\ndmginfo:SetAmmoType( game.GetAmmoID( 'AR2' ) )"}},
{"function":{"name":"ScaleDamage","parent":"CTakeDamageInfo","type":"classfunc","description":"Scales the damage by the given value.","realm":"Shared","args":{"arg":{"text":"Value to scale the damage with.","name":"scale","type":"number"}}}},
{"function":{"name":"IsFallDamage","parent":"CTakeDamageInfo","type":"classfunc","description":"Returns whenever the damageinfo contains fall damage.","realm":"Shared","rets":{"ret":{"text":"isFallDmg","name":"","type":"boolean"}}}},
{"function":{"name":"IsExplosionDamage","parent":"CTakeDamageInfo","type":"classfunc","description":"Returns whenever the damageinfo contains explosion damage.","realm":"Shared","rets":{"ret":{"text":"isExplDamage","name":"","type":"boolean"}}}},
{"function":{"name":"IsDamageType","parent":"CTakeDamageInfo","type":"classfunc","description":"Returns whenever the damageinfo contains the damage type specified.","realm":"Shared","args":{"arg":{"text":"Damage type to test. See .","name":"dmgType","type":"number","page":"Enums/DMG"}},"rets":{"ret":{"text":"Whether this damage contains specified damage type or not","name":"","type":"boolean"}}}},
{"function":{"name":"IsBulletDamage","parent":"CTakeDamageInfo","type":"classfunc","description":"Returns true if the damage was caused by a bullet.","realm":"Shared","rets":{"ret":{"text":"isBulletDmg","name":"","type":"boolean"}}}},
{"function":{"name":"GetReportedPosition","parent":"CTakeDamageInfo","type":"classfunc","description":"Returns the initial, unmodified position where the damage occured.","realm":"Shared","rets":{"ret":{"text":"position","name":"","type":"Vector"}}}},
{"function":{"name":"GetMaxDamage","parent":"CTakeDamageInfo","type":"classfunc","description":"Returns the maximum damage.","realm":"Shared","rets":{"ret":{"text":"maxDmg","name":"","type":"number"}}}},
{"function":{"name":"GetInflictor","parent":"CTakeDamageInfo","type":"classfunc","description":{"text":"Returns the inflictor of the damage. This is not necessarily a weapon.\n\nFor hitscan weapons this is the weapon.\n\n\nFor projectile weapons this is the projectile.\n\n\n\n\n\nFor a more reliable method of getting the weapon that damaged an entity, use  with .","page":[",GetAttackerCTakeDamageInfo:GetAttacker",",GetActiveWeaponPlayer:GetActiveWeapon"]},"realm":"Shared","rets":{"ret":{"text":"The inflictor","name":"","type":"Entity"}}}},
{"function":{"name":"GetDamageType","parent":"CTakeDamageInfo","type":"classfunc","description":{"text":"Returns a bitflag which indicates the damage type(s) of the damage.\n\nConsider using  instead. Value returned by this function can contain multiple damage types.","page":"CTakeDamageInfo:IsDamageType"},"realm":"Shared","rets":{"ret":{"text":"Damage type(s), a combination of","name":"","type":"number","page":"Enums/DMG"}}}},
{"function":{"name":"GetDamagePosition","parent":"CTakeDamageInfo","type":"classfunc","description":{"text":"Returns the position where the damage was or is going to be applied to.\n\nCan be set using .","page":"CTakeDamageInfo:SetDamagePosition"},"realm":"Shared","rets":{"ret":{"text":"The damage position","name":"","type":"Vector"}}}},
{"function":{"name":"GetDamageForce","parent":"CTakeDamageInfo","type":"classfunc","description":{"text":"Returns a vector representing the damage force.\n\nCan be set with .","page":"CTakeDamageInfo:SetDamageForce"},"realm":"Shared","rets":{"ret":{"text":"The damage force","name":"","type":"Vector"}}}},
{"function":{"name":"GetDamageCustom","parent":"CTakeDamageInfo","type":"classfunc","description":"Gets the custom damage type. This is used by Day of Defeat: Source and Team Fortress 2 for extended damage info, but isn't used in Garry's Mod by default.","realm":"Shared","rets":{"ret":{"text":"The custom damage type","name":"","type":"number"}}}},
{"function":{"name":"GetDamageBonus","parent":"CTakeDamageInfo","type":"classfunc","description":"Gets the current bonus damage.","realm":"Shared","rets":{"ret":{"text":"Bonus damage","name":"","type":"number"}}}},
{"function":{"name":"GetDamage","parent":"CTakeDamageInfo","type":"classfunc","description":"Returns the total damage.","realm":"Shared","rets":{"ret":{"text":"damage","name":"","type":"number"}}}},
{"function":{"name":"GetBaseDamage","parent":"CTakeDamageInfo","type":"classfunc","description":{"text":"Returns the initial unmodified by skill level (  ) damage.","page":"game.GetSkillLevel"},"realm":"Shared","rets":{"ret":{"text":"baseDamage","name":"","type":"number"}}}},
{"function":{"name":"GetAttacker","parent":"CTakeDamageInfo","type":"classfunc","description":"Returns the attacker ( character who originated the attack ), for example a player or an NPC that shot the weapon.","realm":"Shared","rets":{"ret":{"text":"The attacker","name":"","type":"Entity"}}}},
{"function":{"name":"GetAmmoType","parent":"CTakeDamageInfo","type":"classfunc","description":"Returns the ammo type used by the weapon that inflicted the damage.","realm":"Shared","rets":{"ret":{"text":"Ammo type ID","name":"","type":"number"}}}},
{"function":{"name":"AddDamage","parent":"CTakeDamageInfo","type":"classfunc","description":"Increases the damage by damageIncrease.","realm":"Shared","args":{"arg":{"text":"The damage to add.","name":"damageIncrease","type":"number"}}}},
{"function":{"name":"Stop","parent":"CSoundPatch","type":"classfunc","description":{"text":"Stops the sound from being played.","bug":{"text":"This will not work if the entity attached to this sound patch (specified by ) is invalid.","issue":"3260","page":"Global.CreateSound"}},"realm":"Shared"}},
{"function":{"name":"SetSoundLevel","parent":"CSoundPatch","type":"classfunc","description":"Sets the sound level in decibel.","realm":"Shared","args":{"arg":{"text":"The sound level in decibel. See","name":"level","type":"number","page":"Enums/SNDLVL"}}}},
{"function":{"name":"SetDSP","parent":"CSoundPatch","type":"classfunc","description":{"text":"Sets the DSP (Digital Signal Processor) effect for the sound. Similar to  but for individual sounds.","page":"Player:SetDSP","bug":{"text":"This will only apply if the sound is not playing.","issue":"4086"}},"realm":"Shared","args":{"arg":{"text":"The DSP effect to set.\nPick from the [list of DSP's](https://developer.valvesoftware.com/wiki/Dsp_presets)","name":"dsp","type":"number"}}}},
{"function":{"name":"PlayEx","parent":"CSoundPatch","type":"classfunc","description":{"text":"Same as  but with 2 extra arguments allowing to set volume and pitch directly.","page":"CSoundPatch:Play"},"realm":"Shared","args":{"arg":[{"text":"The volume ranges from 0 to 1.","name":"volume","type":"number"},{"text":"The pitch can range from 0-255.","name":"pitch","type":"number"}]}}},
{"function":{"name":"Play","parent":"CSoundPatch","type":"classfunc","description":"Starts to play the sound.","realm":"Shared"},"example":{"description":"Example usage","code":"local mysound = CreateSound( \"test.wav\" )\nmysound:Play()"}},
{"function":{"name":"IsPlaying","parent":"CSoundPatch","type":"classfunc","description":"Returns whenever the sound is being played.","realm":"Shared","rets":{"ret":{"text":"Is playing or not","name":"","type":"boolean"}}}},
{"function":{"name":"GetVolume","parent":"CSoundPatch","type":"classfunc","description":"Returns the current volume.","realm":"Shared","rets":{"ret":{"text":"The current volume, ranging from 0 to 1.","name":"","type":"number"}}}},
{"function":{"name":"GetSoundLevel","parent":"CSoundPatch","type":"classfunc","description":"Returns the current sound level.","realm":"Shared","rets":{"ret":{"text":"The current sound level, see .","name":"","type":"number","page":"Enums/SNDLVL"}}}},
{"function":{"name":"GetPitch","parent":"CSoundPatch","type":"classfunc","description":"Returns the current pitch.","realm":"Shared","rets":{"ret":{"text":"The current pitch, can range from 0-255.","name":"","type":"number"}}}},
{"function":{"name":"GetDSP","parent":"CSoundPatch","type":"classfunc","description":"Returns the DSP ( Digital Signal Processor ) effect for the sound.","realm":"Shared","rets":{"ret":{"text":"The DSP effects of the sound\nList of DSP's are Pick from the [here](https://developer.valvesoftware.com/wiki/Dsp_presets).","name":"","type":"number"}}}},
{"function":{"name":"FadeOut","parent":"CSoundPatch","type":"classfunc","description":"Fades out the volume of the sound from the current volume to 0 in the given amount of seconds.","realm":"Shared","args":{"arg":{"text":"Fade time.","name":"seconds","type":"number"}}}},
{"function":{"name":"ChangeVolume","parent":"CSoundPatch","type":"classfunc","description":{"text":"Adjusts the volume of the sound played.\nAppears to only work while the sound is being played.","br":""},"realm":"Shared","args":{"arg":[{"text":"The volume ranges from 0 to 1.","name":"volume","type":"number"},{"text":"Time to fade the volume from previous to new value from.","name":"deltaTime","type":"number","default":"0"}]}}},
{"function":{"name":"ChangePitch","parent":"CSoundPatch","type":"classfunc","description":{"text":"Adjust the pitch, alias the speed at which the sound is being played.\n\nThis invokes the .","page":"GM:EntityEmitSound"},"realm":"Shared","args":{"arg":[{"text":"The pitch can range from 0-255.","name":"pitch","type":"number"},{"text":"The time to fade from previous to the new pitch.","name":"deltaTime","type":"number","default":"0"}]}}},
{"function":{"name":"Remove","parent":"CSEnt","type":"classfunc","description":"Removes the clientside entity","realm":"Client"}},
{"function":{"name":"RemoveRecipientsNotOnTeam","parent":"CRecipientFilter","type":"classfunc","description":"Removes all players that are not on the given team from the filter.","realm":"Server","args":{"arg":{"text":"Team index.","name":"teamid","type":"number"}}}},
{"function":{"name":"RemoveRecipientsByTeam","parent":"CRecipientFilter","type":"classfunc","description":"Removes all players that are on the given team from the filter.","realm":"Server","args":{"arg":{"text":"Team index to remove players from.","name":"teamid","type":"number"}}}},
{"function":{"name":"RemovePVS","parent":"CRecipientFilter","type":"classfunc","description":"Removes all players that can see this PVS from the recipient filter.","realm":"Server","args":{"arg":{"text":"Position that players may be able to see.","name":"pos","type":"Vector"}}},"example":{"description":"Adds the first player object to the recipient filter, then sends him a message.","code":"function SendMessage()\n\tlocal filter = RecipientFilter()\n\tfilter:AddPVS( Vector( 0,0,0 ) )\n\tfilter:RemovePVS( Vector( 0,10,0 ) )\n\tumsg.Start( \"message\", filter )\n\tumsg.End()\nend","output":"Adds all players that can see the map's origin to the recipient filter, then removes all players who can see 10 units to the left of the origin, and sends the rest a message."}},
{"function":{"name":"RemovePlayer","parent":"CRecipientFilter","type":"classfunc","description":"Removes the player from the recipient filter.","realm":"Server","args":{"arg":{"text":"The player that should be in the recipient filter if you call this function.","name":"Player","type":"Player"}}},"example":{"description":"Adds all players to the recipient filter, then removes the first player and sends a message to the rest.","code":"util.AddNetworkString(\"message\")\nfunction SendMessage()\n\tlocal filter = RecipientFilter()\n\tfilter:AddAllPlayers()\n\tfilter:RemovePlayer(Entity(1))\n\tnet.Start(\"message\")\n\tnet.Send(filter)\nend","output":"Sends a net message to every player except the first."}},
{"function":{"name":"RemovePAS","parent":"CRecipientFilter","type":"classfunc","description":"Removes all players from the filter that are in Potentially Audible Set for given position.","realm":"Server","args":{"arg":{"text":"The position to test","name":"position","type":"Vector"}}}},
{"function":{"name":"SubtractDamage","parent":"CTakeDamageInfo","type":"classfunc","description":"Subtracts the specified amount from the damage.","realm":"Shared","args":{"arg":{"text":"Value to subtract.","name":"damage","type":"number"}}}},
{"function":{"name":"RemoveAllPlayers","parent":"CRecipientFilter","type":"classfunc","description":"Removes all players from the recipient filter.","realm":"Server"},"example":{"description":"Adds all players that can see the origin of the map, removes all players, then adds the first player object to the recipient filter, and sends them a message.","code":"function SendMessage()\n local filter = RecipientFilter()\n filter:AddPVS(Vector(0,0,0))\n filter:RemoveAllPlayers()\n filter:AddPlayer(Entity(1))\n umsg.Start(\"message\",filter)\n umsg.End()\nend","output":"Sends a usermessage to the first player object, if it exists."}},
{"function":{"name":"GetPlayers","parent":"CRecipientFilter","type":"classfunc","description":"Returns a table of all valid players currently in the recipient filter.","realm":"Server","rets":{"ret":{"text":"A table of all valid players currently in the recipient filter.","name":"","type":"table"}}},"example":{"description":"Example usage of the function","code":"local rf = RecipientFilter()\nrf:AddAllPlayers()\nprint( rf:GetCount() )\nPrintTable( rf:GetPlayers() )","output":"```\n2\n1\t=\tPlayer [1][Player #1]\n2\t=\tPlayer [2][Player #2]\n```"}},
{"function":{"name":"AddRecipientsByTeam","parent":"CRecipientFilter","type":"classfunc","description":"Adds all players that are on the given team to the filter.","realm":"Server","args":{"arg":{"text":"Team index to add players from.","name":"teamid","type":"number"}}}},
{"function":{"name":"GetCount","parent":"CRecipientFilter","type":"classfunc","description":"Returns the number of valid players in the recipient filter.","realm":"Server","rets":{"ret":{"text":"Number of valid players in the recipient filter.","name":"","type":"number"}}},"example":{"description":"Example usage of the function","code":"local rf = RecipientFilter()\nrf:AddAllPlayers()\nprint( rf:GetCount() )\nPrintTable( rf:GetPlayers() )","output":"```\n2\n1\t=\tPlayer [1][Player #1]\n2\t=\tPlayer [2][Player #2]\n```"}},
{"function":{"name":"AddPVS","parent":"CRecipientFilter","type":"classfunc","description":"Adds all players that are in the same PVS as this position.","realm":"Server","args":{"arg":{"text":"PVS position.","name":"Position","type":"Vector"}}},"example":{"description":"Adds players that are visible from the origin of the map to a recipient filter, then sends them a message.","code":"function SendMessage()\n\tlocal filter = RecipientFilter()\n\tfilter:AddPVS( Vector( 0, 0, 0 ) )\n\tumsg.Start( \"message\", filter )\n\tumsg.End()\nend","output":"Sends a usermessage to every player visible from 0,0,0"}},
{"function":{"name":"AddPlayer","parent":"CRecipientFilter","type":"classfunc","description":"Adds a player to the recipient filter","realm":"Server","args":{"arg":{"text":"Player to add to the recipient filter.","name":"Player","type":"Player"}}},"example":{"description":"Adds the first player object to the recipient filter, then sends him a message.","code":"function SendMessage()\n local filter = RecipientFilter()\n filter:AddPlayer(Entity(1))\n umsg.Start(\"message\",filter)\n umsg.End()\nend","output":"Sends a usermessage to the first player object, if it exists."}},
{"function":{"name":"AddAllPlayers","parent":"CRecipientFilter","type":"classfunc","description":"Adds all players to the recipient filter.","realm":"Server"},"example":{"description":"Adds all players to a recipient filter, then uses the recipient filter in a usermessage.","code":"function SendMessage()\n\tlocal filter = RecipientFilter()\n\tfilter:AddAllPlayers()\n\tumsg.Start(\"message\",filter)\n\tumsg.End()\nend","output":"Sends a usermessage to every player."}},
{"function":{"name":"AddPAS","parent":"CRecipientFilter","type":"classfunc","description":"Adds all players that are in the same PAS as this position.","realm":"Server","args":{"arg":{"text":"PAS position that players may be able to hear.","name":"pos","type":"Vector"}}}},
{"function":{"name":"SetString","parent":"ConVar","type":"classfunc","description":"Sets a ConVar's value to the input string. This can only be ran on ConVars created from within Lua.","realm":"Shared","args":{"arg":{"text":"Value to set the ConVar to.","name":"value","type":"string"}}}},
{"function":{"name":"SetInt","parent":"ConVar","type":"classfunc","description":"Sets a ConVar's value to the input number after converting it to an integer. This can only be ran on ConVars created from within Lua.","realm":"Shared","args":{"arg":{"text":"Value to set the ConVar to.","name":"value","type":"number"}}}},
{"function":{"name":"SetBool","parent":"ConVar","type":"classfunc","description":"Sets a ConVar's value to 1 or 0 based on the input boolean. This can only be ran on ConVars created from within Lua.","realm":"Shared","args":{"arg":{"text":"Value to set the ConVar to.","name":"value","type":"boolean"}}}},
{"function":{"name":"SetFloat","parent":"ConVar","type":"classfunc","description":"Sets a ConVar's value to to the input number. This can only be ran on ConVars created from within Lua.","realm":"Shared","args":{"arg":{"text":"Value to set the ConVar to.","name":"value","type":"number"}}}},
{"function":{"name":"Revert","parent":"ConVar","type":"classfunc","description":{"text":"Reverts  to its default value","page":"ConVar"},"realm":"Shared"}},
{"function":{"name":"IsFlagSet","parent":"ConVar","type":"classfunc","description":{"text":"Returns whether the specified flag is set on the","page":"ConVar"},"realm":"Shared","args":{"arg":{"text":"The  flag to test","name":"flag","type":"number","page":"Enums/FCVAR"}},"rets":{"ret":{"text":"Whether the flag is set or not","type":"boolean"}}}},
{"function":{"name":"GetName","parent":"ConVar","type":"classfunc","description":{"text":"Returns the name of the .","page":"ConVar"},"realm":"Shared","rets":{"ret":{"text":"The name of the console variable.","name":"","type":"string"}}}},
{"function":{"name":"GetString","parent":"ConVar","type":"classfunc","description":{"text":"Returns the current  value as a string.","page":"ConVar"},"realm":"Shared","rets":{"ret":{"text":"The current console variable value as a string.","name":"","type":"string"}}},"example":{"description":{"text":"Will check if the gamemode is sandbox (Consider using )","page":"engine.ActiveGamemode"},"code":"if GetConVar(\"gamemode\"):GetString() == \"sandbox\" then\n    print(\"Gamemode is sandbox\")\nend","output":"Gamemode is sandbox"}},
{"function":{"name":"GetMin","parent":"ConVar","type":"classfunc","description":{"text":"Returns the minimum value of the","page":"ConVar"},"realm":"Shared","rets":{"ret":{"text":"The minimum value of the","type":"number","page":"ConVar"}}}},
{"function":{"name":"GetMax","parent":"ConVar","type":"classfunc","description":{"text":"Returns the maximum value of the","page":"ConVar"},"realm":"Shared","rets":{"ret":{"text":"The maximum value of the","type":"number","page":"ConVar"}}}},
{"function":{"name":"GetInt","parent":"ConVar","type":"classfunc","description":{"text":"Attempts to convert the  value to a integer.","page":"ConVar"},"realm":"Shared","rets":{"ret":{"text":"The integer value of the console variable.\n\n\nIf it fails to convert to an integer, it will return 0.\n\n\nAll float/decimal values will be rounded down. ( With  )","name":"","type":"number","page":"math.floor"}}}},
{"function":{"name":"GetHelpText","parent":"ConVar","type":"classfunc","description":"Returns the help text assigned to that convar.","realm":"Shared","rets":{"ret":{"text":"The help text","name":"","type":"string"}}}},
{"function":{"name":"GetFloat","parent":"ConVar","type":"classfunc","description":{"text":"Attempts to convert the  value to a float","page":"ConVar"},"realm":"Shared","rets":{"ret":{"text":"The float value of the console variable.\n\n\nIf the value cannot be converted to a float, it will return 0.","name":"","type":"number"}}}},
{"function":{"name":"GetFlags","parent":"ConVar","type":"classfunc","description":{"text":"Returns the  flags of the ConVar","page":"Enums/FCVAR"},"realm":"Shared","rets":{"ret":{"text":"The bitflag. See","name":"flag","type":"number","page":"Enums/FCVAR"}}}},
{"function":{"name":"GetDefault","parent":"ConVar","type":"classfunc","description":{"text":"Returns the default value of the","page":"ConVar"},"realm":"Shared","rets":{"ret":{"text":"The default value of the console variable.","name":"","type":"string"}}}},
{"function":{"name":"GetBool","parent":"ConVar","type":"classfunc","description":{"text":"Tries to convert the current string value of a  to a boolean.","page":"ConVar"},"realm":"Shared","rets":{"ret":{"text":"The boolean value of the console variable. If the variable is numeric and not 0, the result will be true. Otherwise the result will be false.","name":"","type":"boolean"}}}},
{"function":{"name":"Unpack","parent":"Color","type":"classfunc","description":"Returns the red, green, blue, and alpha of the color.","realm":"Shared","rets":{"ret":[{"text":"Red","name":"","type":"number"},{"text":"Green","name":"","type":"number"},{"text":"Blue","name":"","type":"number"},{"text":"Alpha","name":"","type":"number"}]}}},
{"function":{"name":"ToVector","parent":"Color","type":"classfunc","description":{"text":"Translates the  into a , losing the alpha channel.\nThis will also range the values from 0 - 255 to 0 - 1\n\nr / 255 -> x\ng / 255 -> y\nb / 255 -> z\n\nThis is the opposite of","page":["Color","Vector","Vector:ToColor"],"br":["",""]},"realm":"Shared","rets":{"ret":{"text":"The created","name":"","type":"Vector","page":"Vector"}}},"example":{"description":"Useful when setting player colors, since the function requires a vector as argument.","code":"Entity( 1 ):SetPlayerColor( Color( 220, 20, 60 ):ToVector() )","output":"Sets the player color for Player1 (only works if they are using a colorable player model)"}},
{"function":{"name":"ToTable","parent":"Color","type":"classfunc","description":"Returns the color as a table with four elements.","realm":"Shared","rets":{"ret":{"text":"The table with elements 1 = r, 2 = g, 3 = b, 4 = a.","name":"","type":"table"}}}},
{"function":{"name":"ToHSL","parent":"Color","type":"classfunc","description":{"text":"Converts a  into HSL color space. This calls  internally.","page":["Color","Global.ColorToHSL"]},"realm":"Shared and Menu","rets":{"ret":[{"text":"The hue in degrees [0, 360).","name":"","type":"number"},{"text":"The saturation in the range [0, 1].","name":"","type":"number"},{"text":"The lightness in the range [0, 1].","name":"","type":"number"}]}}},
{"function":{"name":"ToHSV","parent":"Color","type":"classfunc","description":{"text":"Converts a  into HSV color space. This calls  internally.","page":["Color","Global.ColorToHSV"]},"realm":"Shared and Menu","rets":{"ret":[{"text":"The hue in degrees [0, 360).","name":"","type":"number"},{"text":"The saturation in range [0, 1].","name":"","type":"number"},{"text":"The value in range [0, 1].","name":"","type":"number"}]}}},
{"function":{"name":"StopEmissionAndDestroyImmediately","parent":"CNewParticleEffect","type":"classfunc","description":{"text":"Stops particle emission and destroys all particles instantly. Also detaches the particle effect from the entity it was attached to.\n\n\n\nConsider using ( false, true ) instead, which has same effect, but doesn't require owner entity, and does't detach the particle system from its entity.","note":{"text":"This function will work identically to ( false, true ) if   entity is not valid.","page":["CNewParticleEffect:StopEmission","CNewParticleEffect:GetOwner"]},"page":"CNewParticleEffect:StopEmission"},"realm":"Client"}},
{"function":{"name":"SetUnpacked","parent":"Color","type":"classfunc","description":"Sets the red, green, blue, and alpha of the color.","realm":"Shared","args":{"arg":[{"text":"The red component","name":"r","type":"number"},{"text":"The green component","name":"g","type":"number"},{"text":"The blue component","name":"b","type":"number"},{"text":"The alpha component","name":"a","type":"number"}]}}},
{"function":{"name":"StopEmission","parent":"CNewParticleEffect","type":"classfunc","description":"Stops the particle emission.","realm":"Client","args":{"arg":[{"name":"infiniteOnly","type":"boolean","default":"false"},{"name":"removeAllParticles","type":"boolean","default":"false"},{"name":"wakeOnStop","type":"boolean","default":"false"}]}}},
{"function":{"name":"StartEmission","parent":"CNewParticleEffect","type":"classfunc","description":"Starts the particle emission.","realm":"Client","args":{"arg":{"name":"infiniteOnly","type":"boolean","default":"false"}}}},
{"function":{"name":"SetSortOrigin","parent":"CNewParticleEffect","type":"classfunc","description":"Sets the sort origin for given particle system. This is used as a helper to determine which particles are in front of which.","realm":"Client","args":{"arg":{"text":"The new sort origin.","name":"origin","type":"Vector"}}}},
{"function":{"name":"SetShouldDraw","parent":"CNewParticleEffect","type":"classfunc","description":{"text":"Forces the particle system to stop automatically rendering.\n\nUsed in conjunction with .","page":"CNewParticleEffect:Render"},"realm":"Client","args":{"arg":{"text":"Whether to automatically draw the particle effect or not.","name":"should","type":"boolean"}}}},
{"function":{"name":"SetIsViewModelEffect","parent":"CNewParticleEffect","type":"classfunc","description":"","realm":"Client","args":{"arg":{"name":"isViewModel","type":"boolean"}}}},
{"function":{"name":"SetControlPointUpVector","parent":"CNewParticleEffect","type":"classfunc","description":"Sets the upward direction for given control point.","realm":"Client","args":{"arg":[{"text":"The control point ID, 0 to 63.","name":"cpID","type":"number"},{"text":"The upward direction for given control point","name":"upward","type":"Vector"}]}}},
{"function":{"name":"SetControlPointRightVector","parent":"CNewParticleEffect","type":"classfunc","description":"Sets the right direction for given control point.","realm":"Client","args":{"arg":[{"text":"The control point ID, 0 to 63.","name":"cpID","type":"number"},{"text":"The right direction for given control point.","name":"right","type":"Vector"}]}}},
{"function":{"name":"SetControlPointParent","parent":"CNewParticleEffect","type":"classfunc","description":"Essentially makes child control point follow the parent control point.","realm":"Client","args":{"arg":[{"text":"The child control point ID, 0 to 63.","name":"child","type":"number"},{"text":"The parent control point ID, 0 to 63.","name":"parent","type":"number"}]}}},
{"function":{"name":"SetControlPointOrientation","parent":"CNewParticleEffect","type":"classfunc","description":"Sets the orientation for given control point.","realm":"Client","args":{"arg":[{"text":"The control point ID, 0 to 63.","name":"cpID","type":"number"},{"text":"The forward direction for given control point","name":"forward","type":"Vector"},{"text":"The right direction for given control point","name":"right","type":"Vector"},{"text":"The up direction for given control point","name":"up","type":"Vector"}]}}},
{"function":{"name":"SetControlPointForwardVector","parent":"CNewParticleEffect","type":"classfunc","description":"Sets the forward direction for given control point.","realm":"Client","args":{"arg":[{"text":"The control point ID, 0 to 63.","name":"cpID","type":"number"},{"text":"The forward direction for given control point","name":"forward","type":"Vector"}]}}},
{"function":{"name":"SetControlPoint","parent":"CNewParticleEffect","type":"classfunc","description":"Sets a value for given control point.","realm":"Client","args":{"arg":[{"text":"The control point ID, 0 to 63.","name":"cpID","type":"number"},{"text":"The value to set for given control point.","name":"value","type":"Vector"}]}}},
{"function":{"name":"SetControlPointEntity","parent":"CNewParticleEffect","type":"classfunc","description":"Essentially makes child control point follow the parent entity.","realm":"Client","args":{"arg":[{"text":"The child control point ID, 0 to 63.","name":"child","type":"number"},{"text":"The parent entity to follow.","name":"parent","type":"Entity"}]}}},
{"function":{"name":"Restart","parent":"CNewParticleEffect","type":"classfunc","description":"Forces the particle system to restart emitting particles.","realm":"Client"}},
{"function":{"name":"Render","parent":"CNewParticleEffect","type":"classfunc","description":{"text":"Forces the particle system to render using current rendering context.\n\nCan be used to render the particle system in vgui panels, etc.\n\nUsed in conjunction with .","page":"CNewParticleEffect:SetShouldDraw"},"realm":"Client"}},
{"function":{"name":"IsViewModelEffect","parent":"CNewParticleEffect","type":"classfunc","description":"Returns whether the particle system is intended to be used on a view model?","realm":"Client","rets":{"ret":{"name":"","type":"boolean"}}}},
{"function":{"name":"IsValid","parent":"CNewParticleEffect","type":"classfunc","description":"Returns whether the particle system is valid or not.","realm":"Client","rets":{"ret":{"text":"Whether the particle system is valid or not.","name":"","type":"boolean"}}}},
{"function":{"name":"IsValid","parent":"CNewParticleEffect","type":"classfunc","description":"Returns whether the particle system is valid or not.","realm":"Client","rets":{"ret":{"text":"Whether the particle system is valid or not.","name":"","type":"boolean"}}}},
{"function":{"name":"GetOwner","parent":"CNewParticleEffect","type":"classfunc","description":"Returns the owner of the particle system, the entity the particle system is attached to.","realm":"Client","rets":{"ret":{"text":"The owner of the particle system.","name":"","type":"Entity"}}}},
{"function":{"name":"GetHighestControlPoint","parent":"CNewParticleEffect","type":"classfunc","description":"Returns the highest control point number for given particle system.","realm":"Client","rets":{"ret":{"text":"The highest control point number for given particle system, 0 to 63.","name":"","type":"boolean"}}}},
{"function":{"name":"GetAutoUpdateBBox","parent":"CNewParticleEffect","type":"classfunc","realm":"Client","rets":{"ret":{"name":"","type":"boolean"}}}},
{"function":{"name":"GetEffectName","parent":"CNewParticleEffect","type":"classfunc","description":"Returns the name of the particle effect this system is set to emit.","realm":"Client","rets":{"ret":{"text":"The name of the particle effect.","name":"","type":"string"}}}},
{"function":{"name":"SetTopRightArea","parent":"CNavLadder","type":"classfunc","description":{"text":"Sets the top right area of the .","page":"CNavLadder"},"realm":"Server","args":{"arg":{"name":"area","type":"CNavArea"}}}},
{"function":{"name":"AddControlPoint","parent":"CNewParticleEffect","type":"classfunc","description":{"text":"Adds a control point to the particle system.","note":{"text":"This function will not work if the  entity is not valid","page":"CNewParticleEffect:GetOwner"}},"realm":"Client","args":{"arg":[{"text":"The control point ID, 0 to 63.","name":"cpID","type":"number"},{"text":"The entity to attach the control point to.","name":"ent","type":"Entity"},{"text":"See .","name":"partAttachment","type":"number","page":"Enums/PATTACH"},{"text":"The attachment ID on the entity to attach the particle system to","name":"entAttachment","type":"number","default":"0"},{"text":"The offset from the  of the entity we are attaching this CP to.","name":"offset","type":"Vector","default":"Vector( 0, 0, 0 )","page":"Entity:GetPos"}]}}},
{"function":{"name":"SetTopForwardArea","parent":"CNavLadder","type":"classfunc","description":{"text":"Sets the top forward area of the .","page":"CNavLadder"},"realm":"Server","args":{"arg":{"name":"area","type":"CNavArea"}}}},
{"function":{"name":"SetTopLeftArea","parent":"CNavLadder","type":"classfunc","description":{"text":"Sets the top left area of the .","page":"CNavLadder"},"realm":"Server","args":{"arg":{"name":"area","type":"CNavArea"}}}},
{"function":{"name":"SetTopBehindArea","parent":"CNavLadder","type":"classfunc","description":{"text":"Sets the top behind area of the .","page":"CNavLadder"},"realm":"Server","args":{"arg":{"name":"area","type":"CNavArea"}}}},
{"function":{"name":"SetBottomArea","parent":"CNavLadder","type":"classfunc","description":{"text":"Sets the bottom area of the .","page":"CNavLadder"},"realm":"Server","args":{"arg":{"name":"area","type":"CNavArea"}}}},
{"function":{"name":"Remove","parent":"CNavLadder","type":"classfunc","description":"Removes the given nav ladder.","realm":"Server"}},
{"function":{"name":"IsValid","parent":"CNavLadder","type":"classfunc","description":{"text":"Returns whether this  is valid or not.","page":"CNavLadder"},"realm":"Server","rets":{"ret":{"text":"Whether this  is valid or not.","name":"","type":"boolean","page":"CNavLadder"}}}},
{"function":{"name":"GetWidth","parent":"CNavLadder","type":"classfunc","description":"Returns the width of the ladder in Hammer Units.","realm":"Server","rets":{"ret":{"text":"The width of the ladder in Hammer Units.","name":"","type":"number"}}}},
{"function":{"name":"GetTopRightArea","parent":"CNavLadder","type":"classfunc","description":{"text":"Returns the top right  of the .","page":["CNavArea","CNavLadder"]},"realm":"Server","rets":{"ret":{"text":"The top right  of the .","name":"","type":"CNavArea","page":["CNavArea","CNavLadder"]}}}},
{"function":{"name":"GetTopRightArea","parent":"CNavLadder","type":"classfunc","description":{"text":"Returns the top right  of the .","page":["CNavArea","CNavLadder"]},"realm":"Server","rets":{"ret":{"text":"The top right  of the .","name":"","type":"CNavArea","page":["CNavArea","CNavLadder"]}}}},
{"function":{"name":"GetTopLeftArea","parent":"CNavLadder","type":"classfunc","description":{"text":"Returns the top left  of the .","page":["CNavArea","CNavLadder"]},"realm":"Server","rets":{"ret":{"text":"The top left  of the .","name":"","type":"CNavArea","page":["CNavArea","CNavLadder"]}}}},
{"function":{"name":"GetTopBehindArea","parent":"CNavLadder","type":"classfunc","description":{"text":"Returns the top behind  of the .","page":["CNavArea","CNavLadder"]},"realm":"Server","rets":{"ret":{"text":"The top behind  of the .","name":"","type":"CNavArea","page":["CNavArea","CNavLadder"]}}}},
{"function":{"name":"GetTopForwardArea","parent":"CNavLadder","type":"classfunc","description":{"text":"Returns the top forward  of the .","page":["CNavArea","CNavLadder"]},"realm":"Server","rets":{"ret":{"text":"The top forward  of the .","name":"","type":"CNavArea","page":["CNavArea","CNavLadder"]}}}},
{"function":{"name":"GetTop","parent":"CNavLadder","type":"classfunc","description":"Returns the topmost position of the ladder.","realm":"Server","rets":{"ret":{"text":"The topmost position of the ladder.","name":"","type":"Vector"}}}},
{"function":{"name":"GetPosAtHeight","parent":"CNavLadder","type":"classfunc","description":"Returns the world position based on given height relative to the ladder.","realm":"Server","args":{"arg":{"text":"The Z position in world space coordinates.","name":"height","type":"number"}},"rets":{"ret":{"text":"The closest point on the ladder to that height.","name":"","type":"Vector"}}}},
{"function":{"name":"GetPosAtHeight","parent":"CNavLadder","type":"classfunc","description":"Returns the world position based on given height relative to the ladder.","realm":"Server","args":{"arg":{"text":"The Z position in world space coordinates.","name":"height","type":"number"}},"rets":{"ret":{"text":"The closest point on the ladder to that height.","name":"","type":"Vector"}}}},
{"function":{"name":"GetID","parent":"CNavLadder","type":"classfunc","description":{"text":"Returns this s unique ID.","page":"CNavLadder"},"realm":"Server","rets":{"ret":{"text":"The unique ID.","name":"","type":"number"}}}},
{"function":{"name":"GetLength","parent":"CNavLadder","type":"classfunc","description":"Returns the length of the ladder.","realm":"Server","rets":{"ret":{"text":"The length of the ladder.","name":"","type":"number"}}}},
{"function":{"name":"GetBottomArea","parent":"CNavLadder","type":"classfunc","description":{"text":"Returns the bottom area of the .","page":"CNavLadder"},"realm":"Server","rets":{"ret":{"name":"","type":"CNavArea"}}}},
{"function":{"name":"GetBottom","parent":"CNavLadder","type":"classfunc","description":"Returns the bottom most position of the ladder.","realm":"Server","rets":{"ret":{"text":"The bottom most position of the ladder.","name":"","type":"Vector"}}}},
{"function":{"name":"GetBottom","parent":"CNavLadder","type":"classfunc","description":"Returns the bottom most position of the ladder.","realm":"Server","rets":{"ret":{"text":"The bottom most position of the ladder.","name":"","type":"Vector"}}}},
{"function":{"name":"Disconnect","parent":"CNavLadder","type":"classfunc","description":"Disconnects this ladder from given area in a single direction.","realm":"Server","args":{"arg":{"text":"The  this to disconnect from.","name":"area","type":"CNavArea","page":"CNavArea"}}}},
{"function":{"name":"UpdateOnOpenList","parent":"CNavArea","type":"classfunc","description":{"text":"Moves this open list to appropriate position based on its  compared to the total cost of other areas in the open list.\n\nUsed in pathfinding via the [A* algorithm](https://en.wikipedia.org/wiki/A*_search_algorithm).\n\n\nMore information can be found on the  page.","page":["CNavArea:GetTotalCost","Simple Pathfinding"]},"realm":"Server"}},
{"function":{"name":"SetPlace","parent":"CNavArea","type":"classfunc","description":"Sets the Place of the nav area.\n\nThere is a limit of 256 Places per nav file.","realm":"Server","args":{"arg":{"text":"Set to \"\" to remove place from the nav area.","name":"place","type":"string"}},"rets":{"ret":{"text":"Returns true of operation succeeded, false otherwise.","name":"","type":"boolean"}}}},
{"function":{"name":"SetTotalCost","parent":"CNavArea","type":"classfunc","description":{"text":"Sets the total cost when passing from starting area to the goal area through this node.\n\nUsed in pathfinding via the [A* algorithm](https://en.wikipedia.org/wiki/A*_search_algorithm).\n\n\nMore information can be found on the  page.","page":"Simple Pathfinding"},"realm":"Server","args":{"arg":{"text":"The total cost of the path to set.\n\nMust be above or equal 0.","name":"cost","type":"number"}}}},
{"function":{"name":"SetParent","parent":"CNavArea","type":"classfunc","description":{"text":"Sets the new parent of this .","page":"CNavArea"},"realm":"Server","args":{"arg":{"text":"The new parent to set","name":"parent","type":"CNavArea"}}}},
{"function":{"name":"SetCorner","parent":"CNavArea","type":"classfunc","description":"Sets the position of a corner of a nav area.","realm":"Server","args":{"arg":[{"text":"The corner to set, uses","name":"corner","type":"number","page":"Enums/NavCorner"},{"text":"The new position to set.","name":"position","type":"Vector"}]}}},
{"function":{"name":"SetAttributes","parent":"CNavArea","type":"classfunc","description":"Sets the attributes for given CNavArea.","realm":"Server","args":{"arg":{"text":"The attribute bitflag. See","name":"attribs","type":"number","page":"Enums/NAV_MESH"}}}},
{"function":{"name":"SetCostSoFar","parent":"CNavArea","type":"classfunc","description":{"text":"Sets the cost from starting area this area when pathfinding.\n\nUsed in pathfinding via the [A* algorithm](https://en.wikipedia.org/wiki/A*_search_algorithm).\n\n\nMore information can be found on the  page.","page":"Simple Pathfinding"},"realm":"Server","args":{"arg":{"text":"The cost so far","name":"cost","type":"number"}}}},
{"function":{"name":"RemoveFromClosedList","parent":"CNavArea","type":"classfunc","description":{"text":"Removes this node from the Closed List.\n\nUsed in pathfinding via the [A* algorithm](https://en.wikipedia.org/wiki/A*_search_algorithm).\n\n\nMore information can be found on the  page.","page":"Simple Pathfinding"},"realm":"Server"}},
{"function":{"name":"Remove","parent":"CNavArea","type":"classfunc","description":"Removes the given nav area.","realm":"Server"}},
{"function":{"name":"PopOpenList","parent":"CNavArea","type":"classfunc","description":{"text":"Removes a CNavArea from the Open List with the lowest cost to traverse to from the starting node, and returns it.\n\nUsed in pathfinding via the [A* algorithm](https://en.wikipedia.org/wiki/A*_search_algorithm).\n\n\nMore information can be found on the  page.","page":"Simple Pathfinding"},"realm":"Server","rets":{"ret":{"text":"The CNavArea from the Open List with the lowest cost to traverse to from the starting node.","name":"","type":"CNavArea"}}}},
{"function":{"name":"PlaceOnGround","parent":"CNavArea","type":"classfunc","description":{"text":"Drops a corner or all corners of a  to the ground below it.","page":"CNavArea"},"realm":"Server","args":{"arg":{"text":"The corner(s) to drop, uses","name":"corner","type":"number","page":"Enums/NavCorner"}}}},
{"function":{"name":"IsVisible","parent":"CNavArea","type":"classfunc","description":"Returns whether we can be seen from the given position.","realm":"Server","args":{"arg":{"text":"The position to check.","name":"pos","type":"Vector"}},"rets":{"ret":[{"text":"Whether we can be seen or not.","name":"","type":"boolean"},{"text":"If we can be seen, this is returned with either the center or one of the corners of the Nav Area.","name":"","type":"Vector"}]}}},
{"function":{"name":"IsValid","parent":"CNavArea","type":"classfunc","description":{"text":"Returns whether this  is valid or not.","page":"CNavArea"},"realm":"Server","rets":{"ret":{"text":"Whether this  is valid or not.","name":"","type":"boolean","page":"CNavArea"}}}},
{"function":{"name":"IsRoughlySquare","parent":"CNavArea","type":"classfunc","description":"Returns if we're shaped like a square.","realm":"Server","rets":{"ret":{"text":"If we're a square or not.","name":"","type":"boolean"}}}},
{"function":{"name":"IsUnderwater","parent":"CNavArea","type":"classfunc","description":"Whether this Nav Area is placed underwater.","realm":"Server","rets":{"ret":{"text":"Whether we're underwater or not.","name":"","type":"boolean"}}}},
{"function":{"name":"IsOverlappingArea","parent":"CNavArea","type":"classfunc","description":{"text":"Returns true if this  is overlapping the given .","page":["CNavArea","CNavArea"]},"realm":"Server","args":{"arg":{"text":"The  to test against.","name":"navArea","type":"CNavArea","page":"CNavArea"}},"rets":{"ret":{"text":"True if the given  overlaps this  at any point.","name":"","type":"boolean","page":["CNavArea","CNavArea"]}}}},
{"function":{"name":"IsOverlapping","parent":"CNavArea","type":"classfunc","description":"Returns if this position overlaps the Nav Area within the given tolerance.","realm":"Server","args":{"arg":[{"text":"The overlapping position to test.","name":"pos","type":"Vector"},{"text":"The tolerance of the overlapping, set to 0 for no tolerance.","name":"tolerance","type":"number","default":"0"}]},"rets":{"ret":{"text":"Whether the given position overlaps the Nav Area or not.","name":"","type":"boolean"}}}},
{"function":{"name":"IsOpenListEmpty","parent":"CNavArea","type":"classfunc","description":{"text":"Returns whether the Open List is empty or not.\n\nUsed in pathfinding via the [A* algorithm](https://en.wikipedia.org/wiki/A*_search_algorithm).\n\n\nMore information can be found on the  page.","page":"Simple Pathfinding"},"realm":"Server","rets":{"ret":{"text":"Whether the Open List is empty or not.","name":"","type":"boolean"}}}},
{"function":{"name":"IsOpen","parent":"CNavArea","type":"classfunc","description":{"text":"Returns whether this area is in the Open List.\n\nUsed in pathfinding via the [A* algorithm](https://en.wikipedia.org/wiki/A*_search_algorithm).\n\n\nMore information can be found on the  page.","page":"Simple Pathfinding"},"realm":"Server","rets":{"ret":{"text":"Whether this area is in the Open List.","name":"","type":"boolean"}}}},
{"function":{"name":"IsFlat","parent":"CNavArea","type":"classfunc","description":"Returns whether this Nav Area is flat within the tolerance of the **nav_coplanar_slope_limit_displacement** and **nav_coplanar_slope_limit** convars.","realm":"Server","rets":{"ret":{"text":"Whether this CNavArea is mostly flat.","name":"","type":"boolean"}}}},
{"function":{"name":"IsCoplanar","parent":"CNavArea","type":"classfunc","description":"Returns whether this Nav Area is in the same plane as the given one.","realm":"Server","args":{"arg":{"text":"The Nav Area to test.","name":"navArea","type":"CNavArea"}},"rets":{"ret":{"text":"Whether we're coplanar or not.","name":"","type":"boolean"}}}},
{"function":{"name":"IsClosed","parent":"CNavArea","type":"classfunc","description":{"text":"Returns whether this node is in the Closed List.\n\nUsed in pathfinding via the [A* algorithm](https://en.wikipedia.org/wiki/A*_search_algorithm).\n\n\nMore information can be found on the  page.","page":"Simple Pathfinding"},"realm":"Server","rets":{"ret":{"text":"Whether this node is in the Closed List.","name":"","type":"boolean"}}}},
{"function":{"name":"IsConnected","parent":"CNavArea","type":"classfunc","description":{"text":"Returns whether this  has an outgoing ( one or two way ) connection **to** given .\n\nSee  for a function that only checks for outgoing connections in one direction.","page":["CNavArea","CNavArea","CNavArea:IsConnectedAtSide"]},"realm":"Server","args":{"arg":{"text":"The  to test against.","name":"navArea","type":"CNavArea","page":"CNavArea"}},"rets":{"ret":{"text":"Whether this  has an outgoing ( one or two way ) connection **to** given .","name":"","type":"boolean","page":["CNavArea","CNavArea"]}}}},
{"function":{"name":"IsConnectedAtSide","parent":"CNavArea","type":"classfunc","description":{"text":"Returns whether this  has an outgoing ( one or two way ) connection **to** given  in given direction.\n\nSee  for a function that checks all sides.","page":["CNavArea","CNavArea","CNavArea:IsConnected"]},"realm":"Server","args":{"arg":[{"text":"The  to test against.","name":"navArea","type":"CNavArea","page":"CNavArea"},{"text":"The direction, in which to look for the connection. See","name":"navDirType","type":"number","page":"Enums/NavDir"}]},"rets":{"ret":{"text":"Whether this  has an outgoing ( one or two way ) connection **to** given  in given direction.","name":"","type":"boolean","page":["CNavArea","CNavArea"]}}}},
{"function":{"name":"IsBlocked","parent":"CNavArea","type":"classfunc","description":"Returns whether the nav area is blocked or not, i.e. whether it can be walked through or not.","realm":"Server","args":{"arg":[{"text":"The team ID to test, -2 = any team.\n\nOnly 2 actual teams are available, 0 and 1.","name":"teamID","type":"number","default":"-2"},{"text":"Whether to ignore [func_nav_blocker](https://developer.valvesoftware.com/wiki/Func_nav_blocker) entities.","name":"ignoreNavBlockers","type":"boolean","default":"false"}]},"rets":{"ret":{"text":"Whether the area is blocked or not","name":"","type":"boolean"}}}},
{"function":{"name":"GetZ","parent":"CNavArea","type":"classfunc","description":"Returns the elevation of this Nav Area at the given position.","realm":"Server","args":{"arg":{"text":"The position to get the elevation from, the z value from this position is ignored and only the X and Y values are used to this task.","name":"pos","type":"Vector"}},"rets":{"ret":{"text":"The elevation.","name":"","type":"number"}}}},
{"function":{"name":"HasAttributes","parent":"CNavArea","type":"classfunc","description":{"text":"Returns true if the given  has this attribute flag set.","page":"CNavArea"},"realm":"Server","args":{"arg":{"text":"Attribute mask to check for, see","name":"attribs","type":"number","page":"Enums/NAV_MESH"}},"rets":{"ret":{"text":"True if the  matches the given mask. False otherwise.","name":"","type":"boolean","page":"CNavArea"}}}},
{"function":{"name":"GetTotalCost","parent":"CNavArea","type":"classfunc","description":{"text":"Returns the total cost when passing from starting area to the goal area through this node. Set by .\n\nUsed in pathfinding via the [A* algorithm](https://en.wikipedia.org/wiki/A*_search_algorithm).\n\n\nMore information can be found on the  page.","page":["CNavArea:SetTotalCost","Simple Pathfinding"]},"realm":"Server","rets":{"ret":{"text":"The total cost","name":"","type":"number"}}}},
{"function":{"name":"GetSizeY","parent":"CNavArea","type":"classfunc","description":"Returns the height of this Nav Area.","realm":"Server","rets":{"ret":{"name":"","type":"number"}}}},
{"function":{"name":"GetRandomPoint","parent":"CNavArea","type":"classfunc","description":"Returns a random point on the nav area.","realm":"Server","rets":{"ret":{"text":"The random point on the nav area.","name":"","type":"Vector"}}}},
{"function":{"name":"GetSizeX","parent":"CNavArea","type":"classfunc","description":"Returns the width this Nav Area.","realm":"Server","rets":{"ret":{"name":"","type":"number"}}}},
{"function":{"name":"GetPlace","parent":"CNavArea","type":"classfunc","description":"Returns the Place of the nav area.","realm":"Server","rets":{"ret":{"text":"The place of the nav area, or no value if it doesn't have a place set.","name":"","type":"string"}}}},
{"function":{"name":"GetRandomAdjacentAreaAtSide","parent":"CNavArea","type":"classfunc","description":{"text":"Returns a random  that has an outgoing ( one or two way ) connection **from** this  in given direction.","page":["CNavArea","CNavArea"]},"realm":"Server","args":{"arg":{"text":"The direction, in which to look for s, see .","name":"navDir","type":"number","page":["CNavArea","Enums/NavDir"]}},"rets":{"ret":{"text":"The random  that has an outgoing ( one or two way ) connection **from** this  in given direction, if any.","name":"","type":"CNavArea","page":["CNavArea","CNavArea"]}}}},
{"function":{"name":"GetParentHow","parent":"CNavArea","type":"classfunc","description":{"text":"Returns how this  is connected to its parent.","page":"CNavArea"},"realm":"Server","rets":{"ret":{"text":"See","name":"","type":"number","page":"Enums/NavTraverseType"}}}},
{"function":{"name":"GetParent","parent":"CNavArea","type":"classfunc","description":{"text":"Returns the parent","page":"CNavArea"},"realm":"Server","rets":{"ret":{"text":"The parent","name":"","type":"CNavArea","page":"CNavArea"}}}},
{"function":{"name":"GetLaddersAtSide","parent":"CNavArea","type":"classfunc","description":{"text":"Returns all s that have a ( one or two way ) connection **from** ( one and two way ) this  in given direction.\n\nSee  for a function that returns  from/in all sides/directions.","page":["CNavLadder","CNavArea","CNavArea:GetLadders","CNavLadder"]},"realm":"Server","args":{"arg":{"text":"The direction, in which to look for s.\n\n0 = Up ( LadderDirectionType::LADDER_UP )\n1 = Down ( LadderDirectionType::LADDER_DOWN )","name":"navDir","type":"number","page":"CNavLadder"}},"rets":{"ret":{"text":"The s that have a ( one or two way ) connection **from** this  in given direction.","name":"","type":"table","page":["CNavLadder","CNavArea"]}}}},
{"function":{"name":"GetLadders","parent":"CNavArea","type":"classfunc","description":{"text":"Returns all s that have a ( one or two way ) connection **from** this .\n\nSee  for a function that only returns s in given direction.","page":["CNavLadder","CNavArea","CNavArea:GetLaddersAtSide","CNavLadder"]},"realm":"Server","rets":{"ret":{"text":"The s that have a ( one or two way ) connection **from** this .","name":"","type":"table","page":["CNavLadder","CNavArea"]}}}},
{"function":{"name":"GetIncomingConnections","parent":"CNavArea","type":"classfunc","description":{"text":"Returns a table of all the s that have a one-way connection **to** this .\n\nIf a  has a two-way connection **to or from** this  then it will not be returned from this function, use  to get outgoing ( one and two way ) connections.\n\nSee  for a function that returns one-way incoming connections from  only one side/direction.","page":["CNavArea","CNavArea","CNavArea","CNavArea","CNavArea:GetAdjacentAreas","CNavArea:GetIncomingConnectionsAtSide"]},"realm":"Server","rets":{"ret":{"text":"A table of all s with one-way connection **to** this .\n\nReturns an empty table if there are no one-way incoming connections **to** this .","name":"","type":"table","page":["CNavArea","CNavArea","CNavArea"]}}}},
{"function":{"name":"GetIncomingConnectionsAtSide","parent":"CNavArea","type":"classfunc","description":{"text":"Returns a table of all the s that have a one-way connection **to** this  from given direction.\n\nIf a  has a two-way connection **to or from** this  then it will not be returned from this function, use  to get outgoing ( one and two way ) connections.\n\nSee  for a function that returns one-way incoming connections from  all sides/directions.","page":["CNavArea","CNavArea","CNavArea","CNavArea","CNavArea:GetAdjacentAreas","CNavArea:GetIncomingConnections"]},"realm":"Server","args":{"arg":{"text":"The direction, from which to look for s, see .","name":"navDir","type":"number","page":["CNavArea","Enums/NavDir"]}},"rets":{"ret":{"text":"A table of all s with one-way connection **to** this  from given direction.\n\nReturns an empty table if there are no one-way incoming connections **to** this  from given direction.","name":"","type":"table","page":["CNavArea","CNavArea","CNavArea"]}}}},
{"function":{"name":"GetID","parent":"CNavArea","type":"classfunc","description":{"text":"Returns this s unique ID.","page":"CNavArea"},"realm":"Server","rets":{"ret":{"text":"The unique ID.","name":"","type":"number"}}}},
{"function":{"name":"GetHidingSpots","parent":"CNavArea","type":"classfunc","description":{"text":"Returns a table of good hiding spots in this area.\n\nSee also .","page":"CNavArea:GetExposedSpots"},"realm":"Server","args":{"arg":{"text":"The type of spots to include.\n\n* 0 = None (Not recommended)\n* 1 = In Cover/basically a hiding spot, in a corner with good hard cover nearby\n* 2 = good sniper spot, had at least one decent sniping corridor\n* 4 = perfect sniper spot, can see either very far, or a large area, or both\n* 8 = exposed, spot in the open, usually on a ledge or cliff, same as GetExposedSpots\n* Values over 255 and below 0 will be clamped.","name":"type","type":"number","default":"1"}},"rets":{"ret":{"text":"A table of s","name":"","type":"table","page":"Vector"}}}},
{"function":{"name":"GetExtentInfo","parent":"CNavArea","type":"classfunc","description":"Returns size info about the nav area.","realm":"Server","rets":{"ret":{"text":"Returns a table containing the following keys:\n*  hi|\n*  lo|\n*  SizeX|\n*  SizeY|\n*  SizeZ|","name":"","type":"table","page":["Vector","Vector","number","number","number"]}}}},
{"function":{"name":"GetExposedSpots","parent":"CNavArea","type":"classfunc","description":{"text":"Returns a table of very bad hiding spots in this area.\n\nSee also .","page":"CNavArea:GetHidingSpots"},"realm":"Server","rets":{"ret":{"text":"A table of s","name":"","type":"table","page":"Vector"}}}},
{"function":{"name":"GetCostSoFar","parent":"CNavArea","type":"classfunc","description":{"text":"Returns the cost from starting area this area when pathfinding. Set by .\n\nUsed in pathfinding via the [A* algorithm](https://en.wikipedia.org/wiki/A*_search_algorithm).\n\n\nMore information can be found on the  page.","page":["CNavArea:SetCostSoFar","Simple Pathfinding"]},"realm":"Server","rets":{"ret":{"text":"The cost so far.","name":"","type":"number"}}}},
{"function":{"name":"GetCorner","parent":"CNavArea","type":"classfunc","description":{"text":"Returns the vector position of the corner for the given .","page":"CNavArea"},"realm":"Server","args":{"arg":{"text":"The target corner to get the position of, takes .","name":"cornerid","type":"number","page":"Enums/NavCorner"}},"rets":{"ret":{"text":"The corner position.","name":"","type":"Vector"}}}},
{"function":{"name":"GetClosestPointOnArea","parent":"CNavArea","type":"classfunc","description":"Returns the closest point of this Nav Area from the given position.","realm":"Server","args":{"arg":{"text":"The given position, can be outside of the Nav Area bounds.","name":"pos","type":"Vector"}},"rets":{"ret":{"text":"The closest position on this Nav Area.","name":"","type":"Vector"}}}},
{"function":{"name":"GetCenter","parent":"CNavArea","type":"classfunc","description":{"text":"Returns the center most vector point for the given .","page":"CNavArea"},"realm":"Server","rets":{"ret":{"text":"The center vector.","name":"","type":"Vector"}}}},
{"function":{"name":"GetAttributes","parent":"CNavArea","type":"classfunc","description":{"text":"Returns the attribute mask for the given .","page":"CNavArea"},"realm":"Server","rets":{"ret":{"text":"Attribute mask for this , see  for the specific flags.","name":"","type":"boolean","page":["CNavArea","Enums/NAV_MESH"],"note":{"text":"A navmesh that was generated with nav_quicksave set to 1 will have all s attribute masks set to 0","page":"CNavArea"}}}}},
{"function":{"name":"GetAdjacentCountAtSide","parent":"CNavArea","type":"classfunc","description":{"text":"Returns the amount of s that have a connection ( one or two way ) **from** this  in given direction.\n\nSee  for a function that returns  count from/in all sides/directions.","page":["CNavArea","CNavArea","CNavArea:GetAdjacentCount","CNavArea"]},"realm":"Server","args":{"arg":{"text":"The direction, in which to look for s, see .","name":"navDir","type":"number","page":["CNavArea","Enums/NavDir"]}},"rets":{"ret":{"text":"The amount of s that have a connection ( one or two way ) **from** this  in given direction.","name":"","type":"number","page":["CNavArea","CNavArea"]}}}},
{"function":{"name":"GetAdjacentCount","parent":"CNavArea","type":"classfunc","description":{"text":"Returns the amount of s that have a connection ( one and two way ) **from** this .\n\nSee  for a function that only returns area count from one side/direction.","page":["CNavArea","CNavArea","CNavArea:GetAdjacentCountAtSide"]},"realm":"Server","rets":{"ret":{"text":"The amount of s that have a connection ( one and two way ) **from** this .","name":"","type":"number","page":["CNavArea","CNavArea"]}}}},
{"function":{"name":"GetAdjacentAreasAtSide","parent":"CNavArea","type":"classfunc","description":{"text":"Returns a table of all the s that have a ( one and two way ) connection **from** this  in given direction.\n\nIf an area has a one-way incoming connection to this , then it will **not** be returned from this function, use  to get all incoming connections.\n\nSee  for a function that returns all areas from all sides/directions.","page":["CNavArea","CNavArea","CNavArea","CNavArea:GetIncomingConnections","CNavArea:GetAdjacentAreas"]},"realm":"Server","args":{"arg":{"text":"The direction, in which to look for s, see .","name":"navDir","type":"number","page":["CNavArea","Enums/NavDir"]}},"rets":{"ret":{"text":"A table of all  that have a ( one and two way ) connection **from** this  in given direction.\n\nReturns an empty table if this area has no outgoing connections to any other areas in given direction.","name":"","type":"table","page":["CNavArea","CNavArea"]}}}},
{"function":{"name":"GetAdjacentAreas","parent":"CNavArea","type":"classfunc","description":{"text":"Returns a table of all the s that have a  ( one and two way ) connection **from** this .\n\nIf an area has a one-way incoming connection to this , then it will **not** be returned from this function, use  to get all one-way incoming connections.\n\nSee  for a function that only returns areas from one side/direction.","page":["CNavArea","CNavArea","CNavArea","CNavArea:GetIncomingConnections","CNavArea:GetAdjacentAreasAtSide"]},"realm":"Server","rets":{"ret":{"text":"A table of all  that have a ( one and two way ) connection **from** this . \n\nReturns an empty table if this area has no outgoing connections to any other areas.","name":"","type":"table","page":["CNavArea","CNavArea"]}}}},
{"function":{"name":"DrawSpots","parent":"CNavArea","type":"classfunc","description":"Draws the hiding spots on debug overlay. This includes sniper/exposed spots too!","realm":"Server"}},
{"function":{"name":"Draw","parent":"CNavArea","type":"classfunc","description":"Draws this navarea on debug overlay.","realm":"Server"}},
{"function":{"name":"Disconnect","parent":"CNavArea","type":"classfunc","description":"Disconnects this nav area from given area or ladder. (Only disconnects one way)","realm":"Server","args":{"arg":{"text":"The  or  this to disconnect from.","name":"area","type":"CNavArea","page":["CNavArea","CNavLadder"]}}}},
{"function":{"name":"Contains","parent":"CNavArea","type":"classfunc","description":{"text":"Returns true if this  contains the given vector.","page":"CNavArea"},"realm":"Server","args":{"arg":{"text":"The position to test.","name":"pos","type":"Vector"}},"rets":{"ret":{"text":"True if the vector was inside and false otherwise.","name":"","type":"boolean"}}}},
{"function":{"name":"ConnectTo","parent":"CNavArea","type":"classfunc","description":{"text":"Connects this  to another  or  with a one way connection. ( From this area to the target )\n\nSee  for making the connection from ladder to area.","page":["CNavArea","CNavArea","CNavLadder","CNavLadder:ConnectTo"]},"realm":"Server","args":{"arg":{"text":"The  or  this area leads to.","name":"area","type":"CNavArea","page":["CNavArea","CNavLadder"]}}}},
{"function":{"name":"ComputeGroundHeightChange","parent":"CNavArea","type":"classfunc","description":{"text":"Returns the height difference on the Z axis of the two s. This is calculated from the center most point on both s.","page":["CNavArea","CNavArea"]},"realm":"Server","args":{"arg":{"text":"The nav area to test against.","name":"navArea","type":"CNavArea"}},"rets":{"ret":{"text":"The ground height change.","name":"","type":"number"}}}},
{"function":{"name":"ComputeDirection","parent":"CNavArea","type":"classfunc","description":{"text":"Returns the  direction that the given vector faces on this .","page":["Enums/NavDir","CNavArea"]},"realm":"Server","args":{"arg":{"text":"The position to compute direction towards.","name":"pos","type":"Vector"}},"rets":{"ret":{"text":"The direction the vector is in relation to this . See .","name":"","type":"number","page":["CNavArea","Enums/NavDir"]}}}},
{"function":{"name":"ComputeAdjacentConnectionHeightChange","parent":"CNavArea","type":"classfunc","description":"Returns the height difference between the edges of two connected navareas.","realm":"Server","args":{"arg":{"name":"navarea","type":"CNavArea"}},"rets":{"ret":{"text":"The height change","name":"","type":"number"}}}},
{"function":{"name":"ClearSearchLists","parent":"CNavArea","type":"classfunc","description":{"text":"Clears the open and closed lists for a new search.\n\nUsed in pathfinding via the [A* algorithm](https://en.wikipedia.org/wiki/A*_search_algorithm).\n\n\nMore information can be found on the  page.","page":"Simple Pathfinding"},"realm":"Server"}},
{"function":{"name":"AddToClosedList","parent":"CNavArea","type":"classfunc","description":{"text":"Adds this  to the closed list, a list of areas that have been checked by A* pathfinding algorithm.\n\nUsed in pathfinding via the [A* algorithm](https://en.wikipedia.org/wiki/A*_search_algorithm).\n\n\nMore information can be found on the  page.","page":["CNavArea","Simple Pathfinding"]},"realm":"Server"}},
{"function":{"name":"AddToOpenList","parent":"CNavArea","type":"classfunc","description":{"text":"Adds this  to the Open List.\n\nUsed in pathfinding via the [A* algorithm](https://en.wikipedia.org/wiki/A*_search_algorithm).\n\n\nMore information can be found on the  page.","page":["CNavArea","Simple Pathfinding"]},"realm":"Server"}},
{"function":{"name":"SetVelocity","parent":"CMoveData","type":"classfunc","description":"Sets the player's velocity","realm":"Shared","args":{"arg":{"text":"The velocity to set","name":"velocity","type":"Vector"}}},"example":{"description":"Make the player shake to hell and back.","code":"function GM:SetupMove( ply, movedata )\n    movedata:SetVelocity( VectorRand() * 800 )\nend"}},
{"function":{"name":"AddHidingSpot","parent":"CNavArea","type":"classfunc","description":"Adds a hiding spot onto this nav area.\n\nThere's a limit of 255 hiding spots per area.","realm":"Server","args":{"arg":[{"text":"The position on the nav area","name":"pos","type":"Vector"},{"text":"Flags describing what kind of hiding spot this is.\n* 0 = None (Not recommended)\n* 1 = In Cover/basically a hiding spot, in a corner with good hard cover nearby\n* 2 = good sniper spot, had at least one decent sniping corridor\n* 4 = perfect sniper spot, can see either very far, or a large area, or both\n* 8 = exposed, spot in the open, usually on a ledge or cliff\n\nValues over 255 will be clamped.","name":"flags","type":"number","default":"7"}]}}},
{"function":{"name":"SetUpSpeed","parent":"CMoveData","type":"classfunc","description":{"text":"Sets vertical speed of the player. ( Z axis of  )","page":"CMoveData:SetVelocity"},"realm":"Shared","args":{"arg":{"text":"Vertical speed to set","name":"speed","type":"number"}}}},
{"function":{"name":"SetSideSpeed","parent":"CMoveData","type":"classfunc","description":"Sets players strafe speed.","realm":"Shared","args":{"arg":{"text":"Strafe speed","name":"speed","type":"number"}}}},
{"function":{"name":"SetOldButtons","parent":"CMoveData","type":"classfunc","description":"Sets the 'old' pressed buttons on the move data. These buttons are used to work out which buttons have been released, which have just been pressed and which are being held down.","realm":"Shared","args":{"arg":{"text":"A number representing which buttons were down, see","name":"buttons","type":"number","page":"Enums/IN"}}}},
{"function":{"name":"SetOrigin","parent":"CMoveData","type":"classfunc","description":"Sets the players position.","realm":"Shared","args":{"arg":{"text":"The position","name":"pos","type":"Vector"}}},"example":{"description":"Make the player freeze at the origin of the map.","code":"function GM:SetupMove( ply, movedata )\n    movedata:SetOrigin( vector_origin )\nend"}},
{"function":{"name":"SetOldAngles","parent":"CMoveData","type":"classfunc","description":"Sets old aim angles. ( ? ) Doesn't seem to be doing anything.","realm":"Shared","args":{"arg":{"text":"The old angles","name":"aimAng","type":"Angle"}}}},
{"function":{"name":"SetMoveAngles","parent":"CMoveData","type":"classfunc","description":{"text":"Sets the serverside move angles, making the movement keys act as if player was facing that direction.","bug":{"text":"This does nothing clientside.","issue":"1181"}},"realm":"Shared","args":{"arg":{"text":"The aim direction.","name":"dir","type":"Angle"}}}},
{"function":{"name":"SetMaxSpeed","parent":"CMoveData","type":"classfunc","description":{"text":"Sets the maximum speed of the player. This must match with  both, on server and client.\n\n\nDoesn't seem to be doing anything on it's own, use  instead.","page":["CMoveData:SetMaxClientSpeed","CMoveData:SetMaxClientSpeed"]},"realm":"Shared","args":{"arg":{"text":"The new maximum speed","name":"maxSpeed","type":"number"}}}},
{"function":{"name":"SetMaxClientSpeed","parent":"CMoveData","type":"classfunc","description":{"text":"Sets the maximum player speed. Player won't be able to run or sprint faster then this value.\n\n\nThis also automatically sets  when used in the  hook. You must set it manually in the  hook.\n\n\nThis must be called on both client and server to avoid prediction errors.\n\n\nThis will **not** reduce speed in air.","page":["CMoveData:SetMaxSpeed","GM:SetupMove","GM:Move"],"note":"Setting this to 0 will not make the player stationary. It won't do anything."},"realm":"Shared","args":{"arg":{"text":"The new maximum speed","name":"maxSpeed","type":"number"}}},"example":[{"description":"Doesn't let the player to run or sprint faster than 100 units per second.","code":"hook.Add(\"SetupMove\",\"MySpeed\", function( ply, mv )\n    mv:SetMaxClientSpeed( 100 )\nend )"},{"description":"Doubles the players speed properly.","code":"hook.Add( \"Move\", \"testestst\", function( ply, mv, usrcmd )\n\tlocal speed = mv:GetMaxSpeed() * 2\n\tmv:SetMaxSpeed( speed )\n\tmv:SetMaxClientSpeed( speed )\nend )"}]},
{"function":{"name":"SetImpulseCommand","parent":"CMoveData","type":"classfunc","description":"Sets the impulse command. This isn't actually utilised in the engine anywhere.","realm":"Shared","args":{"arg":{"text":"The impulse to set","name":"impulse","type":"number"}}}},
{"function":{"name":"SetForwardSpeed","parent":"CMoveData","type":"classfunc","description":"Sets players forward speed.","realm":"Shared","args":{"arg":{"text":"New forward speed","name":"speed","type":"number"}}}},
{"function":{"name":"SetConstraintRadius","parent":"CMoveData","type":"classfunc","description":"Sets the radius that constrains the players movement.\n\n\nIt is unknown what this function does as changing its values doesn't affect player movement.","realm":"Shared","args":{"arg":{"text":"The new constraint radius","name":"radius","type":"number"}}}},
{"function":{"name":"SetButtons","parent":"CMoveData","type":"classfunc","description":"Sets the pressed buttons on the move data","realm":"Shared","args":{"arg":{"text":"A number representing which buttons are down, see","name":"buttons","type":"number","page":"Enums/IN"}}}},
{"function":{"name":"SetAngles","parent":"CMoveData","type":"classfunc","description":{"text":"Sets angles.","bug":{"text":"This function does nothing.","issue":"2382"}},"realm":"Shared","args":{"arg":{"text":"The angles.","name":"ang","type":"Angle"}}}},
{"function":{"name":"SetAbsMoveAngles","parent":"CMoveData","type":"classfunc","description":"Sets absolute move angles.( ? ) Doesn't seem to do anything.","realm":"Shared","args":{"arg":{"text":"New absolute move angles","name":"ang","type":"Angle"}}}},
{"function":{"name":"KeyWasDown","parent":"CMoveData","type":"classfunc","description":{"text":"Returns whether the key was down or not.\n\n\n\n\nUnlike , it will return false if  is true and it will return true if  is true.","page":["CMoveData:KeyDown","CMoveData:KeyPressed","CMoveData:KeyReleased"]},"realm":"Shared","args":{"arg":{"text":"The key to test, seee","name":"key","type":"number","page":"Enums/IN"}},"rets":{"ret":{"text":"Was the key down or not","name":"","type":"boolean"}}}},
{"function":{"name":"KeyReleased","parent":"CMoveData","type":"classfunc","description":"Returns whether the key was released","realm":"Shared","args":{"arg":{"text":"A key to test, see","name":"key","type":"number","page":"Enums/IN"}},"rets":{"ret":{"text":"Was the key released or not.","name":"","type":"boolean"}}}},
{"function":{"name":"KeyPressed","parent":"CMoveData","type":"classfunc","description":{"text":"Returns whether the key was pressed. If you want to check if the key is held down, try","page":"CMoveData:KeyDown"},"realm":"Shared","args":{"arg":{"text":"The key to test, see","name":"key","type":"number","page":"Enums/IN"}},"rets":{"ret":{"text":"Was the key pressed or not.","name":"","type":"boolean"}}}},
{"function":{"name":"KeyDown","parent":"CMoveData","type":"classfunc","description":"Returns whether the key is down or not","realm":"Shared","args":{"arg":{"text":"The key to test, see","name":"key","type":"number","page":"Enums/IN"}},"rets":{"ret":{"text":"Is the key down or not","name":"","type":"boolean"}}}},
{"function":{"name":"GetVelocity","parent":"CMoveData","type":"classfunc","description":{"text":"Gets the players velocity.","bug":{"text":"This will return Vector(0,0,0) sometimes when walking on props.","issue":"3413"}},"realm":"Shared","rets":{"ret":{"text":"The players velocity","name":"","type":"Vector"}}},"example":{"description":"Prints the player's velocity.","code":"function GM:Move( ply, movedata )\n    print( movedata:GetVelocity() )\nend"}},
{"function":{"name":"GetUpSpeed","parent":"CMoveData","type":"classfunc","description":{"text":"Returns the vertical speed of the player. ( Z axis of  )","page":"CMoveData:GetVelocity"},"realm":"Shared","rets":{"ret":{"text":"Vertical speed","name":"","type":"number"}}}},
{"function":{"name":"GetSideSpeed","parent":"CMoveData","type":"classfunc","description":"Returns the strafe speed of the player.","realm":"Shared","rets":{"ret":{"text":"speed","name":"","type":"number"}}}},
{"function":{"name":"GetOrigin","parent":"CMoveData","type":"classfunc","description":"Gets the player's position.","realm":"Shared","rets":{"ret":{"text":"The player's position.","name":"","type":"Vector"}}},"example":{"description":"Print's the players position.","code":"function GM:SetupMove( ply, movedata )\n    print( movedata:GetOrigin() )\nend"}},
{"function":{"name":"GetOldButtons","parent":"CMoveData","type":"classfunc","description":"Get which buttons were down last frame","realm":"Shared","rets":{"ret":{"text":"An integer representing which buttons were down, see","name":"","type":"number","page":"Enums/IN"}}}},
{"function":{"name":"GetOldAngles","parent":"CMoveData","type":"classfunc","description":{"text":"Gets the aim angle. Only works clientside, server returns same as .","page":"CMoveData:GetAngles"},"realm":"Shared","rets":{"ret":{"text":"The aim angle","name":"","type":"Angle"}}}},
{"function":{"name":"GetMaxSpeed","parent":"CMoveData","type":"classfunc","description":"Returns the maximum speed of the player.","realm":"Shared","rets":{"ret":{"text":"The maximum speed","name":"","type":"number"}}}},
{"function":{"name":"GetMoveAngles","parent":"CMoveData","type":"classfunc","description":{"text":"Returns the angle the player is moving at. For more info, see .","page":"CMoveData:SetMoveAngles"},"realm":"Shared","rets":{"ret":{"text":"The move direction","name":"","type":"Angle"}}}},
{"function":{"name":"GetMaxClientSpeed","parent":"CMoveData","type":"classfunc","description":"Returns the maximum client speed of the player","realm":"Shared","rets":{"ret":{"text":"The maximum client speed","name":"","type":"number"}}}},
{"function":{"name":"GetConstraintRadius","parent":"CMoveData","type":"classfunc","description":"Returns the radius that constrains the players movement.","realm":"Shared","rets":{"ret":{"text":"The constraint radius","name":"","type":"number"}}}},
{"function":{"name":"GetForwardSpeed","parent":"CMoveData","type":"classfunc","description":"Returns the players forward speed.","realm":"Shared","rets":{"ret":{"text":"speed","name":"","type":"number"}}}},
{"function":{"name":"GetImpulseCommand","parent":"CMoveData","type":"classfunc","description":"Gets the number passed to \"impulse\" console command","realm":"Shared","rets":{"ret":{"text":"The impulse","name":"","type":"number"}}}},
{"function":{"name":"GetButtons","parent":"CMoveData","type":"classfunc","description":"Gets which buttons are down","realm":"Shared","rets":{"ret":{"text":"An integer representing which buttons are down, see","name":"","type":"number","page":"Enums/IN"}}}},
{"function":{"name":"GetAbsMoveAngles","parent":"CMoveData","type":"classfunc","description":{"text":"Gets the aim angle. Seems to be same as .","page":"CMoveData:GetAngles"},"realm":"Shared","rets":{"ret":{"text":"Aiming angle","name":"","type":"Angle"}}}},
{"function":{"name":"AddKey","parent":"CMoveData","type":"classfunc","description":"Adds keys to the move data, as if player pressed them.","realm":"Shared","args":{"arg":{"text":"Keys to add, see","name":"keys","type":"number","page":"Enums/IN"}}}},
{"function":{"name":"GetAngles","parent":"CMoveData","type":"classfunc","description":{"text":"Gets the aim angle. On client is the same as .","page":"Entity:GetAngles"},"realm":"Shared","rets":{"ret":{"text":"Aiming angle","name":"","type":"Angle"}}}},
{"function":{"name":"SetVelocityScale","parent":"CLuaParticle","type":"classfunc","description":"Scales the velocity based on the particle speed.","realm":"Client","args":{"arg":{"text":"Use velocity scaling.","name":"doScale","type":"boolean","default":"false"}}}},
{"function":{"name":"SetStartSize","parent":"CLuaParticle","type":"classfunc","description":"Sets the initial size value of the particle.","realm":"Client","args":{"arg":{"text":"Initial size.","name":"startSize","type":"number"}}}},
{"function":{"name":"SetVelocity","parent":"CLuaParticle","type":"classfunc","description":"Sets the velocity of the particle.","realm":"Client","args":{"arg":{"text":"The new velocity of the particle.","name":"vel","type":"Vector"}}}},
{"function":{"name":"SetThinkFunction","parent":"CLuaParticle","type":"classfunc","description":"Sets the think function of the particle.","realm":"Client","args":{"arg":{"text":"Think function. It has only one argument:\n\n\n particle - The particle the think hook is set on","name":"thinkFunc","type":"function","page":"CLuaParticle"}}},"example":{"description":"Example on how to use a think function, randomizes the colors of a particle","code":"p:SetNextThink( 1e99 ) -- Makes sure the think hook is used on all particles of the particle emitter\np:SetThinkFunction( function( pa )\n\tpa:SetColor( math.random( 0, 255 ), math.random( 0, 255 ), math.random( 0, 255 ) ) -- Randomize it\n\tpa:SetNextThink( 1e99 ) -- Makes sure the think hook is actually ran.\nend )"}},
{"function":{"name":"SetStartLength","parent":"CLuaParticle","type":"classfunc","description":"Sets the initial length value of the particle.","realm":"Client","args":{"arg":{"text":"Initial length.","name":"startLength","type":"number"}}}},
{"function":{"name":"SetRollDelta","parent":"CLuaParticle","type":"classfunc","description":"Sets the rotation speed of the particle in radians. This should only be used for 2D particles.","realm":"Client","args":{"arg":{"text":"The new rotation speed of the particle in radians.","name":"rollDelta","type":"number"}}}},
{"function":{"name":"SetPos","parent":"CLuaParticle","type":"classfunc","description":"Sets the absolute position of the particle.","realm":"Client","args":{"arg":{"text":"The new particle position.","name":"pos","type":"Vector"}}}},
{"function":{"name":"SetRoll","parent":"CLuaParticle","type":"classfunc","description":"Sets the roll of the particle in radians. This should only be used for 2D particles.","realm":"Client","args":{"arg":{"text":"The new rotation of the particle in radians.","name":"roll","type":"number"}}}},
{"function":{"name":"SetStartAlpha","parent":"CLuaParticle","type":"classfunc","description":"Sets the initial alpha value of the particle.","realm":"Client","args":{"arg":{"text":"Initial alpha.","name":"startAlpha","type":"number"}}}},
{"function":{"name":"SetMaterial","parent":"CLuaParticle","type":"classfunc","description":"Sets the material of the particle.","realm":"Client","added":"2020.03.17","args":{"arg":{"text":"The new material to set. Can also be a string.","name":"mat","type":"IMaterial"}}}},
{"function":{"name":"SetMaterial","parent":"CLuaParticle","type":"classfunc","description":"Sets the material of the particle.","realm":"Client","added":"2020.03.17","args":{"arg":{"text":"The new material to set. Can also be a string.","name":"mat","type":"IMaterial"}}}},
{"function":{"name":"SetLifeTime","parent":"CLuaParticle","type":"classfunc","description":{"text":"Sets the 'life time' of the particle, how long the particle existed since its creation.\n\nThis value should always be between 0 and .\n\n\nIt changes automatically as time goes.\n\n\nIf the life time of the particle will be more than , it will be removed.","page":["CLuaParticle:GetDieTime","CLuaParticle:GetDieTime"]},"realm":"Client","args":{"arg":{"text":"The new life time of the particle.","name":"lifeTime","type":"number"}}}},
{"function":{"name":"SetNextThink","parent":"CLuaParticle","type":"classfunc","description":{"text":"Sets when the particles think function should be called next, this uses the synchronized server time returned by .","page":"Global.CurTime"},"realm":"Client","args":{"arg":{"text":"Next think time.","name":"nextThink","type":"number"}}}},
{"function":{"name":"SetEndSize","parent":"CLuaParticle","type":"classfunc","description":"Sets the size of the particle that it will reach when it dies.","realm":"Client","args":{"arg":{"text":"The new size of the particle that it will reach when it dies.","name":"endSize","type":"number"}}}},
{"function":{"name":"SetEndAlpha","parent":"CLuaParticle","type":"classfunc","description":"Sets the alpha value of the particle that it will reach when it dies.","realm":"Client","args":{"arg":{"text":"The new alpha value of the particle that it will reach when it dies.","name":"endAlpha","type":"number"}}}},
{"function":{"name":"SetGravity","parent":"CLuaParticle","type":"classfunc","description":"Sets the directional gravity aka. acceleration of the particle.","realm":"Client","args":{"arg":{"text":"The directional gravity.","name":"gravity","type":"Vector"}}}},
{"function":{"name":"SetEndLength","parent":"CLuaParticle","type":"classfunc","description":"Sets the length of the particle that it will reach when it dies.","realm":"Client","args":{"arg":{"text":"The new length of the particle that it will reach when it dies.","name":"endLength","type":"number"}}}},
{"function":{"name":"SetDieTime","parent":"CLuaParticle","type":"classfunc","description":"Sets the time where the particle will be removed.","realm":"Client","args":{"arg":{"text":"The new die time.","name":"dieTime","type":"number"}}}},
{"function":{"name":"SetCollideCallback","parent":"CLuaParticle","type":"classfunc","description":"Sets the function that gets called whenever the particle collides with the world.","realm":"Client","args":{"arg":{"text":"Collide callback, the arguments are:\n\n\n\n\n particle - The particle itself\n\n hitPos - Position of the collision\n\n hitNormal - Direction of the collision, perpendicular to the hit surface","name":"collideFunc","type":"function","page":["CLuaParticle","Vector","Vector"]}}},"example":{"description":"Creates an explosion every time an particle collides with something.","code":"MyParticle:SetCollideCallback( function( part, hitpos, hitnormal ) --This is an in-line function\n    local efdata = EffectData() --Grab base EffectData table\n    efdata:SetOrigin( hitpos ) --Sets the origin of it to the hitpos of the particle\n    util.Effect( \"Explosion\", efdata ) --Create the effect\nend )"}},
{"function":{"name":"SetColor","parent":"CLuaParticle","type":"classfunc","description":"Sets the color of the particle.","realm":"Client","args":{"arg":[{"text":"The red component.","name":"r","type":"number"},{"text":"The green component.","name":"g","type":"number"},{"text":"The blue component.","name":"b","type":"number"}]}}},
{"function":{"name":"SetCollide","parent":"CLuaParticle","type":"classfunc","description":"Sets the whether the particle should collide with the world or not.","realm":"Client","args":{"arg":{"text":"Whether the particle should collide with the world or not","name":"shouldCollide","type":"boolean"}}}},
{"function":{"name":"SetBounce","parent":"CLuaParticle","type":"classfunc","description":"Sets the 'bounciness' of the the particle.","realm":"Client","args":{"arg":{"text":"New 'bounciness' of the particle\n\n2 means it will gain 100% of its previous velocity,\n\n\n1 means it will not lose velocity,\n\n\n0.5 means it will lose half of its velocity with each bounce.","name":"bounce","type":"number"}}}},
{"function":{"name":"SetAngleVelocity","parent":"CLuaParticle","type":"classfunc","description":"Sets the angular velocity of the the particle.","realm":"Client","args":{"arg":{"text":"New angular velocity.","name":"angVel","type":"Angle"}}}},
{"function":{"name":"SetAngles","parent":"CLuaParticle","type":"classfunc","description":"Sets the angles of the particle.","realm":"Client","args":{"arg":{"text":"New angle.","name":"ang","type":"Angle"}}}},
{"function":{"name":"SetAirResistance","parent":"CLuaParticle","type":"classfunc","description":"Sets the air resistance of the the particle.","realm":"Client","args":{"arg":{"text":"New air resistance.","name":"airResistance","type":"number"}}}},
{"function":{"name":"GetVelocity","parent":"CLuaParticle","type":"classfunc","description":"Returns the current velocity of the particle.","realm":"Client","rets":{"ret":{"text":"The current velocity of the particle.","name":"","type":"Vector"}}}},
{"function":{"name":"GetStartSize","parent":"CLuaParticle","type":"classfunc","description":"Returns the size which the particle has when it's created.","realm":"Client","rets":{"ret":{"text":"The size which the particle has when it's created.","name":"","type":"number"}}}},
{"function":{"name":"GetStartLength","parent":"CLuaParticle","type":"classfunc","description":"Returns the length which the particle has when it's created.","realm":"Client","rets":{"ret":{"text":"The length which the particle has when it's created.","name":"","type":"number"}}}},
{"function":{"name":"GetStartAlpha","parent":"CLuaParticle","type":"classfunc","description":"Returns the alpha value which the particle has when it's created.","realm":"Client","rets":{"ret":{"text":"The alpha value which the particle has when it's created.","name":"","type":"number"}}}},
{"function":{"name":"GetRollDelta","parent":"CLuaParticle","type":"classfunc","description":"Returns the current rotation speed of the particle in radians, this should only be used for 2D particles.","realm":"Client","rets":{"ret":{"text":"The current rotation speed of the particle in radians","name":"","type":"number"}}}},
{"function":{"name":"GetRoll","parent":"CLuaParticle","type":"classfunc","description":"Returns the current rotation of the particle in radians, this should only be used for 2D particles.","realm":"Client","rets":{"ret":{"text":"The current rotation of the particle in radians","name":"","type":"number"}}}},
{"function":{"name":"GetPos","parent":"CLuaParticle","type":"classfunc","description":"Returns the absolute position of the particle.","realm":"Client","rets":{"ret":{"text":"The absolute position of the particle.","name":"","type":"Vector"}}}},
{"function":{"name":"GetMaterial","parent":"CLuaParticle","type":"classfunc","description":"Returns the current material of the particle.","realm":"Client","added":"2020.03.17","rets":{"ret":{"text":"The material.","name":"mat","type":"IMaterial"}}}},
{"function":{"name":"GetLifeTime","parent":"CLuaParticle","type":"classfunc","description":{"text":"Returns the 'life time' of the particle, how long the particle existed since its creation.\n\nThis value will always be between 0 and .\n\n\nIt changes automatically as time goes.\n\nIt can be manipulated using .\n\n\nIf the life time of the particle will be more than , it will be removed.","page":["CLuaParticle:GetDieTime","CLuaParticle:SetLifeTime","CLuaParticle:GetDieTime"]},"realm":"Client","rets":{"ret":{"text":"How long the particle existed, in seconds.","name":"","type":"number"}}}},
{"function":{"name":"GetGravity","parent":"CLuaParticle","type":"classfunc","description":"Returns the gravity of the particle.","realm":"Client","rets":{"ret":{"text":"The gravity of the particle.","name":"","type":"Vector"}}}},
{"function":{"name":"GetEndSize","parent":"CLuaParticle","type":"classfunc","description":"Returns the size that the particle will reach on its death.","realm":"Client","rets":{"ret":{"text":"The size the particle will reach","name":"","type":"number"}}}},
{"function":{"name":"GetEndLength","parent":"CLuaParticle","type":"classfunc","description":"Returns the length that the particle will reach on its death.","realm":"Client","rets":{"ret":{"text":"The length the particle will reach","name":"","type":"number"}}}},
{"function":{"name":"GetEndAlpha","parent":"CLuaParticle","type":"classfunc","description":"Returns the alpha value that the particle will reach on its death.","realm":"Client","rets":{"ret":{"text":"The alpha value the particle will fade to","name":"","type":"number"}}}},
{"function":{"name":"GetDieTime","parent":"CLuaParticle","type":"classfunc","description":"Returns the amount of time in seconds after which the particle will be destroyed.","realm":"Client","rets":{"ret":{"text":"The amount of time in seconds after which the particle will be destroyed","name":"","type":"number"}}}},
{"function":{"name":"GetBounce","parent":"CLuaParticle","type":"classfunc","description":"Returns the 'bounciness' of the particle.","realm":"Client","rets":{"ret":{"text":"The 'bounciness' of the particle\n\n2 means it will gain 100% of its previous velocity,\n\n\n1 means it will not lose velocity,\n\n\n0.5 means it will lose half of its velocity with each bounce.","name":"","type":"number"}}}},
{"function":{"name":"GetColor","parent":"CLuaParticle","type":"classfunc","description":"Returns the color of the particle.","realm":"Client","rets":{"ret":[{"text":"Red part of the color","name":"","type":"number"},{"text":"Green part of the color","name":"","type":"number"},{"text":"Blue part of the color","name":"","type":"number"}]}}},
{"function":{"name":"GetAngleVelocity","parent":"CLuaParticle","type":"classfunc","description":"Returns the angular velocity of the particle","realm":"Client","rets":{"ret":{"text":"The angular velocity of the particle","name":"","type":"Angle"}}}},
{"function":{"name":"GetAngles","parent":"CLuaParticle","type":"classfunc","description":"Returns the current orientation of the particle.","realm":"Client","rets":{"ret":{"text":"The angles of the particle","name":"","type":"Angle"}}}},
{"function":{"name":"SetVelocity","parent":"CLuaLocomotion","type":"classfunc","description":"Sets the current movement velocity","realm":"Server","args":{"arg":{"name":"velocity","type":"Vector"}}}},
{"function":{"name":"GetAirResistance","parent":"CLuaParticle","type":"classfunc","description":"Returns the air resistance of the particle.","realm":"Client","rets":{"ret":{"text":"The air resistance of the particle","name":"","type":"number"}}}},
{"function":{"name":"SetStepHeight","parent":"CLuaLocomotion","type":"classfunc","description":"Sets the max height the bot can step up","realm":"Server","args":{"arg":{"text":"Height (default is 18)","name":"height","type":"number"}}}},
{"function":{"name":"SetMaxYawRate","parent":"CLuaLocomotion","type":"classfunc","description":"Sets the max rate at which the NextBot can visually rotate. This will not affect moving or pathing.","realm":"Server","args":{"arg":{"text":"Desired new maximum yaw rate","name":"yawRate","type":"number"}}}},
{"function":{"name":"SetJumpHeight","parent":"CLuaLocomotion","type":"classfunc","description":"Sets the height of the bot's jump","realm":"Server","args":{"arg":{"text":"Height (default is 58)","name":"height","type":"number"}}}},
{"function":{"name":"SetGravity","parent":"CLuaLocomotion","type":"classfunc","description":{"text":"Sets the locomotion's gravity.","note":{"text":"With values 0 or below, or even lower positive values, the nextbot will start to drift sideways, use  to counteract this.","page":"CLuaLocomotion:SetVelocity"}},"realm":"Server","args":{"arg":{"text":"New gravity to set. Default is 1000.","name":"gravity","type":"number"}}}},
{"function":{"name":"SetDesiredSpeed","parent":"CLuaLocomotion","type":"classfunc","description":"Sets movement speed.","realm":"Server","args":{"arg":{"text":"The new desired speed","name":"speed","type":"number"}}}},
{"function":{"name":"SetDeceleration","parent":"CLuaLocomotion","type":"classfunc","description":"Sets the deceleration speed.","realm":"Server","args":{"arg":{"text":"New deceleration speed (default is 400)","name":"deceleration","type":"number"}}}},
{"function":{"name":"SetDeathDropHeight","parent":"CLuaLocomotion","type":"classfunc","description":"Sets the height the bot is scared to fall from.","realm":"Server","args":{"arg":{"text":"Height (default is 200)","name":"height","type":"number"}}}},
{"function":{"name":"SetAcceleration","parent":"CLuaLocomotion","type":"classfunc","description":"Sets the acceleration speed","realm":"Server","args":{"arg":{"text":"Speed acceleration (default is 400)","name":"speed","type":"number"}}}},
{"function":{"name":"JumpAcrossGap","parent":"CLuaLocomotion","type":"classfunc","realm":"Server","args":{"arg":[{"name":"landingGoal","type":"Vector"},{"name":"landingForward","type":"Vector"}]}}},
{"function":{"name":"Jump","parent":"CLuaLocomotion","type":"classfunc","description":"Makes the bot jump","realm":"Server"}},
{"function":{"name":"IsUsingLadder","parent":"CLuaLocomotion","type":"classfunc","description":"Returns whether or not the target in question is on a ladder or not.","realm":"Server","rets":{"ret":{"text":"If the target is on a ladder or not.","name":"","type":"boolean"}}}},
{"function":{"name":"IsStuck","parent":"CLuaLocomotion","type":"classfunc","description":"Returns true if we're stuck","realm":"Server","rets":{"ret":{"text":"Whether we're stuck or not","name":"","type":"boolean"}}}},
{"function":{"name":"IsOnGround","parent":"CLuaLocomotion","type":"classfunc","description":"Returns whether the nextbot this locomotion is attached to is on ground or not.","realm":"Server","rets":{"ret":{"text":"Whether the nextbot is on ground or not.","name":"","type":"boolean"}}}},
{"function":{"name":"IsAttemptingToMove","parent":"CLuaLocomotion","type":"classfunc","description":"Returns true if we're trying to move.","realm":"Server","rets":{"ret":{"text":"Whether we're trying to move or not.","name":"","type":"boolean"}}}},
{"function":{"name":"IsClimbingOrJumping","parent":"CLuaLocomotion","type":"classfunc","description":"Returns true of the locomotion engine is jumping or climbing","realm":"Server","rets":{"ret":{"text":"Whether we're climbing or jumping or not","name":"","type":"boolean"}}}},
{"function":{"name":"IsAreaTraversable","parent":"CLuaLocomotion","type":"classfunc","description":{"text":"Returns whether this  can reach and/or traverse/move in given .","page":["CLuaLocomotion","CNavArea"]},"realm":"Server","args":{"arg":{"text":"The area to test","name":"area","type":"CNavArea"}},"rets":{"ret":{"text":"Whether this  can traverse given .","name":"","type":"boolean","page":["CLuaLocomotion","CNavArea"]}}}},
{"function":{"name":"GetVelocity","parent":"CLuaLocomotion","type":"classfunc","description":"Returns the current movement velocity as a vector","realm":"Server","rets":{"ret":{"text":"Current velocity","name":"","type":"Vector"}}}},
{"function":{"name":"GetStepHeight","parent":"CLuaLocomotion","type":"classfunc","description":"Gets the max height the bot can step up","realm":"Server","rets":{"ret":{"text":"Current step height","name":"","type":"number"}}}},
{"function":{"name":"GetNextBot","parent":"CLuaLocomotion","type":"classfunc","description":{"text":"Returns the  this locomotion is associated with.","page":"NextBot"},"realm":"Server","rets":{"ret":{"text":"The nextbot","name":"","type":"NextBot"}}}},
{"function":{"name":"GetMaxYawRate","parent":"CLuaLocomotion","type":"classfunc","description":"Returns the max rate at which the NextBot can visually rotate.","realm":"Server","rets":{"ret":{"text":"Maximum yaw rate","name":"","type":"number"}}}},
{"function":{"name":"GetMaxJumpHeight","parent":"CLuaLocomotion","type":"classfunc","description":{"text":"Returns maximum jump height of this .","page":"CLuaLocomotion"},"realm":"Server","rets":{"ret":{"text":"The maximum jump height.","name":"","type":"number"}}}},
{"function":{"name":"GetJumpHeight","parent":"CLuaLocomotion","type":"classfunc","description":"Gets the height of the bot's jump","realm":"Server","rets":{"ret":{"text":"Current jump height","name":"","type":"number"}}}},
{"function":{"name":"GetGroundMotionVector","parent":"CLuaLocomotion","type":"classfunc","description":"Return unit vector in XY plane describing our direction of motion - even if we are currently not moving","realm":"Server","rets":{"ret":{"text":"A vector representing the X and Y movement","name":"","type":"Vector"}}}},
{"function":{"name":"GetGravity","parent":"CLuaLocomotion","type":"classfunc","description":"Returns the locomotion's gravity.","realm":"Server","rets":{"ret":{"text":"The gravity.","name":"","type":"number"}}}},
{"function":{"name":"GetDeceleration","parent":"CLuaLocomotion","type":"classfunc","description":"Gets the deceleration speed","realm":"Server","rets":{"ret":{"text":"Current deceleration speed","name":"","type":"number"}}}},
{"function":{"name":"GetDeathDropHeight","parent":"CLuaLocomotion","type":"classfunc","description":"Gets the height the bot is scared to fall from","realm":"Server","rets":{"ret":{"text":"Current death drop height","name":"","type":"number"}}}},
{"function":{"name":"GetCurrentAcceleration","parent":"CLuaLocomotion","type":"classfunc","description":"Returns the current acceleration as a vector","realm":"Server","rets":{"ret":{"text":"Current acceleration","name":"","type":"Vector"}}}},
{"function":{"name":"GetAcceleration","parent":"CLuaLocomotion","type":"classfunc","description":"Returns the acceleration speed","realm":"Server","rets":{"ret":{"text":"Current acceleration speed","name":"","type":"number"}}}},
{"function":{"name":"ClearStuck","parent":"CLuaLocomotion","type":"classfunc","description":"Removes the stuck status from the bot","realm":"Server"}},
{"function":{"name":"FaceTowards","parent":"CLuaLocomotion","type":"classfunc","description":"Sets the direction we want to face","realm":"Server","args":{"arg":{"text":"The vector we want to face","name":"goal","type":"Vector"}}}},
{"function":{"name":"Approach","parent":"CLuaLocomotion","type":"classfunc","description":"Sets the location we want to get to","realm":"Server","args":{"arg":[{"text":"The vector we want to get to","name":"goal","type":"Vector"},{"text":"If unsure then set this to 1","name":"goalweight","type":"number"}]}}},
{"function":{"name":"SetPos","parent":"CLuaEmitter","type":"classfunc","description":"Sets the position of the particle emitter.","realm":"Client","args":{"arg":{"text":"New position.","name":"position","type":"Vector"}}}},
{"function":{"name":"SetParticleCullRadius","parent":"CLuaEmitter","type":"classfunc","description":"The function name has not much in common with its actual function, it applies a radius to every particles that affects the building of the bounding box, as it, usually is constructed by the particle that has the lowest x, y and z and the highest x, y and z, this function just adds/subtracts the radius and inflates the bounding box.","realm":"Client","args":{"arg":{"text":"Particle radius.","name":"radius","type":"number"}}}},
{"function":{"name":"SetNoDraw","parent":"CLuaEmitter","type":"classfunc","description":"Prevents all particles of the emitter from automatically drawing.","realm":"Client","args":{"arg":{"text":"Whether we should draw the particles ( false ) or not ( true )","name":"noDraw","type":"boolean"}}}},
{"function":{"name":"SetBBox","parent":"CLuaEmitter","type":"classfunc","description":"Sets the bounding box for this emitter.\n\nUsually the bounding box is automatically determined by the particles, but this function overrides it.","realm":"Client","args":{"arg":[{"text":"The minimum position of the box","name":"mins","type":"Vector"},{"text":"The maximum position of the box","name":"maxs","type":"Vector"}]}}},
{"function":{"name":"SetNearClip","parent":"CLuaEmitter","type":"classfunc","description":"This function sets the the distance between the render camera and the emitter at which the particles should start fading and at which distance fade ends ( alpha becomes 0 ).","realm":"Client","args":{"arg":[{"text":"Min distance where the alpha becomes 0.","name":"distanceMin","type":"number"},{"text":"Max distance where the alpha starts fading.","name":"distanceMax","type":"number"}]}}},
{"function":{"name":"IsValid","parent":"CLuaEmitter","type":"classfunc","description":{"text":"Returns whether this  is valid or not.","page":"CLuaEmitter"},"realm":"Client","rets":{"ret":{"text":"Whether this  is valid or not.","name":"","type":"boolean","page":"CLuaEmitter"}}}},
{"function":{"name":"Is3D","parent":"CLuaEmitter","type":"classfunc","description":{"text":"Returns whether this emitter is 3D or not. This is set when creating the emitter with .","page":"Global.ParticleEmitter"},"realm":"Client","rets":{"ret":{"text":"Whether this emitter is 3D or not.","name":"","type":"boolean"}}}},
{"function":{"name":"GetNumActiveParticles","parent":"CLuaEmitter","type":"classfunc","description":"Returns the amount of active particles of this emitter.","realm":"Client","rets":{"ret":{"text":"The amount of active particles of this emitter","name":"","type":"number"}}}},
{"function":{"name":"GetPos","parent":"CLuaEmitter","type":"classfunc","description":{"text":"Returns the position of this emitter. This is set when creating the emitter with .","page":"Global.ParticleEmitter"},"realm":"Client","rets":{"ret":{"text":"Position of this particle emitter.","name":"","type":"Vector"}}}},
{"function":{"name":"Finish","parent":"CLuaEmitter","type":"classfunc","description":"Removes the emitter and all its particles.","realm":"Client"}},
{"function":{"name":"Draw","parent":"CLuaEmitter","type":"classfunc","description":"Manually renders all particles the emitter has created.","realm":"Client"}},
{"function":{"name":"Add","parent":"CLuaEmitter","type":"classfunc","description":{"text":"Creates a new  with the given material and position.","page":"CLuaParticle"},"realm":"Client","args":{"arg":[{"text":"The particles material. Can also be an .","name":"material","type":"string","page":"IMaterial"},{"text":"The position to spawn the particle on.","name":"position","type":"Vector"}]},"rets":{"ret":{"text":"The created particle, if any.","name":"","type":"CLuaParticle"}}}},
{"function":{"name":"SetStart","parent":"CEffectData","type":"classfunc","description":"Sets the start of the effect to be created with this effect data.","realm":"Shared","args":{"arg":{"text":"Start of the effect.","name":"start","type":"Vector"}}}},
{"function":{"name":"SetSurfaceProp","parent":"CEffectData","type":"classfunc","description":"Sets the surface property index of the effect.","realm":"Shared","args":{"arg":{"text":"The surface property index of the effect.","name":"surfaceProperties","type":"number"}}}},
{"function":{"name":"SetScale","parent":"CEffectData","type":"classfunc","description":"Sets the scale of the effect to be created with this effect data.","realm":"Shared","args":{"arg":{"text":"Scale of the effect.","name":"scale","type":"number"}}}},
{"function":{"name":"SetOrigin","parent":"CEffectData","type":"classfunc","description":"Sets the origin of the effect to be created with this effect data.","realm":"Shared","args":{"arg":{"text":"Origin of the effect.","name":"origin","type":"Vector"}}}},
{"function":{"name":"SetRadius","parent":"CEffectData","type":"classfunc","description":{"text":"Sets the radius of the effect to be created with this effect data.","note":"This is clamped internally from 0 to 1023."},"realm":"Shared","args":{"arg":{"text":"Radius of the effect.","name":"radius","type":"number"}}}},
{"function":{"name":"SetNormal","parent":"CEffectData","type":"classfunc","description":"Sets the normalized direction vector of the effect to be created with this effect data.","realm":"Shared","args":{"arg":{"text":"The normalized direction vector of the effect.","name":"normal","type":"Vector"}}}},
{"function":{"name":"SetMaterialIndex","parent":"CEffectData","type":"classfunc","description":{"text":"Sets the material index of the effect.","note":"This is internally stored as an integer, but only the first 11 bits will be networked."},"realm":"Shared","args":{"arg":{"text":"The material index of the effect.","name":"materialIndex","type":"number"}}}},
{"function":{"name":"SetHitBox","parent":"CEffectData","type":"classfunc","description":{"text":"Sets the hit box index of the effect.","note":"This is internally stored as an integer, but only the first 11 bits will be networked."},"realm":"Shared","args":{"arg":{"text":"The hit box index of the effect.","name":"hitBoxIndex","type":"number"}}}},
{"function":{"name":"SetMagnitude","parent":"CEffectData","type":"classfunc","description":"Sets the magnitude of the effect.","realm":"Shared","args":{"arg":{"text":"The magnitude of the effect.","name":"magnitude","type":"number"}}}},
{"function":{"name":"SetFlags","parent":"CEffectData","type":"classfunc","description":{"text":"Sets the flags of the effect.","note":"This is internally stored as an integer, but only the first 8 bits will be networked."},"realm":"Shared","args":{"arg":{"text":"The flags of the effect. Each effect has their own flags.","name":"flags","type":"number"}}}},
{"function":{"name":"SetEntity","parent":"CEffectData","type":"classfunc","description":"Sets the entity of the effect to be created with this effect data.","realm":"Shared","args":{"arg":{"text":"Entity of the effect, mostly used for parenting.","name":"entity","type":"Entity"}}}},
{"function":{"name":"SetDamageType","parent":"CEffectData","type":"classfunc","description":"Sets the damage type of the effect to be created with this effect data.","realm":"Shared","args":{"arg":{"text":"Damage type, see .","name":"damageType","type":"number","page":"Enums/DMG"}}}},
{"function":{"name":"SetAttachment","parent":"CEffectData","type":"classfunc","description":{"text":"Sets the attachment id of the effect to be created with this effect data.","note":"This is internally stored as an integer, but only the first 5 bits will be networked."},"realm":"Shared","args":{"arg":{"text":"New attachment ID of the effect.","name":"attachment","type":"number"}}}},
{"function":{"name":"SetEntIndex","parent":"CEffectData","type":"classfunc","description":"Sets the entity of the effect via its index.","realm":"Server","args":{"arg":{"text":"The entity index to be set.","name":"entIndex","type":"number"}}}},
{"function":{"name":"SetEntIndex","parent":"CEffectData","type":"classfunc","description":"Sets the entity of the effect via its index.","realm":"Server","args":{"arg":{"text":"The entity index to be set.","name":"entIndex","type":"number"}}}},
{"function":{"name":"GetStart","parent":"CEffectData","type":"classfunc","description":"Returns the start position of the effect.","realm":"Shared","rets":{"ret":{"text":"The start position of the effect","name":"","type":"Vector"}}}},
{"function":{"name":"GetScale","parent":"CEffectData","type":"classfunc","description":"Returns the scale of the effect.","realm":"Shared","rets":{"ret":{"text":"The scale of the effect","name":"","type":"number"}}}},
{"function":{"name":"SetAngles","parent":"CEffectData","type":"classfunc","description":"Sets the angles of the effect.","realm":"Shared","args":{"arg":{"text":"The new angles to be set.","name":"ang","type":"Angle"}}}},
{"function":{"name":"GetSurfaceProp","parent":"CEffectData","type":"classfunc","description":"Returns the surface property index of the effect.","realm":"Shared","rets":{"ret":{"text":"The surface property index of the effect","name":"","type":"number"}}}},
{"function":{"name":"GetRadius","parent":"CEffectData","type":"classfunc","description":"Returns the radius of the effect.","realm":"Shared","rets":{"ret":{"text":"The radius of the effect.","name":"","type":"number"}}}},
{"function":{"name":"GetOrigin","parent":"CEffectData","type":"classfunc","description":"Returns the origin position of the effect.","realm":"Shared","rets":{"ret":{"text":"The origin position of the effect.","name":"","type":"Vector"}}}},
{"function":{"name":"GetOrigin","parent":"CEffectData","type":"classfunc","description":"Returns the origin position of the effect.","realm":"Shared","rets":{"ret":{"text":"The origin position of the effect.","name":"","type":"Vector"}}}},
{"function":{"name":"GetMaterialIndex","parent":"CEffectData","type":"classfunc","description":"Returns the material ID of the effect.","realm":"Shared","rets":{"ret":{"text":"The material ID of the effect.","name":"","type":"number"}}}},
{"function":{"name":"GetMagnitude","parent":"CEffectData","type":"classfunc","description":"Returns the magnitude of the effect.","realm":"Shared","rets":{"ret":{"text":"The magnitude of the effect.","name":"","type":"number"}}}},
{"function":{"name":"GetFlags","parent":"CEffectData","type":"classfunc","description":"Returns the flags of the effect.","realm":"Shared","rets":{"ret":{"text":"The flags of the effect.","name":"","type":"number"}}}},
{"function":{"name":"GetEntity","parent":"CEffectData","type":"classfunc","description":"Returns the entity assigned to the effect.","realm":"Shared","rets":{"ret":{"text":"The entity assigned to the effect","name":"","type":"Entity"}}}},
{"function":{"name":"GetHitBox","parent":"CEffectData","type":"classfunc","description":"Returns the hit box ID of the effect.","realm":"Shared","rets":{"ret":{"text":"The hit box ID of the effect.","name":"","type":"number"}}}},
{"function":{"name":"GetDamageType","parent":"CEffectData","type":"classfunc","description":"Returns the damage type of the effect","realm":"Shared","rets":{"ret":{"text":"Damage type of the effect, see","name":"","type":"number","page":"Enums/DMG"}}}},
{"function":{"name":"GetEntIndex","parent":"CEffectData","type":"classfunc","description":"Returns the entity index of the entity set for the effect.","realm":"Server","rets":{"ret":{"text":"The entity index of the entity set for the effect.","name":"","type":"number"}}}},
{"function":{"name":"GetColor","parent":"CEffectData","type":"classfunc","description":"Returns byte which represents the color of the effect.","realm":"Shared","rets":{"ret":{"text":"The color of the effect","name":"","type":"number"}}}},
{"function":{"name":"GetAttachment","parent":"CEffectData","type":"classfunc","description":"Returns the attachment ID for the effect.","realm":"Shared","rets":{"ret":{"text":"The attachment ID of the effect.","name":"","type":"number"}}}},
{"function":{"name":"Reset","parent":"bf_read","type":"classfunc","description":"Rewinds the bitstream so it can be read again.","realm":"Client"}},
{"function":{"name":"GetAngles","parent":"CEffectData","type":"classfunc","description":"Returns the angles of the effect.","realm":"Shared","rets":{"ret":{"text":"The angles of the effect","name":"","type":"Angle"}}}},
{"function":{"name":"ReadVectorNormal","parent":"bf_read","type":"classfunc","description":"Reads a special encoded vector normal from the bitstream and returns it, this function is not suitable to send vectors that represent a position.","realm":"Client","rets":{"ret":{"text":"normal","name":"","type":"Vector"}}}},
{"function":{"name":"ReadVector","parent":"bf_read","type":"classfunc","description":"Reads a special encoded vector from the bitstream and returns it, this function is not suitable to send normals.","realm":"Client","rets":{"ret":{"text":"vec","name":"","type":"Vector"}}}},
{"function":{"name":"ReadShort","parent":"bf_read","type":"classfunc","description":"Reads a 2 byte short from the bitstream and returns it.","realm":"Client","rets":{"ret":{"text":"short","name":"","type":"number"}}}},
{"function":{"name":"ReadFloat","parent":"bf_read","type":"classfunc","description":"Reads a 4 byte float from the bitstream and returns it.","realm":"Client","rets":{"ret":{"text":"float","name":"","type":"number"}}}},
{"function":{"name":"ReadString","parent":"bf_read","type":"classfunc","description":"Reads a null terminated string from the bitstream.","realm":"Client","rets":{"ret":{"text":"str","name":"","type":"string"}}}},
{"function":{"name":"ReadLong","parent":"bf_read","type":"classfunc","description":"Reads a 4 byte long from the bitstream and returns it.","realm":"Client","rets":{"ret":{"text":"int","name":"","type":"number"}}}},
{"function":{"name":"ReadBool","parent":"bf_read","type":"classfunc","description":"Reads 1 bit an returns a bool representing the bit.","realm":"Client","rets":{"ret":{"text":"bit","name":"","type":"boolean"}}}},
{"function":{"name":"ReadChar","parent":"bf_read","type":"classfunc","description":"Reads a signed char and returns a number from -127 to 127 representing the ascii value of that char.","realm":"Client","rets":{"ret":{"text":"asciiVal","name":"","type":"number"}}}},
{"function":{"name":"ReadEntity","parent":"bf_read","type":"classfunc","description":"Reads a short representing an entity index and returns the matching entity handle.","realm":"Client","rets":{"ret":{"text":"ent","name":"","type":"Entity"}}}},
{"function":{"name":"ReadAngle","parent":"bf_read","type":"classfunc","description":"Reads an returns an angle object from the bitstream.","realm":"Client","rets":{"ret":{"text":"The read angle","name":"","type":"Angle"}}}},
{"function":{"name":"Zero","parent":"Angle","type":"classfunc","description":"Sets pitch, yaw and roll to 0.\nThis function is faster than doing it manually.","realm":"Shared"}},
{"function":{"name":"ToTable","parent":"Angle","type":"classfunc","description":"Returns the angle as a table with three elements.","realm":"Shared","rets":{"ret":{"text":"The table with elements 1 = p, 2 = y, 3 = r.","name":"","type":"table"}}}},
{"function":{"name":"Up","parent":"Angle","type":"classfunc","description":"Returns a normal vector facing in the direction that points up relative to the angle's direction.","realm":"Shared","rets":{"ret":{"text":"The up direction of the angle.","name":"","type":"Vector"}}}},
{"function":{"name":"Up","parent":"Angle","type":"classfunc","description":"Returns a normal vector facing in the direction that points up relative to the angle's direction.","realm":"Shared","rets":{"ret":{"text":"The up direction of the angle.","name":"","type":"Vector"}}}},
{"function":{"name":"Sub","parent":"Angle","type":"classfunc","description":"Subtracts the values of the argument angle to the orignal angle. This functions the same as angle1 - angle2 without creating a new angle object, skipping object construction and garbage collection.","realm":"Shared","args":{"arg":{"text":"The angle to subtract.","name":"angle","type":"Angle"}}}},
{"function":{"name":"SnapTo","parent":"Angle","type":"classfunc","description":{"text":"Snaps the angle to nearest interval of degrees.","note":"This will modify the original angle too!"},"realm":"Shared","file":{"text":"lua/includes/extensions/angle.lua","line":"5-L18"},"args":{"arg":[{"text":"The component/axis to snap. Can be either \"p\"/\"pitch\", \"y\"/\"yaw\" or \"r\"/\"roll\".","name":"axis","type":"string"},{"text":"The target angle snap interval","name":"target","type":"number"}]},"rets":{"ret":{"text":"The snapped angle.","name":"","type":"Angle"}}},"example":{"description":"Example usage","code":"print( Angle( 0, 92, 0 ):SnapTo( \"y\", 90 ) )\nprint( Angle( 0, 115, 0 ):SnapTo( \"y\", 45 ) )\nprint( Angle( 12, 98, 167 ):SnapTo( \"p\", 30 ):SnapTo( \"y\", 45 ):SnapTo( \"r\", 45 ) )","output":"```\nAngle( 0, 90, 0 )\nAngle( 0, 135, 0 )\nAngle( 0, 90, -180 )\n```"}},
{"function":{"name":"SetUnpacked","parent":"Angle","type":"classfunc","description":"Sets the p, y, and r of the angle.","realm":"Shared","args":{"arg":[{"text":"The pitch component of the Angle","name":"p","type":"number"},{"text":"The yaw component of the Angle","name":"y","type":"number"},{"text":"The roll component of the Angle","name":"r","type":"number"}]}}},
{"function":{"name":"Set","parent":"Angle","type":"classfunc","description":"Copies pitch, yaw and roll from the second angle to the first.","realm":"Shared","args":{"arg":{"text":"The angle to copy the values from.","name":"originalAngle","type":"Angle"}}}},
{"function":{"name":"RotateAroundAxis","parent":"Angle","type":"classfunc","description":"Rotates the angle around the specified axis by the specified degrees.","realm":"Shared","args":{"arg":[{"text":"The axis to rotate around.","name":"axis","type":"Vector"},{"text":"The degrees to rotate around the specified axis.","name":"rotation","type":"number"}]}}},
{"function":{"name":"Right","parent":"Angle","type":"classfunc","description":"Returns a normal vector facing in the direction that points right relative to the angle's direction.","realm":"Shared","rets":{"ret":{"text":"The right direction of the angle","name":"","type":"Vector"}}}},
{"function":{"name":"Normalize","parent":"Angle","type":"classfunc","description":"Normalizes the angles by applying a module with 360 to pitch, yaw and roll.","realm":"Shared"},"example":{"description":"Example usage of the function","code":"local a = Angle( 0, 181, 1 )\na:Normalize()\nprint( a )","output":"0.000 -179.000 1.000"}},
{"function":{"name":"Mul","parent":"Angle","type":"classfunc","description":"Multiplies a scalar to all the values of the orignal angle. This functions the same as num * angle without creating a new angle object, skipping object construction and garbage collection.","realm":"Shared","args":{"arg":{"text":"The number to multiply.","name":"scalar","type":"number"}}}}
]